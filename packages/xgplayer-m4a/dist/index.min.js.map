{"version":3,"file":"index.min.js","sources":["../node_modules/deepmerge/dist/es.js","../../../node_modules/core-js/modules/es6.promise.js","../../../node_modules/core-js/modules/es7.string.pad-start.js","../node_modules/type/value/is.js","../node_modules/type/object/is.js","../node_modules/type/prototype/is.js","../node_modules/type/function/is.js","../node_modules/type/plain-function/is.js","../node_modules/es5-ext/object/is-value.js","../node_modules/es5-ext/object/keys/shim.js","../node_modules/es5-ext/object/keys/is-implemented.js","../node_modules/es5-ext/object/keys/index.js","../node_modules/es5-ext/object/valid-value.js","../node_modules/es5-ext/object/assign/shim.js","../node_modules/es5-ext/object/assign/is-implemented.js","../node_modules/es5-ext/object/assign/index.js","../node_modules/es5-ext/object/normalize-options.js","../node_modules/es5-ext/string/#/contains/is-implemented.js","../node_modules/es5-ext/string/#/contains/shim.js","../node_modules/es5-ext/string/#/contains/index.js","../node_modules/d/index.js","../node_modules/es5-ext/object/valid-callable.js","../node_modules/event-emitter/index.js","../src/error.js","../src/parse/stream.js","../src/parse/box.js","../src/parse/box/avc1.js","../src/parse/box/avcC.js","../src/parse/box/btrt.js","../src/parse/box/co64.js","../src/parse/box/ctts.js","../src/parse/box/dref.js","../src/parse/box/elst.js","../src/parse/box/esds.js","../src/parse/box/ftyp.js","../src/parse/box/hdlr.js","../src/parse/box/iods.js","../src/parse/box/mdat.js","../src/parse/date.js","../src/parse/box/mdhd.js","../src/parse/box/mp4a.js","../src/parse/box/MP4DecConfigDescrTag.js","../src/parse/box/MP4DecSpecificDescrTag.js","../src/parse/box/MP4ESDescrTag.js","../src/parse/box/mvhd.js","../src/parse/box/pasp.js","../src/parse/box/SLConfigDescriptor.js","../src/parse/box/smhd.js","../src/parse/box/stco.js","../src/parse/box/stsc.js","../src/parse/box/stsd.js","../src/parse/box/stss.js","../src/parse/box/stsz.js","../src/parse/box/stts.js","../src/parse/box/tkhd.js","../src/parse/box/udta.js","../src/parse/box/url.js","../src/parse/box/vmhd.js","../node_modules/concat-typed-array/lib/concat.js","../node_modules/concat-typed-array/lib/index.js","../src/parse/index.js","../src/fmp4/buffer.js","../src/fmp4/mp4.js","../src/media/task.js","../src/util/index.js","../src/mp4.js","../src/media/mse.js","../src/index.js"],"sourcesContent":["var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padStart: function padStart(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);\n  }\n});\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","import Player from 'xgplayer'\nimport {version} from '../package.json'\n\nclass _Errors extends Player.Errors {\n  constructor (type, vid, errd = {}, url = '') {\n    errd.version = version\n    super(type, vid, errd)\n    this.url = url\n  }\n}\n\nexport default _Errors\n","import Errors from '../error'\nclass Stream {\n  constructor (buffer) {\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer\n      this.dataview = new DataView(buffer)\n      this.dataview.position = 0\n    } else {\n      throw new Errors('parse', '', {line: 9, handle: '[Stream] constructor', msg: 'data is valid'})\n    }\n  }\n\n  set position (value) {\n    this.dataview.position = value\n  }\n\n  get position () {\n    return this.dataview.position\n  }\n\n  skip (count) {\n    let loop = Math.floor(count / 4)\n    let last = count % 4\n    for (let i = 0; i < loop; i++) {\n      Stream.readByte(this.dataview, 4)\n    }\n    if (last > 0) {\n      Stream.readByte(this.dataview, last)\n    }\n  }\n\n  /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n  static readByte (buffer, size, sign) {\n    let res\n    switch (size) {\n      case 1:\n        if (sign) {\n          res = buffer.getInt8(buffer.position)\n        } else {\n          res = buffer.getUint8(buffer.position)\n        }\n        break\n      case 2:\n        if (sign) {\n          res = buffer.getInt16(buffer.position)\n        } else {\n          res = buffer.getUint16(buffer.position)\n        }\n        break\n      case 3:\n        if (sign) {\n          throw 'not supported for readByte 3'\n        } else {\n          res = buffer.getUint8(buffer.position) << 16\n          res |= buffer.getUint8(buffer.position + 1) << 8\n          res |= buffer.getUint8(buffer.position + 2)\n        }\n        break\n      case 4:\n        if (sign) {\n          res = buffer.getInt32(buffer.position)\n        } else {\n          res = buffer.getUint32(buffer.position)\n        }\n        break\n      case 8:\n        if (sign) {\n          throw new Errors('parse', '', {line: 73, handle: '[Stream] readByte', msg: 'not supported for readBody 8'})\n        } else {\n          res = buffer.getUint32(buffer.position) << 32\n          res |= buffer.getUint32(buffer.position + 4)\n        }\n        break\n      default:\n        res = ''\n    }\n    buffer.position += size\n    return res\n  }\n\n  readUint8 () {\n    return Stream.readByte(this.dataview, 1)\n  }\n\n  readUint16 () {\n    return Stream.readByte(this.dataview, 2)\n  }\n\n  readUint32 () {\n    return Stream.readByte(this.dataview, 4)\n  }\n\n  readUint64 () {\n    return Stream.readByte(this.dataview, 8)\n  }\n\n  readInt8 () {\n    return Stream.readByte(this.dataview, 1, true)\n  }\n  readInt16 () {\n    return Stream.readByte(this.dataview, 2, true)\n  }\n  readInt32 () {\n    return Stream.readByte(this.dataview, 4, true)\n  }\n}\n\nexport default Stream\n","import Stream from './stream'\nimport Errors from '../error'\nclass Box {\n  constructor () {\n    this.headSize = 8\n    this.size = 0\n    this.type = ''\n    this.subBox = []\n    this.start = -1\n  }\n  readHeader (stream) {\n    this.start = stream.position\n    this.size = stream.readUint32()\n    this.type = String.fromCharCode(stream.readUint8(), stream.readUint8(), stream.readUint8(), stream.readUint8())\n    if (this.size === 1) {\n      this.size = stream.readUint64()\n    } else if (this.size === 0) {\n      if (this.type !== 'mdat') {\n        throw new Errors('parse', '', {line: 19, handle: '[Box] readHeader', msg: 'parse mp4 mdat box failed'})\n      }\n    }\n    if (this.type === 'uuid') {\n      let uuid = []\n      for (let i = 0; i < 16; i++) {\n        uuid.push(stream.readUint8())\n      }\n    }\n  }\n  readBody (stream) {\n    let end = this.size - stream.position + this.start\n    let type = this.type\n    this.data = stream.buffer.slice(stream.position, stream.position + end)\n    stream.position += this.data.byteLength\n    let parser\n    if (Box.containerBox.find(item => item === type)) {\n      parser = Box.containerParser\n    } else {\n      parser = Box[type]\n    }\n    if (parser && parser instanceof Function) {\n      parser.call(this)\n    }\n  }\n  read (stream) {\n    this.readHeader(stream)\n    this.readBody(stream)\n  }\n\n  static containerParser () {\n    let stream = new Stream(this.data)\n    let size = stream.buffer.byteLength\n    let self = this\n    while (stream.position < size) {\n      let box = new Box()\n      box.readHeader(stream)\n      self.subBox.push(box)\n      box.readBody(stream)\n    }\n    delete self.data\n    stream = null\n  }\n}\n\nBox.containerBox = ['moov', 'trak', 'edts', 'mdia', 'minf', 'dinf', 'stbl', 'mvex', 'moof', 'traf', 'mfra']\n\nexport default Box\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.avc1 = function () {\n  let stream = new Stream(this.data)\n  let self = this\n  stream.skip(6)\n  this.dataReferenceIndex = stream.readUint16()\n  stream.skip(16)\n  this.width = stream.readUint16()\n  this.height = stream.readUint16()\n  this.horizresolution = stream.readUint32()\n  this.vertresolution = stream.readUint32()\n  stream.skip(4)\n  this.frameCount = stream.readUint16()\n  stream.skip(1)\n  for (let i = 0; i < 31; i++) {\n    String.fromCharCode(stream.readUint8())\n  }\n  this.depth = stream.readUint16()\n  stream.skip(2)\n  while (stream.position < stream.buffer.byteLength) {\n    let box = new Box()\n    box.readHeader(stream)\n    self.subBox.push(box)\n    box.readBody(stream)\n  }\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.avcC = function () {\n  let stream = new Stream(this.data)\n  this.configVersion = stream.readUint8()\n  this.profile = stream.readUint8()\n  this.profileCompatibility = stream.readUint8()\n  this.AVCLevelIndication = stream.readUint8()\n  this.lengthSizeMinusOne = (stream.readUint8() & 3) + 1\n  this.numOfSequenceParameterSets = stream.readUint8() & 31\n  let sequenceLength = stream.readUint16()\n  this.sequenceLength = sequenceLength\n  let sequence = []\n  for (let i = 0; i < sequenceLength; i++) {\n    sequence.push(Number(stream.readUint8()).toString(16))\n  }\n  this.ppsCount = stream.readUint8()\n  let ppsLength = stream.readUint16()\n  this.ppsLength = ppsLength\n  let pps = []\n  for (let i = 0; i < ppsLength; i++) {\n    pps.push(Number(stream.readUint8()).toString(16))\n  }\n  this.pps = pps\n  this.sequence = sequence\n  let last = []; let dataviewLength = stream.dataview.byteLength\n  while (stream.position < dataviewLength) {\n    last.push(stream.readUint8())\n  }\n  this.last = last\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.btrt = function () {\n  let stream = new Stream(this.data)\n  this.bufferSizeDB = stream.readUint32()\n  this.maxBitrate = stream.readUint32()\n  this.avgBitrate = stream.readUint32()\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.co64 = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push(stream.readUint64())\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.ctts = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n\n  this.entryCount = stream.readUint32()\n  let entry = []\n  this.entry = entry\n  for (let i = 0, count = this.entryCount; i < count; i++) {\n    entry.push({\n      count: stream.readUint32(),\n      offset: stream.readUint32()\n    })\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.dref = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  let entryCount = stream.readUint32()\n  this.entryCount = entryCount\n  let self = this\n  // 暂时不支持离散视频，视频的部分内容由url指定\n  for (let i = 0; i < entryCount; i++) {\n    let box = new Box()\n    self.subBox.push(box)\n    box.read(stream)\n  }\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.elst = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  let entries = []\n  let entry_count = stream.readUint32()\n  this.entries = entries\n  for (let i = 0; i < entry_count; i++) {\n    let entry = {}\n    entries.push(entry)\n    if (this.version === 1) {\n      entry.segment_duration = stream.readUint64()\n      entry.media_time = stream.readUint64()\n    } else {\n      entry.segment_duration = stream.readUint32()\n      entry.media_time = stream.readInt32()\n    }\n    entry.media_rate_integer = stream.readInt16()\n    entry.media_rate_fraction = stream.readInt16()\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.esds = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  let box = Box.MP4ESDescrTag(stream)\n  this.subBox.push(box)\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.ftyp = function () {\n  let stream = new Stream(this.data)\n  this.major_brand = String.fromCharCode(stream.readUint8(), stream.readUint8(), stream.readUint8(), stream.readUint8())\n  this.minor_version = stream.readUint32()\n  let compatibleBrands = []\n  for (let i = 0, len = Math.floor((stream.buffer.byteLength - 8) / 4); i < len; i++) {\n    compatibleBrands.push(String.fromCharCode(stream.readUint8(), stream.readUint8(), stream.readUint8(), stream.readUint8()))\n  }\n  this.compatible_brands = compatibleBrands\n  stream = null\n  delete this.subBox\n  delete this.data\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.hdlr = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  stream.skip(4)\n  this.handleType = `${String.fromCharCode(stream.readUint8())}${String.fromCharCode(stream.readUint8())}${String.fromCharCode(stream.readUint8())}${String.fromCharCode(stream.readUint8())}`\n  stream.skip(12)\n  let name = []\n  while (stream.position < this.size - 8) {\n    name.push(String.fromCharCode(stream.readUint8()))\n  }\n  this.name = name.join('')\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.iods = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  let content = []\n  let length = stream.buffer.byteLength\n  while (stream.position < length) {\n    content.push(stream.readUint8())\n  }\n  this.content = content\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\n\nBox.mdat = function () {\n  delete this.subBox\n}\n","class UTC {\n  constructor () {\n    let time = new Date()\n    time.setFullYear(1904)\n    time.setMonth(0)\n    time.setDate(1)\n    time.setHours(0)\n    time.setMinutes(0)\n    time.setSeconds(0)\n    this.time = time\n  }\n  setTime (value) {\n    this.time.setTime(this.time.getTime() + value * 1)\n    return this.time.toLocaleString()\n  }\n}\n\nexport default UTC\n","import Box from '../box'\nimport Stream from '../stream'\nimport UTC from '../date'\n\nBox.mdhd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  if (this.version === 1) {\n    this.create = stream.readUint64()\n    this.modify = stream.readUint64()\n    this.createTime = new UTC().setTime(this.create * 1000)\n    this.modifyTime = new UTC().setTime(this.modify * 1000)\n    this.timescale = stream.readUint32()\n    this.duration = stream.readUint64()\n  } else {\n    this.create = stream.readUint32()\n    this.modify = stream.readUint32()\n    this.createTime = new UTC().setTime(this.create * 1000)\n    this.modifyTime = new UTC().setTime(this.modify * 1000)\n    this.timescale = stream.readUint32()\n    this.duration = stream.readUint32()\n  }\n  this.language = stream.readUint16()\n  stream.readUint16()\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.mp4a = function () {\n  let stream = new Stream(this.data)\n  stream.skip(6)\n  this.dataReferenceIndex = stream.readUint16()\n  stream.skip(8)\n  this.channelCount = stream.readUint16()\n  this.sampleSize = stream.readUint16()\n  stream.skip(4)\n  this.sampleRate = stream.readUint32() / 65536\n  let box = new Box()\n  box.readHeader(stream)\n  this.subBox.push(box)\n  box.readBody(stream)\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.MP4DecConfigDescrTag = function (stream) {\n  let box = new Box()\n  let size\n  box.type = stream.readUint8()\n  size = stream.readUint8()\n  if (size === 0x80) {\n    box.extend = true\n    stream.skip(2)\n    size = stream.readUint8() + 5\n  } else {\n    size += 2\n  }\n  box.size = size\n  box.typeID = stream.readUint8()\n  // 6 bits stream type,1 bit upstream flag,1 bit reserved flag\n  box.streamUint = stream.readUint8()\n  box.bufferSize = Stream.readByte(stream.dataview, 3)\n  box.maximum = stream.readUint32()\n  box.average = stream.readUint32()\n  box.subBox.push(Box.MP4DecSpecificDescrTag(stream))\n  return box\n}\n","import Box from '../box'\n\nBox.MP4DecSpecificDescrTag = function (stream) {\n  let box = new Box()\n  let size, dataSize\n  box.type = stream.readUint8()\n  size = stream.readUint8()\n  if (size === 0x80) {\n    box.extend = true\n    stream.skip(2)\n    size = stream.readUint8() + 5\n    dataSize = size - 5\n  } else {\n    dataSize = size\n    size += 2\n  }\n  box.size = size\n  let EScode = []\n  for (let i = 0; i < dataSize; i++) {\n    EScode.push(Number(stream.readUint8()).toString(16).padStart(2, '0'))\n  }\n  box.EScode = EScode\n  delete box.subBox\n  return box\n}\n","import Box from '../box'\n\nBox.MP4ESDescrTag = function (stream) {\n  let box = new Box()\n  let size\n  box.type = stream.readUint8()\n  size = stream.readUint8()\n  if (size === 0x80) {\n    box.extend = true\n    stream.skip(2)\n    size = stream.readUint8() + 5\n  } else {\n    size += 2\n  }\n  box.size = size\n  box.esID = stream.readUint16()\n  box.priority = stream.readUint8()\n  box.subBox.push(Box.MP4DecConfigDescrTag(stream))\n  box.subBox.push(Box.SLConfigDescriptor(stream))\n  return box\n}\n","import Box from '../box'\nimport Stream from '../stream'\nimport UTC from '../date'\n\nBox.mvhd = function () {\n  let stream = new Stream(this.data)\n\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.create = stream.readUint32()\n  this.modify = stream.readUint32()\n  this.createTime = new UTC().setTime(this.create * 1000)\n  this.modifyTime = new UTC().setTime(this.modify * 1000)\n  this.timeScale = stream.readUint32()\n  this.duration = stream.readUint32()\n  this.rate = stream.readUint16() + '.' + stream.readUint16()\n  this.volume = stream.readUint8() + '.' + stream.readUint8()\n  // 越过保留的10字节\n  Stream.readByte(stream.dataview, 8)\n  Stream.readByte(stream.dataview, 2)\n  // 视频转换矩阵\n  let matrix = []\n  for (let i = 0; i < 9; i++) {\n    matrix.push(stream.readUint16() + '.' + stream.readUint16())\n  }\n  this.matrix = matrix\n  Stream.readByte(stream.dataview, 24)\n  this.nextTrackID = stream.readUint32()\n  delete this.subBox\n  delete this.data\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.pasp = function () {\n  let stream = new Stream(this.data)\n  this.content = stream.buffer.slice(0, this.size - 8)\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\n\nBox.SLConfigDescriptor = function (stream) {\n  let box = new Box()\n  let size\n  box.type = stream.readUint8()\n  size = stream.readUint8()\n  if (size === 0x80) {\n    box.extend = true\n    stream.skip(2)\n    size = stream.readUint8() + 5\n  } else {\n    size += 2\n  }\n  box.size = size\n  box.SL = stream.readUint8()\n  delete box.subBox\n  return box\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.smhd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.balance = stream.readInt8() + '.' + stream.readInt8()\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stco = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push(stream.readUint32())\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stsc = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push({\n      first_chunk: stream.readUint32(),\n      samples_per_chunk: stream.readUint32(),\n      sample_desc_index: stream.readUint32()\n    })\n  }\n  for (let i = 0, count = this.count, entry, preEntry; i < count - 1; i++) {\n    entry = entries[i]\n    preEntry = entries[i - 1]\n    entry.chunk_count = entries[i + 1].first_chunk - entry.first_chunk\n    entry.first_sample = i === 0 ? 1 : preEntry.first_sample + preEntry.chunk_count * preEntry.samples_per_chunk\n  }\n  if (this.count === 1) {\n    let entry = entries[0]\n    entry.first_sample = 1\n    entry.chunk_count = 0\n  } else if (this.count > 1) {\n    let last = entries[this.count - 1]; let pre = entries[this.count - 2]\n    last.first_sample = pre.first_sample + pre.chunk_count * pre.samples_per_chunk\n    last.chunk_count = 0\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.stsd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.entryCount = stream.readUint32()\n  let box = new Box()\n  box.readHeader(stream)\n  this.subBox.push(box)\n  box.readBody(stream)\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stss = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push(stream.readUint32())\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stsz = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.sampleSize = stream.readUint32()\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push(stream.readUint32())\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stts = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entry = []\n  for (let i = 0, count = this.count; i < count; i++) {\n    entry.push({\n      sampleCount: stream.readUint32(),\n      sampleDuration: stream.readUint32()\n    })\n  }\n  this.entry = entry\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nimport UTC from '../date'\n\nBox.tkhd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3, 0)\n  if (this.version === 1) {\n    this.create = stream.readUint64()\n    this.modify = stream.readUint64()\n    this.createTime = new UTC().setTime(this.create * 1000)\n    this.modifyTime = new UTC().setTime(this.modify * 1000)\n    this.trackID = stream.readUint32()\n    this.reserverd = stream.readUint32()\n    this.duration = stream.readUint64()\n  } else {\n    this.create = stream.readUint32()\n    this.modify = stream.readUint32()\n    this.createTime = new UTC().setTime(this.create * 1000)\n    this.modifyTime = new UTC().setTime(this.modify * 1000)\n    this.trackID = stream.readUint32()\n    this.reserverd = stream.readUint32()\n    this.duration = stream.readUint32()\n  }\n  stream.readUint64()\n  this.layer = stream.readInt16()\n  this.alternate_group = stream.readInt16()\n  this.volume = stream.readInt16() >> 8\n  stream.readUint16()\n  // 视频转换矩阵\n  let matrix = []\n  for (let i = 0; i < 9; i++) {\n    matrix.push(stream.readUint16() + '.' + stream.readUint16())\n  }\n  this.matrix = matrix\n  this.width = stream.readUint16() + '.' + stream.readUint16()\n  this.height = stream.readUint16() + '.' + stream.readUint16()\n  delete this.data\n  delete this.subBox\n  stream = null\n}\n","import Box from '../box'\nBox.udta = function () {\n  delete this.subBox\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox['url '] = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = [stream.readUint8(), stream.readUint8(), stream.readUint8()]\n  let location = []; let length = stream.buffer.byteLength\n  while (stream.position < length) {\n    location.push(stream.readUint8())\n  }\n  this.location = location\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.vmhd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = [stream.readUint8(), stream.readUint8(), stream.readUint8()]\n  this.graphicsmode = stream.readUint16()\n  this.opcolor = [stream.readUint16(), stream.readUint16(), stream.readUint16()]\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import Box from './box'\nimport './box/index';\nimport Concat from 'concat-typed-array'\nimport Stream from './stream'\n\nclass Parse {\n  constructor (buffer) {\n    this.buffer = null\n    this.boxes = []\n    this.nextBox = null\n    this.start = 0\n    let self = this\n    if (self.buffer) {\n      Concat(Uint8Array, self.buffer, buffer)\n    } else {\n      self.buffer = buffer\n    }\n    let bufferLength = buffer.byteLength\n    buffer.position = 0\n    let stream = new Stream(buffer)\n    while (bufferLength - stream.position >= 8) {\n      let box = new Box()\n      box.readHeader(stream)\n      if (box.size - 8 <= (bufferLength - stream.position)) {\n        box.readBody(stream)\n        self.boxes.push(box)\n      } else {\n        if (box.type === 'mdat') {\n          box.readBody(stream)\n          self.boxes.push(box)\n        } else {\n          self.nextBox = box\n          stream.position -= 8\n          break\n        }\n      }\n    }\n    self.buffer = new Uint8Array(self.buffer.slice(stream.position))\n  }\n}\n\nexport default Parse\n","import Concat from 'concat-typed-array'\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n  write (...buffer) {\n    let self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.error(item)\n      }\n    })\n  }\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import Buffer from './buffer'\nconst UINT32_MAX = Math.pow(2, 32) - 1\nclass FMP4 {\n  static type (name) {\n    return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)])\n  }\n  static size (value) {\n    return Buffer.writeUint32(value)\n  }\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n  static ftyp () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(28), FMP4.type('ftyp'), new Uint8Array([\n      0x69, 0x73, 0x6F, 0x35, // iso5,\n      0x00, 0x00, 0x00, 0x01, // minor_version: 0x00\n      0x4D, 0x34, 0x41, 0x20, // M4A,\n      0x69, 0x73, 0x6F, 0x35, // iso5,\n      0x64, 0x61, 0x73, 0x68 // dash\n    ]))\n    return buffer.buffer\n  }\n  static moov (data) {\n    let buffer = new Buffer(); let size = 8\n\n    let mvhd = FMP4.mvhd(data.duration, data.timeScale)\n    let trak = FMP4.audioTrak(data)\n    let mvex = FMP4.mvex(data.duration, data.timeScale)\n    let udtaBuffer = new Buffer()\n    let bytes = new Uint8Array([\n      0x00, 0x00, 0x00, 0x55, 0x75, 0x64, 0x74, 0x61, 0x00, 0x00, 0x00, 0x4D, 0x6D, 0x65, 0x74, 0x61,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x68, 0x64, 0x6C, 0x72, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x6D, 0x64, 0x69, 0x72, 0x61, 0x70, 0x70, 0x6C, 0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x69, 0x6C, 0x73, 0x74, 0x00, 0x00, 0x00,\n      0x0C, 0x2D, 0x2D, 0x2D, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x2D, 0x2D, 0x2D,\n      0x2D, 0x00, 0x00, 0x00, 0x00\n    ])\n    udtaBuffer.write(new Uint8Array(bytes))\n    let udta = udtaBuffer.buffer;\n    [mvhd, trak, mvex, udta].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('moov'), mvhd, mvex, trak, udta)\n    return buffer.buffer\n  }\n  static mvhd (duration, timeScale) {\n    let buffer = new Buffer()\n    duration *= timeScale\n    duration = 0\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let bytes = new Uint8Array([\n      0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (timeScale >> 24) & 0xff,\n      (timeScale >> 16) & 0xff,\n      (timeScale >> 8) & 0xff,\n      timeScale & 0xff, // timeScale\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ])\n    buffer.write(FMP4.size(8 + bytes.length), FMP4.type('mvhd'), new Uint8Array(bytes))\n    return buffer.buffer\n  }\n  static audioTrak (data) {\n    let buffer = new Buffer(); let size = 8\n    let tkhd = FMP4.tkhd({\n      id: 1,\n      duration: data.audioDuration,\n      timeScale: data.audioTimeScale,\n      width: 0,\n      height: 0,\n      type: 'audio'\n    })\n    let mdia = FMP4.mdia({\n      type: 'audio',\n      timeScale: data.audioTimeScale,\n      duration: data.audioDuration,\n      channelCount: data.channelCount,\n      sampleRate: data.sampleRate,\n      audioConfig: data.audioConfig\n    })\n    let udtaBuffer = new Buffer()\n    let bytes = new Uint8Array([\n      0x00, 0x00, 0x00, 0x2C,\n      0x6C, 0x75, 0x64, 0x74,\n      0x00, 0x00, 0x00, 0x24,\n      0x74, 0x6C, 0x6F, 0x75,\n      0x01, 0x00, 0x00, 0x00,\n      0x01, 0x00, 0x00, 0x00,\n      0x48, 0x54, 0x84, 0x23,\n      0x05, 0x01, 0x72, 0x23,\n      0x03, 0x72, 0x13, 0x04,\n      0x7D, 0x13, 0x05, 0x73,\n      0x13, 0x06, 0x04, 0x13\n    ])\n    udtaBuffer.write(FMP4.size(52), FMP4.type('udta'), new Uint8Array(bytes))\n    let udta = udtaBuffer.buffer;\n    [tkhd, mdia, udta].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('trak'), tkhd, mdia, udta)\n    return buffer.buffer\n  }\n  static tkhd (data) {\n    let buffer = new Buffer()\n    let id = data.id\n    let duration = data.duration * data.timeScale\n    duration = 0\n    let width = 0\n\n    let height = 0\n\n    let type = data.type\n\n    let upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n\n    let lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let content = new Uint8Array([\n      0x01, // version 1\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (id >> 24) & 0xff,\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, type === 'video' ? 0x01 : 0x00, // alternate_group\n      type === 'audio' ? 0x01 : 0x00, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (width >> 8) & 0xff,\n      width & 0xff,\n      0x00, 0x00, // width\n      (height >> 8) & 0xff,\n      height & 0xff,\n      0x00, 0x00 // height\n    ])\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('tkhd'), content)\n    return buffer.buffer\n  }\n  static edts (data) {\n    let buffer = new Buffer(); let duration = data.duration; let mediaTime = data.mediaTime\n    buffer.write(FMP4.size(36), FMP4.type('edts'))\n    // elst\n    buffer.write(FMP4.size(28), FMP4.type('elst'))\n    buffer.write(new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, // entry count\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      (mediaTime >> 24) & 0xff, (mediaTime >> 16) & 0xff, (mediaTime >> 8) & 0xff, mediaTime & 0xff,\n      0x00, 0x00, 0x00, 0x01 // media rate\n    ]))\n    return buffer.buffer\n  }\n  static mdia (data) {\n    let buffer = new Buffer(); let size = 8\n    let mdhd = FMP4.mdhd(data.timeScale)\n    let hdlr = FMP4.hdlr(data.type)\n    let minf = FMP4.minf(data);\n    [mdhd, hdlr, minf].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('mdia'), mdhd, hdlr, minf)\n    return buffer.buffer\n  }\n  static mdhd (timeScale, duration = 0) {\n    let buffer = new Buffer()\n    duration *= timeScale\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (timeScale >> 24) & 0xff, (timeScale >> 16) & 0xff, (timeScale >> 8) & 0xff, timeScale & 0xff,\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x55, 0xc4, // 'und' language\n      0x00, 0x00\n    ])\n    buffer.write(FMP4.size(12 + content.byteLength), FMP4.type('mdhd'), FMP4.extension(1, 0), content)\n    return buffer.buffer\n  }\n  static hdlr (type) {\n    let buffer = new Buffer()\n    let value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]\n    if (type === 'audio') {\n      value.splice(8, 4, ...[0x73, 0x6f, 0x75, 0x6e])\n      value.splice(24, 13, ...[0x53, 0x6f, 0x75, 0x6e,\n        0x64, 0x48, 0x61, 0x6e,\n        0x64, 0x6c, 0x65, 0x72, 0x00])\n    }\n    buffer.write(FMP4.size(8 + value.length), FMP4.type('hdlr'), new Uint8Array(value))\n    return buffer.buffer\n  }\n  static minf (data) {\n    let buffer = new Buffer(); let size = 8\n    let vmhd = data.type === 'video' ? FMP4.vmhd() : FMP4.smhd()\n    let dinf = FMP4.dinf()\n    let stbl = FMP4.stbl(data);\n    [vmhd, dinf, stbl].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('minf'), vmhd, dinf, stbl)\n    return buffer.buffer\n  }\n  static vmhd () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(20), FMP4.type('vmhd'), new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]))\n    return buffer.buffer\n  }\n  static smhd () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(16), FMP4.type('smhd'), new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]))\n    return buffer.buffer\n  }\n  static dinf () {\n    let buffer = new Buffer()\n    let dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]\n    buffer.write(FMP4.size(36), FMP4.type('dinf'), FMP4.size(28), FMP4.type('dref'), new Uint8Array(dref))\n    return buffer.buffer\n  }\n  static stbl (data) {\n    let buffer = new Buffer(); let size = 8\n    let stsd = FMP4.stsd(data)\n    let stts = FMP4.stts()\n    let stsc = FMP4.stsc()\n    let stsz = FMP4.stsz()\n    let stco = FMP4.stco();\n    [stsd, stts, stsc, stsz, stco].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('stbl'), stsd, stts, stsc, stsz, stco)\n    return buffer.buffer\n  }\n  static stsd (data) {\n    let buffer = new Buffer(); let content\n    if (data.type === 'audio') {\n      // if (!data.isAAC && data.codec === 'mp4') {\n      //     content = FMP4.mp3(data);\n      // } else {\n      //\n      // }\n      // 支持mp4a\n      content = FMP4.mp4a(data)\n    } else {\n      content = FMP4.avc1(data)\n    }\n    buffer.write(FMP4.size(16 + content.byteLength), FMP4.type('stsd'), FMP4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content)\n    return buffer.buffer\n  }\n  static mp4a (data) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (data.sampleRate >> 8) & 0xff,\n      data.sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    let esds = FMP4.esds(data.audioConfig)\n    buffer.write(FMP4.size(8 + content.byteLength + esds.byteLength), FMP4.type('mp4a'), content, esds)\n    return buffer.buffer\n  }\n  static esds (config = [43, 146, 8, 0]) {\n    const configlen = config.length\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x00, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n    ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]))\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('esds'), content)\n    return buffer.buffer\n  }\n  static avc1 (data) {\n    let buffer = new Buffer(); let size = 40// 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n    let sps = data.sps; let pps = data.pps; let width = data.width; let height = data.height; let hSpacing = data.pixelRatio[0]; let vSpacing = data.pixelRatio[1]\n    let avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1 // 目前只处理一个sps\n    ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff]).concat(sps).concat(1).concat([pps.length >>> 8 & 0xff, pps.length & 0xff]).concat(pps))\n    let avc1 = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1\n    let btrt = new Uint8Array([\n      0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n    ])\n    let pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n\n    buffer.write(\n      FMP4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), FMP4.type('avc1'), avc1,\n      FMP4.size(8 + avcc.byteLength), FMP4.type('avcC'), avcc,\n      FMP4.size(20), FMP4.type('btrt'), btrt,\n      FMP4.size(16), FMP4.type('pasp'), pasp\n    )\n    return buffer.buffer\n  }\n  static stts () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stts'), content)\n    return buffer.buffer\n  }\n  static stsc () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stsc'), content)\n    return buffer.buffer\n  }\n  static stco () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stco'), content)\n    return buffer.buffer\n  }\n  static stsz () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n    ])\n    buffer.write(FMP4.size(20), FMP4.type('stsz'), content)\n    return buffer.buffer\n  }\n  static mvex (duration, timeScale) {\n    let buffer = new Buffer(); let size = 8\n    let mehd = FMP4.mehd(duration * timeScale)\n    let trex = FMP4.trex(1)\n    let trep = FMP4.trep(1);\n\n    [mehd, trex, trep].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('mvex'), mehd, trex, trep)\n    return buffer.buffer\n  }\n  static mehd (duration) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      (duration >> 24),\n      (duration >> 16) & 0xff,\n      (duration >> 8) & 0xff,\n      (duration & 0xff)\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('mehd'), FMP4.extension(0, 0), content)\n    return buffer.buffer\n  }\n  static trex (id) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x1e, 0x84, 0x80 // default_sample_flags\n    ])\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('trex'), content)\n    return buffer.buffer\n  }\n  static trep (id) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff) // track_ID\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('trep'), FMP4.extension(0, 0), content)\n    return buffer.buffer\n  }\n  static moof (data) {\n    let buffer = new Buffer(); let size = 8\n    let mfhd = FMP4.mfhd()\n    let traf = FMP4.traf(data);\n    [mfhd, traf].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('moof'), mfhd, traf)\n    return buffer.buffer\n  }\n  static mfhd () {\n    let buffer = new Buffer()\n    let content = Buffer.writeUint32(FMP4.sequence)\n    FMP4.sequence += 1\n    buffer.write(FMP4.size(16), FMP4.type('mfhd'), FMP4.extension(0, 0), content)\n    return buffer.buffer\n  }\n  static traf (data) {\n    let buffer = new Buffer(); let size = 8\n    let tfhd = FMP4.tfhd(1)\n    let tfdt = FMP4.tfdt(data.time)\n    let trun = FMP4.trun(data);\n    [tfhd, tfdt, trun].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('traf'), tfhd, tfdt, trun)\n    return buffer.buffer\n  }\n  static tfhd (id) {\n    let buffer = new Buffer()\n    let content = Buffer.writeUint32(id)\n    buffer.write(FMP4.size(16), FMP4.type('tfhd'), FMP4.extension(0, 131072), content)\n    return buffer.buffer\n  }\n  static tfdt (time) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      (time >> 24),\n      (time >> 16) & 0xff,\n      (time >> 8) & 0xff,\n      (time & 0xff)\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('tfdt'), FMP4.extension(0, 0), content)\n    return buffer.buffer\n  }\n  static trun (data) {\n    let buffer = new Buffer()\n    let sampleCount = Buffer.writeUint32(data.samples.length)\n    // mdat-header 8\n    // moof-header 8\n    // mfhd 16\n    // traf-header 8\n    // thhd 16\n    // tfdt 20\n    // trun-header 12\n    // sampleCount 4\n    // data-offset 4\n    // samples.length\n    let offset = Buffer.writeUint32(92 + 4 * data.samples.length)\n    buffer.write(FMP4.size(20 + 4 * data.samples.length), FMP4.type('trun'), FMP4.extension(0, 513), sampleCount, offset)\n    data.samples.forEach((item, idx) => {\n      buffer.write(Buffer.writeUint32(item.size))\n    })\n    return buffer.buffer\n  }\n  static mdat (data) {\n    let buffer = new Buffer(); let size = 8\n    data.samples.forEach(item => {\n      size += item.size\n    })\n    buffer.write(FMP4.size(size), FMP4.type('mdat'))\n    data.samples.forEach(item => {\n      buffer.write(item.buffer)\n    })\n    return buffer.buffer\n  }\n}\n\nFMP4.sequence = 1\n\nexport default FMP4\n","import EventEmitter from 'event-emitter'\nimport Errors from '../error'\n\nclass Task {\n  constructor (url, range, callback) {\n    EventEmitter(this)\n    this.url = url\n    this.range = range\n    this.id = range.join('-')\n    this.on = false\n    let xhr = new window.XMLHttpRequest()\n    xhr.target = this\n    xhr.responseType = 'arraybuffer'\n    xhr.open('get', url)\n    xhr.setRequestHeader('Range', `bytes=${range[0]}-${range[1]}`)\n    xhr.onload = function () {\n      if (xhr.status === 200 || xhr.status === 206) {\n        if (callback && callback instanceof Function) {\n          callback(xhr.response)\n        }\n      }\n      xhr.target.remove()\n    }\n    xhr.onerror = function (e) {\n      xhr.target.emit('error', new Errors('network', '', {line: 25, handle: '[Task] constructor', msg: e.message, url}))\n      xhr.target.remove()\n    }\n    xhr.onabort = function () {\n      xhr.target.remove()\n    }\n    this.xhr = xhr\n    Task.queue.push(this)\n    this.update()\n  }\n  cancel () {\n    this.xhr.abort()\n  }\n\n  remove () {\n    Task.queue.filter((item, idx) => {\n      if (item.url === this.url && item.id === this.id) {\n        Task.queue.splice(idx, 1)\n        return true\n      } else {\n        return false\n      }\n    })\n    this.update()\n  }\n\n  update () {\n    let Queue = Task.queue\n    let sended = Queue.filter((item) => item.on)\n    let wait = Queue.filter(item => !item.on)\n    let max = Task.limit - sended.length\n    wait.forEach((item, idx) => {\n      if (idx < max) {\n        item.run()\n      }\n    })\n  }\n\n  run () {\n    if (this.xhr.readyState === 1) {\n      this.on = true\n      this.xhr.send()\n    } else {\n      this.remove()\n    }\n  }\n\n  static clear () {\n    Task.queue.forEach(item => {\n      if (item.on) {\n        item.cancel()\n      }\n    })\n    Task.queue.length = 0\n  }\n}\n\nTask.queue = []\nTask.limit = 2\nwindow.Task = Task\n\nexport default Task\n","let util = {}\n\n/**\n * [使用递归查询指定type的box]\n * var mimeCodec = 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"';\n * @param  {Object} root [JSON对象]\n * @param  {String} type [box的类型]\n * @return {Object}      [box]\n */\nutil.findBox = function (root, type, result = []) {\n  if (root.type !== type) {\n    if (root && root.subBox) {\n      let box = root.subBox.filter(item => item.type === type)\n      if (box.length) {\n        box.forEach(item => result.push(item))\n      } else {\n        root.subBox.forEach(item => util.findBox(item, type, result))\n      }\n    }\n  } else {\n    result.push(root)\n  }\n  result = [].concat(result)\n  return result.length > 1 ? result : result[0]\n}\n\nutil.padStart = function (str, length, pad) {\n  let charstr = String(pad); let len = length >> 0; let maxlen = Math.ceil(len / charstr.length)\n  let chars = []; let r = String(str)\n  while (maxlen--) {\n    chars.push(charstr)\n  }\n  return chars.join('').substring(0, len - r.length) + r\n}\n\n/**\n * [十进制转十六进制]\n * @param  {Number} value [要转换的十进制数字]\n * @return {String}       [十六进制]\n */\nutil.toHex = function (...value) {\n  let hex = []\n  value.forEach(item => {\n    hex.push(util.padStart(Number(item).toString(16), 2, 0))\n  })\n  return hex\n}\n\n/**\n * [求和计算]\n * @param  {[type]} rst [description]\n * @return {[type]}     [description]\n */\nutil.sum = function (...rst) {\n  let count = 0\n  rst.forEach(item => { count += item })\n  return count\n}\n\n/**\n * [计算音视频数据在Mdat中的偏移量]\n * @param  {Array} stsc         [块偏移量]\n * @param  {Number} sample_order [帧次序]\n * @return {Object}              [块的位置和当前帧的偏移数]\n */\nutil.stscOffset = function (stsc, sample_order) {\n  let chunk_index; let samples_offset = ''\n  let chunk_start = stsc.entries.filter((item) => {\n    return item.first_sample <= sample_order && sample_order < item.first_sample + item.chunk_count * item.samples_per_chunk\n  })[0]\n  if (!chunk_start) {\n    let last_chunk = stsc.entries.pop()\n    stsc.entries.push(last_chunk)\n    let chunk_offset = Math.floor((sample_order - last_chunk.first_sample) / last_chunk.samples_per_chunk)\n    let last_chunk_index = last_chunk.first_chunk + chunk_offset\n    let last_chunk_first_sample = last_chunk.first_sample + last_chunk.samples_per_chunk * chunk_offset\n    return {\n      chunk_index: last_chunk_index,\n      samples_offset: [last_chunk_first_sample, sample_order]\n    }\n  } else {\n    let chunk_offset = Math.floor((sample_order - chunk_start.first_sample) / chunk_start.samples_per_chunk)\n    let chunk_offset_sample = chunk_start.first_sample + chunk_offset * chunk_start.samples_per_chunk\n    chunk_index = chunk_start.first_chunk + chunk_offset\n    samples_offset = [chunk_offset_sample, sample_order]\n    return {\n      chunk_index: chunk_index,\n      samples_offset\n    }\n  }\n}\n\nutil.seekSampleOffset = function (stsc, stco, stsz, order, mdatStart) {\n  let chunkOffset = util.stscOffset(stsc, order + 1)\n  let result = stco.entries[chunkOffset.chunk_index - 1] + util.sum.apply(null, stsz.entries.slice(chunkOffset.samples_offset[0] - 1, chunkOffset.samples_offset[1] - 1)) - mdatStart\n  if (result === undefined) {\n    throw `result=${result},stco.length=${stco.entries.length},sum=${util.sum.apply(null, stsz.entries.slice(0, order))}`\n  } else if (result < 0) {\n    throw `result=${result},stco.length=${stco.entries.length},sum=${util.sum.apply(null, stsz.entries.slice(0, order))}`\n  }\n  return result\n}\n\nutil.seekSampleTime = function (stts, ctts, order) {\n  let time; let duration; let count = 0; let startTime = 0; let offset = 0\n  stts.entry.every(item => {\n    duration = item.sampleDuration\n    if (order < count + item.sampleCount) {\n      time = startTime + (order - count) * item.sampleDuration\n      return false\n    } else {\n      count += item.sampleCount\n      startTime += item.sampleCount * duration\n      return true\n    }\n  })\n  if (ctts) {\n    let ct = 0\n    ctts.entry.every(item => {\n      ct += item.count\n      if (order < ct) {\n        offset = item.offset\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n  if (!time) {\n    time = startTime + (order - count) * duration\n  }\n  return {time, duration, offset}\n}\n\nutil.seekOrderSampleByTime = function (stts, timeScale, time) {\n  let startTime = 0; let order = 0; let count = 0; let itemDuration; let sampleDuration\n  stts.every((item, idx) => {\n    itemDuration = item.sampleCount * item.sampleDuration / timeScale\n    if (time <= startTime + itemDuration) {\n      order = count + Math.ceil((time - startTime) * timeScale / item.sampleDuration)\n      startTime = startTime + Math.ceil((time - startTime) * timeScale / item.sampleDuration) * item.sampleDuration / timeScale\n      sampleDuration = item.sampleCount\n      return false\n    } else {\n      startTime += itemDuration\n      count += item.sampleCount\n      return true\n    }\n  })\n  return {order, startTime, sampleDuration}\n}\n\nutil.sampleCount = function (stts) {\n  let count = 0\n  stts.forEach((item, idx) => {\n    count += item.sampleCount\n  })\n  return count\n}\n\nutil.seekTrakDuration = function (trak, timeScale) {\n  let stts = util.findBox(trak, 'stts'); let duration = 0\n  stts.entry.forEach(item => {\n    duration += item.sampleCount * item.sampleDuration\n  })\n  return Number(duration / timeScale).toFixed(4)\n}\n\nexport default util\n","import EventEmitter from 'event-emitter'\nimport Merge from 'deepmerge'\nimport Parser from './parse'\nimport Buffer from './fmp4/buffer'\nimport FMP4 from './fmp4/mp4'\nimport Task from './media/task'\nimport Download from './util/download'\nimport util from './util'\nimport Player from 'xgplayer'\nimport Errors from './error'\n\nclass MP4 {\n  /**\n     * [constructor 构造函数]\n     * @param {String} url                      [视频地址]\n     * @param {Number} [chunk_size=Math.pow(25, 4)]           [请求的数据块大小，对于长视频设置的较大些可以避免二次请求]\n     */\n  constructor (url, chunkSize = 1024) {\n    EventEmitter(this)\n    this.url = url\n    this.CHUNK_SIZE = chunkSize\n    this.reqTimeLength = 5\n    this.init(url)\n    this.once('mdatReady', this.moovParse.bind(this))\n    this.cache = new Buffer()\n    this.bufferCache = new Set()\n    this.mdatCache = []\n    this.timeRage = []\n    this.canDownload = true\n    this.cut = false\n  }\n\n  /**\n     * [getData 根据字节区间下载二进制数据]\n     * @param  {Number} [start=0]  [起始字节]\n     * @param  {Number} [end=start + this.CHUNK_SIZE] [截止字节]\n     */\n  getData (start = 0, end = start + this.CHUNK_SIZE) {\n    let self = this\n    return new Promise((resolve, reject) => {\n      let task = new Task(this.url, [\n        start, end\n      ], resolve)\n      task.once('error', err => {\n        self.emit('error', err)\n      })\n    })\n  }\n\n  /**\n     * [moovParse 解析视频信息]\n     * @return {[type]} [description]\n     */\n  moovParse () {\n    let self = this\n    let moov = this.moovBox\n    let mvhd = util.findBox(moov, 'mvhd')\n    let traks = util.findBox(moov, 'trak')\n    let audioTrak\n    let audioCodec\n    let audioTimeScale\n    let channelCount,\n      sampleRate,\n      decoderConfig\n    if (Player.util.typeOf(traks) !== 'Array') {\n      traks = [traks]\n    }\n    traks.forEach(trak => {\n      let hdlr = util.findBox(trak, 'hdlr')\n      let mdhd = util.findBox(trak, 'mdhd')\n      if (!hdlr || !mdhd) {\n        self.emit('error', new Errors('parse', '', {line: 72, handle: '[MP4] moovParse', url: self.url}))\n        return\n      }\n      let stsd = util.findBox(trak, 'stsd')\n      let codecBox = stsd.subBox[0]\n      if (hdlr.handleType === 'soun') {\n        audioTrak = trak\n        let esds = util.findBox(trak, 'esds')\n        let mp4a = util.findBox(trak, 'mp4a')\n        let ESDescriptor = util.findBox(trak, 5)\n        audioTimeScale = mdhd.timescale\n        if (esds) {\n          audioCodec = `${codecBox.type}.` + util.toHex(esds.subBox[0].subBox[0].typeID) + `.${esds.subBox[0].subBox[0].subBox[0].type}`\n        } else {\n          audioCodec = `${codecBox.type}`\n        }\n        if (ESDescriptor && ESDescriptor.EScode) {\n          decoderConfig = ESDescriptor.EScode.map((item) => Number(`0x${item}`))\n        }\n        if (mp4a) {\n          channelCount = mp4a.channelCount\n          sampleRate = mp4a.sampleRate\n        }\n      }\n    })\n    this.audioTrak = Merge({}, audioTrak)\n    let mdat = this._boxes.find(item => item.type === 'mdat')\n    let audioDuration = parseFloat(util.seekTrakDuration(audioTrak, audioTimeScale))\n    this.mdatStart = mdat.start\n    this.sampleCount = util.sampleCount(util.findBox(this.audioTrak, 'stts').entry)\n\n    let audioFrame, audioNextFrame\n    let stts = util.findBox(this.audioTrak, 'stts').entry\n    for (let i = 0; i < audioDuration; i += this.reqTimeLength) {\n      audioFrame = util.seekOrderSampleByTime(stts, audioTimeScale, i)\n      if (i + this.reqTimeLength < audioDuration) {\n        audioNextFrame = util.seekOrderSampleByTime(stts, audioTimeScale, i + this.reqTimeLength)\n        this.timeRage.push([\n          {time: audioFrame.startTime, order: audioFrame.order},\n          {time: audioNextFrame.startTime, order: audioNextFrame.order}\n        ])\n      } else {\n        this.timeRage.push([\n          {time: audioFrame.startTime, order: audioFrame.order},\n          {time: audioDuration, order: this.sampleCount - 1}\n        ])\n      }\n    }\n    // console.log('this.timeRage')\n    // console.log(this.timeRage)\n    this.meta = {\n      audioCodec,\n      createTime: mvhd.createTime,\n      modifyTime: mvhd.modifyTime,\n      duration: mvhd.duration / mvhd.timeScale,\n      timeScale: mvhd.timeScale,\n      audioDuration,\n      audioTimeScale,\n      endTime: audioDuration,\n      channelCount,\n      sampleRate,\n      audioConfig: decoderConfig\n    }\n  }\n\n  /**\n     * [init 实例的初始化，主要是获取视频的MOOV元信息]\n     */\n  init () {\n    let self = this\n    self.getData().then((resFir) => {\n      let parsedFir\n      let mdatStart = 0\n\n      let mdat, moov, ftyp\n\n      let boxes\n      try {\n        parsedFir = new Parser(resFir)\n      } catch (e) {\n        self.emit('error', e.type ? e : new Errors('parse', '', {line: 176, handle: '[MP4] init', msg: e.message}))\n        return false\n      }\n      self._boxes = boxes = parsedFir.boxes\n      boxes.every(item => {\n        if (item.type === 'ftyp') {\n          mdatStart += item.size\n          ftyp = item\n          self.ftypBox = ftyp\n          self.ftypBuffer = resFir.slice(0, ftyp.size)\n        } else if (item.type === 'mdat') {\n          mdat = item\n          mdat.start = mdatStart\n          mdatStart += item.size\n          self.mdatBox = mdat\n          // self.emit('mdatReady', moov)\n        }\n        return true\n      })\n      if (!mdat) {\n        let nextBox = parsedFir.nextBox\n        if (nextBox) {\n          if (nextBox.type === 'moov' || nextBox.type === 'free') {\n            self.getData(mdatStart, mdatStart + nextBox.size + 1024).then(resSec => {\n              let parsedSec = new Parser(resSec)\n              self._boxes = self._boxes.concat(parsedSec.boxes)\n              parsedSec.boxes.every(item => {\n                if (item.type === 'moov') {\n                  mdatStart += item.size\n                  moov = item\n                  self.moovBox = moov\n                  self.moovBuffer = resSec.slice(0, moov.size)\n                  return true\n                } else if (item.type === 'mdat') {\n                  mdat = item\n                  mdat.start = mdatStart\n                  mdatStart += item.size\n                  self.mdatBox = mdat\n                  self.emit('mdatReady', moov)\n                  return false\n                } else {\n                  mdatStart += item.size\n                  return true\n                }\n              })\n              if (!mdat) {\n                let nextBoxSec = parsedSec.nextBox\n                if (nextBoxSec) {\n                  if (nextBoxSec.type === 'free') {\n                    self.getData(mdatStart, mdatStart + nextBoxSec.size + 1024).then(resThi => {\n                      let parsedThi = new Parser(resThi)\n                      self._boxes = self._boxes.concat(parsedThi.boxes)\n                      parsedThi.boxes.every(item => {\n                        if (item.type === 'mdat') {\n                          mdat = item\n                          mdat.start = mdatStart\n                          self.mdatBox = mdat\n                          self.emit('mdatReady', moov)\n                          return false\n                        } else if (item.type === 'free') {\n                          self.freeBuffer = resThi.slice(0, item.size)\n                          mdatStart += item.size\n                          return true\n                        } else {\n                          mdatStart += item.size\n                          return true\n                        }\n                      })\n                      if (!mdat) {\n                        self.emit('error', new Errors('parse', '', {line: 207, handle: '[MP4] init', msg: 'not find mdat box'}))\n                      }\n                    }).catch(() => {\n                      self.emit('error', new Errors('network', '', {line: 210, handle: '[MP4] getData', msg: 'getData failed'}))\n                    })\n                  } else {\n                    self.emit('error', new Errors('parse', '', {line: 213, handle: '[MP4] init', msg: 'not find mdat box'}))\n                  }\n                } else {\n                  self.emit('error', new Errors('parse', '', {line: 216, handle: '[MP4] init', msg: 'not find mdat box'}))\n                }\n              }\n            }).catch(() => {\n              self.emit('error', new Errors('network', '', {line: 220, handle: '[MP4] getData', msg: 'getData failed'}))\n            })\n          } else {\n            self.emit('error', new Errors('parse', '', {line: 223, handle: '[MP4] init', msg: 'not find mdat box'}))\n          }\n        } else {\n          self.emit('error', new Errors('parse', '', {line: 226, handle: '[MP4] init', msg: 'not find mdat box'}))\n        }\n      } else {\n        let nextBox = parsedFir.nextBox\n        if (nextBox) {\n          self.emit('error', new Errors('parse', '', {line: 223, handle: '[MP4] init', msg: 'not find moov box'}))\n        } else {\n          self.getData(mdatStart, mdatStart + 1024).then(resSec => {\n            let parsedSec = new Parser(resSec)\n            self._boxes = self._boxes.concat(parsedSec.boxes)\n            parsedSec.boxes.every(item => {\n              if (item.type === 'moov') {\n                mdatStart += item.size\n                moov = item\n                self.moovBox = moov\n                self.moovBuffer = resSec.slice(0, moov.size)\n                self.emit('mdatReady', moov)\n                return false\n              } else {\n                mdatStart += item.size\n                return true\n              }\n            })\n            if (!moov) {\n              let nextBoxSec = parsedSec.nextBox\n              if (nextBoxSec) {\n                if (nextBoxSec.type === 'moov') {\n                  self.getData(mdatStart, mdatStart + nextBoxSec.size - 1).then(resThi => {\n                    let parsedThi = new Parser(resThi)\n                    self._boxes = self._boxes.concat(parsedThi.boxes)\n                    parsedThi.boxes.every(item => {\n                      if (item.type === 'moov') {\n                        mdatStart += item.size\n                        moov = item\n                        self.moovBox = moov\n                        self.moovBuffer = resSec.slice(0, moov.size)\n                        self.emit('mdatReady', moov)\n                        return false\n                      } else {\n                        mdatStart += item.size\n                        return true\n                      }\n                    })\n                    if (!moov) {\n                      self.emit('error', new Errors('parse', '', {line: 207, handle: '[MP4] init', msg: 'not find moov box'}))\n                    }\n                  }).catch(() => {\n                    self.emit('error', new Errors('network', '', {line: 210, handle: '[MP4] getData', msg: 'getData failed'}))\n                  })\n                } else {\n                  self.emit('error', new Errors('parse', '', {line: 213, handle: '[MP4] init', msg: 'not find moov box'}))\n                }\n              } else {\n                self.emit('error', new Errors('parse', '', {line: 216, handle: '[MP4] init', msg: 'not find moov box'}))\n              }\n            }\n          }).catch(() => {\n            self.emit('error', new Errors('network', '', {line: 220, handle: '[MP4] getData', msg: 'getData failed'}))\n          })\n        }\n      }\n    }).catch(() => {\n      self.emit('error', new Errors('network', '', {line: 230, handle: '[MP4] getData', msg: 'getData failed'}))\n    })\n  }\n\n  getSamplesByOrders (type = 'audio', start, end) {\n    let trak = this.audioTrak\n    let stsc = util.findBox(trak, 'stsc') // chunk~samples\n    let stsz = util.findBox(trak, 'stsz') // sample-size\n    let stts = util.findBox(trak, 'stts') // sample-time\n    let stco = util.findBox(trak, 'stco') // chunk-offset\n    let ctts = util.findBox(trak, 'ctts') // offset-compositime\n    let mdatStart = this.mdatStart\n    let samples = []\n    end = end !== undefined\n      ? end\n      : stsz.entries.length\n    if (start instanceof Array) {\n      start.forEach((item, idx) => {\n        samples.push({\n          idx: item,\n          size: stsz.entries[item],\n          time: util.seekSampleTime(stts, ctts, item),\n          offset: util.seekSampleOffset(stsc, stco, stsz, item, mdatStart)\n        })\n      })\n    } else if (end !== 0) {\n      for (let i = start; i < end; i++) {\n        samples.push({\n          idx: i,\n          size: stsz.entries[i],\n          time: util.seekSampleTime(stts, ctts, i),\n          offset: util.seekSampleOffset(stsc, stco, stsz, i, mdatStart)\n        })\n      }\n    } else {\n      samples = {\n        idx: start,\n        size: stsz.entries[start],\n        time: util.seekSampleTime(stts, ctts, start),\n        offset: util.seekSampleOffset(stsc, stco, stsz, start, mdatStart)\n      }\n    }\n    return samples\n  }\n\n  packMeta (meta) {\n    if (!meta) {\n      return\n    }\n    let buffer = new Buffer()\n    buffer.write(FMP4.ftyp())\n    buffer.write(FMP4.moov(meta))\n    this.cache.write(buffer.buffer)\n    return buffer.buffer\n  }\n\n  seek (time, audioIndexOrder = null, audioNextIndexOrder = null) {\n    let audioStts = util.findBox(this.audioTrak, 'stts').entry\n    if (!audioIndexOrder) {\n      audioIndexOrder = util.seekOrderSampleByTime(audioStts, this.meta.audioTimeScale, time).order\n    }\n    if (!audioNextIndexOrder) {\n      if (time + this.reqTimeLength < this.meta.audioDuration) {\n        audioNextIndexOrder = util.seekOrderSampleByTime(audioStts, this.meta.audioTimeScale, time + this.reqTimeLength).order\n      }\n    }\n    if (this.bufferCache.has(audioIndexOrder)) {\n      return Promise.resolve(null)\n    } else {\n      return this.loadFragment(audioIndexOrder, audioNextIndexOrder)\n    }\n  }\n\n  loadFragment (audioIndexOrder, audioNextIndexOrder) {\n    let start,\n      end\n    let self = this\n    let audioFrame = this.getSamplesByOrders('audio', audioIndexOrder, 0)\n    start = audioFrame.offset\n    let audioNextFrame\n    if (audioNextIndexOrder) {\n      audioNextFrame = this.getSamplesByOrders('audio', audioNextIndexOrder, 0)\n      end = audioNextFrame.offset - 1\n    } else {\n      audioNextFrame = this.getSamplesByOrders('audio', this.sampleCount - 1, 0)\n      end = audioNextFrame.offset + audioNextFrame.size - 1\n    }\n    // console.log('start order')\n    // console.log(audioIndexOrder)\n    // console.log('start')\n    // console.log(start + self.mdatStart)\n    // console.log('end order')\n    // console.log(audioNextIndexOrder)\n    // console.log('end')\n    // console.log(self.mdatStart + end)\n    if (window.isNaN(start) || (end !== undefined && window.isNaN(end))) {\n      self.emit('error', new Errors('parse', '', { line: 366, handle: '[MP4] loadFragment', url: self.url }))\n      return false\n    }\n    return this.getData(\n      start + self.mdatStart, end\n        ? self.mdatStart + end\n        : '').then((dat) => {\n      if (end) {\n        this.mdatCache.push({\n          start: start + self.mdatStart,\n          end: self.mdatStart + end,\n          buffer: new Uint8Array(dat)\n        })\n      }\n      return self.createFragment(new Uint8Array(dat), start, audioIndexOrder, audioNextIndexOrder)\n    })\n  }\n  addFragment (data) {\n    let buffer = new Buffer()\n    buffer.write(FMP4.moof(data))\n    buffer.write(FMP4.mdat(data))\n    this.cache.write(buffer.buffer)\n    return buffer.buffer\n  }\n  createFragment (mdatData, start, audioIndexOrder, audioNextIndexOrder) {\n    let resBuffers = []\n    this.bufferCache.add(audioIndexOrder)\n    let _samples = this.getSamplesByOrders(\n      'audio', audioIndexOrder, audioNextIndexOrder)\n    let samples = _samples.map((item, idx) => {\n      return {\n        size: item.size,\n        duration: item.time.duration,\n        offset: item.time.offset,\n        buffer: new Uint8Array(mdatData.slice(item.offset - start, item.offset - start + item.size)),\n        key: idx === 0\n      }\n    })\n    resBuffers.push(this.addFragment({id: 2, time: this.cut ? 0 : _samples[0].time.time, firstFlags: 0x00, flags: 0x701, samples: samples}))\n    let bufferSize = 0\n    resBuffers.every(item => {\n      bufferSize += item.byteLength\n      return true\n    })\n    let buffer = new Uint8Array(bufferSize)\n\n    let offset = 0\n    resBuffers.every(item => {\n      buffer.set(item, offset)\n      offset += item.byteLength\n      return true\n    })\n    return Promise.resolve(buffer)\n  }\n\n  download () {\n    // new Download('fmp4.mp4', this.cache.buffer)\n  }\n}\n\nexport default MP4\n","import EventEmitter from 'event-emitter'\nimport Errors from '../error'\n\nclass MSE {\n  constructor (codecs = 'audio/mp4; codecs=\"mp4a.40.5\"') {\n    let self = this\n    EventEmitter(this)\n    this.codecs = codecs\n    this.replaying = false\n    this.mediaSource = new window.MediaSource()\n    this.url = window.URL.createObjectURL(this.mediaSource)\n    this.queue = []\n    this.updating = false\n    this.mediaSource.addEventListener('sourceopen', function () {\n      self.sourceBuffer = self.mediaSource.addSourceBuffer(self.codecs)\n      self.sourceBuffer.addEventListener('error', function (e) {\n        self.emit('error', new Errors('mse', '', {line: 16, handle: '[MSE] constructor sourceopen', msg: e.message}))\n      })\n      self.sourceBuffer.addEventListener('updateend', function (e) {\n        self.emit('updateend')\n        let buffer = self.queue.shift()\n        if (buffer) {\n          self.sourceBuffer.appendBuffer(buffer)\n        }\n      })\n      self.emit('sourceopen')\n    })\n    this.mediaSource.addEventListener('sourceclose', function () {\n      self.emit('sourceclose')\n    })\n  }\n\n  get state () {\n    if (this.replaying) {\n      return 'open'\n    } else {\n      return this.mediaSource.readyState\n    }\n  }\n\n  get duration () {\n    return this.mediaSource.duration\n  }\n\n  set duration (value) {\n    this.mediaSource.duration = value\n  }\n\n  appendBuffer (buffer) {\n    let sourceBuffer = this.sourceBuffer\n    if (sourceBuffer.updating === false && this.state === 'open') {\n      sourceBuffer.appendBuffer(buffer)\n      return true\n    } else {\n      this.queue.push(buffer)\n      return false\n    }\n  }\n\n  removeBuffer (start, end) {\n    this.sourceBuffer.remove(start, end)\n  }\n\n  endOfStream () {\n    if (this.mediaSource.readyState === 'open') {\n      this.mediaSource.endOfStream()\n    }\n  }\n\n  static isSupported (codecs) {\n    return window.MediaSource && window.MediaSource.isTypeSupported(codecs)\n  }\n}\n\nexport default MSE\n","import 'core-js/modules/es6.promise.js'\nimport 'core-js/modules/es7.string.pad-start'\nimport Player from 'xgplayer'\nimport MP4 from './mp4'\nimport MSE from './media/mse'\nimport Task from './media/task'\nimport Buffer from './fmp4/buffer'\nimport FMP4 from './fmp4/mp4'\n\nlet isEnded = (player, mp4) => {\n  if (mp4.meta.endTime - player.currentTime < 2) {\n    let range = player.getBufferedRange()\n    if (player.currentTime - range[1] < 0.1) {\n      player.mse.endOfStream()\n    }\n  }\n}\n\nlet errorHandle = (player, err) => {\n  err.vid = player.config.vid\n  err.url = player.src\n  if (err.errd && typeof err.errd === 'object') {\n    if (player.mp4) {\n      err.errd.url = player.mp4.url\n      err.url = player.mp4.url\n      player.mp4.canDownload = false\n    }\n  }\n  player.emit('DATA_REPORT', err)\n  if (err.errt === 'network' && player.config._backupURL) {\n    player.src = player.config._backupURL\n  } else {\n    player.src = player.config._mainURL\n  }\n  player.switchURL = null\n  player._replay = null\n}\n\nlet m4aplayer = function () {\n  let player = this; let sniffer = Player.sniffer; let util = Player.util\n  let Errors = Player.Errors; let mainURL; let backupURL\n  let preloadTime = player.config.preloadTime || 15\n  let waiterTimer\n  Player.m4a = true\n  player.hasEnded = false\n  let list = util.typeOf(player.config.url) === 'Array' ? player.config.url : [{\n    src: player.config.url,\n    name: player.config.name,\n    vid: player.config.vid,\n    poster: player.config.poster\n  }]\n  let url = list[0].src\n  let name = list[0].name\n  let vid = list[0].vid\n  let poster = list[0].poster\n  let rule = player.config.pluginRule || function () { return true }\n  if (!url) {\n    player.emit('error', new Errors('other', player.config.vid))\n    return\n  }\n  if (util.typeOf(url) === 'String') {\n    mainURL = url\n  } else if (util.typeOf(url) === 'Array' && url.length) {\n    mainURL = url[0].src\n    backupURL = url[1].src\n  }\n  player.config._mainURL = mainURL\n  player.config._backupURL = backupURL\n  let loadData = (i = 0, time = player.currentTime, order = null, nextOrder = null) => {\n    if (player.timer) {\n      clearTimeout(player.timer)\n    }\n    time = Math.max(time, player.currentTime)\n    player.timer = setTimeout(function () {\n      player.mp4.seek(time, order, nextOrder).then(buffer => {\n        if (buffer) {\n          let mse = player.mse\n          mse.updating = true\n          mse.appendBuffer(buffer)\n          mse.once('updateend', () => {\n            mse.updating = false\n          })\n        }\n      }, () => {\n        if (i < 10) {\n          setTimeout(function () {\n            loadData(i + 1)\n          }, 2000)\n        }\n      })\n    }, 50)\n  }\n  let init = (url, replaying = false) => {\n    let mp4 = new MP4(url)\n    mp4.reqTimeLength = player.config.reqTimeLength || 5\n    let mse\n    return new Promise((resolve, reject) => {\n      mp4.once('mdatReady', () => {\n        mse = new MSE()\n        if (replaying) {\n          mse.replaying = true\n        }\n        mse.on('sourceopen', function () {\n          mse.appendBuffer(mp4.packMeta(mp4.meta))\n          mse.once('updateend', loadData.bind(player))\n        })\n        mse.on('error', function (e) {\n          reject(e)\n        })\n        resolve([mp4, mse])\n      })\n      mp4.on('error', (e) => {\n        reject(e)\n      })\n    })\n  }\n  if (['chrome', 'firfox', 'safari'].some(item => item === sniffer.browser) && MSE.isSupported('audio/mp4; codecs=\"mp4a.40.5\"')) {\n    let _start = player.start\n    if (!rule.call(player)) {\n      return false\n    }\n    player.cut = function (start = 0, end) {\n      let segment = new Buffer()\n      return new Promise((resolve, reject) => {\n        let mp4 = new MP4(url)\n        mp4.once('mdatReady', () => {\n          if (!end || end <= start) {\n            end = start + 15\n          }\n          if (end > mp4.meta.audioDuration) {\n            start = mp4.meta.audioDuration - (end - start)\n            end = mp4.meta.audioDuration\n          }\n          mp4.reqTimeLength = end - start\n          mp4.cut = true\n          mp4.seek(start).then(buffer => {\n            if (buffer) {\n              let meta = Player.util.deepCopy({\n                duration: mp4.reqTimeLength,\n                audioDuration: mp4.reqTimeLength,\n                endTime: mp4.reqTimeLength\n              }, mp4.meta)\n              meta.duration = mp4.reqTimeLength\n              meta.audioDuration = mp4.reqTimeLength\n              meta.endTime = mp4.reqTimeLength\n              segment.write(mp4.packMeta(meta), buffer)\n              resolve(new Blob([segment.buffer], {type: 'audio/mp4; codecs=\"mp4a.40.5\"'}))\n            }\n          })\n        })\n        mp4.on('error', (e) => {\n          reject(e)\n        })\n      })\n    }\n    if (player.config.segPlay) {\n      let sp = player.config.segPlay\n      player.cut(sp.start, sp.end).then(blob => {\n        if (blob) {\n          player.config.url = URL.createObjectURL(blob)\n          player.start(player.config.url)\n        }\n      }, () => {\n        console.log('error')\n      })\n      return\n    }\n    Object.defineProperty(player, 'src', {\n      get () {\n        return player.currentSrc\n      },\n      set (url) {\n        player.config.url = url\n        if (!player.paused) {\n          player.pause()\n          player.once('pause', () => {\n            player.start(url)\n          })\n          player.once('canplay', () => {\n            player.play()\n          })\n        } else {\n          player.start(url)\n        }\n        player.once('canplay', () => {\n          player.currentTime = 0\n        })\n      },\n      configurable: true\n    })\n    player.start = function (url = mainURL) {\n      init(url).then((result) => {\n        let mp4 = result[0]; let mse = result[1]\n        _start.call(player, mse.url)\n        player.mp4 = mp4\n        player.mse = mse\n        mp4.on('error', err => {\n          errorHandle(player, err)\n        })\n      }, err => {\n        _start.call(player, url)\n        errorHandle(player, err)\n      })\n      player.once('canplay', () => {\n        // safari decoder time offset\n        if (sniffer.browser === 'safari' && player.buffered) {\n          let start = player.buffered.start(0)\n          player.currentTime = start + 0.1\n        }\n      })\n    }\n\n    player.switchURL = (url) => {\n      let mp5 = new MP4(url)\n      let mp4 = player.mp4\n      mp5.on('mdatReady', () => {\n        let timeRange = mp4.timeRage; let curTime = player.currentTime\n        timeRange = mp4.timeRage\n        let start = timeRange.find(item => item[0] - curTime > 2)[0]\n        let end = player.getBufferedRange()[1]\n        if (end - start > 0 && sniffer.browser !== 'safari') {\n          player.mse.removeBuffer(start, end)\n        }\n        player.mp4 = mp5\n        player.mse.appendBuffer(mp5.packMeta(mp5.meta))\n      })\n      mp5.on('error', err => {\n        errorHandle(player, err)\n      })\n    }\n    player.on('timeupdate', function () {\n      let mse = player.mse; let mp4 = player.mp4\n      if (mse && !mse.updating && mp4.canDownload) {\n        let timeRage = mp4.timeRage\n        let range = player.getBufferedRange(); let cacheMaxTime = player.currentTime + preloadTime\n        if (range[1] - cacheMaxTime > 0) {\n          return\n        }\n        timeRage.every((item, idx) => {\n          if (range[1] === 0) {\n            loadData(5)\n            return false\n          } else {\n            if (item[0].time >= range[1] && !mp4.bufferCache.has(idx)) {\n              loadData(0, item[0].time, item[0].order, item[1].order)\n            } else {\n              return true\n            }\n          }\n        })\n        isEnded(player, mp4)// hack for older webkit\n      }\n    })\n\n    player.on('seeking', function () {\n      let buffered = player.buffered; let hasBuffered = false; let curTime = player.currentTime\n      Task.clear()\n      let timeRage = player.mp4.timeRage\n      if (buffered.length) {\n        for (let i = 0, len = buffered.length; i < len; i++) {\n          if (curTime >= buffered.start(i) && curTime <= buffered.end(i)) {\n            hasBuffered = true\n            break\n          }\n        }\n        if (!hasBuffered) {\n          timeRage.every((item, idx) => {\n            if (item[0].time <= curTime && item[1].time > curTime) {\n              loadData(0, item[0].time, item[0].order, item[1].order)\n              return false\n            } else {\n              return true\n            }\n          })\n        }\n      } else {\n        timeRage.every((item, idx) => {\n          if (item[0].time <= curTime && item[1].time > curTime) {\n            loadData(0, item[0].time, item[0].order, item[1].order)\n            return false\n          } else {\n            return true\n          }\n        })\n      }\n    })\n\n    player.on('pause', function () {\n      Task.clear()\n    })\n\n    player.on('playing', function () {\n      if (waiterTimer) {\n        clearTimeout(waiterTimer)\n      }\n    })\n\n    player.on('waiting', function () {\n      let buffered = player.buffered; let hasBuffered = false; let curTime = player.currentTime\n      Task.clear()\n      let timeRage = player.mp4.timeRage\n      if (buffered.length) {\n        for (let i = 0, len = buffered.length; i < len; i++) {\n          if (curTime >= buffered.start(i) && curTime <= buffered.end(i)) {\n            hasBuffered = true\n            break\n          }\n        }\n        if (!hasBuffered) {\n          timeRage.every((item, idx) => {\n            if (item[0].time <= curTime && item[1].time > curTime) {\n              loadData(0, item[0].time, item[0].order, item[1].order)\n              return false\n            } else {\n              return true\n            }\n          })\n        }\n      } else {\n        timeRage.every((item, idx) => {\n          if (item[0].time <= curTime && item[1].time > curTime) {\n            loadData(0, item[0].time, item[0].order, item[1].order)\n            return false\n          } else {\n            return true\n          }\n        })\n      }\n    })\n\n    player.once('destroy', () => {\n      Task.clear()\n      if (player.timer) {\n        clearTimeout(player.timer)\n      }\n    })\n\n    // let playBtn = util.findDom(player.root, '.xgplayer-play');\n    // ['click', 'touchstart'].forEach(item => {\n    //   playBtn.addEventListener(item, function (e) {\n    //     e.preventDefault()\n    //     e.stopPropagation()\n    //     if (player.hasEnded) {\n    //       player.hasEnded = false\n    //       Task.clear()\n    //       player.mp4.bufferCache.clear()\n    //       // player.currentTime = 0\n    //       init(player.mp4.url, true).then((result) => {\n    //         let mp4 = result[0]; let mse = result[1]\n    //         player.src = mse.url\n    //         player.mp4 = mp4\n    //         player.mse = mse\n    //         player.mse.replaying = true\n    //         player.currentTime = 0\n    //         player.video.play().then(() => {\n    //\n    //           // player.pause()\n    //           // player.currentTime = 0\n    //         })\n    //       }, err => {\n    //         errorHandle(player, err)\n    //       })\n    //     }\n    //   })\n    // })\n\n    player.on('change', (nextItem) => {\n      player.newMusic(nextItem.src)\n      name = `${nextItem.name}`\n      vid = `${nextItem.vid}`\n      poster = `${nextItem.poster}`\n    })\n\n    player.newMusic = (url) => {\n      Task.clear()\n      player.mp4.bufferCache.clear()\n      init(url, true).then((result) => {\n        let mp4 = result[0]; let mse = result[1]\n        player.src = mse.url\n        player.mp4 = mp4\n        player.mse = mse\n        player.mse.replaying = true\n        player.currentTime = 0\n        setTimeout(() => {\n          player.video.play()\n        }, 60)\n      }, err => {\n        errorHandle(player, err)\n      })\n    }\n\n    player.on('ended', () => {\n      player.hasEnded = true\n      if (player.config.offline) {\n        let mdatCache = new Buffer()\n        mdatCache.write(FMP4.size(player.mp4.mdatBox.size), FMP4.type('mdat'))\n        player.mp4.mdatCache.sort((a, b) => {\n          return a.start - b.start\n        })\n        let end = player.mp4.mdatCache[0].start - 1\n        player.mp4.mdatCache.forEach((item, index) => {\n          if (item.start === end + 1) {\n            mdatCache.write(item.buffer)\n            end = item.end\n          }\n        })\n        if (end !== player.mp4.mdatCache[player.mp4.mdatCache.length - 1].end) {\n          return\n        }\n        let m4aCache = new Buffer()\n        if (player.mp4.freeBuffer) {\n          m4aCache.write(new Uint8Array(player.mp4.ftypBuffer), new Uint8Array(player.mp4.moovBuffer), new Uint8Array(player.mp4.freeBuffer), mdatCache.buffer)\n        } else {\n          m4aCache.write(new Uint8Array(player.mp4.ftypBuffer), new Uint8Array(player.mp4.moovBuffer), mdatCache.buffer)\n        }\n        let offlineVid = vid || name\n        player.database.openDB(() => {\n          player.database.addData(player.database.myDB.ojstore.name, [{vid: offlineVid, blob: new Blob([m4aCache.buffer], {type: 'audio/mp4; codecs=\"mp4a.40.5\"'})}])\n          setTimeout(() => {\n            player.database.closeDB()\n          }, 5000)\n        })\n      }\n    })\n  }\n}\n\nPlayer.install('m4aplayer', m4aplayer)\n"],"names":["isNonNullObject","value","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","$$typeof","REACT_ELEMENT_TYPE","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","options","clone","isMergeableObject","deepmerge","defaultArrayMerge","target","source","concat","map","element","mergeObject","destination","keys","forEach","key","arrayMerge","sourceIsArray","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","require","global","ctx","classof","$export","isObject","aFunction","anInstance","forOf","speciesConstructor","task","set","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","TypeError","process","versions","v8","$Promise","isNode","empty","newPromiseCapability","f","USE_NATIVE","promise","resolve","FakePromise","constructor","exec","PromiseRejectionEvent","then","indexOf","e","isThenable","it","notify","isReject","_n","chain","_c","_v","ok","_s","i","length","reaction","result","exited","handler","fail","reject","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","console","unhandled","isUnhandled","emit","onunhandledrejection","reason","error","_a","undefined","v","onrejectionhandled","$reject","this","_d","_w","slice","$resolve","wrapper","executor","err","onFulfilled","onRejected","push","C","G","W","F","Promise","S","r","capability","x","iter","all","iterable","values","index","remaining","$index","alreadyCalled","$pad","WEBKIT_BUG","test","P","maxLength","arguments","possibleTypes","object","function","isValue","hasOwnProperty","apply","isPrototype","classRe","functionToString","Function","isFunction","require$$0","require$$1","max","Math","dest","src","assign","obj","foo","bar","trzy","create","opts1","str","String","searchString","contains","module","dscr","c","w","desc","configurable","enumerable","writable","normalizeOpts","gs","get","isPlainFunction","fn","on","once","off","methods","descriptors","base","defineProperty","defineProperties","descriptor","type","listener","data","callable","__ee__","self","__eeOnceListener__","listeners","candidate","splice","l","args","d","exports","o","Symbol","for","array","Error","reduce","prev","next","deepmerge_1","_Errors","vid","errd","url","version","Player","Errors","Stream","buffer","ArrayBuffer","line","handle","msg","dataview","DataView","position","count","loop","floor","last","readByte","size","sign","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","Box","headSize","subBox","start","stream","readUint32","fromCharCode","readUint8","readUint64","uuid","end","byteLength","parser","containerBox","find","item","containerParser","readHeader","readBody","box","avc1","skip","dataReferenceIndex","readUint16","width","height","horizresolution","vertresolution","frameCount","depth","avcC","configVersion","profile","profileCompatibility","AVCLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","sequenceLength","sequence","Number","ppsCount","ppsLength","pps","dataviewLength","btrt","bufferSizeDB","maxBitrate","avgBitrate","co64","flag","entries","ctts","entryCount","entry","dref","read","elst","entry_count","segment_duration","media_time","readInt32","media_rate_integer","readInt16","media_rate_fraction","esds","MP4ESDescrTag","ftyp","major_brand","minor_version","compatibleBrands","len","compatible_brands","hdlr","handleType","name","join","iods","content","mdat","UTC","time","Date","setFullYear","setMonth","setDate","setHours","setMinutes","setSeconds","setTime","getTime","toLocaleString","mdhd","modify","createTime","modifyTime","timescale","duration","language","mp4a","channelCount","sampleSize","sampleRate","MP4DecConfigDescrTag","extend","typeID","streamUint","bufferSize","maximum","average","MP4DecSpecificDescrTag","dataSize","EScode","padStart","esID","priority","SLConfigDescriptor","mvhd","timeScale","rate","volume","matrix","nextTrackID","pasp","SL","smhd","balance","readInt8","stco","stsc","preEntry","chunk_count","first_chunk","first_sample","samples_per_chunk","pre","stsd","stss","stsz","stts","tkhd","trackID","reserverd","layer","alternate_group","udta","location","vmhd","graphicsmode","opcolor","ResultConstructor","totalLength","_len","arrays","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","return","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","_concat2","__esModule","default","_concat","Parse","boxes","nextBox","Uint8Array","bufferLength","Buffer","Concat","UINT32_MAX","pow","FMP4","charCodeAt","writeUint32","write","trak","audioTrak","mvex","udtaBuffer","bytes","upperWordDuration","lowerWordDuration","audioDuration","audioTimeScale","mdia","audioConfig","id","mediaTime","minf","extension","dinf","stbl","config","configlen","sps","hSpacing","pixelRatio","vSpacing","avcc","mehd","trex","trep","mfhd","traf","tfhd","tfdt","trun","sampleCount","samples","idx","Task","range","callback","xhr","window","XMLHttpRequest","responseType","open","setRequestHeader","onload","status","response","remove","onerror","message","onabort","queue","update","abort","filter","_this","Queue","sended","wait","limit","run","readyState","send","cancel","util","findBox","root","pad","charstr","maxlen","ceil","chars","substring","toHex","hex","sum","rst","stscOffset","sample_order","chunk_index","samples_offset","chunk_start","chunk_offset","chunk_offset_sample","last_chunk","pop","seekSampleOffset","order","mdatStart","chunkOffset","seekSampleTime","startTime","every","sampleDuration","ct","seekOrderSampleByTime","itemDuration","seekTrakDuration","toFixed","MP4","chunkSize","CHUNK_SIZE","reqTimeLength","init","moovParse","bind","cache","bufferCache","Set","mdatCache","timeRage","canDownload","cut","moov","moovBox","traks","audioCodec","decoderConfig","typeOf","codecBox","ESDescriptor","Merge","_boxes","parseFloat","audioFrame","audioNextFrame","meta","getData","resFir","parsedFir","Parser","ftypBox","ftypBuffer","mdatBox","parsedSec","resSec","moovBuffer","nextBoxSec","parsedThi","resThi","catch","freeBuffer","audioIndexOrder","audioNextIndexOrder","audioStts","has","loadFragment","getSamplesByOrders","isNaN","dat","createFragment","moof","mdatData","resBuffers","add","_samples","addFragment","firstFlags","flags","MSE","codecs","replaying","mediaSource","MediaSource","URL","createObjectURL","updating","addEventListener","sourceBuffer","addSourceBuffer","shift","appendBuffer","state","endOfStream","isTypeSupported","isEnded","player","mp4","endTime","currentTime","getBufferedRange","mse","errorHandle","babelHelpers.typeof","errt","_backupURL","_mainURL","switchURL","_replay","m4aplayer","sniffer","mainURL","backupURL","preloadTime","m4a","hasEnded","list","poster","rule","pluginRule","loadData","nextOrder","timer","setTimeout","seek","packMeta","some","browser","isSupported","_start","segment","deepCopy","Blob","segPlay","sp","blob","log","currentSrc","paused","pause","play","buffered","mp5","timeRange","curTime","removeBuffer","cacheMaxTime","hasBuffered","clear","nextItem","newMusic","video","offline","sort","a","b","m4aCache","offlineVid","database","openDB","addData","myDB","ojstore","closeDB","install"],"mappings":"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"}