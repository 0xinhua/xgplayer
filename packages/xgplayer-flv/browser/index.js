window.FlvPlayer=function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(s,r,function(t){return e[t]}.bind(null,r));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}({"../xgplayer-flv-live/dist/index.js":
/*!****************************!*\
  !*** .-live/dist/index.js ***!
  \****************************/
/*! no static exports found */function(e,t,i){"use strict";var s;window,e.exports=(s=i(/*! xgplayer */"xgplayer"),function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(s,r,function(t){return e[t]}.bind(null,r));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=11)}([function(e,t,i){e.exports={Context:i(13).default,EVENTS:i(6).default,WORKER_COMMANDS:i(15).default,sniffer:i(16).default,isLe:i(17).default,UTF8:i(18).default,MediaInfo:i(5).default,MediaSample:i(19).default,MediaSegment:i(20).default,MediaSegmentList:i(21).default,AudioTrackMeta:i(7).AudioTrackMeta,VideoTrackMeta:i(7).VideoTrackMeta,AudioTrackSample:i(8).AudioTrackSample,VideoTrackSample:i(8).VideoTrackSample,Mse:i(22).default,Stream:i(23).default,Buffer:i(24).default,Crypto:i(27).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(){this.id=-1,this.sequenceNumber=0,this.samples=[],this.droppedSamples=[],this.length=0}reset(){this.sequenceNumber=0,this.samples=[],this.length=0}distroy(){this.reset(),this.id=-1}}t.default=s,t.AudioTrack=class extends s{constructor(){super(),this.TAG="AudioTrack",this.type="audio"}},t.VideoTrack=class extends s{constructor(){super(),this.TAG="VideoTrack",this.type="video",this.dropped=0}reset(){this.sequenceNumber=0,this.samples=[],this.length=0,this.dropped=0}},t.Tracks=class{constructor(){this.audioTrack=null,this.videoTrack=null}destroy(){this.audioTrack=null,this.videoTrack=null}}},function(e,t,i){e.exports={Nalunit:i(37).default,SpsParser:i(9).default,Compatibility:i(39).default}},function(e,t,i){e.exports={Track:i(1).default,Tracks:i(1).Tracks,AudioTrack:i(1).AudioTrack,VideoTrack:i(1).VideoTrack,XgBuffer:i(10).XgBuffer,RemuxBuffer:i(10).RemuxBuffer,PreSource:i(41).default}},function(e,t){e.exports=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s=e=>{for(let t in e)if(e.hasOwnProperty(t)&&null===e[t])return!1;return!0};class r{constructor(){this.mimeType=null,this.duration=null,this.hasVideo=null,this.video={codec:null,width:null,height:null,profile:null,level:null,frameRate:{fixed:!0,fps:25,fps_num:25e3,fps_den:1e3},chromaFormat:null,parRatio:{width:1,height:1}},this.hasAudio=null,this.audio={codec:null,sampleRate:null,sampleRateIndex:null,channelCount:null}}isComplete(){return r.isBaseInfoReady(this)&&r.isVideoReady(this)&&r.isAudioReady(this)}static isBaseInfoReady(e){return s(e)}static isVideoReady(e){return!e.hasVideo||s(e.video)}static isAudioReady(e){return!e.hasAudio||s(e.video)}}t.default=r},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s={LADER_START:"LOADER_START",LOADER_DATALOADED:"LOADER_DATALOADED",LOADER_COMPLETE:"LOADER_COMPLETE",LOADER_ERROR:"LOADER_ERROR"},r={DEMUX_START:"DEMUX_START",DEMUX_COMPLETE:"DEMUX_COMPLETE",DEMUX_ERROR:"DEMUX_ERROR",METADATA_PARSED:"METADATA_PARSED",VIDEO_METADATA_CHANGE:"VIDEO_METADATA_CHANGE",AUDIO_METADATA_CHANGE:"AUDIO_METADATA_CHANGE",MEDIA_INFO:"MEDIA_INFO"},a={REMUX_METADATA:"REMUX_METADATA",REMUX_MEDIA:"REMUX_MEDIA",MEDIA_SEGMENT:"MEDIA_SEGMENT",REMUX_ERROR:"REMUX_ERROR",INIT_SEGMENT:"INIT_SEGMENT",DETECT_CHANGE_STREAM:"DETECT_CHANGE_STREAM",RANDOM_ACCESS_POINT:"RANDOM_ACCESS_POINT"},n={SOURCE_UPDATE_END:"SOURCE_UPDATE_END"},o={RETRY_TIME_EXCEEDED:"RETRY_TIME_EXCEEDED"},d=Object.assign({},s,r,a,n,o),l=[],h=[];for(let e in d)d.hasOwnProperty(e)&&l.push(d[e]);for(let e in d)d.hasOwnProperty(e)&&h.push(d[e]);t.default={ALLEVENTS:d,HLS_EVENTS:o,REMUX_EVENTS:a,DEMUX_EVENTS:r,MSE_EVENTS:n,LOADER_EVENTS:s,FlvAllowedEvents:l,HlsAllowedEvents:h,CRYTO_EVENTS:{START_DECRYPT:"START_DECRYPT",DECRYPTED:"DECRYPTED"}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.AudioTrackMeta=class{constructor(e){const t={sampleRate:48e3,channelCount:2,codec:"mp4a.40.2",config:[41,401,136,0],duration:0,id:2,refSampleDuration:21,sampleRateIndex:3,timescale:1e3,type:"audio"};return e?Object.assign({},t,e):t}destroy(){this.init=null}},t.VideoTrackMeta=class{constructor(e){const t={avcc:null,sps:new Uint8Array(0),pps:new Uint8Array(0),chromaFormat:420,codec:"avc1.640020",codecHeight:720,codecWidth:1280,duration:0,frameRate:{fixed:!0,fps:25,fps_num:25e3,fps_den:1e3},id:1,level:"3.2",presentHeight:720,presentWidth:1280,profile:"High",refSampleDuration:40,parRatio:{height:1,width:1},timescale:1e3,type:"video"};return e?Object.assign({},t,e):t}destroy(){this.init=null,this.sps=null,this.pps=null}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(e){let t=s.getDefault();return e?Object.assign({},t,e):t}static getDefault(){return{dts:null,pts:null,data:new Uint8Array}}}t.AudioTrackSample=s;class r{constructor(e){let t=r.getDefault();return e?Object.assign({},t,e):t}static getDefault(){return{dts:null,pts:null,isKeyframe:!1,originDts:null,data:new Uint8Array}}}t.VideoTrackSample=r},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=(s=i(38))&&s.__esModule?s:{default:s};class a{static _ebsp2rbsp(e){let t=e,i=t.byteLength,s=new Uint8Array(i),r=0;for(let e=0;e<i;e++)e>=2&&3===t[e]&&0===t[e-1]&&0===t[e-2]||(s[r]=t[e],r++);return new Uint8Array(s.buffer,0,r)}static parseSPS(e){let t=a._ebsp2rbsp(e),i=new r.default(t);i.readByte();let s=i.readByte();i.readByte();let n=i.readByte();i.readUEG();let o=a.getProfileString(s),d=a.getLevelString(n),l=1,h=420,u=8;if((100===s||110===s||122===s||244===s||44===s||83===s||86===s||118===s||128===s||138===s||144===s)&&(3===(l=i.readUEG())&&i.readBits(1),l<=3&&(h=[0,420,422,444][l]),u=i.readUEG()+8,i.readUEG(),i.readBits(1),i.readBool())){let e=3!==l?8:12;for(let t=0;t<e;t++)i.readBool()&&(t<6?a._skipScalingList(i,16):a._skipScalingList(i,64))}i.readUEG();let c=i.readUEG();if(0===c)i.readUEG();else if(1===c){i.readBits(1),i.readSEG(),i.readSEG();let e=i.readUEG();for(let t=0;t<e;t++)i.readSEG()}i.readUEG(),i.readBits(1);let f=i.readUEG(),p=i.readUEG(),m=i.readBits(1);0===m&&i.readBits(1),i.readBits(1);let g=0,_=0,y=0,E=0;i.readBool()&&(g=i.readUEG(),_=i.readUEG(),y=i.readUEG(),E=i.readUEG());let v=1,A=1,S=0,T=!0,b=0,w=0;if(i.readBool()){if(i.readBool()){let e=i.readByte(),t=[1,12,10,16,40,24,20,32,80,18,15,64,160,4,3,2],s=[1,11,11,11,33,11,11,11,33,11,11,33,99,3,2,1];e>0&&e<16?(v=t[e-1],A=s[e-1]):255===e&&(v=i.readByte()<<8|i.readByte(),A=i.readByte()<<8|i.readByte())}if(i.readBool()&&i.readBool(),i.readBool()&&(i.readBits(4),i.readBool()&&i.readBits(24)),i.readBool()&&(i.readUEG(),i.readUEG()),i.readBool()){let e=i.readBits(32),t=i.readBits(32);T=i.readBool(),S=(b=t)/(w=2*e)}}let R=1;1===v&&1===A||(R=v/A);let D=0,L=0;0===l?(D=1,L=2-m):(D=3===l?1:2,L=(1===l?2:1)*(2-m));let O=16*(f+1),x=16*(p+1)*(2-m);O-=(g+_)*D,x-=(y+E)*L;let M=Math.ceil(O*R);return i.destroy(),i=null,{profile_string:o,level_string:d,bit_depth:u,chroma_format:h,chroma_format_string:a.getChromaFormatString(h),frame_rate:{fixed:T,fps:S,fps_den:w,fps_num:b},par_ratio:{width:v,height:A},codec_size:{width:O,height:x},present_size:{width:M,height:x}}}static _skipScalingList(e,t){let i=8,s=8,r=0;for(let a=0;a<t;a++)0!==s&&(s=(i+(r=e.readSEG())+256)%256),i=0===s?i:s}static getProfileString(e){switch(e){case 66:return"Baseline";case 77:return"Main";case 88:return"Extended";case 100:return"High";case 110:return"High10";case 122:return"High422";case 244:return"High444";default:return"Unknown"}}static getLevelString(e){return(e/10).toFixed(1)}static getChromaFormatString(e){switch(e){case 420:return"4:2:0";case 422:return"4:2:2";case 444:return"4:4:4";default:return"Unknown"}}static toVideoMeta(e){let t={};e&&e.codec_size&&(t.codecWidth=e.codec_size.width,t.codecHeight=e.codec_size.height,t.presentWidth=e.present_size.width,t.presentHeight=e.present_size.height),t.profile=e.profile_string,t.level=e.level_string,t.bitDepth=e.bit_depth,t.chromaFormat=e.chroma_format,t.parRatio={width:e.par_ratio.width,height:e.par_ratio.height},t.frameRate=e.frame_rate;let i=t.frameRate.fps_den,s=t.frameRate.fps_num;t.refSampleDuration=Math.floor(t.timescale*(i/s))}}t.default=a},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.XgBuffer=class{constructor(e){this.length=e||0,this.historyLen=e||0,this.array=[],this.offset=0}push(e){this.array.push(e),this.length+=e.byteLength,this.historyLen+=e.byteLength}shift(e){if(this.array.length<1)return new Uint8Array(0);if(void 0===e)return this._shiftBuffer();if(this.offset+e===this.array[0].length){let t=this.array[0].slice(this.offset,this.offset+e);return this.offset=0,this.array.shift(),this.length-=e,t}if(this.offset+e<this.array[0].length){let t=this.array[0].slice(this.offset,this.offset+e);return this.offset+=e,this.length-=e,t}let t=new Uint8Array(e),i=0;for(;this.array.length>0&&e>0;){if(this.offset+e<this.array[0].length){let s=this.array[0].slice(this.offset,this.offset+e);t.set(s,i),this.offset+=e,this.length-=e,e=0;break}{let s=this.array[0].length-this.offset;t.set(this.array[0].slice(this.offset,this.array[0].length),i),this.array.shift(),this.offset=0,i+=s,this.length-=s,e-=s}}return t}clear(){this.array=[],this.length=0,this.offset=0}destroy(){this.clear(),this.historyLen=0}_shiftBuffer(){return this.length-=this.array[0].length,this.offset=0,this.array.shift()}toInt(e,t){let i=0,s=this.offset+e;for(;s<this.offset+t+e;)s<this.array[0].length?i=256*i+this.array[0][s]:this.array[1]&&(i=256*i+this.array[1][s-this.array[0].length]),s++;return i}},t.RemuxBuffer=class{constructor(){this.video=[],this.audio=[]}destroy(){this.video=[],this.audio=[]}}},function(e,t,i){e.exports=i(12)},function(e,t,i){var s=n(i(4)),r=i(0),a=n(i(28));function n(e){return e&&e.__esModule?e:{default:e}}const o=r.EVENTS.FlvAllowedEvents;e.exports=class extends s.default{constructor(e){super(e),this.context=new r.Context(o),this.initEvents(),this.loaderCompleteTimer=null}start(){this.initFlv(),this.context.init(),super.start(this.flv.mse.url)}initFlvEvents(e){const t=this;e.once(r.EVENTS.REMUX_EVENTS.INIT_SEGMENT,()=>{if(s.default.util.addClass(t.root,"xgplayer-is-live"),!s.default.util.findDom(this.root,"xg-live")){const e=s.default.util.createDom("xg-live","正在直播",{},"xgplayer-live");t.controls.appendChild(e)}}),e.once(r.EVENTS.LOADER_EVENTS.LOADER_COMPLETE,()=>{t.paused?t.emit("ended"):this.loaderCompleteTimer=setInterval(()=>{const e=t.getBufferedRange()[1];Math.abs(t.currentTime-e)<.5&&(t.emit("ended"),window.clearInterval(this.loaderCompleteTimer))},200)})}initEvents(){this.on("timeupdate",()=>{this.loadData()}),this.on("seeking",()=>{const e=this.currentTime,t=this.getBufferedRange();(e>t[1]||e<t[0])&&this.flv.seek(this.currentTime)})}initFlv(){const e=this.context.registry("FLV_CONTROLLER",a.default)(this);this.initFlvEvents(e),this.flv=e}play(){return this._hasStart?this._destroy().then(()=>{this.context=new r.Context(o);const e=this.context.registry("FLV_CONTROLLER",a.default)(this);return this.initFlvEvents(e),this.flv=e,this.context.init(),super.start(e.mse.url),super.play()}):super.play()}pause(){super.pause(),this.flv&&this.flv.pause()}loadData(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.currentTime;this.flv&&this.flv.seek(e)}destroy(){this._destroy().then(()=>{super.destroy()})}_destroy(){return this.flv.mse.destroy().then(()=>{this.context.destroy(),this.flv=null,this.context=null,this.loaderCompleteTimer&&window.clearInterval(this.loaderCompleteTimer)})}get src(){return this.currentSrc}set src(e){this.player.config.url=e,this.paused?this.start(e):(this.pause(),this.once("pause",()=>{this.start(e)}),this.once("canplay",()=>{this.play()})),this.once("canplay",()=>{this.currentTime=0})}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=(s=i(5))&&s.__esModule?s:{default:s},a=i(14);const n="__TO__";t.default=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this._emitter=new a.EventEmitter,this._instanceMap={},this._clsMap={},this._inited=!1,this.mediaInfo=new r.default,this.allowedEvents=e,this._hooks={},this._emitCounter={}}getInstance(e){return this._instanceMap[e]||null}initInstance(e){if(this._clsMap[e]){for(var t=arguments.length,i=Array(t>1?t-1:0),s=1;s<t;s++)i[s-1]=arguments[s];const r=new(Function.prototype.bind.apply(this._clsMap[e],[null].concat(i)));return this._instanceMap[e]=r,r.init&&r.init(),r}throw new Error(`${e}未在context中注册`)}init(e){if(!this._inited){for(let t in this._clsMap)this._clsMap.hasOwnProperty(t)&&!this._instanceMap[t]&&this.initInstance(t,e);this._inited=!0}}registry(e,t){var i=this;const s=this._emitter,r=this._isMessageNameValid.bind(this),a=this;return this._clsMap[e]=class extends t{constructor(t,i,s){super(t,i,s),this.listeners={},this.onceListeners={},this.TAG=e,this._context=a}on(t,i){return r(t),this.listeners[t]?this.listeners[t].push(i):this.listeners[t]=[i],s.on(`${t}${n}${e}`,i),s.on(t,i)}before(e,t){r(e),a._hooks[e]?a._hooks[e].push(t):a._hooks[e]=[t]}once(t,i){return r(t),this.onceListeners[t]?this.onceListeners[t].push(i):this.onceListeners[t]=[i],s.once(`${t}${n}${e}`,i),s.once(t,i)}emit(e){if(r(e),a._emitCounter[e]){if(a._emitCounter[e]+=1,a._emitCounter[e]>1e4){let t="con",i="sole";window.console&&window[t+i].warn("invoke: ",e)}}else a._emitCounter[e]=1;const t=a._hooks?a._hooks[e]:null;if(t)for(let e=0,i=t.length;e<i;e++)(0,t[e])();for(var i=arguments.length,n=Array(i>1?i-1:0),o=1;o<i;o++)n[o-1]=arguments[o];return s.emit.apply(s,[e].concat(n))}emitTo(e,t){r(t);for(var i=arguments.length,a=Array(i>2?i-2:0),o=2;o<i;o++)a[o-2]=arguments[o];return s.emit.apply(s,[`${t}${n}${e}`].concat(a))}off(e,t){return r(e),s.off(e,t)}removeListeners(){const t=Object.prototype.hasOwnProperty.bind(this.listeners);for(let i in this.listeners)if(t(i)){const t=this.listeners[i]||[];for(let r=0;r<t.length;r++){const a=t[r];s.off(i,a),s.off(`${i}${n}${e}`,a)}}for(let i in this.onceListeners)if(t(i)){const t=this.onceListeners[i]||[];for(let r=0;r<t.length;r++){const a=t[r];s.off(i,a),s.off(`${i}${n}${e}`,a)}}}destroy(){if(this.removeListeners(),this.listeners={},delete a._instanceMap[e],super.destroy)return super.destroy()}},function(){for(var t=arguments.length,s=Array(t),r=0;r<t;r++)s[r]=arguments[r];return i.initInstance.apply(i,[e].concat(s))}}destroyInstances(){Object.keys(this._instanceMap).forEach(e=>{this._instanceMap[e].destroy&&this._instanceMap[e].destroy()})}destroy(){this._emitter=null,this.allowedEvents=[],this._clsMap=null,this._context=null,this._hooks=null,this._emitCounter={},this.destroyInstances()}_isMessageNameValid(e){if(!this.allowedEvents.indexOf(e)<0)throw new Error(`unregistered message name: ${e}`)}}},function(e,t,i){var s,r="object"==typeof Reflect?Reflect:null,a=r&&"function"==typeof r.apply?r.apply:function(e,t,i){return Function.prototype.apply.call(e,t,i)};s=r&&"function"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var n=Number.isNaN||function(e){return e!=e};function o(){o.init.call(this)}e.exports=o,o.EventEmitter=o,o.prototype._events=void 0,o.prototype._eventsCount=0,o.prototype._maxListeners=void 0;var d=10;function l(e){return void 0===e._maxListeners?o.defaultMaxListeners:e._maxListeners}function h(e,t,i,s){var r,a,n,o;if("function"!=typeof i)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof i);if(void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit("newListener",t,i.listener?i.listener:i),a=e._events),n=a[t]),void 0===n)n=a[t]=i,++e._eventsCount;else if("function"==typeof n?n=a[t]=s?[i,n]:[n,i]:s?n.unshift(i):n.push(i),(r=l(e))>0&&n.length>r&&!n.warned){n.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+n.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");d.name="MaxListenersExceededWarning",d.emitter=e,d.type=t,d.count=n.length,o=d,console&&console.warn&&console.warn(o)}return e}function u(){for(var e=[],t=0;t<arguments.length;t++)e.push(arguments[t]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,a(this.listener,this.target,e))}function c(e,t,i){var s={fired:!1,wrapFn:void 0,target:e,type:t,listener:i},r=u.bind(s);return r.listener=i,s.wrapFn=r,r}function f(e,t,i){var s=e._events;if(void 0===s)return[];var r=s[t];return void 0===r?[]:"function"==typeof r?i?[r.listener||r]:[r]:i?function(e){for(var t=new Array(e.length),i=0;i<t.length;++i)t[i]=e[i].listener||e[i];return t}(r):m(r,r.length)}function p(e){var t=this._events;if(void 0!==t){var i=t[e];if("function"==typeof i)return 1;if(void 0!==i)return i.length}return 0}function m(e,t){for(var i=new Array(t),s=0;s<t;++s)i[s]=e[s];return i}Object.defineProperty(o,"defaultMaxListeners",{enumerable:!0,get:function(){return d},set:function(e){if("number"!=typeof e||e<0||n(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");d=e}}),o.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},o.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||n(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},o.prototype.getMaxListeners=function(){return l(this)},o.prototype.emit=function(e){for(var t=[],i=1;i<arguments.length;i++)t.push(arguments[i]);var s="error"===e,r=this._events;if(void 0!==r)s=s&&void 0===r.error;else if(!s)return!1;if(s){var n;if(t.length>0&&(n=t[0]),n instanceof Error)throw n;var o=new Error("Unhandled error."+(n?" ("+n.message+")":""));throw o.context=n,o}var d=r[e];if(void 0===d)return!1;if("function"==typeof d)a(d,this,t);else{var l=d.length,h=m(d,l);for(i=0;i<l;++i)a(h[i],this,t)}return!0},o.prototype.addListener=function(e,t){return h(this,e,t,!1)},o.prototype.on=o.prototype.addListener,o.prototype.prependListener=function(e,t){return h(this,e,t,!0)},o.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);return this.on(e,c(this,e,t)),this},o.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);return this.prependListener(e,c(this,e,t)),this},o.prototype.removeListener=function(e,t){var i,s,r,a,n;if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);if(void 0===(s=this._events))return this;if(void 0===(i=s[e]))return this;if(i===t||i.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete s[e],s.removeListener&&this.emit("removeListener",e,i.listener||t));else if("function"!=typeof i){for(r=-1,a=i.length-1;a>=0;a--)if(i[a]===t||i[a].listener===t){n=i[a].listener,r=a;break}if(r<0)return this;0===r?i.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(i,r),1===i.length&&(s[e]=i[0]),void 0!==s.removeListener&&this.emit("removeListener",e,n||t)}return this},o.prototype.off=o.prototype.removeListener,o.prototype.removeAllListeners=function(e){var t,i,s;if(void 0===(i=this._events))return this;if(void 0===i.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==i[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete i[e]),this;if(0===arguments.length){var r,a=Object.keys(i);for(s=0;s<a.length;++s)"removeListener"!==(r=a[s])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=i[e]))this.removeListener(e,t);else if(void 0!==t)for(s=t.length-1;s>=0;s--)this.removeListener(e,t[s]);return this},o.prototype.listeners=function(e){return f(this,e,!0)},o.prototype.rawListeners=function(e){return f(this,e,!1)},o.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):p.call(e,t)},o.prototype.listenerCount=p,o.prototype.eventNames=function(){return this._eventsCount>0?s(this._events):[]}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.CONTEXT_COMOMANDS={ON:"on",ONCE:"once",OFF:"off",EMIT:"emit",DESTROY:"destroy"}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s=function(){const e=new ArrayBuffer(2);return new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]}(),r={get device(){let e=r.os;return e.isPc?"pc":e.isTablet?"tablet":"mobile"},get browser(){let e=navigator.userAgent.toLowerCase(),t={ie:/rv:([\d.]+)\) like gecko/,firfox:/firefox\/([\d.]+)/,chrome:/chrome\/([\d.]+)/,opera:/opera.([\d.]+)/,safari:/version\/([\d.]+).*safari/};return[].concat(Object.keys(t).filter(i=>t[i].test(e)))[0]},get os(){let e=navigator.userAgent,t=/(?:Windows Phone)/.test(e),i=/(?:SymbianOS)/.test(e)||t,s=/(?:Android)/.test(e),r=/(?:Firefox)/.test(e),a=/(?:iPad|PlayBook)/.test(e)||s&&!/(?:Mobile)/.test(e)||r&&/(?:Tablet)/.test(e),n=/(?:iPhone)/.test(e)&&!a;return{isTablet:a,isPhone:n,isAndroid:s,isPc:!n&&!s&&!i,isSymbian:i,isWindowsPhone:t,isFireFox:r}},get isLe(){return s}};t.default=r},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s=function(){const e=new ArrayBuffer(2);return new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]}();t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{static decode(e){const t=[],i=e;let r=0;const a=e.length;for(;r<a;)if(i[r]<128)t.push(String.fromCharCode(i[r])),++r;else{if(i[r]<192);else if(i[r]<224){if(s._checkContinuation(i,r,1)){const e=(31&i[r])<<6|63&i[r+1];if(e>=128){t.push(String.fromCharCode(65535&e)),r+=2;continue}}}else if(i[r]<240){if(s._checkContinuation(i,r,2)){const e=(15&i[r])<<12|(63&i[r+1])<<6|63&i[r+2];if(e>=2048&&55296!=(63488&e)){t.push(String.fromCharCode(65535&e)),r+=3;continue}}}else if(i[r]<248&&s._checkContinuation(i,r,3)){let e=(7&i[r])<<18|(63&i[r+1])<<12|(63&i[r+2])<<6|63&i[r+3];if(e>65536&&e<1114112){e-=65536,t.push(String.fromCharCode(e>>>10|55296)),t.push(String.fromCharCode(1023&e|56320)),r+=4;continue}}t.push(String.fromCharCode(65533)),++r}return t.join("")}static _checkContinuation(e,t,i){let s=e;if(t+i<s.length){for(;i--;)if(128!=(192&s[++t]))return!1;return!0}return!1}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(e){let t=s.getDefaultInf();if(!e||"[object Object]"!==Object.prototype.toString.call(e))return t;let i=Object.assign({},t,e);Object.entries(i).forEach(e=>{let[t,i]=e;this[t]=i})}static getDefaultInf(){return{dts:null,pts:null,duration:null,position:null,isRAP:!1,originDts:null}}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(){this.startDts=-1,this.endDts=-1,this.startPts=-1,this.endPts=-1,this.originStartDts=-1,this.originEndDts=-1,this.randomAccessPoints=[],this.firstSample=null,this.lastSample=null}addRAP(e){e.isRAP=!0,this.randomAccessPoints.push(e)}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this._type=e,this._list=[],this._lastAppendLocation=-1}get type(){return this._type}get length(){return this._list.length}isEmpty(){return 0===this._list.length}clear(){this._list=[],this._lastAppendLocation=-1}_searchNearestSegmentBefore(e){let t=this._list;if(0===t.length)return-2;let i=t.length-1,s=0,r=0,a=i,n=0;if(e<t[0].originDts)return-1;for(;r<=a;){if((s=r+Math.floor((a-r)/2))===i||e>t[s].lastSample.originDts&&e<t[s+1].originDts){n=s;break}t[s].originDts<e?r=s+1:a=s-1}return n}_searchNearestSegmentAfter(e){return this._searchNearestSegmentBefore(e)+1}append(e){let t=this._list,i=this._lastAppendLocation,s=0;-1!==i&&i<t.length&&e.originStartDts>=t[i].lastSample.originDts&&(i===t.length-1||i<t.length-1&&e.originStartDts<t[i+1].originStartDts)?s=i+1:t.length>0&&(s=this._searchNearestSegmentBefore(e.originStartDts)+1),this._lastAppendLocation=s,this._list.splice(s,0,e)}getLastSegmentBefore(e){let t=this._searchNearestSegmentBefore(e);return t>=0?this._list[t]:null}getLastSampleBefore(e){let t=this.getLastSegmentBefore(e);return null!==t?t.lastSample:null}getLastRAPBefore(e){let t=this._searchNearestSegmentBefore(e),i=this._list[t].randomAccessPoints;for(;0===i.length&&t>0;)t--,i=this._list[t].randomAccessPoints;return i.length>0?i[i.length-1]:null}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(e){this.configs=Object.assign({},e),this.container=this.configs.container,this.mediaSource=null,this.sourceBuffers={},this.preloadTime=this.configs.preloadTime||1,this.onSourceOpen=this.onSourceOpen.bind(this),this.onTimeUpdate=this.onTimeUpdate.bind(this),this.onUpdateEnd=this.onUpdateEnd.bind(this),this.onWaiting=this.onWaiting.bind(this)}init(){this.mediaSource=new self.MediaSource,this.mediaSource.addEventListener("sourceopen",this.onSourceOpen),this.container.src=URL.createObjectURL(this.mediaSource),this.url=this.container.src,this.container.addEventListener("timeupdate",this.onTimeUpdate),this.container.addEventListener("waiting",this.onWaiting)}onTimeUpdate(){this.emit("TIME_UPDATE",this.container)}onWaiting(){this.emit("WAITING",this.container)}onSourceOpen(){this.addSourceBuffers()}onUpdateEnd(){this.emit("SOURCE_UPDATE_END"),this.doAppend()}addSourceBuffers(){if("open"!==this.mediaSource.readyState)return;let e,t=this._context.getInstance("PRE_SOURCE_BUFFER"),i=this._context.getInstance("TRACKS");t=t.sources;let s=!1;for(let r=0,a=Object.keys(t).length;r<a;r++){let a=Object.keys(t)[r];if("audio"===a?e=i.audioTrack:"video"===a&&(e=i.videoTrack),e){let i="audio"===a?21:40;e.meta&&e.meta.refSampleDuration&&(i=e.meta.refSampleDuration),t[a].data.length>=this.preloadTime/i&&(s=!0)}}if(s){if(Object.keys(this.sourceBuffers).length>0)return;for(let e=0,i=Object.keys(t).length;e<i;e++){let i=Object.keys(t)[e],s=t[i],r="video"===i?"video/mp4;codecs="+s.mimetype:"audio/mp4;codecs="+s.mimetype,a=this.mediaSource.addSourceBuffer(r);this.sourceBuffers[i]=a,a.addEventListener("updateend",this.onUpdateEnd),this.doAppend()}}}doAppend(){let e=this._context.getInstance("PRE_SOURCE_BUFFER");if(e)for(let t=0;t<Object.keys(this.sourceBuffers).length;t++){let i=Object.keys(this.sourceBuffers)[t],s=this.sourceBuffers[i];if(!s.updating){let t=e.sources[i];if(t&&!t.inited)s.appendBuffer(t.init.buffer.buffer),t.inited=!0;else if(t){let e=t.data.shift();e&&s.appendBuffer(e.buffer.buffer)}}}}endOfStream(){const{readyState:e,activeSourceBuffers:t}=this.mediaSource;if("open"===e&&0===t.length)try{this.mediaSource.endOfStream()}catch(e){}}remove(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;for(let i=0;i<Object.keys(this.sourceBuffers).length;i++){let s=this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];s.updating||s.remove(t,e)}}removeBuffers(){const e=[];for(let t=0;t<Object.keys(this.sourceBuffers).length;t++){let i,r=this.sourceBuffers[Object.keys(this.sourceBuffers)[t]];r.removeEventListener("updateend",this.onUpdateEnd),i=r.updating?new Promise(e=>{const t=function(){let i=3;const a=()=>{r.updating?i>0?(setTimeout(a,200),i--):e():(s.clearBuffer(r),r.addEventListener("updateend",()=>{e()}))};setTimeout(a,200),r.removeEventListener("updateend",t)};r.addEventListener("updateend",t)}):new Promise(e=>{s.clearBuffer(r),r.addEventListener("updateend",()=>{e()})}),e.push(i)}return Promise.all(e)}destroy(){return this.removeBuffers().then(()=>{for(let e=0;e<Object.keys(this.sourceBuffers).length;e++){let t=this.sourceBuffers[Object.keys(this.sourceBuffers)[e]];this.mediaSource.removeSourceBuffer(t),delete this.sourceBuffers[Object.keys(this.sourceBuffers)[e]]}this.container.removeEventListener("timeupdate",this.onTimeUpdate),this.container.removeEventListener("waiting",this.onWaiting),this.mediaSource.removeEventListener("sourceopen",this.onSourceOpen),this.endOfStream(),window.URL.revokeObjectURL(this.url),this.url=null,this.configs={},this.container=null,this.mediaSource=null,this.sourceBuffers={},this.preloadTime=1})}static clearBuffer(e){const t=e.buffered;let i=.1;for(let e=0,s=t.length;e<s;e++)i=t.end(e);try{e.remove(0,i)}catch(e){}}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(e){if(!(e instanceof ArrayBuffer))throw new Error("data is invalid");this.buffer=e,this.dataview=new DataView(e),this.dataview.position=0}get length(){return this.buffer.byteLength}set position(e){this.dataview.position=e}get position(){return this.dataview.position}back(e){this.position-=e}skip(e){let t=Math.floor(e/4),i=e%4;for(let e=0;e<t;e++)s.readByte(this.dataview,4);i>0&&s.readByte(this.dataview,i)}static readByte(e,t,i){let s;switch(t){case 1:s=i?e.getInt8(e.position):e.getUint8(e.position);break;case 2:s=i?e.getInt16(e.position):e.getUint16(e.position);break;case 3:if(i)throw new Error("not supported for readByte 3");s=e.getUint8(e.position)<<16,s|=e.getUint8(e.position+1)<<8,s|=e.getUint8(e.position+2);break;case 4:s=i?e.getInt32(e.position):e.getUint32(e.position);break;case 8:if(i)throw new Error("not supported for readBody 8");s=e.getUint32(e.position)<<32,s|=e.getUint32(e.position+4);break;default:s=""}return e.position+=t,s}readUint8(){return s.readByte(this.dataview,1)}readUint16(){return s.readByte(this.dataview,2)}readUint24(){return s.readByte(this.dataview,3)}readUint32(){return s.readByte(this.dataview,4)}readUint64(){return s.readByte(this.dataview,8)}readInt8(){return s.readByte(this.dataview,1,!0)}readInt16(){return s.readByte(this.dataview,2,!0)}readInt32(){return s.readByte(this.dataview,4,!0)}writeUint32(e){return new Uint8Array([e>>>24&255,e>>>16&255,e>>>8&255,255&e])}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=(s=i(25))&&s.__esModule?s:{default:s};t.default=class{constructor(e){this.buffer=e||new Uint8Array(0)}write(){for(var e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];t.forEach(e=>{this.buffer=(0,r.default)(Uint8Array,this.buffer,e)})}static writeUint32(e){return new Uint8Array([e>>24,e>>16&255,e>>8&255,255&e])}static readAsInt(e){let t="";return e.forEach(e=>{t+=function(e){return e.toString(16).padStart(2,"0")}(e)}),parseInt(t,16)}}},function(e,t,i){var s,r=(s=i(26))&&s.__esModule?s:{default:s};e.exports=r.default},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){for(var t=0,i=arguments.length,s=Array(i>1?i-1:0),r=1;r<i;r++)s[r-1]=arguments[r];var a=!0,n=!1,o=void 0;try{for(var d,l=s[Symbol.iterator]();!(a=(d=l.next()).done);a=!0){var h=d.value;t+=h.length}}catch(e){n=!0,o=e}finally{try{!a&&l.return&&l.return()}finally{if(n)throw o}}var u=new e(t),c=0,f=!0,p=!1,m=void 0;try{for(var g,_=s[Symbol.iterator]();!(f=(g=_.next()).done);f=!0){var y=g.value;u.set(y,c),c+=y.length}}catch(e){p=!0,m=e}finally{try{!f&&_.return&&_.return()}finally{if(p)throw m}}return u}},function(e,t,i){var s;Object.defineProperty(t,"__esModule",{value:!0});const r=((s=i(6))&&s.__esModule?s:{default:s}).default.CRYTO_EVENTS;t.default=class{constructor(e){this.inputBuffer=e.inputbuffer,this.outputBuffer=e.outputbuffer,this.key=e.key,this.iv=e.iv,this.method=e.method,this.crypto=window.crypto||window.msCrypto}init(){this.on(r.START_DECRYPT,this.decript.bind(this))}decript(){this.aeskey?this.decriptData():this.crypto.subtle.importKey("raw",this.key.buffer,{name:"AES-CBC"},!1,["encrypt","decrypt"]).then(e=>{this.aeskey=e,this.decriptData()})}decriptData(){let e=this._context.getInstance(this.inputBuffer),t=this._context.getInstance(this.outputBuffer),i=e.shift();i&&this.crypto.subtle.decrypt({name:"AES-CBC",iv:this.iv.buffer},this.aeskey,i).then(e=>{t.push(new Uint8Array(e)),this.emit(r.DECRYPTED),this.decriptData(i)})}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s=h(i(29)),r=i(32),a=i(34),n=i(3),o=i(0),d=i(2),l=h(i(4));function h(e){return e&&e.__esModule?e:{default:e}}const u=o.EVENTS.REMUX_EVENTS,c=o.EVENTS.DEMUX_EVENTS,f=o.EVENTS.LOADER_EVENTS,p=o.EVENTS.MSE_EVENTS;class m{warn(){}}t.default=class{constructor(e){this.TAG="FLVController",this._player=e,this.state={initSegmentArrived:!1,randomAccessPoints:[]},this.bufferClearTimer=null}init(){this._context.registry("FETCH_LOADER",r.FetchLoader),this._context.registry("LOADER_BUFFER",n.XgBuffer),this._context.registry("FLV_DEMUXER",a.FlvDemuxer),this._context.registry("TRACKS",n.Tracks),this._context.registry("MP4_REMUXER",s.default.Mp4Remuxer),this._context.registry("PRE_SOURCE_BUFFER",n.PreSource),!1!==this._player.config.compatibility&&this._context.registry("COMPATIBILITY",d.Compatibility),this._context.registry("LOGGER",m),this.mse=this._context.registry("MSE",o.Mse)({container:this._player.video}),this._handleTimeUpdate=this._handleTimeUpdate.bind(this),this.initListeners()}initListeners(){this.on(f.LOADER_DATALOADED,this._handleLoaderDataLoaded.bind(this)),this.on(f.LOADER_ERROR,this._handleNetworkError.bind(this)),this.on(c.MEDIA_INFO,this._handleMediaInfo.bind(this)),this.on(c.METADATA_PARSED,this._handleMetadataParsed.bind(this)),this.on(c.DEMUX_COMPLETE,this._handleDemuxComplete.bind(this)),this.on(c.DEMUX_ERROR,this._handleDemuxError.bind(this)),this.on(u.INIT_SEGMENT,this._handleAppendInitSegment.bind(this)),this.on(u.MEDIA_SEGMENT,this._handleMediaSegment.bind(this)),this.on(u.RANDOM_ACCESS_POINT,this._handleAddRAP.bind(this)),this.on(p.SOURCE_UPDATE_END,this._handleSourceUpdateEnd.bind(this)),this._player.on("timeupdate",this._handleTimeUpdate)}_handleMediaInfo(){this._context.mediaInfo||this.emit(c.DEMUX_ERROR,new Error("failed to get mediainfo"))}_handleLoaderDataLoaded(){this.emitTo("FLV_DEMUXER",c.DEMUX_START)}_handleMetadataParsed(e){this.emit(u.REMUX_METADATA,e)}_handleDemuxComplete(){this.emit(u.REMUX_MEDIA)}_handleAppendInitSegment(){this.state.initSegmentArrived=!0,this.mse.addSourceBuffers()}_handleMediaSegment(){this.mse.addSourceBuffers(),this.mse.doAppend()}_handleSourceUpdateEnd(){const e=this._player.currentTime,t=this._player.video,i=this._player.config.preloadTime||5,{length:s}=t.buffered;if(0===s)return;const r=t.buffered.end(s-1);r-e>2*i&&(this._player.currentTime=r-i),this.mse.doAppend()}_handleTimeUpdate(){const e=this._player.currentTime,t=this._player.video;let i=t.buffered;if(!i||!i.length)return;let s=[0,0],r=t.currentTime;if(i)for(let e=0,t=i.length;e<t&&(s[0]=i.start(e),s[1]=i.end(e),!(s[0]<=r&&r<=s[1]));e++);const a=s[0],n=s[1];if(r>n||r<a)t.currentTime=a;else if(e-a>10||i.length>1){if(this.bufferClearTimer||!this.state.randomAccessPoints.length)return;let t=1/0;for(let i=0;i<this.state.randomAccessPoints.length;i++){const s=Math.ceil(this.state.randomAccessPoints[i]/1e3);if(s>e-10)break;t=s}this.mse.remove(Math.min(t,e-10,n-10),0),this.bufferClearTimer=setTimeout(()=>{this.bufferClearTimer=null},5e3)}}_handleNetworkError(e,t){this._player.emit("error",new l.default.Errors("network",this._player.config.url)),this._onError(f.LOADER_ERROR,e,t,!0)}_handleDemuxError(e,t,i){void 0===i&&(i=!1),this._player.emit("error",new l.default.Errors("parse",this._player.config.url)),this._onError(f.LOADER_ERROR,e,t,i)}_handleAddRAP(e){this.state.randomAccessPoints&&this.state.randomAccessPoints.push(e)}_onError(e,t,i,s){let r={errorType:e,errorDetails:`[${t}]: ${i.message}`,errorFatal:s||!1};this._player.emit("FLV_ERROR",r)}seek(){this.state.initSegmentArrived||this.loadData()}loadData(){this.emit(f.LADER_START,this._player.config.url)}pause(){const e=this._context.getInstance("FETCH_LOADER");e&&e.cancel()}destroy(){this._player.off("timeupdate",this._handleTimeUpdate),this._player=null,this.mse=null,this.state.randomAccessPoints=[]}}},function(e,t,i){e.exports={Mp4Remuxer:i(30).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=i(0),a=(s=i(31))&&s.__esModule?s:{default:s};const n=r.EVENTS.REMUX_EVENTS;class o{constructor(){this._dtsBase=0,this._isDtsBaseInited=!1,this._audioNextDts=null,this._videoNextDts=null,this._videoSegmentList=new r.MediaSegmentList("video"),this._audioSegmentList=new r.MediaSegmentList("audio");const{browser:e}=r.sniffer;this._fillSilenceFrame="ie"===e,this.isFirstVideo=!0,this.isFirstAudio=!0,this.videoAllDuration=0,this.audioAllDuration=0}init(){this.on(n.REMUX_MEDIA,this.remux.bind(this)),this.on(n.REMUX_METADATA,this.onMetaDataReady.bind(this)),this.on(n.DETECT_CHANGE_STREAM,this.resetDtsBase.bind(this))}destroy(){this._dtsBase=-1,this._dtsBaseInited=!1,this._videoNextDts=null,this._audioNextDts=null,this._videoSegmentList.clear(),this._audioSegmentList.clear(),this._videoSegmentList=null,this._audioSegmentList=null}remux(){const{audioTrack:e,videoTrack:t}=this._context.getInstance("TRACKS");!this._isDtsBaseInited&&this.calcDtsBase(e,t),this._remuxVideo(t),this._remuxAudio(e)}resetDtsBase(){this._dtsBase=0,this._dtsBaseInited=!1}seek(){this._videoNextDts=null,this._audioNextDts=null,this._videoSegmentList.clear(),this._audioSegmentList.clear()}onMetaDataReady(e){let t;if("audio"===e){const{audioTrack:e}=this._context.getInstance("TRACKS");t=e}else{const{videoTrack:e}=this._context.getInstance("TRACKS");t=e}let i=this._context.getInstance("PRE_SOURCE_BUFFER"),s=i.getSource(e);s||(s=i.createSource(e)),s.mimetype=t.meta.codec,s.init=this.remuxInitSegment(e,t.meta),this.emit(n.INIT_SEGMENT,e)}remuxInitSegment(e,t){let i=new r.Buffer,s=a.default.ftyp(),n=a.default.moov({type:e,meta:t});return i.write(s,n),i}calcDtsBase(e,t){if(!e.samples.length&&!t.samples.length)return;let i=1/0,s=1/0;e.samples&&e.samples.length&&(i=e.samples[0].dts),t.samples&&t.samples.length&&(s=t.samples[0].dts),this._dtsBase=Math.min(i,s),this._isDtsBaseInited=!0}_remuxVideo(e){const t=e;if(!e.samples||!e.samples.length)return;let{samples:i}=t,s=-1,o=null;const d=[],l={samples:[]};let h=1e4;for(;i.length&&h-- >0;){const e=i.shift(),{isKeyframe:t,options:r}=e;if(!this.isFirstAudio&&r&&r.meta){o=this.remuxInitSegment("video",r.meta),r.meta=null,i.unshift(e),r.isContinue||this.resetDtsBase();break}let a,h,u=e.dts-this._dtsBase;-1===s&&(s=u),void 0!==e.pts&&(a=(h=e.pts-this._dtsBase)-u),void 0!==e.cts&&(h=e.cts+u,a=e.cts);let c={buffer:[],size:0};l.samples.push(c),c.buffer.push(e.data),c.size+=e.data.byteLength;let f=0;f=e.duration?e.duration:i.length>=1?i[0].dts-this._dtsBase-u:d.length>=1?d[d.length-1].duration:this.videoMeta.refSampleDuration,this.videoAllDuration+=f,console.log(`dts ${u}`,`pts ${h}`,t,`duration ${f}`),d.push({dts:u,cts:a,pts:h,data:e.data,size:e.data.byteLength,isKeyframe:t,duration:f,flags:{isLeading:0,dependsOn:t?2:1,isDependedOn:t?1:0,hasRedundancy:0,isNonSync:t?0:1},originDts:u,type:"video"}),t&&this.emit(n.RANDOM_ACCESS_POINT,h)}let u=new r.Buffer;if(d.length){const e=a.default.moof({id:t.meta.id,time:s,samples:d}),i=a.default.mdat(l);u.write(e,i),this.writeToSource("video",u)}if(o&&(this.writeToSource("video",o),i.length))return t.samples=i,this._remuxVideo(t);this.isFirstVideo=!1,this.emit(n.MEDIA_SEGMENT,"video");const c=d[d.length-1];this._videoNextDts=c.dts+c.duration,t.samples=[],t.length=0}_remuxAudio(e){const{samples:t}=e;let i=-1,s=[],o=null;const d={samples:[]};if(!t||!t.length)return;let l=1e4,h=!1;for(;t.length&&l-- >0;){let e=t.shift();const{data:r,options:a}=e;if(!this.isFirstAudio&&a&&a.meta){o=this.remuxInitSegment("audio",a.meta),a.meta=null,t.unshift(e),a.isContinue||this.resetDtsBase();break}let n=e.dts-this._dtsBase;const l=n;h||(i=n,h=!0);let u=0;u=e.duration?e.duration:this.audioMeta.refSampleDurationFixed?this.audioMeta.refSampleDurationFixed:t.length>=1?t[0].dts-this._dtsBase-n:s.length>=1?s[s.length-1].duration:this.audioMeta.refSampleDuration,this.audioAllDuration+=u;const c={dts:n,pts:n,cts:0,size:r.byteLength,duration:e.duration?e.duration:u,flags:{isLeading:0,dependsOn:2,isDependedOn:1,hasRedundancy:0,isNonSync:0},isKeyframe:!0,originDts:l,type:"audio"};let f={buffer:[],size:0};f.buffer.push(r),f.size+=r.byteLength,d.samples.push(f),s.push(c)}const u=new r.Buffer;if(s.length){const t=a.default.moof({id:e.meta.id,time:i,samples:s}),r=a.default.mdat(d);u.write(t,r),this.writeToSource("audio",u)}if(o&&(this.writeToSource("audio",o),t.length))return e.samples=t,this._remuxAudio(e);this.isFirstAudio=!1,this.emit(n.MEDIA_SEGMENT,"audio",u);const c=s[s.length-1];this._videoNextDts=c.dts+c.duration,e.samples=[],e.length=0}writeToSource(e,t){let i=this._context.getInstance("PRE_SOURCE_BUFFER"),s=i.getSource(e);s||(s=i.createSource(e)),s.data.push(t)}initSilentAudio(e,t){const i=o.getSilentFrame(this._audioMeta.channelCount);return{dts:e,pts:e,cts:0,duration:t,unit:i,size:i.byteLength,originDts:e,type:"video"}}get videoMeta(){return this._context.getInstance("TRACKS").videoTrack.meta}get audioMeta(){return this._context.getInstance("TRACKS").audioTrack.meta}static getSilentFrame(e){return 1===e?new Uint8Array([0,200,0,128,35,128]):2===e?new Uint8Array([33,0,73,144,2,25,0,35,128]):3===e?new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,142]):4===e?new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,128,44,128,8,2,56]):5===e?new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,56]):6===e?new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,0,178,0,32,8,224]):null}}t.default=o},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s=i(0);class r{static size(e){return s.Buffer.writeUint32(e)}static initBox(e,t){const i=new s.Buffer;for(var a=arguments.length,n=Array(a>2?a-2:0),o=2;o<a;o++)n[o-2]=arguments[o];return i.write.apply(i,[r.size(e),r.type(t)].concat(n)),i.buffer}static extension(e,t){return new Uint8Array([e,t>>16&255,t>>8&255,255&t])}static ftyp(){return r.initBox(24,"ftyp",new Uint8Array([105,115,111,109,0,0,0,1,105,115,111,109,97,118,99,49]))}static moov(e){let t,{type:i,meta:s}=e,a=8,n=r.mvhd(s.duration,s.timescale);t="video"===i?r.videoTrak(s):r.audioTrak(s);let o=r.mvex(s.duration,s.timescale||1e3,s.id);return[n,t,o].forEach(e=>{a+=e.byteLength}),r.initBox(a,"moov",n,t,o)}static mvhd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,t>>>24&255,t>>>16&255,t>>>8&255,255&t,e>>>24&255,e>>>16&255,e>>>8&255,255&e,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255]);return r.initBox(8+i.length,"mvhd",new Uint8Array(i))}static videoTrak(e){let t=8,i=r.tkhd({id:1,duration:e.duration,timescale:e.timescale||1e3,width:e.presentWidth,height:e.presentHeight,type:"video"}),s=r.mdia({type:"video",timescale:e.timescale||1e3,duration:e.duration,avcc:e.avcc,parRatio:e.parRatio,width:e.presentWidth,height:e.presentHeight});return[i,s].forEach(e=>{t+=e.byteLength}),r.initBox(t,"trak",i,s)}static audioTrak(e){let t=8,i=r.tkhd({id:2,duration:e.duration,timescale:e.timescale||1e3,width:0,height:0,type:"audio"}),s=r.mdia({type:"audio",timescale:e.timescale||1e3,duration:e.duration,channelCount:e.channelCount,samplerate:e.sampleRate,config:e.config});return[i,s].forEach(e=>{t+=e.byteLength}),r.initBox(t,"trak",i,s)}static tkhd(e){let t=e.id,i=e.duration,s=e.width,a=e.height,n=new Uint8Array([0,0,0,7,0,0,0,0,0,0,0,0,t>>>24&255,t>>>16&255,t>>>8&255,255&t,0,0,0,0,i>>>24&255,i>>>16&255,i>>>8&255,255&i,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,s>>>8&255,255&s,0,0,a>>>8&255,255&a,0,0]);return r.initBox(8+n.byteLength,"tkhd",n)}static edts(e){let t=new s.Buffer,i=e.duration,a=e.mediaTime;return t.write(r.size(36),r.type("edts")),t.write(r.size(28),r.type("elst")),t.write(new Uint8Array([0,0,0,1,i>>24&255,i>>16&255,i>>8&255,255&i,a>>24&255,a>>16&255,a>>8&255,255&a,0,0,0,1])),t.buffer}static mdia(e){let t=8,i=r.mdhd(e.timescale,e.duration),s=r.hdlr(e.type),a=r.minf(e);return[i,s,a].forEach(e=>{t+=e.byteLength}),r.initBox(t,"mdia",i,s,a)}static mdhd(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3,t=arguments[1],i=new Uint8Array([0,0,0,0,0,0,0,0,e>>>24&255,e>>>16&255,e>>>8&255,255&e,t>>>24&255,t>>>16&255,t>>>8&255,255&t,85,196,0,0]);return r.initBox(12+i.byteLength,"mdhd",r.extension(0,0),i)}static hdlr(e){let t=[0,0,0,0,0,0,0,0,118,105,100,101,0,0,0,0,0,0,0,0,0,0,0,0,86,105,100,101,111,72,97,110,100,108,101,114,0];return"audio"===e&&(t.splice.apply(t,[8,4].concat([115,111,117,110])),t.splice.apply(t,[24,13].concat([83,111,117,110,100,72,97,110,100,108,101,114,0]))),r.initBox(8+t.length,"hdlr",new Uint8Array(t))}static minf(e){let t=8,i="video"===e.type?r.vmhd():r.smhd(),s=r.dinf(),a=r.stbl(e);return[i,s,a].forEach(e=>{t+=e.byteLength}),r.initBox(t,"minf",i,s,a)}static vmhd(){return r.initBox(20,"vmhd",new Uint8Array([0,0,0,1,0,0,0,0,0,0,0,0]))}static smhd(){return r.initBox(16,"smhd",new Uint8Array([0,0,0,0,0,0,0,0]))}static dinf(){let e=new s.Buffer;return e.write(r.size(36),r.type("dinf"),r.size(28),r.type("dref"),new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,12,117,114,108,32,0,0,0,1])),e.buffer}static stbl(e){let t=8,i=r.stsd(e),s=r.stts(),a=r.stsc(),n=r.stsz(),o=r.stco();return[i,s,a,n,o].forEach(e=>{t+=e.byteLength}),r.initBox(t,"stbl",i,s,a,n,o)}static stsd(e){let t;return t="audio"===e.type?r.mp4a(e):r.avc1(e),r.initBox(16+t.byteLength,"stsd",r.extension(0,0),new Uint8Array([0,0,0,1]),t)}static mp4a(e){let t=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,e.channelCount,0,16,0,0,0,0,e.samplerate>>8&255,255&e.samplerate,0,0]),i=r.esds(e.config);return r.initBox(8+t.byteLength+i.byteLength,"mp4a",t,i)}static esds(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[43,146,8,0];const t=e.length;let i=new s.Buffer,a=new Uint8Array([0,0,0,0,3,23+t,0,1,0,4,15+t,64,21,0,0,0,0,0,0,0,0,0,0,0,5].concat([t]).concat(e).concat([6,1,2]));return i.write(r.size(8+a.byteLength),r.type("esds"),a),i.buffer}static avc1(e){let t=new s.Buffer,i=e.width,a=e.height,n=e.parRatio.height,o=e.parRatio.width,d=e.avcc,l=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,i>>8&255,255&i,a>>8&255,255&a,0,72,0,0,0,72,0,0,0,0,0,0,0,1,18,100,97,105,108,121,109,111,116,105,111,110,47,104,108,115,46,106,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,17,17]),h=new Uint8Array([0,28,156,128,0,45,198,192,0,45,198,192]),u=new Uint8Array([n>>24,n>>16&255,n>>8&255,255&n,o>>24,o>>16&255,o>>8&255,255&o]);return t.write(r.size(40+l.byteLength+d.byteLength+h.byteLength),r.type("avc1"),l,r.size(8+d.byteLength),r.type("avcC"),d,r.size(20),r.type("btrt"),h,r.size(16),r.type("pasp"),u),t.buffer}static stts(){let e=new Uint8Array([0,0,0,0,0,0,0,0]);return r.initBox(16,"stts",e)}static stsc(){let e=new Uint8Array([0,0,0,0,0,0,0,0]);return r.initBox(16,"stsc",e)}static stco(){let e=new Uint8Array([0,0,0,0,0,0,0,0]);return r.initBox(16,"stco",e)}static stsz(){let e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0]);return r.initBox(20,"stsz",e)}static mvex(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1];let t=arguments[2],i=new s.Buffer,a=s.Buffer.writeUint32(e);return i.write(r.size(56),r.type("mvex"),r.size(16),r.type("mehd"),r.extension(0,0),a,r.trex(t)),i.buffer}static trex(e){let t=new Uint8Array([0,0,0,0,e>>24,e>>16&255,e>>8&255,255&e,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1]);return r.initBox(8+t.byteLength,"trex",t)}static moof(e){let t=8,i=r.mfhd(),s=r.traf(e);return[i,s].forEach(e=>{t+=e.byteLength}),r.initBox(t,"moof",i,s)}static mfhd(){let e=s.Buffer.writeUint32(r.sequence);return r.sequence+=1,r.initBox(16,"mfhd",r.extension(0,0),e)}static traf(e){let t=8,i=r.tfhd(e.id),s=r.tfdt(e.time),a=r.sdtp(e),n=r.trun(e,a.byteLength);return[i,s,n,a].forEach(e=>{t+=e.byteLength}),r.initBox(t,"traf",i,s,n,a)}static tfhd(e){let t=s.Buffer.writeUint32(e);return r.initBox(16,"tfhd",r.extension(0,0),t)}static tfdt(e){return r.initBox(16,"tfdt",r.extension(0,0),s.Buffer.writeUint32(e))}static trun(e,t){let i=new s.Buffer,a=s.Buffer.writeUint32(e.samples.length),n=s.Buffer.writeUint32(92+16*e.samples.length+t);return i.write(r.size(20+16*e.samples.length),r.type("trun"),new Uint8Array([0,0,15,1]),a,n),e.samples.forEach(e=>{const t=e.flags;i.write(new Uint8Array([e.duration>>>24&255,e.duration>>>16&255,e.duration>>>8&255,255&e.duration,e.size>>>24&255,e.size>>>16&255,e.size>>>8&255,255&e.size,t.isLeading<<2|t.dependsOn,t.isDependedOn<<6|t.hasRedundancy<<4|t.isNonSync,0,0,e.cts>>>24&255,e.cts>>>16&255,e.cts>>>8&255,255&e.cts]))}),i.buffer}static sdtp(e){let t=new s.Buffer;return t.write(r.size(12+e.samples.length),r.type("sdtp"),r.extension(0,0)),e.samples.forEach(e=>{const i=e.flags,s=i.isLeading<<6|i.dependsOn<<4|i.isDependedOn<<2|i.hasRedundancy;t.write(new Uint8Array([s]))}),t.buffer}static mdat(e){let t=new s.Buffer,i=8;e.samples.forEach(e=>{i+=e.size}),t.write(r.size(i),r.type("mdat"));let a=new Uint8Array(i),n=0;return a.set(t.buffer,n),n+=8,e.samples.forEach(e=>{e.buffer.forEach(e=>{a.set(e,n),n+=e.byteLength})}),a}}r.type=e=>new Uint8Array([e.charCodeAt(0),e.charCodeAt(1),e.charCodeAt(2),e.charCodeAt(3)]),r.sequence=1,t.default=r},function(e,t,i){e.exports={FetchLoader:i(33).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s=i(0).EVENTS.LOADER_EVENTS;t.default=class{constructor(e){this.configs=Object.assign({},e),this.url=null,this.status=0,this.error=null,this._reader=null,this._canceled=!1,this._destroyed=!1,this.readtype=this.configs.readtype,this.buffer=this.configs.buffer||"LOADER_BUFFER",this._loaderTaskNo=0}init(){this.on(s.LADER_START,this.load.bind(this))}static get type(){return"loader"}load(e,t){let i=this;this.url=e,this._canceled=!1;let r=this.getParams(t);return i.loading=!0,fetch(this.url,r).then((function(e){if(e.ok)return i.status=e.status,i._onFetchResponse(e);i.loading=!1,i.emit(s.LOADER_ERROR,i.TAG,new Error("invalid response."))})).catch((function(e){throw i.loading=!1,i.emit(s.LOADER_ERROR,i.TAG,e),new Error(e.message)}))}_onFetchResponse(e){let t=this,i=this._context.getInstance(this.buffer);this._loaderTaskNo++;let r=this._loaderTaskNo;if(!0===e.ok)switch(this.readtype){case 2:e.json().then(e=>{t.loading=!1,t._canceled||t._destroyed||(i?(i.push(e),t.emit(s.LOADER_COMPLETE,i)):t.emit(s.LOADER_COMPLETE,e))});break;case 1:e.text().then(e=>{t.loading=!1,t._canceled||t._destroyed||(i?(i.push(e),t.emit(s.LOADER_COMPLETE,i)):t.emit(s.LOADER_COMPLETE,e))});break;case 3:e.arrayBuffer().then(e=>{t.loading=!1,t._canceled||t._destroyed||(i?(i.push(new Uint8Array(e)),t.emit(s.LOADER_COMPLETE,i)):t.emit(s.LOADER_COMPLETE,e))});break;case 0:default:return this._onReader(e.body.getReader(),r)}}_onReader(e,t){let i=this._context.getInstance(this.buffer);if(!i&&this._reader||this._destroyed)try{this._reader.cancel()}catch(e){}if(this._reader=e,!1===this.loading)return;let r=this;this._reader&&this._reader.read().then((function(a){if(a.done)return r.loading=!1,r.status=0,void r.emit(s.LOADER_COMPLETE,i);if(!r._canceled&&!r._destroyed)return i.push(a.value),r.emit(s.LOADER_DATALOADED,i),r._onReader(e,t);if(r._reader)try{r._reader.cancel()}catch(e){}})).catch(e=>{r.loading=!1,r.emit(s.LOADER_ERROR,r.TAG,e)})}getParams(e){let t=Object.assign({},e),i=new Headers,s={method:"GET",headers:i,mode:"cors",cache:"default"};if("object"==typeof this.configs.headers){let e=this.configs.headers;for(let t in e)e.hasOwnProperty(t)&&i.append(t,e[t])}if("object"==typeof t.headers){let e=t.headers;for(let t in e)e.hasOwnProperty(t)&&i.append(t,e[t])}return!1===t.cors&&(s.mode="same-origin"),t.withCredentials&&(s.credentials="include"),s}cancel(){if(this._reader){try{this._reader.cancel()}catch(e){}this._reader=null,this.loading=!1,this._canceled=!0}}destroy(){this._destroyed=!0,this.cancel()}}},function(e,t,i){e.exports={M3U8Parser:i(35).default,TsDemuxer:i(36).default,Playlist:i(42).default,FlvDemuxer:i(43).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{static parse(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i={duration:0};if(!e||!e.split)return;let r=e.split(/\r|\n/),a=(r=r.filter(e=>e)).shift();if(!a.match("#EXTM3U"))throw new Error('Invalid m3u8 file: not "#EXTM3U"');a=r.shift();let n=!1;for(;a;){let e=a.match(/#(.[A-Z|-]*):(.*)/),o=a.match(/#(.[A-Z|-]*)/);if(o&&e&&e.length>2)switch(e[1]){case"EXT-X-VERSION":i.version=parseInt(e[2]);break;case"EXT-X-MEDIA-SEQUENCE":i.sequence=parseInt(e[2]);break;case"EXT-X-TARGETDURATION":i.targetduration=parseFloat(e[2]);break;case"EXTINF":s.parseFrag(e,r,i,t,n),n=!1;break;case"EXT-X-KEY":s.parseDecrypt(e[2],i)}if(o&&o.length>1)switch(o[1]){case"EXT-X-DISCONTINUITY":n=!0}a=r.shift()}return i}static parseFrag(e,t,i,s,r){i.frags||(i.frags=[]);let a={start:i.duration,duration:1e3*parseFloat(e[2])};i.duration+=a.duration;let n=t.shift();n.match(/#(.*):(.*)/)&&(n=t.shift()),n.length>0&&"/"===n.charAt(0)&&s.match(/.*\/\/.*\.\w+/g)&&(s=s.match(/.*\/\/.*\.\w+/g)[0]),n.match(/.*:\/\/.*/)?a.url=n:a.url=s+n,a.discontinue=r,i.frags.push(a)}static parseURL(e){let t="",i=e.match(/(.*\/).*\.m3u8/);if(i&&i.length>0)for(let e=0;e<i.length;e++)i[e].match(/.*\/$/g)&&i[e].length>t.length&&(t=i[e]);return t}static parseDecrypt(e,t){t.encrypt={};let i=e.split(",");for(let e in i){let s=i[e];if(s.match(/METHOD=(.*)/)&&(t.encrypt.method=s.match(/METHOD=(.*)/)[1]),s.match(/URI="(.*)"/)&&(t.encrypt.uri=s.match(/URI="(.*)"/)[1]),s.match(/IV=0x(.*)/)){let e=s.match(/IV=0x(.*)/)[1],i=Math.ceil(e.length/2);t.encrypt.ivb=new Uint8Array(i);for(let s=i-1;s>=0;s--){let i=parseInt(e.substr(2*s,2),16);t.encrypt.ivb[s]=i}t.encrypt.iv=e}}}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s=i(2),r=i(3),a=i(0);const n=a.EVENTS.DEMUX_EVENTS,o={1:["video","MPEG-1"],2:["video","MPEG-2"],27:["video","AVC.H264"],234:["video","VC-1"],3:["audio","MPEG-1"],4:["audio","MPEG-2"],15:["audio","MPEG-2.AAC"],17:["audio","MPEG-4.AAC"],128:["audio","LPCM"],129:["audio","AC3"],6:["audio","AC3"],130:["audio","DTS"],131:["audio","Dolby TrueHD"],132:["audio","AC3-Plus"],133:["audio","DTS-HD"],134:["audio","DTS-MA"],161:["audio","AC3-Plus-SEC"],162:["audio","DTS-HD-SEC"]};class d{constructor(e){this.configs=Object.assign({},e),this.demuxing=!1,this.pat=[],this.pmt=[],this._hasVideoMeta=!1,this._hasAudioMeta=!1}init(){this.on(n.DEMUX_START,this.demux.bind(this))}demux(e){if(this.demuxing)return;let t=this.inputBuffer,i={pat:[],pmt:[]},s={};for(;t.length>=188;){for(t.length>=1&&71!==t.array[0][t.offset]&&this.emit(n.DEMUX_ERROR,this.TAG,new Error(`Untrust sync code: ${t.array[0][t.offset]}, try to recover;`),!1);t.length>=1&&71!==t.array[0][t.offset];)t.shift(1);let e=t.shift(188),r=new a.Stream(e.buffer),o={};d.read(r,o,i),o.pes?(s[o.header.pid]||(s[o.header.pid]=[]),s[o.header.pid].push(o.pes),o.pes.ES.buffer=[o.pes.ES.buffer]):s[o.header.pid]&&s[o.header.pid][s[o.header.pid].length-1].ES.buffer.push(o.payload.stream)}let r=e,o=e;for(let e=0;e<Object.keys(s).length;e++){let t=s[Object.keys(s)[e]];for(let i=0;i<t.length;i++)t[i].id=Object.keys(s)[e],t[i].ES.buffer=d.Merge(t[i].ES.buffer),"audio"===t[i].type?(this.pushAudioSample(t[i],r),r={}):"video"===t[i].type&&(this.pushVideoSample(t[i],o),o={})}this._hasAudioMeta&&this.emit(n.DEMUX_COMPLETE,"audio"),this._hasVideoMeta&&this.emit(n.DEMUX_COMPLETE,"video")}pushAudioSample(e,t){let i;this._tracks.audioTrack?i=this._tracks.audioTrack:(this._tracks.audioTrack=new r.AudioTrack,i=this._tracks.audioTrack);let s=new a.AudioTrackMeta({audioSampleRate:e.ES.frequence,sampleRate:e.ES.frequence,channelCount:e.ES.channel,codec:"mp4a.40."+e.ES.audioObjectType,config:e.ES.audioConfig,id:2,sampleRateIndex:e.ES.frequencyIndex});s.refSampleDuration=Math.floor(1024/s.audioSampleRate*s.timescale);let o=d.compaireMeta(i.meta,s,!0);this._hasAudioMeta&&o||(i.meta=s,this._hasAudioMeta=!0,this.emit(n.METADATA_PARSED,"audio"));let l=new Uint8Array(e.ES.buffer.buffer.slice(e.ES.buffer.position,e.ES.buffer.length)),h=parseInt(e.pts/90),u=parseInt(e.pts/90),c=new a.AudioTrackSample({dts:h,pts:u,data:l,options:t});i.samples.push(c)}pushVideoSample(e,t){let i,o=s.Nalunit.getNalunits(e.ES.buffer),l=new a.VideoTrackMeta;this._tracks.videoTrack?i=this._tracks.videoTrack:(this._tracks.videoTrack=new r.VideoTrack,i=this._tracks.videoTrack);let h=0,u=!1,c=!1;for(let e=0;e<o.length;e++){let t=o[e];if(t.sps){u=t,i.sps=t.body,l.chromaFormat=u.sps.chroma_format,l.codec="avc1.";for(var f=1;f<4;f++){var p=u.body[f].toString(16);p.length<2&&(p="0"+p),l.codec+=p}l.codecHeight=u.sps.codec_size.height,l.codecWidth=u.sps.codec_size.width,l.frameRate=u.sps.frame_rate,l.id=1,l.level=u.sps.level_string,l.presentHeight=u.sps.present_size.height,l.presentWidth=u.sps.present_size.width,l.profile=u.sps.profile_string,l.refSampleDuration=Math.floor(l.timescale*(u.sps.frame_rate.fps_den/u.sps.frame_rate.fps_num)),l.sarRatio=u.sps.sar_ratio?u.sps.sar_ratio:u.sps.par_ratio}else t.pps?(i.pps=t.body,c=t):h+=4+t.body.byteLength}if(u&&c){l.avcc=s.Nalunit.getAvcc(u.body,c.body);let e=d.compaireMeta(i.meta,l,!0);this._hasVideoMeta&&e||(t?t.meta=Object.assign({},l):t={meta:Object.assign({},l)},i.meta=l,this._hasVideoMeta=!0,this.emit(n.METADATA_PARSED,"video"))}let m=new Uint8Array(h),g=0,_=!1;for(let e=0;e<o.length;e++){let t=o[e],i=t.body.byteLength;t.idr&&(_=!0),t.pps||t.sps||(m.set(new Uint8Array([i>>>24&255,i>>>16&255,i>>>8&255,255&i]),g),g+=4,m.set(t.body,g),g+=i)}let y=new a.VideoTrackSample({dts:parseInt(e.dts/90),pts:parseInt(e.pts/90),cts:(e.pts-e.dts)/90,originDts:e.dts,isKeyframe:_,data:m,options:t});i.samples.push(y)}destory(){this.off(n.DEMUX_START,this.demux),this.configs={},this.demuxing=!1,this.pat=[],this.pmt=[],this._hasVideoMeta=!1,this._hasAudioMeta=!1}static compaireArray(e,t,i){let s=0,r=0;if("Uint8Array"===i?(s=e.byteLength,r=t.byteLength):"Array"===i&&(s=e.length,r=t.length),s!==r)return!1;for(let i=0;i<s;i++)if(e[i]!==t[i])return!1;return!0}static compaireMeta(e,t,i){if(!e||!t)return!1;for(let s=0,r=Object.keys(e).length;s<r;s++){let r=e[Object.keys(e)[s]],a=t[Object.keys(e)[s]];if("object"!=typeof r){if(i&&"duration"!==Object.keys(e)[s]&&"refSampleDuration"!==Object.keys(e)[s]&&"refSampleDurationFixed"!==Object.keys(e)[s]&&r!==a)return!1}else if(void 0!==r.byteLength){if(void 0===a.byteLength)return!1;if(!d.compaireArray(r,a,"Uint8Array"))return!1}else if(void 0!==r.length){if(void 0===a.length)return!1;if(!d.compaireArray(r,a,"Array"))return!1}else if(!d.compaireMeta(r,a))return!1}return!0}static Merge(e){let t,i=0,s=0;for(let t=0;t<e.length;t++)i+=e[t].length-e[t].position;t=new Uint8Array(i);for(let i=0;i<e.length;i++){let r=e[i];t.set(new Uint8Array(r.buffer,r.position),s),s+=r.length-r.position}return new a.Stream(t.buffer)}static read(e,t,i){d.readHeader(e,t),d.readPayload(e,t,i),"MEDIA"!==t.header.packet||1!==t.header.payload||t.unknownPIDs||(t.pes=d.PES(t))}static readPayload(e,t,i){let s=t.header.pid;switch(s){case 0:d.PAT(e,t,i);break;case 1:d.CAT(e,t,i);break;case 2:d.TSDT(e,t,i);break;case 8191:break;default:if(i.pat.some(e=>e.pid===s))d.PMT(e,t,i);else{let r=i.pmt?i.pmt.filter(e=>e.pid===s):[];r.length>0?d.Media(e,t,o[r[0].streamType][0]):t.unknownPIDs=!0}}}static readHeader(e,t){let i={};i.sync=e.readUint8();let s=e.readUint16();i.error=s>>>15,i.payload=s>>>14&1,i.priority=s>>>13&1,i.pid=8191&s,s=e.readUint8(),i.scrambling=s>>6&3,i.adaptation=s>>4&3,i.continuity=15&s,i.packet=0===i.pid?"PAT":"MEDIA",t.header=i}static PAT(e,t,i){let s={},r=e.readUint8();e.skip(r),r=e.readUint8(),s.tabelID=r,r=e.readUint16(),s.error=r>>>7,s.zero=r>>>6&1,s.sectionLength=4095&r,s.streamID=e.readUint16(),s.current=1&e.readUint8(),s.sectionNumber=e.readUint8(),s.lastSectionNumber=e.readUint8();let a=(s.sectionLength-9)/4,n=[];for(let t=0;t<a;t++){let t=e.readUint16(),i=8191&e.readUint16();n.push({program:t,pid:i,type:0===t?"network":"mapPID"})}n.length>0&&(i.pat=i.pat.concat(n)),s.list=n,s.program=e.readUint16(),s.pid=8191&e.readUint16(),t.payload=s}static PMT(e,t,i){let s={};t.header.packet="PMT";let r=e.readUint8();e.skip(r),r=e.readUint8(),s.tableID=r,r=e.readUint16(),s.sectionLength=4095&r,s.program=e.readUint16(),s.current=1&e.readUint8(),s.order=e.readUint8(),s.lastOrder=e.readUint8(),s.PCR_PID=8191&e.readUint16(),s.programLength=4095&e.readUint16();let a=(s.sectionLength-13)/5,n=[];for(let t=0;t<a;t++)n.push({streamType:e.readUint8(),pid:8191&e.readUint16(),es:4095&e.readUint16()});s.list=n,this.pmt||(this.pmt=[]),i.pmt=this.pmt.concat(n.map(e=>({pid:e.pid,es:e.es,streamType:e.streamType,program:s.program}))),t.payload=s}static Media(e,t,i){let s=t.header,r={};if(s.type=i,3===s.adaptation&&(r.adaptationLength=e.readUint8(),r.adaptationLength>0)){let t=e.readUint8();r.discontinue=t>>>7,r.access=t>>>6&1,r.priority=t>>>5&1,r.PCR=t>>>4&1,r.OPCR=t>>>3&1,r.splicePoint=t>>>2&1,r.transportPrivate=t>>>1&1,r.adaptationField=1&t;let i=e.position;if(1===r.PCR&&(r.programClockBase=e.readUint32()<<1,t=e.readUint16(),r.programClockBase|=t>>>15,r.programClockExtension=511&t),1===r.OPCR&&(r.originProgramClockBase=e.readUint32()<<1,t=e.readUint16(),r.originProgramClockBase+=t>>>15,r.originProgramClockExtension=511&t),1===r.splicePoint&&(r.spliceCountdown=e.readUint8()),1===r.transportPrivate){let t=e.readUint8(),i=[];for(let s=0;s<t;s++)i.push(e.readUint8())}if(1===r.adaptationField){let t=e.readUint8(),i=e.readUint8(),s=e.position,a=i>>>6&1,n=i>>>5&1;1==i>>>7&&(i=e.readUint16(),r.ltwValid=i>>>15,r.ltwOffset=61439&i),1===a&&(i=e.readUint24(),r.piecewiseRate=4194303&i),1===n&&(i=e.readInt8(),r.spliceType=i>>>4,r.dtsNextAU1=i>>>1&7,r.marker1=1&i,i=e.readUint16(),r.dtsNextAU2=i>>>1,r.marker2=1&i,i=e.readUint16(),r.dtsNextAU3=i),e.skip(t-1-(e.position-s))}let s=r.adaptationLength-1-(e.position-i);e.skip(s)}r.stream=new a.Stream(e.buffer.slice(e.position)),t.payload=r}static PES(e){let t={},i=e.payload.stream;if(1!==i.readUint24())t.ES={},t.ES.buffer=i;else{let e=i.readUint8();e>=224&&e<=239&&(t.type="video"),e>=192&&e<=223&&(t.type="audio");let s=i.readUint16();if(t.packetLength=s,"video"!==t.type&&"audio"!==t.type)throw new Error("format is not supported");{let e=i.readUint8();if(2!=e>>>6)throw new Error("error when parse pes header");e=i.readUint8(),t.ptsDTSFlag=e>>>6,t.escrFlag=e>>>5&1,t.esRateFlag=e>>>4&1,t.dsmFlag=e>>>3&1,t.additionalFlag=e>>>2&1,t.crcFlag=e>>>1&1,t.extensionFlag=1&e,t.pesHeaderLength=i.readUint8();let s=t.pesHeaderLength;if(2===t.ptsDTSFlag){let r=[];e=i.readUint8(),r.push(e>>>1&7),e=i.readUint16(),r.push(e>>>1),e=i.readUint16(),r.push(e>>>1),t.pts=r[0]<<30|r[1]<<15|r[2],s-=5,"video"===t.type&&(t.dts=t.pts)}if(3===t.ptsDTSFlag){let r=[];e=i.readUint8(),r.push(e>>>1&7),e=i.readUint16(),r.push(e>>>1),e=i.readUint16(),r.push(e>>>1),t.pts=r[0]<<30|r[1]<<15|r[2];let a=[];e=i.readUint8(),a.push(e>>>1&7),e=i.readUint16(),a.push(e>>>1),e=i.readUint16(),a.push(e>>>1),t.dts=a[0]<<30|a[1]<<15|a[2],s-=10}if(1===t.escrFlag){let r=[],a=[];e=i.readUint8(),r.push(e>>>3&7),r.push(3&e),e=i.readUint16(),r.push(e>>>13),r.push(3&e),e=i.readUint16(),r.push(e>>>13),a.push(3&e),e=i.readUint8(),a.push(e>>>1),t.escr=300*(r[0]<<30|r[1]<<28|r[2]<<15|r[3]<<13|r[4])+(a[0]<<7|a[1]),s-=6}if(1===t.esRateFlag&&(e=i.readUint24(),t.esRate=e>>>1&4194303,s-=3),1===t.dsmFlag)throw new Error("not support DSM_trick_mode");if(1===t.additionalFlag&&(e=i.readUint8(),t.additionalCopyInfo=127&e,s-=1),1===t.crcFlag&&(t.pesCRC=i.readUint16(),s-=2),1===t.extensionFlag)throw new Error("not support extension");s>0&&i.skip(s),t.ES=d.ES(i,t.type)}}return t}static ES(e,t){let i,s={};if("video"===t){if(1!==(i=e.readUint32())&&(e.back(4),1!==(i=e.readUint24())))throw new Error("h264 nal header parse failed");e.skip(2),s.buffer=e}else{if("audio"!==t)throw new Error(`ES ${t} is not supported`);{if((i=e.readUint16())>>>4!=4095)throw new Error("aac ES parse Error");const t=[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350];s.id=0==(i>>>3&1)?"MPEG-4":"MPEG-2",s.layer=i>>>1&3,s.absent=1&i,i=e.readUint16(),s.audioObjectType=1+(i>>>14&3),s.profile=s.audioObjectType-1,s.frequencyIndex=i>>>10&15,s.frequence=t[s.frequencyIndex],s.channel=i>>>6&7,s.frameLength=(3&i)<<11|e.readUint16()>>>5,d.getAudioConfig(s),e.skip(1),s.buffer=e}}return s}static TSDT(e,t,i){t.payload={}}static CAT(e,t,i){let s={};s.tableID=e.readUint8();let r=e.readUint16();s.sectionIndicator=r>>>7,s.sectionLength=4095&r,e.skip(2),r=e.readUint8(),s.version=r>>>3,s.currentNextIndicator=1&r,s.sectionNumber=e.readUint8(),s.lastSectionNumber=e.readUint8();let a=(this.sectionLength-9)/4,n=[];for(let e=0;e<a;e++)n.push({});s.crc32=e.readUint32(),t.payload=s}static getAudioConfig(e){let t,i,s=navigator.userAgent.toLowerCase();/firefox/i.test(s)?e.frequencyIndex>=6?(e.audioObjectType=5,t=new Array(4),i=e.frequencyIndex-3):(e.audioObjectType=2,t=new Array(2),i=e.frequencyIndex):-1!==s.indexOf("android")?(e.audioObjectType=2,t=new Array(2),i=e.frequencyIndex):(e.audioObjectType=5,t=new Array(4),e.frequencyIndex>=6?i=e.frequencyIndex-3:(1===e.channel&&(e.audioObjectType=2,t=new Array(2)),i=e.frequencyIndex)),t[0]=e.audioObjectType<<3,t[0]|=(14&e.frequencyIndex)>>1,t[1]=(1&e.frequencyIndex)<<7,t[1]|=e.channel<<3,5===e.audioObjectType&&(t[1]|=(14&i)>>1,t[2]=(1&i)<<7,t[2]|=8,t[3]=0),e.audioConfig=t}get inputBuffer(){return this._context.getInstance(this.configs.inputbuffer)}get _tracks(){return this._context.getInstance("TRACKS")}}t.default=d},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=(s=i(9))&&s.__esModule?s:{default:s};class a{static getNalunits(e){if(e.length-e.position<4)return[];let t=e.dataview,i=e.position;return 1===t.getInt32(i)||0===t.getInt16(i)&&1===t.getInt8(i+2)?a.getAnnexbNals(e):a.getAvccNals(e)}static getAnnexbNals(e){let t=[],i=a.getHeaderPositionAnnexB(e),s=i.pos,r=s;for(;s<e.length-4;){let n=e.buffer.slice(s,s+i.headerLength);i.pos===e.position&&e.skip(i.headerLength),r=(i=a.getHeaderPositionAnnexB(e)).pos;let o={header:n,body:new Uint8Array(e.buffer.slice(s+n.byteLength,r))};a.analyseNal(o),t.push(o),e.skip(r-e.position),s=r}return t}static getAvccNals(e){let t=[];for(;e.position<e.length-4;){let i=e.dataview.getInt32();if(!(e.length-e.position>=i))break;{let s=e.buffer.slice(e.position,e.position+4);e.skip(4);let r=e.buffer.slice(e.position,e.position+i);e.skip(i);let n={header:s,body:r};a.analyseNal(n),t.push(n)}}return t}static analyseNal(e){switch(31&e.body[0]){case 1:e.ndr=!0;break;case 5:e.idr=!0;break;case 6:break;case 7:e.sps=r.default.parseSPS(e.body);break;case 8:e.pps=!0}}static getHeaderPositionAnnexB(e){let t=e.position,i=0;for(;3!==i&&4!==i&&t<e.length-4;)0===e.dataview.getInt16(t)?1===e.dataview.getInt16(t+2)?i=4:1===e.dataview.getInt8(t+2)?i=3:t++:t++;return t===e.length-4&&(0===e.dataview.getInt16(t)?1===e.dataview.getInt16(t+2)&&(i=4):(t++,0===e.dataview.getInt16(t)&&1===e.dataview.getInt8(t)?i=3:t=e.length)),{pos:t,headerLength:i}}static getAvcc(e,t){let i=new Uint8Array(e.byteLength+t.byteLength+11);i[0]=1,i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=255,i[5]=225;let s=6;return i.set(new Uint8Array([e.byteLength>>>8&255,255&e.byteLength]),s),s+=2,i.set(e,s),i[s+=e.byteLength]=1,s++,i.set(new Uint8Array([t.byteLength>>>8&255,255&t.byteLength]),s),s+=2,i.set(t,s),i}}t.default=a},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this.TAG="Golomb",this._buffer=e,this._bufferIndex=0,this._totalBytes=e.byteLength,this._totalBits=8*e.byteLength,this._currentWord=0,this._currentWordBitsLeft=0}destroy(){this._buffer=null}_fillCurrentWord(){let e=this._totalBytes-this._bufferIndex,t=Math.min(4,e),i=new Uint8Array(4);i.set(this._buffer.subarray(this._bufferIndex,this._bufferIndex+t)),this._currentWord=new DataView(i.buffer).getUint32(0),this._bufferIndex+=t,this._currentWordBitsLeft=8*t}readBits(e){let t=Math.min(this._currentWordBitsLeft,e),i=this._currentWord>>>32-t;if(e>32)throw new Error("Cannot read more than 32 bits at a time");return this._currentWordBitsLeft-=t,this._currentWordBitsLeft>0?this._currentWord<<=t:this._totalBytes-this._bufferIndex>0&&this._fillCurrentWord(),(t=e-t)>0&&this._currentWordBitsLeft?i<<t|this.readBits(t):i}readBool(){return 1===this.readBits(1)}readByte(){return this.readBits(8)}_skipLeadingZero(){let e;for(e=0;e<this._currentWordBitsLeft;e++)if(0!=(this._currentWord&2147483648>>>e))return this._currentWord<<=e,this._currentWordBitsLeft-=e,e;return this._fillCurrentWord(),e+this._skipLeadingZero()}readUEG(){let e=this._skipLeadingZero();return this.readBits(e+1)-1}readSEG(){let e=this.readUEG();return 1&e?e+1>>>1:-1*(e>>>1)}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=i(0),a=(s=i(40))&&s.__esModule?s:{default:s};const{REMUX_EVENTS:n,LOADER_EVENTS:o}=r.EVENTS;class d{constructor(){this.nextAudioDts=0,this.nextVideoDts=0,this.lastAudioSamplesLen=0,this.lastVideoSamplesLen=0,this.lastVideoDts=void 0,this.lastAudioDts=void 0,this.allAudioSamplesCount=0,this.allVideoSamplesCount=0,this._firstAudioSample=null,this._firstVideoSample=null,this.filledAudioSamples=[],this.filledVideoSamples=[],this.videoLastSample=null,this.audioLastSample=null,this._videoLargeGap=0,this._audioLargeGap=0}init(){this.before(n.REMUX_MEDIA,this.doFix.bind(this))}reset(){this.nextAudioDts=null,this.nextVideoDts=null,this.lastAudioSamplesLen=0,this.lastVideoSamplesLen=0,this.lastVideoDts=void 0,this.lastAudioDts=void 0,this.videoLastSample=null,this.audioLastSample=null,this.filledAudioSamples=[],this.filledVideoSamples=[]}doFix(){const{isFirstAudioSamples:e,isFirstVideoSamples:t}=this.getFirstSample();this.recordSamplesCount(),this._firstVideoSample&&this.fixRefSampleDuration(this.videoTrack.meta,this.videoTrack.samples),this._firstAudioSample&&this.fixRefSampleDuration(this.audioTrack.meta,this.audioTrack.samples);const{changed:i,changedIdx:s}=d.detactChangeStream(this.videoTrack.samples);i&&!e?this.fixChangeStreamVideo(s):this.doFixVideo(t);const{changed:r,changedIdx:a}=d.detactChangeStream(this.audioTrack.samples);r?this.fixChangeStreamAudio(a):this.doFixAudio(e),this.removeInvalidSamples()}doFixVideo(e,t){let{samples:i,meta:s}=this.videoTrack;for(let e=0,t=i.length;e<t;e++){const t=i[e];t.originDts=t.dts}if(s.frameRate&&!1===s.frameRate.fixed)return;if(!i||!i.length||!this._firstVideoSample)return;const r=i[0];if(this._videoLargeGap>0&&d.doFixLargeGap(i,this._videoLargeGap),r.dts!==this._firstVideoSample.dts&&t&&(t&&(this.nextVideoDts=t),this._videoLargeGap=this.nextVideoDts-r.dts,d.doFixLargeGap(i,this._videoLargeGap)),e&&this._firstAudioSample){const e=this._firstVideoSample.dts,t=e-this._firstAudioSample.dts;if(t>2*s.refSampleDuration){const a=Math.floor(t/s.refSampleDuration);for(let t=0;t<a;t++){const a=Object.assign({},r);a.dts=e-(t+1)*s.refSampleDuration,a.pts=a.dts+a.cts,i.unshift(a),this.filledVideoSamples.push({dts:a.dts,size:a.data.byteLength})}}else t<-2*s.refSampleDuration&&(this._videoLargeGap=-1*t,d.doFixLargeGap(i,-1*t))}const a=i.pop();if(i.length&&(i[i.length-1].duration=a.dts-i[i.length-1].dts),this.videoLastSample){const e=this.videoLastSample;e.duration=r.dts-e.dts,i.unshift(this.videoLastSample)}this.videoLastSample=a,this.videoTrack.samples=i}doFixAudio(e,t){let{samples:i,meta:s}=this.audioTrack;if(!i||!i.length)return;for(let e=0,t=i.length;e<t;e++){const t=i[e];t.originDts=t.dts}const r=i.length,n=a.default.getSilentFrame(s.codec,s.channelCount),o=this._firstAudioSample,l=i[0];if(this._audioLargeGap>0&&d.doFixLargeGap(i,this._audioLargeGap),l.dts!==this._firstAudioSample.dts&&(t||d.detectLargeGap(this.nextAudioDts,l))&&(t&&(this.nextAudioDts=t),this._audioLargeGap=this.nextAudioDts-l.dts,d.doFixLargeGap(i,this._audioLargeGap)),this._firstVideoSample&&e){const e=this._firstVideoSample.pts?this._firstVideoSample.pts:this._firstVideoSample.dts+this._firstVideoSample.cts,t=o.dts-e;if(t>s.refSampleDuration){const t=Math.floor((o.dts-e)/s.refSampleDuration);for(let e=0;e<t;e++){const t={data:n,datasize:n.byteLength,dts:o.dts-(e+1)*s.refSampleDuration,filtered:0};i.unshift(t),this.filledAudioSamples.push({dts:t.dts,size:t.data.byteLength})}}else t<-1*s.refSampleDuration&&(this._audioLargeGap=-1*t,d.doFixLargeGap(i,-1*t))}let h;const u=i[0].dts;if(this.nextAudioDts){h=u-this.nextAudioDts;const e=Math.abs(h);if(e>s.refSampleDuration&&1===r&&1===this.lastAudioSamplesLen&&(s.refSampleDurationFixed=void 0),h>2*s.refSampleDuration)if(1===r&&1===this.lastAudioSamplesLen)s.refSampleDurationFixed=void 0!==s.refSampleDurationFixed?s.refSampleDurationFixed+h:s.refSampleDuration+h;else{const e=Math.floor(h/s.refSampleDuration);for(let t=0;t<e;t++){const e=u-(t+1)*s.refSampleDuration,r=Object.assign({},i[0],{dts:e>this.nextAudioDts?e:this.nextAudioDts});this.filledAudioSamples.push({dts:r.dts,size:r.data.byteLength}),this.audioTrack.samples.unshift(r)}}else e<=s.refSampleDuration&&e>0?(i[0].dts=this.nextAudioDts,i[0].pts=this.nextAudioDts):h<0&&d.doFixLargeGap(i,-1*h)}const c=i[i.length-1].originDts,f=i[i.length-1].originDts,p=i.length>=2?c-i[i.length-2].originDts:s.refSampleDuration;this.lastAudioSamplesLen=r,this.nextAudioDts=s.refSampleDurationFixed?f+s.refSampleDurationFixed:f+p,this.lastAudioDts=f,i[i.length-1].duration=p;for(let e=0,t=i.length;e<t;e++){const t=i[e],s=i[e+1];if(!s)break;const r=s.dts-t.dts;i[e].duration=r}this.audioTrack.samples=d.sortAudioSamples(i)}fixChangeStreamVideo(e){const{samples:t,meta:i}=this.videoTrack,s=0===e?this.getStreamChangeStart(t[0]):t[e-1].dts,r=t[e].dts;if(Math.abs(s-r)<=2*i.refSampleDuration)return t[e].options?t[e].options.isContinue=!0:t[e].options={isContinue:!0},this.doFixVideo(!1);const a=t.slice(0,e),n=t.slice(e),o=t[0],d=n[0].dts-o.dts,l=o.options&&o.options.start+d?o.options.start:null;this.videoTrack.samples=t.slice(0,e),this.doFixVideo(!1),this.videoTrack.samples=t.slice(e),this.doFixVideo(!1,l),this.videoTrack.samples=a.concat(n)}fixChangeStreamAudio(e){const{samples:t,meta:i}=this.audioTrack,s=0===e?this.getStreamChangeStart(t[0]):t[e-1].dts,r=t[e].dts;if(Math.abs(s-r)<=2*i.refSampleDuration)return t[e].options?t[e].options.isContinue=!0:t[e].options={isContinue:!0},this.doFixAudio(!1);const a=t.slice(0,e),n=t.slice(e),o=t[0],d=n[0].dts-o.dts,l=o.options&&o.options.start+d?o.options.start:null;this.audioTrack.samples=a,this.doFixAudio(!1),this.audioTrack.samples=n,this.doFixAudio(!1,l),this.audioTrack.samples=a.concat(n)}getFirstSample(){let{samples:e}=this.videoTrack,{samples:t}=this.audioTrack,i=!1,s=!1;return!this._firstVideoSample&&e.length&&(this._firstVideoSample=d.findFirstVideoSample(e),i=!0),!this._firstAudioSample&&t.length&&(this._firstAudioSample=d.findFirstAudioSample(t),s=!0),{isFirstVideoSamples:i,isFirstAudioSamples:s}}fixRefSampleDuration(e,t){const i="video"===e.type,s=i?this.allVideoSamplesCount:this.allAudioSamplesCount,r=i?this._firstVideoSample.dts:this._firstAudioSample.dts,a=i?this.filledVideoSamples.length:this.filledAudioSamples.length;if(!e.refSampleDuration||e.refSampleDuration<=0||Number.isNaN(e.refSampleDuration)){if(t.length>=1){const i=t[t.length-1].dts;e.refSampleDuration=Math.floor((i-r)/(s+a-1))}}else if(e.refSampleDuration&&t.length>=5){const i=(t[t.length-1].dts-t[0].dts)/(t.length-1);e.refSampleDuration=Math.floor(Math.abs(e.refSampleDuration-i)<=5?e.refSampleDuration:i)}}recordSamplesCount(){const{audioTrack:e,videoTrack:t}=this;this.allAudioSamplesCount+=e.samples.length,this.allVideoSamplesCount+=t.samples.length}removeInvalidSamples(){const{_firstVideoSample:e,_firstAudioSample:t}=this;this.audioTrack.samples=this.audioTrack.samples.filter((e,i)=>e===t||e.dts>t.dts),this.videoTrack.samples=this.videoTrack.samples.filter((t,i)=>t===e||t.dts>e.dts)}getStreamChangeStart(e){return e.options&&e.options.start?e.options.start-this.dtsBase:1/0}static sortAudioSamples(e){return 1===e.length?e:e.sort((e,t)=>e.dts-t.dts)}static findFirstAudioSample(e){return e&&0!==e.length?d.sortAudioSamples(e)[0]:null}static findFirstVideoSample(e){if(!e.length)return null;const t=e.sort((e,t)=>e.dts-t.dts);for(let e=0,i=t.length;e<i;e++)if(t[e].isKeyframe)return t[e]}static detectLargeGap(e,t){if(null===e)return;const i=t.dts||0,s=e-i>=1e3||i-e>=1e3,r=t.options&&t.options.discontinue;return s||r}static doFixLargeGap(e,t){for(let i=0,s=e.length;i<s;i++){const s=e[i];s.dts+=t,s.pts&&(s.pts+=t)}}static detactChangeStream(e){let t=!1,i=-1;for(let s=0,r=e.length;s<r;s++)if(e[s].options&&e[s].options.meta){t=!0,i=s;break}return{changed:t,changedIdx:i}}get tracks(){return this._context.getInstance("TRACKS")}get audioTrack(){return this.tracks?this.tracks.audioTrack:null}get videoTrack(){return this.tracks?this.tracks.videoTrack:null}get dtsBase(){const e=this._context.getInstance("MP4_REMUXER");return e?e._dtsBase:0}}t.default=d},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{static getSilentFrame(e,t){if("mp4a.40.2"===e){if(1===t)return new Uint8Array([0,200,0,128,35,128]);if(2===t)return new Uint8Array([33,0,73,144,2,25,0,35,128]);if(3===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,142]);if(4===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,128,44,128,8,2,56]);if(5===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,56]);if(6===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,0,178,0,32,8,224])}else{if(1===t)return new Uint8Array([1,64,34,128,163,78,230,128,186,8,0,0,0,28,6,241,193,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94]);if(2===t)return new Uint8Array([1,64,34,128,163,94,230,128,186,8,0,0,0,0,149,0,6,241,161,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94]);if(3===t)return new Uint8Array([1,64,34,128,163,94,230,128,186,8,0,0,0,0,149,0,6,241,161,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94])}return null}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(){this.mimetype="",this.init=null,this.data=[]}}t.default=class{constructor(){this.sources={}}getSource(e){return this.sources[e]}createSource(e){return this.sources[e]=new s,this.sources[e]}clear(){this.sources={}}destroy(){this.sources={}}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this._baseURL="",this._list={},this._ts={},this.version=0,this.sequence=-1,this.targetduration=0,this.duration=0,this.fragLength=0,this._lastget=void 0,this._audoclear=e.autoclear||!1}get list(){return this._list}set baseURL(e){this.baseURL!==e&&(this.clear(),this._baseURL=e)}get baseURL(){return this._baseURL}push(e,t,i){this._ts[e]||(this._ts[e]={duration:t,downloaded:!1,downloading:!1,start:this.duration,discontinue:!!i},this._list[this.duration]=e,this.duration+=t,this.fragLength+=1)}deleteFrag(e){this._ts[e]&&(this._ts[e].start>this._lastget.time&&(this._lastget={duration:this._ts[e].duration,time:this._ts[e].start,downloaded:!1,downloading:!1,url:e}),delete this._list[this._ts[e].start],delete this._ts[e],this.fragLength-=1)}pushM3U8(e,t){if(!e)throw new Error("No m3u8 data received.");if(this.version=e.version,this.targetduration=e.targetduration,e.encrypt&&!this.encrypt&&(this.encrypt=e.encrypt),!(e.sequence>this.sequence))throw new Error(`Old m3u8 file received, ${e.sequence}`);{this.sequence=e.sequence;let i=[];for(let t=0;t<e.frags.length;t++){let s=e.frags[t];this._ts[s.url]||(i.push(s.url),this.push(s.url,s.duration,s.discontinue))}if(i.length<1)throw new Error("Can not read ts file list.");if(t){let e=this.getTsList();for(let t=0;t<e.length;t++)i.indexOf(e[t])<0&&this.deleteFrag(e[t])}}}getTsList(){return Object.keys(this._ts)}downloaded(e,t){let i=this._ts[e];i&&(i.downloaded=t)}downloading(e,t){let i=this._ts[e];i&&(i.downloading=t)}getTsByName(e){return this._ts[e]}getTs(e){let t,i=Object.keys(this._list);if(void 0===e&&(e=this._lastget?this._lastget.time+this._lastget.duration:0),!(i.length<1||e>=this.duration)){i.sort((e,t)=>parseFloat(e)-parseFloat(t));for(let s=0;s<i.length&&e>=parseInt(i[s]);s++){let e=this._list[i[s]];t={url:e,downloaded:this._ts[e].downloaded,downloading:this._ts[e].downloading,time:parseInt(i[s]),duration:parseInt(this._ts[e].duration)},this.autoclear&&(delete this._ts[this._lastget.url],delete this._list[this._lastget.time]),this._lastget=t}return t}}clear(){this._baseURL="",this._list={},this._ts={},this.version=0,this.sequence=-1,this.targetduration=0,this.duration=0}clearDownloaded(){for(let e=0,t=Object.keys(this._ts).length;e<t;e++){let t=this._ts[Object.keys(this._ts)[e]];t.downloaded=!1,t.downloading=!1}}destroy(){this._baseURL="",this._list={},this._ts={},this.version=0,this.sequence=-1,this.targetduration=0,this.duration=0,this.fragLength=0,this._lastget=void 0,this._audoclear=!1}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=i(0),a=i(2),n=i(3),o=(s=i(44))&&s.__esModule?s:{default:s};const d=r.EVENTS.DEMUX_EVENTS;class l{constructor(){this._firstFragmentLoaded=!1,this._trackNum=0,this._hasScript=!1}init(){this.on(d.DEMUX_START,this.doParseFlv.bind(this))}static isFlvFile(e){return!(70!==e[0]||76!==e[1]||86!==e[2]||1!==e[3])}static getPlayType(e){const t={hasVideo:!1,hasAudio:!1};return!0&e&&(t.hasVideo=!0),!0&e&&(t.hasAudio=!0),t}doParseFlv(){if(this._firstFragmentLoaded){if(this.loaderBuffer.length<11)return;let e,t=1e4;do{e=this._parseFlvTag()}while(e&&t-- >0);this.emit(d.DEMUX_COMPLETE)}else{if(this.loaderBuffer.length<13)return;const e=this.loaderBuffer.shift(13);this.parseFlvHeader(e),this.doParseFlv()}}parseFlvHeader(e){if(l.isFlvFile(e)){this._firstFragmentLoaded=!0;const t=l.getPlayType(e[4]);t.hasVideo&&this.initVideoTrack(),t.hasAudio&&this.initAudioTrack()}else this.emit(d.DEMUX_ERROR,new Error("invalid flv file")),this.doParseFlv();this.doParseFlv()}initVideoTrack(){this._trackNum++;let e=new n.VideoTrack;e.meta=new r.VideoTrackMeta,e.id=e.meta.id=this._trackNum,this.tracks.videoTrack=e}initAudioTrack(){this._trackNum++;let e=new n.AudioTrack;e.meta=new r.AudioTrackMeta,e.id=e.meta.id=this._trackNum,this.tracks.audioTrack=e}_parseFlvTag(){if(this.loaderBuffer.length<11)return null;let e=this._parseFlvTagHeader();return e&&this._processChunk(e),e}_parseFlvTagHeader(){let e=0,t={},i=this.loaderBuffer.toInt(e,1);if(e+=1,t.filtered=(32&i)>>>5,t.tagType=31&i,t.datasize=this.loaderBuffer.toInt(e,3),e+=3,8!==t.tagType&&9!==t.tagType&&11!==t.tagType&&18!==t.tagType||0!==this.loaderBuffer.toInt(8,3))return this.loaderBuffer&&this.loaderBuffer.length>0&&this.loaderBuffer.shift(1),this.emit(d.DEMUX_ERROR,this.TAG,new Error("tagType "+t.tagType),!1),null;if(this.loaderBuffer.length<t.datasize+15)return null;this.loaderBuffer.shift(4);let s=this.loaderBuffer.toInt(0,3);this.loaderBuffer.shift(3);let r=this.loaderBuffer.shift(1)[0];return r>0&&(s+=16777216*r),t.dts=s,this.loaderBuffer.shift(3),t}_processChunk(e){switch(e.tagType){case 18:this._parseScriptData(e);break;case 8:this._parseAACData(e);break;case 9:this._parseHevcData(e);break;case 11:this.loaderBuffer.shift(3);break;default:this.loaderBuffer.shift(1)}}_parseScriptData(e){let t=this.tracks.audioTrack,i=this.tracks.videoTrack,s=this.loaderBuffer.shift(e.datasize);const r=(new o.default).resolve(s,s.length),a=this._context.onMetaData=r?r.onMetaData:void 0;if(this._context.mediaInfo.duration=a.duration,this._context.mediaInfo.hasVideo=a.hasVideo,this._context.mediaInfo.hsaAudio=a.hasAudio,this._datasizeValidator(e.datasize)&&(this.emit(d.MEDIA_INFO),this._hasScript=!0),t&&!t.hasSpecificConfig){let e=t.meta;switch(a.audiosamplerate&&(e.sampleRate=a.audiosamplerate),a.audiochannels&&(e.channelCount=a.audiochannels),a.audiosamplerate){case 44100:e.sampleRateIndex=4;break;case 22050:e.sampleRateIndex=7;break;case 11025:e.sampleRateIndex=10}}if(i&&!i.hasSpecificConfig){let e=i.meta;if("number"==typeof a.framerate){let t=Math.floor(1e3*a.framerate);if(t>0){let i=t/1e3;e.frameRate||(e.frameRate={}),e.frameRate.fixed=!0,e.frameRate.fps=i,e.frameRate.fps_num=t,e.frameRate.fps_den=1e3}}}}_aacSequenceHeaderParser(e){let t={hasSpecificConfig:!0};t.objectType=e[1]>>>3,t.sampleRateIndex=(7&e[1])<<1|e[2]>>>7,t.audiosamplerate=this._switchAudioSampleRate(t.sampleRateIndex),t.channelCount=(120&e[2])>>>3,t.frameLength=(4&e[2])>>>2,t.dependsOnCoreCoder=(2&e[2])>>>1,t.extensionFlagIndex=1&e[2],t.codec=`mp4a.40.${t.objectType}`;let i,s,r=window.navigator.userAgent.toLowerCase(),a=t.sampleRateIndex;return-1!==r.indexOf("firefox")?t.sampleRateIndex>=6?(t.objectType=5,s=new Array(4),i=a-3):(t.objectType=2,s=new Array(2),i=a):-1!==r.indexOf("android")?(t.objectType=2,s=new Array(2),i=a):(t.objectType=5,i=t.sampleRateIndex,s=new Array(4),t.sampleRateIndex>=6?i=t.sampleRateIndex-3:1===t.channelCount&&(t.objectType=2,s=new Array(2),i=t.sampleRateIndex)),s[0]=t.objectType<<3,s[0]|=(15&t.sampleRateIndex)>>>1,s[1]=(15&t.sampleRateIndex)<<7,s[1]|=(15&t.channelCount)<<3,5===t.objectType&&(s[1]|=(15&i)>>>1,s[2]=(1&i)<<7,s[2]|=8,s[3]=0),t.config=s,t}_parseAACData(e){let t=this.tracks.audioTrack;if(!t)return;let i=t.meta;i||(t.meta=new r.AudioTrackMeta,i=t.meta);let s=this.loaderBuffer.shift(1)[0];e.data=this.loaderBuffer.shift(e.datasize-1);let a=(240&s)>>>4;t.format=a,10!==a&&this.emit(d.DEMUX_ERROR,new Error(`invalid audio format: ${a}`)),10!==a||this._hasAudioSequence||(i.sampleRate=this._switchAudioSamplingFrequency(s),i.sampleRateIndex=(12&s)>>>2,i.frameLenth=(2&s)>>>1,i.channelCount=1&s,i.refSampleDuration=Math.floor(1024/i.audioSampleRate*i.timescale));let n=i.audioSampleRate,o=i.sampleRateIndex,l=i.refSampleDuration;delete e.tagType;let h=this._datasizeValidator(e.datasize);if(0===e.data[0]){let t=this._aacSequenceHeaderParser(e.data);n=t.audiosamplerate||i.audioSampleRate,o=t.sampleRateIndex||i.sampleRateIndex,l=Math.floor(1024/n*i.timescale),i.channelCount=t.channelCount,i.sampleRate=n,i.sampleRateIndex=o,i.refSampleDuration=l,i.duration=this._context.mediaInfo.duration*i.timescale,i.config=t.config;const s=this._context.mediaInfo.audio;s.codec=t.codec,s.channelCount=t.channelCount,s.sampleRate=n,s.sampleRateIndex=t.audioSampleRateIndex,this._hasScript&&!this._hasAudioSequence?this.emit(d.METADATA_PARSED,"audio"):this._hasScript&&this._hasAudioSequence&&this.emit(d.AUDIO_METADATA_CHANGE),this._hasAudioSequence=!0,this._metaChange=!0}else this._metaChange&&(e.options={meta:t.meta},this._metaChange=!1),e.data=e.data.slice(1,e.data.length),t.samples.push(e);h||this.emit(d.DEMUX_ERROR,this.TAG,new Error("TAG length error at "+e.datasize),!1)}_parseHevcData(e){let t=this.loaderBuffer.shift(1)[0];e.frameType=(240&t)>>>4,e.isKeyframe=1===e.frameType;let i=15&t;if(this.tracks.videoTrack.codecID=i,e.avcPacketType=this.loaderBuffer.shift(1)[0],e.cts=this.loaderBuffer.toInt(0,3),this.loaderBuffer.shift(3),12===i){const t=this.loaderBuffer.shift(e.datasize-5);if(e.data=t,0!==Number.parseInt(e.avcPacketType)){this._datasizeValidator(e.datasize)||this.emit(d.DEMUX_ERROR,this.TAG,new Error(`invalid video tag datasize: ${e.datasize}`),!1);let t={},i=0;for(t.cts=e.cts,t.dts=e.dts;e.data.length>i;){let s=e.data.slice(Number.parseInt(i),4+i);t.size=s[3],t.size+=256*s[2],t.size+=256*s[1]*256,t.size+=256*s[0]*256*256,i+=4,t.data=e.data.slice(Number.parseInt(i),t.size+i),i+=t.size,this.tracks.videoTrack.samples.push(t),this.emit(d.METADATA_PARSED,"video")}}else 0===Number.parseInt(e.avcPacketType)&&(this._datasizeValidator(e.datasize)?this.emit(d.METADATA_PARSED,"video"):this.emit(d.DEMUX_ERROR,this.TAG,new Error(`invalid video tag datasize: ${e.datasize}`),!1))}else if(7===i){let t=this.loaderBuffer.shift(e.datasize-5);if(0===t[4]&&0===t[5]&&0===t[6]&&1===t[7]){let e=0;for(let i=0;i<4;i++)e=256*e+t[i];e-=4,(t=t.slice(4,t.length))[3]=e%256,e=(e-t[3])/256,t[2]=e%256,e=(e-t[2])/256,t[1]=e%256,t[0]=(e-t[1])/256}if(e.data=t,0===e.avcPacketType)this._avcSequenceHeaderParser(e.data),this._datasizeValidator(e.datasize)&&(this._hasScript&&!this._hasVideoSequence?this.emit(d.METADATA_PARSED,"video"):this._hasScript&&this._hasVideoSequence&&this.emit(d.VIDEO_METADATA_CHANGE),this._hasVideoSequence=!0),this._metaChange=!0;else{if(!this._datasizeValidator(e.datasize))return void this.emit(d.DEMUX_ERROR,this.TAG,new Error(`invalid video tag datasize: ${e.datasize}`),!1);this._metaChange&&(e.options={meta:Object.assign({},this.tracks.videoTrack.meta)},this._metaChange=!1),this.tracks.videoTrack.samples.push(e)}}else this.emit(d.DEMUX_ERROR,this.TAG,new Error(`video codeid is ${i}`),!1),e.data=this.loaderBuffer.shift(e.datasize-1),this._datasizeValidator(e.datasize)||this.emit(d.DEMUX_ERROR,this.TAG,new Error(`invalid video tag datasize: ${e.datasize}`),!1),this.tracks.videoTrack.samples.push(e),this.emit(d.DEMUX_COMPLETE);delete e.tagType}_avcSequenceHeaderParser(e){let t=this.tracks.videoTrack;if(!t)return;let i=0;t.meta||(t.meta=new r.VideoTrackMeta);let s=t.meta;s.configurationVersion=e[0],s.avcProfileIndication=e[1],s.profileCompatibility=e[2],s.avcLevelIndication=e[3]/10,s.nalUnitLength=1+(3&e[4]);let n=31&e[5];i=6;let o={};for(let t=0;t<n;t++){let t=255*e[i]+e[i+1];i+=2;let r=new Uint8Array(t);for(let s=0;s<t;s++)r[s]=e[i+s];let n="avc1.";for(let e=1;e<4;e++){let t=r[e].toString(16);t.length<2&&(t="0"+t),n+=t}s.codec=n,i+=t,this.tracks.videoTrack.meta.sps=r,o=a.SpsParser.parseSPS(r)}let d=e[i];i++;for(let t=0;t<d;t++){let t=255*e[i]+e[i+1];i+=2;let s=new Uint8Array(t);for(let r=0;r<t;r++)s[r]=e[i+r];i+=t,this.tracks.videoTrack.meta.pps=s}Object.assign(s,a.SpsParser.toVideoMeta(o));const l=this._context.mediaInfo.video;l.codec=s.codec,l.profile=s.profile,l.level=s.level,l.chromaFormat=s.chromaFormat,l.frameRate=s.frameRate,l.parRatio=s.parRatio,l.width=l.width===s.presentWidth?l.width:s.presentWidth,l.height=l.height===s.presentHeight?l.width:s.presentHeight,s.duration=this._context.mediaInfo.duration*s.timescale,s.avcc=new Uint8Array(e.length),s.avcc.set(e),t.meta=s}_switchAudioSampleRate(e){return[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350][e]}_switchAudioSamplingFrequency(e){return[5500,11025,22050,44100,48e3][(12&e)>>>2]}_switchAudioChannel(e){return[1,2][1&e]}_datasizeValidator(e){let t=this.loaderBuffer.toInt(0,4);return this.loaderBuffer.shift(4),t===e+11}get loaderBuffer(){const e=this._context.getInstance("LOADER_BUFFER");if(e)return e;this.emit(d.DEMUX_ERROR,new Error("找不到 loaderBuffer 实例"))}get tracks(){return this._context.getInstance("TRACKS")}get logger(){return this._context.getInstance("LOGGER")}}t.default=l},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s=i(0);const r={NUMBER:0,BOOLEAN:1,STRING:2,OBJECT:3,MIX_ARRAY:8,OBJECT_END:9,STRICT_ARRAY:10,DATE:11,LONE_STRING:12};t.default=class{constructor(){this.offset=0,this.readOffset=this.offset}resolve(e,t){if(t<3)throw new Error("not enough data for metainfo");const i={},s=this.parseValue(e),r=this.parseValue(e,t-s.bodySize);return i[s.data]=r.data,this.resetStatus(),i}resetStatus(){this.offset=0,this.readOffset=this.offset}parseString(e){const t=new DataView(e,this.readOffset).getUint16(0,!s.isLe);let i="";i=t>0?s.UTF8.decode(new Uint8Array(e,this.readOffset+2,t)):"";let r=t+2;return this.readOffset+=r,{data:i,bodySize:t+2}}parseDate(e,t){const i=new DataView(e,this.readOffset,t);let r=i.getFloat64(0,!s.isLe);return r+=60*i.getInt16(8,!s.isLe)*1e3,this.readOffset+=10,{data:new Date(r),bodySize:10}}parseObject(e,t){const i=this.parseString(e,t),s=this.parseValue(e,t-i.bodySize);return{data:{name:i.data,value:s.data},bodySize:i.bodySize+s.bodySize,isObjEnd:s.isObjEnd}}parseLongString(e){const t=new DataView(e,this.readOffset).getUint32(0,!s.isLe);let i="";return i=t>0?s.UTF8.decode(new Uint8Array(e,this.readOffset+2,t)):"",this.readOffset+=t+4,{data:i,bodySize:t+4}}parseValue(e,t){let i=new ArrayBuffer;i=e instanceof ArrayBuffer?e:e.buffer;const{NUMBER:a,BOOLEAN:n,STRING:o,OBJECT:d,MIX_ARRAY:l,OBJECT_END:h,STRICT_ARRAY:u,DATE:c,LONE_STRING:f}=r,p=new DataView(i,this.readOffset,t);let m=!1;const g=p.getUint8(0);let _=1;this.readOffset+=1;let y=null;switch(g){case a:y=p.getFloat64(1,!s.isLe),this.readOffset+=8,_+=8;break;case n:y=!!p.getUint8(1),this.readOffset+=1,_+=1;break;case o:{const e=this.parseString(i);y=e.data,_+=e.bodySize;break}case d:{y={};let e=0;for(16777215&p.getUint32(t-4,!s.isLe)&&(e=3);_<t-4;){const s=this.parseObject(i,t-_-e);if(s.isObjectEnd)break;y[s.data.name]=s.data.value,_+=s.bodySize}_<=t-3&&9==(16777215&p.getUint32(_-1,!s.isLe))&&(this.readOffset+=3,_+=3);break}case l:{y={},_+=4,this.readOffset+=4;let e=0;for(9==(16777215&p.getUint32(t-4,!s.isLe))&&(e=3);_<t-8;){const s=this.parseObject(i,t-_-e);if(s.isObjectEnd)break;y[s.data.name]=s.data.value,_+=s.bodySize}_<=t-3&&9==(16777215&p.getUint32(_-1,!s.isLe))&&(_+=3,this.readOffset+=3);break}case h:y=null,m=!0;break;case u:{y=[];const e=p.getUint32(1,!s.isLe);_+=4,this.readOffset+=4;for(let s=0;s<e;s++){const e=this.parseValue(i,t-_);y.push(e.data),_+=e.bodySize}break}case c:{const e=this.parseDate(i,t-1);y=e.data,_+=e.bodySize;break}case f:{const e=this.parseLongString(i,t-1);y=e.data,_+=e.bodySize;break}default:_=t}return{data:y,bodySize:_,isObjEnd:m}}}}]))},"../xgplayer-flv-vod/dist/index.js":
/*!***************************!*\
  !*** .-vod/dist/index.js ***!
  \***************************/
/*! no static exports found */function(e,t,i){"use strict";var s;window,e.exports=(s=i(/*! xgplayer */"xgplayer"),function(e){var t={};function i(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,i),r.l=!0,r.exports}return i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(s,r,function(t){return e[t]}.bind(null,r));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=11)}([function(e,t,i){e.exports={Context:i(13).default,EVENTS:i(4).default,WORKER_COMMANDS:i(15).default,sniffer:i(16).default,isLe:i(17).default,UTF8:i(18).default,MediaInfo:i(3).default,MediaSample:i(19).default,MediaSegment:i(20).default,MediaSegmentList:i(21).default,AudioTrackMeta:i(5).AudioTrackMeta,VideoTrackMeta:i(5).VideoTrackMeta,AudioTrackSample:i(6).AudioTrackSample,VideoTrackSample:i(6).VideoTrackSample,Mse:i(22).default,Stream:i(23).default,Buffer:i(24).default,Crypto:i(27).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(){this.id=-1,this.sequenceNumber=0,this.samples=[],this.droppedSamples=[],this.length=0}reset(){this.sequenceNumber=0,this.samples=[],this.length=0}distroy(){this.reset(),this.id=-1}}t.default=s,t.AudioTrack=class extends s{constructor(){super(),this.TAG="AudioTrack",this.type="audio"}},t.VideoTrack=class extends s{constructor(){super(),this.TAG="VideoTrack",this.type="video",this.dropped=0}reset(){this.sequenceNumber=0,this.samples=[],this.length=0,this.dropped=0}},t.Tracks=class{constructor(){this.audioTrack=null,this.videoTrack=null}destroy(){this.audioTrack=null,this.videoTrack=null}}},function(e,t){e.exports=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s=e=>{for(let t in e)if(e.hasOwnProperty(t)&&null===e[t])return!1;return!0};class r{constructor(){this.mimeType=null,this.duration=null,this.hasVideo=null,this.video={codec:null,width:null,height:null,profile:null,level:null,frameRate:{fixed:!0,fps:25,fps_num:25e3,fps_den:1e3},chromaFormat:null,parRatio:{width:1,height:1}},this.hasAudio=null,this.audio={codec:null,sampleRate:null,sampleRateIndex:null,channelCount:null}}isComplete(){return r.isBaseInfoReady(this)&&r.isVideoReady(this)&&r.isAudioReady(this)}static isBaseInfoReady(e){return s(e)}static isVideoReady(e){return!e.hasVideo||s(e.video)}static isAudioReady(e){return!e.hasAudio||s(e.video)}}t.default=r},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s={LADER_START:"LOADER_START",LOADER_DATALOADED:"LOADER_DATALOADED",LOADER_COMPLETE:"LOADER_COMPLETE",LOADER_ERROR:"LOADER_ERROR"},r={DEMUX_START:"DEMUX_START",DEMUX_COMPLETE:"DEMUX_COMPLETE",DEMUX_ERROR:"DEMUX_ERROR",METADATA_PARSED:"METADATA_PARSED",VIDEO_METADATA_CHANGE:"VIDEO_METADATA_CHANGE",AUDIO_METADATA_CHANGE:"AUDIO_METADATA_CHANGE",MEDIA_INFO:"MEDIA_INFO"},a={REMUX_METADATA:"REMUX_METADATA",REMUX_MEDIA:"REMUX_MEDIA",MEDIA_SEGMENT:"MEDIA_SEGMENT",REMUX_ERROR:"REMUX_ERROR",INIT_SEGMENT:"INIT_SEGMENT",DETECT_CHANGE_STREAM:"DETECT_CHANGE_STREAM",RANDOM_ACCESS_POINT:"RANDOM_ACCESS_POINT"},n={SOURCE_UPDATE_END:"SOURCE_UPDATE_END"},o={RETRY_TIME_EXCEEDED:"RETRY_TIME_EXCEEDED"},d=Object.assign({},s,r,a,n,o),l=[],h=[];for(let e in d)d.hasOwnProperty(e)&&l.push(d[e]);for(let e in d)d.hasOwnProperty(e)&&h.push(d[e]);t.default={ALLEVENTS:d,HLS_EVENTS:o,REMUX_EVENTS:a,DEMUX_EVENTS:r,MSE_EVENTS:n,LOADER_EVENTS:s,FlvAllowedEvents:l,HlsAllowedEvents:h,CRYTO_EVENTS:{START_DECRYPT:"START_DECRYPT",DECRYPTED:"DECRYPTED"}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.AudioTrackMeta=class{constructor(e){const t={sampleRate:48e3,channelCount:2,codec:"mp4a.40.2",config:[41,401,136,0],duration:0,id:2,refSampleDuration:21,sampleRateIndex:3,timescale:1e3,type:"audio"};return e?Object.assign({},t,e):t}destroy(){this.init=null}},t.VideoTrackMeta=class{constructor(e){const t={avcc:null,sps:new Uint8Array(0),pps:new Uint8Array(0),chromaFormat:420,codec:"avc1.640020",codecHeight:720,codecWidth:1280,duration:0,frameRate:{fixed:!0,fps:25,fps_num:25e3,fps_den:1e3},id:1,level:"3.2",presentHeight:720,presentWidth:1280,profile:"High",refSampleDuration:40,parRatio:{height:1,width:1},timescale:1e3,type:"video"};return e?Object.assign({},t,e):t}destroy(){this.init=null,this.sps=null,this.pps=null}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(e){let t=s.getDefault();return e?Object.assign({},t,e):t}static getDefault(){return{dts:null,pts:null,data:new Uint8Array}}}t.AudioTrackSample=s;class r{constructor(e){let t=r.getDefault();return e?Object.assign({},t,e):t}static getDefault(){return{dts:null,pts:null,isKeyframe:!1,originDts:null,data:new Uint8Array}}}t.VideoTrackSample=r},function(e,t,i){e.exports={Nalunit:i(30).default,SpsParser:i(8).default,Compatibility:i(32).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=(s=i(31))&&s.__esModule?s:{default:s};class a{static _ebsp2rbsp(e){let t=e,i=t.byteLength,s=new Uint8Array(i),r=0;for(let e=0;e<i;e++)e>=2&&3===t[e]&&0===t[e-1]&&0===t[e-2]||(s[r]=t[e],r++);return new Uint8Array(s.buffer,0,r)}static parseSPS(e){let t=a._ebsp2rbsp(e),i=new r.default(t);i.readByte();let s=i.readByte();i.readByte();let n=i.readByte();i.readUEG();let o=a.getProfileString(s),d=a.getLevelString(n),l=1,h=420,u=8;if((100===s||110===s||122===s||244===s||44===s||83===s||86===s||118===s||128===s||138===s||144===s)&&(3===(l=i.readUEG())&&i.readBits(1),l<=3&&(h=[0,420,422,444][l]),u=i.readUEG()+8,i.readUEG(),i.readBits(1),i.readBool())){let e=3!==l?8:12;for(let t=0;t<e;t++)i.readBool()&&(t<6?a._skipScalingList(i,16):a._skipScalingList(i,64))}i.readUEG();let c=i.readUEG();if(0===c)i.readUEG();else if(1===c){i.readBits(1),i.readSEG(),i.readSEG();let e=i.readUEG();for(let t=0;t<e;t++)i.readSEG()}i.readUEG(),i.readBits(1);let f=i.readUEG(),p=i.readUEG(),m=i.readBits(1);0===m&&i.readBits(1),i.readBits(1);let g=0,_=0,y=0,E=0;i.readBool()&&(g=i.readUEG(),_=i.readUEG(),y=i.readUEG(),E=i.readUEG());let v=1,A=1,S=0,T=!0,b=0,w=0;if(i.readBool()){if(i.readBool()){let e=i.readByte(),t=[1,12,10,16,40,24,20,32,80,18,15,64,160,4,3,2],s=[1,11,11,11,33,11,11,11,33,11,11,33,99,3,2,1];e>0&&e<16?(v=t[e-1],A=s[e-1]):255===e&&(v=i.readByte()<<8|i.readByte(),A=i.readByte()<<8|i.readByte())}if(i.readBool()&&i.readBool(),i.readBool()&&(i.readBits(4),i.readBool()&&i.readBits(24)),i.readBool()&&(i.readUEG(),i.readUEG()),i.readBool()){let e=i.readBits(32),t=i.readBits(32);T=i.readBool(),S=(b=t)/(w=2*e)}}let R=1;1===v&&1===A||(R=v/A);let D=0,L=0;0===l?(D=1,L=2-m):(D=3===l?1:2,L=(1===l?2:1)*(2-m));let O=16*(f+1),x=16*(p+1)*(2-m);O-=(g+_)*D,x-=(y+E)*L;let M=Math.ceil(O*R);return i.destroy(),i=null,{profile_string:o,level_string:d,bit_depth:u,chroma_format:h,chroma_format_string:a.getChromaFormatString(h),frame_rate:{fixed:T,fps:S,fps_den:w,fps_num:b},par_ratio:{width:v,height:A},codec_size:{width:O,height:x},present_size:{width:M,height:x}}}static _skipScalingList(e,t){let i=8,s=8,r=0;for(let a=0;a<t;a++)0!==s&&(s=(i+(r=e.readSEG())+256)%256),i=0===s?i:s}static getProfileString(e){switch(e){case 66:return"Baseline";case 77:return"Main";case 88:return"Extended";case 100:return"High";case 110:return"High10";case 122:return"High422";case 244:return"High444";default:return"Unknown"}}static getLevelString(e){return(e/10).toFixed(1)}static getChromaFormatString(e){switch(e){case 420:return"4:2:0";case 422:return"4:2:2";case 444:return"4:4:4";default:return"Unknown"}}static toVideoMeta(e){let t={};e&&e.codec_size&&(t.codecWidth=e.codec_size.width,t.codecHeight=e.codec_size.height,t.presentWidth=e.present_size.width,t.presentHeight=e.present_size.height),t.profile=e.profile_string,t.level=e.level_string,t.bitDepth=e.bit_depth,t.chromaFormat=e.chroma_format,t.parRatio={width:e.par_ratio.width,height:e.par_ratio.height},t.frameRate=e.frame_rate;let i=t.frameRate.fps_den,s=t.frameRate.fps_num;t.refSampleDuration=Math.floor(t.timescale*(i/s))}}t.default=a},function(e,t,i){e.exports={Track:i(1).default,Tracks:i(1).Tracks,AudioTrack:i(1).AudioTrack,VideoTrack:i(1).VideoTrack,XgBuffer:i(10).XgBuffer,RemuxBuffer:i(10).RemuxBuffer,PreSource:i(34).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.XgBuffer=class{constructor(e){this.length=e||0,this.historyLen=e||0,this.array=[],this.offset=0}push(e){this.array.push(e),this.length+=e.byteLength,this.historyLen+=e.byteLength}shift(e){if(this.array.length<1)return new Uint8Array(0);if(void 0===e)return this._shiftBuffer();if(this.offset+e===this.array[0].length){let t=this.array[0].slice(this.offset,this.offset+e);return this.offset=0,this.array.shift(),this.length-=e,t}if(this.offset+e<this.array[0].length){let t=this.array[0].slice(this.offset,this.offset+e);return this.offset+=e,this.length-=e,t}let t=new Uint8Array(e),i=0;for(;this.array.length>0&&e>0;){if(this.offset+e<this.array[0].length){let s=this.array[0].slice(this.offset,this.offset+e);t.set(s,i),this.offset+=e,this.length-=e,e=0;break}{let s=this.array[0].length-this.offset;t.set(this.array[0].slice(this.offset,this.array[0].length),i),this.array.shift(),this.offset=0,i+=s,this.length-=s,e-=s}}return t}clear(){this.array=[],this.length=0,this.offset=0}destroy(){this.clear(),this.historyLen=0}_shiftBuffer(){return this.length-=this.array[0].length,this.offset=0,this.array.shift()}toInt(e,t){let i=0,s=this.offset+e;for(;s<this.offset+t+e;)s<this.array[0].length?i=256*i+this.array[0][s]:this.array[1]&&(i=256*i+this.array[1][s-this.array[0].length]),s++;return i}},t.RemuxBuffer=class{constructor(){this.video=[],this.audio=[]}destroy(){this.video=[],this.audio=[]}}},function(e,t,i){e.exports=i(12)},function(e,t,i){var s=n(i(2)),r=i(0),a=n(i(28));function n(e){return e&&e.__esModule?e:{default:e}}const o=r.EVENTS.FlvAllowedEvents,d=(e,t)=>{if(!e.config.isLive&&e.duration-e.currentTime<2){const i=e.getBufferedRange();e.currentTime-i[1]<.1&&(e.emit("ended"),t.mse.endOfStream())}};e.exports=class extends s.default{constructor(e){super(e),this.context=new r.Context(o),this.initEvents()}start(){const e=this.context.registry("FLV_CONTROLLER",a.default)(this);this.flv=e,this.context.init(),super.start(e.mse.url)}initEvents(){this.on("timeupdate",this.handleTimeUpdate.bind(this)),this.on("seeking",this.handleSeek.bind(this)),this.once("destroy",this._destroy.bind(this))}handleTimeUpdate(){this.loadData(),d(this,this.flv)}handleSeek(){const e=this.currentTime,t=this.getBufferedRange();(e>t[1]||e<t[0])&&this.flv.seek(this.currentTime)}_destroy(){this.context.destroy(),this.context=null,this.flv=null}loadData(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.currentTime;const t=this.getBufferedRange();t[1]-e<(this.config.preloadTime||15)-5&&this.flv.loadNext(t[1]+1)}get src(){return this.currentSrc}set src(e){this.player.config.url=e,this.paused?this.start(e):(this.pause(),this.once("pause",()=>{this.start(e)}),this.once("canplay",()=>{this.play()})),this.once("canplay",()=>{this.currentTime=0})}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=(s=i(3))&&s.__esModule?s:{default:s},a=i(14);const n="__TO__";t.default=class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];this._emitter=new a.EventEmitter,this._instanceMap={},this._clsMap={},this._inited=!1,this.mediaInfo=new r.default,this.allowedEvents=e,this._hooks={},this._emitCounter={}}getInstance(e){return this._instanceMap[e]||null}initInstance(e){if(this._clsMap[e]){for(var t=arguments.length,i=Array(t>1?t-1:0),s=1;s<t;s++)i[s-1]=arguments[s];const r=new(Function.prototype.bind.apply(this._clsMap[e],[null].concat(i)));return this._instanceMap[e]=r,r.init&&r.init(),r}throw new Error(`${e}未在context中注册`)}init(e){if(!this._inited){for(let t in this._clsMap)this._clsMap.hasOwnProperty(t)&&!this._instanceMap[t]&&this.initInstance(t,e);this._inited=!0}}registry(e,t){var i=this;const s=this._emitter,r=this._isMessageNameValid.bind(this),a=this;return this._clsMap[e]=class extends t{constructor(t,i,s){super(t,i,s),this.listeners={},this.onceListeners={},this.TAG=e,this._context=a}on(t,i){return r(t),this.listeners[t]?this.listeners[t].push(i):this.listeners[t]=[i],s.on(`${t}${n}${e}`,i),s.on(t,i)}before(e,t){r(e),a._hooks[e]?a._hooks[e].push(t):a._hooks[e]=[t]}once(t,i){return r(t),this.onceListeners[t]?this.onceListeners[t].push(i):this.onceListeners[t]=[i],s.once(`${t}${n}${e}`,i),s.once(t,i)}emit(e){if(r(e),a._emitCounter[e]){if(a._emitCounter[e]+=1,a._emitCounter[e]>1e4){let t="con",i="sole";window.console&&window[t+i].warn("invoke: ",e)}}else a._emitCounter[e]=1;const t=a._hooks?a._hooks[e]:null;if(t)for(let e=0,i=t.length;e<i;e++)(0,t[e])();for(var i=arguments.length,n=Array(i>1?i-1:0),o=1;o<i;o++)n[o-1]=arguments[o];return s.emit.apply(s,[e].concat(n))}emitTo(e,t){r(t);for(var i=arguments.length,a=Array(i>2?i-2:0),o=2;o<i;o++)a[o-2]=arguments[o];return s.emit.apply(s,[`${t}${n}${e}`].concat(a))}off(e,t){return r(e),s.off(e,t)}removeListeners(){const t=Object.prototype.hasOwnProperty.bind(this.listeners);for(let i in this.listeners)if(t(i)){const t=this.listeners[i]||[];for(let r=0;r<t.length;r++){const a=t[r];s.off(i,a),s.off(`${i}${n}${e}`,a)}}for(let i in this.onceListeners)if(t(i)){const t=this.onceListeners[i]||[];for(let r=0;r<t.length;r++){const a=t[r];s.off(i,a),s.off(`${i}${n}${e}`,a)}}}destroy(){if(this.removeListeners(),this.listeners={},delete a._instanceMap[e],super.destroy)return super.destroy()}},function(){for(var t=arguments.length,s=Array(t),r=0;r<t;r++)s[r]=arguments[r];return i.initInstance.apply(i,[e].concat(s))}}destroyInstances(){Object.keys(this._instanceMap).forEach(e=>{this._instanceMap[e].destroy&&this._instanceMap[e].destroy()})}destroy(){this._emitter=null,this.allowedEvents=[],this._clsMap=null,this._context=null,this._hooks=null,this._emitCounter={},this.destroyInstances()}_isMessageNameValid(e){if(!this.allowedEvents.indexOf(e)<0)throw new Error(`unregistered message name: ${e}`)}}},function(e,t,i){var s,r="object"==typeof Reflect?Reflect:null,a=r&&"function"==typeof r.apply?r.apply:function(e,t,i){return Function.prototype.apply.call(e,t,i)};s=r&&"function"==typeof r.ownKeys?r.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var n=Number.isNaN||function(e){return e!=e};function o(){o.init.call(this)}e.exports=o,o.EventEmitter=o,o.prototype._events=void 0,o.prototype._eventsCount=0,o.prototype._maxListeners=void 0;var d=10;function l(e){return void 0===e._maxListeners?o.defaultMaxListeners:e._maxListeners}function h(e,t,i,s){var r,a,n,o;if("function"!=typeof i)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof i);if(void 0===(a=e._events)?(a=e._events=Object.create(null),e._eventsCount=0):(void 0!==a.newListener&&(e.emit("newListener",t,i.listener?i.listener:i),a=e._events),n=a[t]),void 0===n)n=a[t]=i,++e._eventsCount;else if("function"==typeof n?n=a[t]=s?[i,n]:[n,i]:s?n.unshift(i):n.push(i),(r=l(e))>0&&n.length>r&&!n.warned){n.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+n.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");d.name="MaxListenersExceededWarning",d.emitter=e,d.type=t,d.count=n.length,o=d,console&&console.warn&&console.warn(o)}return e}function u(){for(var e=[],t=0;t<arguments.length;t++)e.push(arguments[t]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,a(this.listener,this.target,e))}function c(e,t,i){var s={fired:!1,wrapFn:void 0,target:e,type:t,listener:i},r=u.bind(s);return r.listener=i,s.wrapFn=r,r}function f(e,t,i){var s=e._events;if(void 0===s)return[];var r=s[t];return void 0===r?[]:"function"==typeof r?i?[r.listener||r]:[r]:i?function(e){for(var t=new Array(e.length),i=0;i<t.length;++i)t[i]=e[i].listener||e[i];return t}(r):m(r,r.length)}function p(e){var t=this._events;if(void 0!==t){var i=t[e];if("function"==typeof i)return 1;if(void 0!==i)return i.length}return 0}function m(e,t){for(var i=new Array(t),s=0;s<t;++s)i[s]=e[s];return i}Object.defineProperty(o,"defaultMaxListeners",{enumerable:!0,get:function(){return d},set:function(e){if("number"!=typeof e||e<0||n(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");d=e}}),o.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},o.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||n(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},o.prototype.getMaxListeners=function(){return l(this)},o.prototype.emit=function(e){for(var t=[],i=1;i<arguments.length;i++)t.push(arguments[i]);var s="error"===e,r=this._events;if(void 0!==r)s=s&&void 0===r.error;else if(!s)return!1;if(s){var n;if(t.length>0&&(n=t[0]),n instanceof Error)throw n;var o=new Error("Unhandled error."+(n?" ("+n.message+")":""));throw o.context=n,o}var d=r[e];if(void 0===d)return!1;if("function"==typeof d)a(d,this,t);else{var l=d.length,h=m(d,l);for(i=0;i<l;++i)a(h[i],this,t)}return!0},o.prototype.addListener=function(e,t){return h(this,e,t,!1)},o.prototype.on=o.prototype.addListener,o.prototype.prependListener=function(e,t){return h(this,e,t,!0)},o.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);return this.on(e,c(this,e,t)),this},o.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);return this.prependListener(e,c(this,e,t)),this},o.prototype.removeListener=function(e,t){var i,s,r,a,n;if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof t);if(void 0===(s=this._events))return this;if(void 0===(i=s[e]))return this;if(i===t||i.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete s[e],s.removeListener&&this.emit("removeListener",e,i.listener||t));else if("function"!=typeof i){for(r=-1,a=i.length-1;a>=0;a--)if(i[a]===t||i[a].listener===t){n=i[a].listener,r=a;break}if(r<0)return this;0===r?i.shift():function(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}(i,r),1===i.length&&(s[e]=i[0]),void 0!==s.removeListener&&this.emit("removeListener",e,n||t)}return this},o.prototype.off=o.prototype.removeListener,o.prototype.removeAllListeners=function(e){var t,i,s;if(void 0===(i=this._events))return this;if(void 0===i.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==i[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete i[e]),this;if(0===arguments.length){var r,a=Object.keys(i);for(s=0;s<a.length;++s)"removeListener"!==(r=a[s])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=i[e]))this.removeListener(e,t);else if(void 0!==t)for(s=t.length-1;s>=0;s--)this.removeListener(e,t[s]);return this},o.prototype.listeners=function(e){return f(this,e,!0)},o.prototype.rawListeners=function(e){return f(this,e,!1)},o.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):p.call(e,t)},o.prototype.listenerCount=p,o.prototype.eventNames=function(){return this._eventsCount>0?s(this._events):[]}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.CONTEXT_COMOMANDS={ON:"on",ONCE:"once",OFF:"off",EMIT:"emit",DESTROY:"destroy"}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s=function(){const e=new ArrayBuffer(2);return new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]}(),r={get device(){let e=r.os;return e.isPc?"pc":e.isTablet?"tablet":"mobile"},get browser(){let e=navigator.userAgent.toLowerCase(),t={ie:/rv:([\d.]+)\) like gecko/,firfox:/firefox\/([\d.]+)/,chrome:/chrome\/([\d.]+)/,opera:/opera.([\d.]+)/,safari:/version\/([\d.]+).*safari/};return[].concat(Object.keys(t).filter(i=>t[i].test(e)))[0]},get os(){let e=navigator.userAgent,t=/(?:Windows Phone)/.test(e),i=/(?:SymbianOS)/.test(e)||t,s=/(?:Android)/.test(e),r=/(?:Firefox)/.test(e),a=/(?:iPad|PlayBook)/.test(e)||s&&!/(?:Mobile)/.test(e)||r&&/(?:Tablet)/.test(e),n=/(?:iPhone)/.test(e)&&!a;return{isTablet:a,isPhone:n,isAndroid:s,isPc:!n&&!s&&!i,isSymbian:i,isWindowsPhone:t,isFireFox:r}},get isLe(){return s}};t.default=r},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s=function(){const e=new ArrayBuffer(2);return new DataView(e).setInt16(0,256,!0),256===new Int16Array(e)[0]}();t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{static decode(e){const t=[],i=e;let r=0;const a=e.length;for(;r<a;)if(i[r]<128)t.push(String.fromCharCode(i[r])),++r;else{if(i[r]<192);else if(i[r]<224){if(s._checkContinuation(i,r,1)){const e=(31&i[r])<<6|63&i[r+1];if(e>=128){t.push(String.fromCharCode(65535&e)),r+=2;continue}}}else if(i[r]<240){if(s._checkContinuation(i,r,2)){const e=(15&i[r])<<12|(63&i[r+1])<<6|63&i[r+2];if(e>=2048&&55296!=(63488&e)){t.push(String.fromCharCode(65535&e)),r+=3;continue}}}else if(i[r]<248&&s._checkContinuation(i,r,3)){let e=(7&i[r])<<18|(63&i[r+1])<<12|(63&i[r+2])<<6|63&i[r+3];if(e>65536&&e<1114112){e-=65536,t.push(String.fromCharCode(e>>>10|55296)),t.push(String.fromCharCode(1023&e|56320)),r+=4;continue}}t.push(String.fromCharCode(65533)),++r}return t.join("")}static _checkContinuation(e,t,i){let s=e;if(t+i<s.length){for(;i--;)if(128!=(192&s[++t]))return!1;return!0}return!1}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(e){let t=s.getDefaultInf();if(!e||"[object Object]"!==Object.prototype.toString.call(e))return t;let i=Object.assign({},t,e);Object.entries(i).forEach(e=>{let[t,i]=e;this[t]=i})}static getDefaultInf(){return{dts:null,pts:null,duration:null,position:null,isRAP:!1,originDts:null}}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(){this.startDts=-1,this.endDts=-1,this.startPts=-1,this.endPts=-1,this.originStartDts=-1,this.originEndDts=-1,this.randomAccessPoints=[],this.firstSample=null,this.lastSample=null}addRAP(e){e.isRAP=!0,this.randomAccessPoints.push(e)}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this._type=e,this._list=[],this._lastAppendLocation=-1}get type(){return this._type}get length(){return this._list.length}isEmpty(){return 0===this._list.length}clear(){this._list=[],this._lastAppendLocation=-1}_searchNearestSegmentBefore(e){let t=this._list;if(0===t.length)return-2;let i=t.length-1,s=0,r=0,a=i,n=0;if(e<t[0].originDts)return-1;for(;r<=a;){if((s=r+Math.floor((a-r)/2))===i||e>t[s].lastSample.originDts&&e<t[s+1].originDts){n=s;break}t[s].originDts<e?r=s+1:a=s-1}return n}_searchNearestSegmentAfter(e){return this._searchNearestSegmentBefore(e)+1}append(e){let t=this._list,i=this._lastAppendLocation,s=0;-1!==i&&i<t.length&&e.originStartDts>=t[i].lastSample.originDts&&(i===t.length-1||i<t.length-1&&e.originStartDts<t[i+1].originStartDts)?s=i+1:t.length>0&&(s=this._searchNearestSegmentBefore(e.originStartDts)+1),this._lastAppendLocation=s,this._list.splice(s,0,e)}getLastSegmentBefore(e){let t=this._searchNearestSegmentBefore(e);return t>=0?this._list[t]:null}getLastSampleBefore(e){let t=this.getLastSegmentBefore(e);return null!==t?t.lastSample:null}getLastRAPBefore(e){let t=this._searchNearestSegmentBefore(e),i=this._list[t].randomAccessPoints;for(;0===i.length&&t>0;)t--,i=this._list[t].randomAccessPoints;return i.length>0?i[i.length-1]:null}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(e){this.configs=Object.assign({},e),this.container=this.configs.container,this.mediaSource=null,this.sourceBuffers={},this.preloadTime=this.configs.preloadTime||1,this.onSourceOpen=this.onSourceOpen.bind(this),this.onTimeUpdate=this.onTimeUpdate.bind(this),this.onUpdateEnd=this.onUpdateEnd.bind(this),this.onWaiting=this.onWaiting.bind(this)}init(){this.mediaSource=new self.MediaSource,this.mediaSource.addEventListener("sourceopen",this.onSourceOpen),this.container.src=URL.createObjectURL(this.mediaSource),this.url=this.container.src,this.container.addEventListener("timeupdate",this.onTimeUpdate),this.container.addEventListener("waiting",this.onWaiting)}onTimeUpdate(){this.emit("TIME_UPDATE",this.container)}onWaiting(){this.emit("WAITING",this.container)}onSourceOpen(){this.addSourceBuffers()}onUpdateEnd(){this.emit("SOURCE_UPDATE_END"),this.doAppend()}addSourceBuffers(){if("open"!==this.mediaSource.readyState)return;let e,t=this._context.getInstance("PRE_SOURCE_BUFFER"),i=this._context.getInstance("TRACKS");t=t.sources;let s=!1;for(let r=0,a=Object.keys(t).length;r<a;r++){let a=Object.keys(t)[r];if("audio"===a?e=i.audioTrack:"video"===a&&(e=i.videoTrack),e){let i="audio"===a?21:40;e.meta&&e.meta.refSampleDuration&&(i=e.meta.refSampleDuration),t[a].data.length>=this.preloadTime/i&&(s=!0)}}if(s){if(Object.keys(this.sourceBuffers).length>0)return;for(let e=0,i=Object.keys(t).length;e<i;e++){let i=Object.keys(t)[e],s=t[i],r="video"===i?"video/mp4;codecs="+s.mimetype:"audio/mp4;codecs="+s.mimetype,a=this.mediaSource.addSourceBuffer(r);this.sourceBuffers[i]=a,a.addEventListener("updateend",this.onUpdateEnd),this.doAppend()}}}doAppend(){let e=this._context.getInstance("PRE_SOURCE_BUFFER");if(e)for(let t=0;t<Object.keys(this.sourceBuffers).length;t++){let i=Object.keys(this.sourceBuffers)[t],s=this.sourceBuffers[i];if(!s.updating){let t=e.sources[i];if(t&&!t.inited)s.appendBuffer(t.init.buffer.buffer),t.inited=!0;else if(t){let e=t.data.shift();e&&s.appendBuffer(e.buffer.buffer)}}}}endOfStream(){const{readyState:e,activeSourceBuffers:t}=this.mediaSource;if("open"===e&&0===t.length)try{this.mediaSource.endOfStream()}catch(e){}}remove(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;for(let i=0;i<Object.keys(this.sourceBuffers).length;i++){let s=this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];s.updating||s.remove(t,e)}}removeBuffers(){const e=[];for(let t=0;t<Object.keys(this.sourceBuffers).length;t++){let i,r=this.sourceBuffers[Object.keys(this.sourceBuffers)[t]];r.removeEventListener("updateend",this.onUpdateEnd),i=r.updating?new Promise(e=>{const t=function(){let i=3;const a=()=>{r.updating?i>0?(setTimeout(a,200),i--):e():(s.clearBuffer(r),r.addEventListener("updateend",()=>{e()}))};setTimeout(a,200),r.removeEventListener("updateend",t)};r.addEventListener("updateend",t)}):new Promise(e=>{s.clearBuffer(r),r.addEventListener("updateend",()=>{e()})}),e.push(i)}return Promise.all(e)}destroy(){return this.removeBuffers().then(()=>{for(let e=0;e<Object.keys(this.sourceBuffers).length;e++){let t=this.sourceBuffers[Object.keys(this.sourceBuffers)[e]];this.mediaSource.removeSourceBuffer(t),delete this.sourceBuffers[Object.keys(this.sourceBuffers)[e]]}this.container.removeEventListener("timeupdate",this.onTimeUpdate),this.container.removeEventListener("waiting",this.onWaiting),this.mediaSource.removeEventListener("sourceopen",this.onSourceOpen),this.endOfStream(),window.URL.revokeObjectURL(this.url),this.url=null,this.configs={},this.container=null,this.mediaSource=null,this.sourceBuffers={},this.preloadTime=1})}static clearBuffer(e){const t=e.buffered;let i=.1;for(let e=0,s=t.length;e<s;e++)i=t.end(e);try{e.remove(0,i)}catch(e){}}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(e){if(!(e instanceof ArrayBuffer))throw new Error("data is invalid");this.buffer=e,this.dataview=new DataView(e),this.dataview.position=0}get length(){return this.buffer.byteLength}set position(e){this.dataview.position=e}get position(){return this.dataview.position}back(e){this.position-=e}skip(e){let t=Math.floor(e/4),i=e%4;for(let e=0;e<t;e++)s.readByte(this.dataview,4);i>0&&s.readByte(this.dataview,i)}static readByte(e,t,i){let s;switch(t){case 1:s=i?e.getInt8(e.position):e.getUint8(e.position);break;case 2:s=i?e.getInt16(e.position):e.getUint16(e.position);break;case 3:if(i)throw new Error("not supported for readByte 3");s=e.getUint8(e.position)<<16,s|=e.getUint8(e.position+1)<<8,s|=e.getUint8(e.position+2);break;case 4:s=i?e.getInt32(e.position):e.getUint32(e.position);break;case 8:if(i)throw new Error("not supported for readBody 8");s=e.getUint32(e.position)<<32,s|=e.getUint32(e.position+4);break;default:s=""}return e.position+=t,s}readUint8(){return s.readByte(this.dataview,1)}readUint16(){return s.readByte(this.dataview,2)}readUint24(){return s.readByte(this.dataview,3)}readUint32(){return s.readByte(this.dataview,4)}readUint64(){return s.readByte(this.dataview,8)}readInt8(){return s.readByte(this.dataview,1,!0)}readInt16(){return s.readByte(this.dataview,2,!0)}readInt32(){return s.readByte(this.dataview,4,!0)}writeUint32(e){return new Uint8Array([e>>>24&255,e>>>16&255,e>>>8&255,255&e])}}t.default=s},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=(s=i(25))&&s.__esModule?s:{default:s};t.default=class{constructor(e){this.buffer=e||new Uint8Array(0)}write(){for(var e=arguments.length,t=Array(e),i=0;i<e;i++)t[i]=arguments[i];t.forEach(e=>{this.buffer=(0,r.default)(Uint8Array,this.buffer,e)})}static writeUint32(e){return new Uint8Array([e>>24,e>>16&255,e>>8&255,255&e])}static readAsInt(e){let t="";return e.forEach(e=>{t+=function(e){return e.toString(16).padStart(2,"0")}(e)}),parseInt(t,16)}}},function(e,t,i){var s,r=(s=i(26))&&s.__esModule?s:{default:s};e.exports=r.default},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){for(var t=0,i=arguments.length,s=Array(i>1?i-1:0),r=1;r<i;r++)s[r-1]=arguments[r];var a=!0,n=!1,o=void 0;try{for(var d,l=s[Symbol.iterator]();!(a=(d=l.next()).done);a=!0){var h=d.value;t+=h.length}}catch(e){n=!0,o=e}finally{try{!a&&l.return&&l.return()}finally{if(n)throw o}}var u=new e(t),c=0,f=!0,p=!1,m=void 0;try{for(var g,_=s[Symbol.iterator]();!(f=(g=_.next()).done);f=!0){var y=g.value;u.set(y,c),c+=y.length}}catch(e){p=!0,m=e}finally{try{!f&&_.return&&_.return()}finally{if(p)throw m}}return u}},function(e,t,i){var s;Object.defineProperty(t,"__esModule",{value:!0});const r=((s=i(4))&&s.__esModule?s:{default:s}).default.CRYTO_EVENTS;t.default=class{constructor(e){this.inputBuffer=e.inputbuffer,this.outputBuffer=e.outputbuffer,this.key=e.key,this.iv=e.iv,this.method=e.method,this.crypto=window.crypto||window.msCrypto}init(){this.on(r.START_DECRYPT,this.decript.bind(this))}decript(){this.aeskey?this.decriptData():this.crypto.subtle.importKey("raw",this.key.buffer,{name:"AES-CBC"},!1,["encrypt","decrypt"]).then(e=>{this.aeskey=e,this.decriptData()})}decriptData(){let e=this._context.getInstance(this.inputBuffer),t=this._context.getInstance(this.outputBuffer),i=e.shift();i&&this.crypto.subtle.decrypt({name:"AES-CBC",iv:this.iv.buffer},this.aeskey,i).then(e=>{t.push(new Uint8Array(e)),this.emit(r.DECRYPTED),this.decriptData(i)})}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s=h(i(29)),r=h(i(36)),a=i(39),n=i(9),o=i(0),d=i(7),l=h(i(2));function h(e){return e&&e.__esModule?e:{default:e}}const u=o.EVENTS.REMUX_EVENTS,c=o.EVENTS.DEMUX_EVENTS,f=o.EVENTS.LOADER_EVENTS,p="FLVController";class m{warn(){}}const g="FLV_ERROR";class _{constructor(e){this.TAG=p,this._player=e,this.state={initSegmentArrived:!1,range:{start:0,end:""},rangeSupport:!0}}static findFilePosition(e,t){for(let i=0,s=t.times.length;i<s;i++){const r=t.times[i],a=i+1<s?t.times[i+1]:Number.MAX_SAFE_INTEGER;if(r<=e&&e<=a)return t.filepositions[i]}return""}init(){this._context.registry("FETCH_LOADER",a.FetchLoader),this._context.registry("LOADER_BUFFER",n.XgBuffer),this._context.registry("FLV_DEMUXER",s.default),this._context.registry("TRACKS",n.Tracks),this._context.registry("MP4_REMUXER",r.default.Mp4Remuxer),this._context.registry("PRE_SOURCE_BUFFER",n.PreSource),this._context.registry("COMPATIBILITY",d.Compatibility),this._context.registry("LOGGER",m),this.mse=this._context.registry("MSE",o.Mse)({container:this._player.video}),this.initListeners(),setTimeout(()=>{this.loadMeta()},0)}initListeners(){this.on(f.LOADER_DATALOADED,this._handleLoaderDataLoaded.bind(this)),this.on(f.LOADER_ERROR,this._handleNetworkError.bind(this)),this.on(c.MEDIA_INFO,this._handleMediaInfo.bind(this)),this.on(c.METADATA_PARSED,this._handleMetadataParsed.bind(this)),this.on(c.DEMUX_COMPLETE,this._handleDemuxComplete.bind(this)),this.on(c.DEMUX_ERROR,this._handleDemuxError.bind(this)),this.on(u.INIT_SEGMENT,this._handleAppendInitSegment.bind(this)),this.on(u.MEDIA_SEGMENT,this._handleMediaSegment.bind(this))}_handleMediaInfo(){this._context.onMetaData||this.emit(c.DEMUX_ERROR,new Error("failed to get mediainfo"));const e=this._context.getInstance("LOADER_BUFFER"),t=this._context.getInstance("FETCH_LOADER");this.isSeekable&&(t.cancel(),this.state.range={start:0,end:e.historyLen-1},setTimeout(()=>{this.loadNext(0)}))}_handleLoaderDataLoaded(){this.emitTo("FLV_DEMUXER",c.DEMUX_START)}_handleMetadataParsed(e){this.emit(u.REMUX_METADATA,e)}_handleDemuxComplete(){this.emit(u.REMUX_MEDIA)}_handleAppendInitSegment(){this.state.initSegmentArrived=!0,this.mse.addSourceBuffers()}_handleMediaSegment(){this.mse.addSourceBuffers(),this.mse.doAppend()}_handleNetworkError(e,t){this._player.emit("error",new l.default.Errors("network",this._player.config.url)),this._onError(f.LOADER_ERROR,e,t,!0)}_handleDemuxError(e,t,i){void 0===i&&(i=!1),this._player.emit("error",new l.default.Errors("parse",this._player.config.url)),this._onError(f.LOADER_ERROR,e,t,i)}_onError(e,t,i,s){let r={errorType:e,errorDetails:`[${t}]: ${i.message}`,errorFatal:s||!1};this._player.emit(g,r)}seek(e){if(!this._context.onMetaData)return void this.loadMeta();if(!this.isSeekable)return;this._context.getInstance("LOADER_BUFFER").clear();const{preloadTime:t=15}=this._player.config,i=this.getSeekRange(e,t);this.state.range=i,this.compat&&this.compat.reset(),this.loadData()}loadNext(e){this._context.onMetaData&&(this.loader.loading||this.getNextRange(e)&&this.loadData())}loadData(){const{start:e,end:t}=this.state.range;this.emit(f.LADER_START,this._player.config.url,{headers:{method:"get",Range:`bytes=${e}-${t}`}})}loadMeta(){this.loader.load(this._player.config.url,{headers:{Range:"bytes=0-"}}).catch(()=>{this.state.rangeSupport=!1,this.loadFallback()})}loadFallback(){this.loader.load(this._player.config.url).catch(()=>{this._player.emit("error",new l.default.Errors("network",this._player.config.url))})}getSeekRange(e,t){const{keyframes:i}=this._context.onMetaData,s=this._context.mediaInfo.duration,r=e,a=e+t,n=_.findFilePosition(r,i);return a>=s||r>=s?{start:n,end:""}:{start:n,end:_.findFilePosition(a,i)}}getNextRange(e){if(""===this.state.range.end)return;const{end:t}=this.getSeekRange(e,this.config.preloadTime||15);return t<=this.state.range.end&&""!==t?void 0:(this.state.range={start:this.state.range.end+1,end:t},!0)}destroy(){this._player=null,this.mse=null,this.state={initSegmentArrived:!1,range:{start:0,end:""},rangeSupport:!0}}get isSeekable(){return!!this.state.rangeSupport&&(!this._context||!this._context.mediaInfo.isComplete()||null!==this._context.mediaInfo.keyframes&&void 0!==this._context.mediaInfo.keyframes)}get config(){return this._player.config}get loader(){return this._context.getInstance("FETCH_LOADER")}get compat(){return this._context.getInstance("COMPATIBILITY")}}t.default=_},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=i(0),a=i(7),n=i(9),o=(s=i(35))&&s.__esModule?s:{default:s};const d=r.EVENTS.DEMUX_EVENTS;class l{constructor(){this._firstFragmentLoaded=!1,this._trackNum=0,this._hasScript=!1}init(){this.on(d.DEMUX_START,this.doParseFlv.bind(this))}static isFlvFile(e){return!(70!==e[0]||76!==e[1]||86!==e[2]||1!==e[3])}static getPlayType(e){const t={hasVideo:!1,hasAudio:!1};return!0&e&&(t.hasVideo=!0),!0&e&&(t.hasAudio=!0),t}doParseFlv(){if(this._firstFragmentLoaded){if(this.loaderBuffer.length<11)return;let e,t=1e4;do{e=this._parseFlvTag()}while(e&&t-- >0);this.emit(d.DEMUX_COMPLETE)}else{if(this.loaderBuffer.length<13)return;const e=this.loaderBuffer.shift(13);this.parseFlvHeader(e),this.doParseFlv()}}parseFlvHeader(e){if(l.isFlvFile(e)){this._firstFragmentLoaded=!0;const t=l.getPlayType(e[4]);t.hasVideo&&this.initVideoTrack(),t.hasAudio&&this.initAudioTrack()}else this.emit(d.DEMUX_ERROR,new Error("invalid flv file")),this.doParseFlv();this.doParseFlv()}initVideoTrack(){this._trackNum++;let e=new n.VideoTrack;e.meta=new r.VideoTrackMeta,e.id=e.meta.id=this._trackNum,this.tracks.videoTrack=e}initAudioTrack(){this._trackNum++;let e=new n.AudioTrack;e.meta=new r.AudioTrackMeta,e.id=e.meta.id=this._trackNum,this.tracks.audioTrack=e}_parseFlvTag(){if(this.loaderBuffer.length<11)return null;let e=this._parseFlvTagHeader();return e&&this._processChunk(e),e}_parseFlvTagHeader(){let e=0,t={},i=this.loaderBuffer.toInt(e,1);if(e+=1,t.filtered=(32&i)>>>5,t.tagType=31&i,t.datasize=this.loaderBuffer.toInt(e,3),e+=3,8!==t.tagType&&9!==t.tagType&&11!==t.tagType&&18!==t.tagType||0!==this.loaderBuffer.toInt(8,3))return this.loaderBuffer&&this.loaderBuffer.length>0&&this.loaderBuffer.shift(1),this.emit(d.DEMUX_ERROR,this.TAG,new Error("tagType "+t.tagType),!1),null;if(this.loaderBuffer.length<t.datasize+15)return null;this.loaderBuffer.shift(4);let s=this.loaderBuffer.toInt(0,3);this.loaderBuffer.shift(3);let r=this.loaderBuffer.shift(1)[0];return r>0&&(s+=16777216*r),t.dts=s,this.loaderBuffer.shift(3),t}_processChunk(e){switch(e.tagType){case 18:this._parseScriptData(e);break;case 8:this._parseAACData(e);break;case 9:this._parseHevcData(e);break;case 11:this.loaderBuffer.shift(3);break;default:this.loaderBuffer.shift(1)}}_parseScriptData(e){let t=this.tracks.audioTrack,i=this.tracks.videoTrack,s=this.loaderBuffer.shift(e.datasize);const r=(new o.default).resolve(s,s.length),a=this._context.onMetaData=r?r.onMetaData:void 0;if(this._context.mediaInfo.duration=a.duration,this._context.mediaInfo.hasVideo=a.hasVideo,this._context.mediaInfo.hsaAudio=a.hasAudio,this._datasizeValidator(e.datasize)&&(this.emit(d.MEDIA_INFO),this._hasScript=!0),t&&!t.hasSpecificConfig){let e=t.meta;switch(a.audiosamplerate&&(e.sampleRate=a.audiosamplerate),a.audiochannels&&(e.channelCount=a.audiochannels),a.audiosamplerate){case 44100:e.sampleRateIndex=4;break;case 22050:e.sampleRateIndex=7;break;case 11025:e.sampleRateIndex=10}}if(i&&!i.hasSpecificConfig){let e=i.meta;if("number"==typeof a.framerate){let t=Math.floor(1e3*a.framerate);if(t>0){let i=t/1e3;e.frameRate||(e.frameRate={}),e.frameRate.fixed=!0,e.frameRate.fps=i,e.frameRate.fps_num=t,e.frameRate.fps_den=1e3}}}}_aacSequenceHeaderParser(e){let t={hasSpecificConfig:!0};t.objectType=e[1]>>>3,t.sampleRateIndex=(7&e[1])<<1|e[2]>>>7,t.audiosamplerate=this._switchAudioSampleRate(t.sampleRateIndex),t.channelCount=(120&e[2])>>>3,t.frameLength=(4&e[2])>>>2,t.dependsOnCoreCoder=(2&e[2])>>>1,t.extensionFlagIndex=1&e[2],t.codec=`mp4a.40.${t.objectType}`;let i,s,r=window.navigator.userAgent.toLowerCase(),a=t.sampleRateIndex;return-1!==r.indexOf("firefox")?t.sampleRateIndex>=6?(t.objectType=5,s=new Array(4),i=a-3):(t.objectType=2,s=new Array(2),i=a):-1!==r.indexOf("android")?(t.objectType=2,s=new Array(2),i=a):(t.objectType=5,i=t.sampleRateIndex,s=new Array(4),t.sampleRateIndex>=6?i=t.sampleRateIndex-3:1===t.channelCount&&(t.objectType=2,s=new Array(2),i=t.sampleRateIndex)),s[0]=t.objectType<<3,s[0]|=(15&t.sampleRateIndex)>>>1,s[1]=(15&t.sampleRateIndex)<<7,s[1]|=(15&t.channelCount)<<3,5===t.objectType&&(s[1]|=(15&i)>>>1,s[2]=(1&i)<<7,s[2]|=8,s[3]=0),t.config=s,t}_parseAACData(e){let t=this.tracks.audioTrack;if(!t)return;let i=t.meta;i||(t.meta=new r.AudioTrackMeta,i=t.meta);let s=this.loaderBuffer.shift(1)[0];e.data=this.loaderBuffer.shift(e.datasize-1);let a=(240&s)>>>4;t.format=a,10!==a&&this.emit(d.DEMUX_ERROR,new Error(`invalid audio format: ${a}`)),10!==a||this._hasAudioSequence||(i.sampleRate=this._switchAudioSamplingFrequency(s),i.sampleRateIndex=(12&s)>>>2,i.frameLenth=(2&s)>>>1,i.channelCount=1&s,i.refSampleDuration=Math.floor(1024/i.audioSampleRate*i.timescale));let n=i.audioSampleRate,o=i.sampleRateIndex,l=i.refSampleDuration;delete e.tagType;let h=this._datasizeValidator(e.datasize);if(0===e.data[0]){let t=this._aacSequenceHeaderParser(e.data);n=t.audiosamplerate||i.audioSampleRate,o=t.sampleRateIndex||i.sampleRateIndex,l=Math.floor(1024/n*i.timescale),i.channelCount=t.channelCount,i.sampleRate=n,i.sampleRateIndex=o,i.refSampleDuration=l,i.duration=this._context.mediaInfo.duration*i.timescale,i.config=t.config;const s=this._context.mediaInfo.audio;s.codec=t.codec,s.channelCount=t.channelCount,s.sampleRate=n,s.sampleRateIndex=t.audioSampleRateIndex,this._hasScript&&!this._hasAudioSequence?this.emit(d.METADATA_PARSED,"audio"):this._hasScript&&this._hasAudioSequence&&this.emit(d.AUDIO_METADATA_CHANGE),this._hasAudioSequence=!0,this._metaChange=!0}else this._metaChange&&(e.options={meta:t.meta},this._metaChange=!1),e.data=e.data.slice(1,e.data.length),t.samples.push(e);h||this.emit(d.DEMUX_ERROR,this.TAG,new Error("TAG length error at "+e.datasize),!1)}_parseHevcData(e){let t=this.loaderBuffer.shift(1)[0];e.frameType=(240&t)>>>4,e.isKeyframe=1===e.frameType;let i=15&t;if(this.tracks.videoTrack.codecID=i,e.avcPacketType=this.loaderBuffer.shift(1)[0],e.cts=this.loaderBuffer.toInt(0,3),this.loaderBuffer.shift(3),12===i){const t=this.loaderBuffer.shift(e.datasize-5);if(e.data=t,0!==Number.parseInt(e.avcPacketType)){this._datasizeValidator(e.datasize)||this.emit(d.DEMUX_ERROR,this.TAG,new Error(`invalid video tag datasize: ${e.datasize}`),!1);let t={},i=0;for(t.cts=e.cts,t.dts=e.dts;e.data.length>i;){let s=e.data.slice(Number.parseInt(i),4+i);t.size=s[3],t.size+=256*s[2],t.size+=256*s[1]*256,t.size+=256*s[0]*256*256,i+=4,t.data=e.data.slice(Number.parseInt(i),t.size+i),i+=t.size,this.tracks.videoTrack.samples.push(t),this.emit(d.METADATA_PARSED,"video")}}else 0===Number.parseInt(e.avcPacketType)&&(this._datasizeValidator(e.datasize)?this.emit(d.METADATA_PARSED,"video"):this.emit(d.DEMUX_ERROR,this.TAG,new Error(`invalid video tag datasize: ${e.datasize}`),!1))}else if(7===i){let t=this.loaderBuffer.shift(e.datasize-5);if(0===t[4]&&0===t[5]&&0===t[6]&&1===t[7]){let e=0;for(let i=0;i<4;i++)e=256*e+t[i];e-=4,(t=t.slice(4,t.length))[3]=e%256,e=(e-t[3])/256,t[2]=e%256,e=(e-t[2])/256,t[1]=e%256,t[0]=(e-t[1])/256}if(e.data=t,0===e.avcPacketType)this._avcSequenceHeaderParser(e.data),this._datasizeValidator(e.datasize)&&(this._hasScript&&!this._hasVideoSequence?this.emit(d.METADATA_PARSED,"video"):this._hasScript&&this._hasVideoSequence&&this.emit(d.VIDEO_METADATA_CHANGE),this._hasVideoSequence=!0),this._metaChange=!0;else{if(!this._datasizeValidator(e.datasize))return void this.emit(d.DEMUX_ERROR,this.TAG,new Error(`invalid video tag datasize: ${e.datasize}`),!1);this._metaChange&&(e.options={meta:Object.assign({},this.tracks.videoTrack.meta)},this._metaChange=!1),this.tracks.videoTrack.samples.push(e)}}else this.emit(d.DEMUX_ERROR,this.TAG,new Error(`video codeid is ${i}`),!1),e.data=this.loaderBuffer.shift(e.datasize-1),this._datasizeValidator(e.datasize)||this.emit(d.DEMUX_ERROR,this.TAG,new Error(`invalid video tag datasize: ${e.datasize}`),!1),this.tracks.videoTrack.samples.push(e),this.emit(d.DEMUX_COMPLETE);delete e.tagType}_avcSequenceHeaderParser(e){let t=this.tracks.videoTrack;if(!t)return;let i=0;t.meta||(t.meta=new r.VideoTrackMeta);let s=t.meta;s.configurationVersion=e[0],s.avcProfileIndication=e[1],s.profileCompatibility=e[2],s.avcLevelIndication=e[3]/10,s.nalUnitLength=1+(3&e[4]);let n=31&e[5];i=6;let o={};for(let t=0;t<n;t++){let t=255*e[i]+e[i+1];i+=2;let r=new Uint8Array(t);for(let s=0;s<t;s++)r[s]=e[i+s];let n="avc1.";for(let e=1;e<4;e++){let t=r[e].toString(16);t.length<2&&(t="0"+t),n+=t}s.codec=n,i+=t,this.tracks.videoTrack.meta.sps=r,o=a.SpsParser.parseSPS(r)}let d=e[i];i++;for(let t=0;t<d;t++){let t=255*e[i]+e[i+1];i+=2;let s=new Uint8Array(t);for(let r=0;r<t;r++)s[r]=e[i+r];i+=t,this.tracks.videoTrack.meta.pps=s}Object.assign(s,a.SpsParser.toVideoMeta(o));const l=this._context.mediaInfo.video;l.codec=s.codec,l.profile=s.profile,l.level=s.level,l.chromaFormat=s.chromaFormat,l.frameRate=s.frameRate,l.parRatio=s.parRatio,l.width=l.width===s.presentWidth?l.width:s.presentWidth,l.height=l.height===s.presentHeight?l.width:s.presentHeight,s.duration=this._context.mediaInfo.duration*s.timescale,s.avcc=new Uint8Array(e.length),s.avcc.set(e),t.meta=s}_switchAudioSampleRate(e){return[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350][e]}_switchAudioSamplingFrequency(e){return[5500,11025,22050,44100,48e3][(12&e)>>>2]}_switchAudioChannel(e){return[1,2][1&e]}_datasizeValidator(e){let t=this.loaderBuffer.toInt(0,4);return this.loaderBuffer.shift(4),t===e+11}get loaderBuffer(){const e=this._context.getInstance("LOADER_BUFFER");if(e)return e;this.emit(d.DEMUX_ERROR,new Error("找不到 loaderBuffer 实例"))}get tracks(){return this._context.getInstance("TRACKS")}get logger(){return this._context.getInstance("LOGGER")}}t.default=l},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=(s=i(8))&&s.__esModule?s:{default:s};class a{static getNalunits(e){if(e.length-e.position<4)return[];let t=e.dataview,i=e.position;return 1===t.getInt32(i)||0===t.getInt16(i)&&1===t.getInt8(i+2)?a.getAnnexbNals(e):a.getAvccNals(e)}static getAnnexbNals(e){let t=[],i=a.getHeaderPositionAnnexB(e),s=i.pos,r=s;for(;s<e.length-4;){let n=e.buffer.slice(s,s+i.headerLength);i.pos===e.position&&e.skip(i.headerLength),r=(i=a.getHeaderPositionAnnexB(e)).pos;let o={header:n,body:new Uint8Array(e.buffer.slice(s+n.byteLength,r))};a.analyseNal(o),t.push(o),e.skip(r-e.position),s=r}return t}static getAvccNals(e){let t=[];for(;e.position<e.length-4;){let i=e.dataview.getInt32();if(!(e.length-e.position>=i))break;{let s=e.buffer.slice(e.position,e.position+4);e.skip(4);let r=e.buffer.slice(e.position,e.position+i);e.skip(i);let n={header:s,body:r};a.analyseNal(n),t.push(n)}}return t}static analyseNal(e){switch(31&e.body[0]){case 1:e.ndr=!0;break;case 5:e.idr=!0;break;case 6:break;case 7:e.sps=r.default.parseSPS(e.body);break;case 8:e.pps=!0}}static getHeaderPositionAnnexB(e){let t=e.position,i=0;for(;3!==i&&4!==i&&t<e.length-4;)0===e.dataview.getInt16(t)?1===e.dataview.getInt16(t+2)?i=4:1===e.dataview.getInt8(t+2)?i=3:t++:t++;return t===e.length-4&&(0===e.dataview.getInt16(t)?1===e.dataview.getInt16(t+2)&&(i=4):(t++,0===e.dataview.getInt16(t)&&1===e.dataview.getInt8(t)?i=3:t=e.length)),{pos:t,headerLength:i}}static getAvcc(e,t){let i=new Uint8Array(e.byteLength+t.byteLength+11);i[0]=1,i[1]=e[1],i[2]=e[2],i[3]=e[3],i[4]=255,i[5]=225;let s=6;return i.set(new Uint8Array([e.byteLength>>>8&255,255&e.byteLength]),s),s+=2,i.set(e,s),i[s+=e.byteLength]=1,s++,i.set(new Uint8Array([t.byteLength>>>8&255,255&t.byteLength]),s),s+=2,i.set(t,s),i}}t.default=a},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this.TAG="Golomb",this._buffer=e,this._bufferIndex=0,this._totalBytes=e.byteLength,this._totalBits=8*e.byteLength,this._currentWord=0,this._currentWordBitsLeft=0}destroy(){this._buffer=null}_fillCurrentWord(){let e=this._totalBytes-this._bufferIndex,t=Math.min(4,e),i=new Uint8Array(4);i.set(this._buffer.subarray(this._bufferIndex,this._bufferIndex+t)),this._currentWord=new DataView(i.buffer).getUint32(0),this._bufferIndex+=t,this._currentWordBitsLeft=8*t}readBits(e){let t=Math.min(this._currentWordBitsLeft,e),i=this._currentWord>>>32-t;if(e>32)throw new Error("Cannot read more than 32 bits at a time");return this._currentWordBitsLeft-=t,this._currentWordBitsLeft>0?this._currentWord<<=t:this._totalBytes-this._bufferIndex>0&&this._fillCurrentWord(),(t=e-t)>0&&this._currentWordBitsLeft?i<<t|this.readBits(t):i}readBool(){return 1===this.readBits(1)}readByte(){return this.readBits(8)}_skipLeadingZero(){let e;for(e=0;e<this._currentWordBitsLeft;e++)if(0!=(this._currentWord&2147483648>>>e))return this._currentWord<<=e,this._currentWordBitsLeft-=e,e;return this._fillCurrentWord(),e+this._skipLeadingZero()}readUEG(){let e=this._skipLeadingZero();return this.readBits(e+1)-1}readSEG(){let e=this.readUEG();return 1&e?e+1>>>1:-1*(e>>>1)}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=i(0),a=(s=i(33))&&s.__esModule?s:{default:s};const{REMUX_EVENTS:n,LOADER_EVENTS:o}=r.EVENTS;class d{constructor(){this.nextAudioDts=0,this.nextVideoDts=0,this.lastAudioSamplesLen=0,this.lastVideoSamplesLen=0,this.lastVideoDts=void 0,this.lastAudioDts=void 0,this.allAudioSamplesCount=0,this.allVideoSamplesCount=0,this._firstAudioSample=null,this._firstVideoSample=null,this.filledAudioSamples=[],this.filledVideoSamples=[],this.videoLastSample=null,this.audioLastSample=null,this._videoLargeGap=0,this._audioLargeGap=0}init(){this.before(n.REMUX_MEDIA,this.doFix.bind(this))}reset(){this.nextAudioDts=null,this.nextVideoDts=null,this.lastAudioSamplesLen=0,this.lastVideoSamplesLen=0,this.lastVideoDts=void 0,this.lastAudioDts=void 0,this.videoLastSample=null,this.audioLastSample=null,this.filledAudioSamples=[],this.filledVideoSamples=[]}doFix(){const{isFirstAudioSamples:e,isFirstVideoSamples:t}=this.getFirstSample();this.recordSamplesCount(),this._firstVideoSample&&this.fixRefSampleDuration(this.videoTrack.meta,this.videoTrack.samples),this._firstAudioSample&&this.fixRefSampleDuration(this.audioTrack.meta,this.audioTrack.samples);const{changed:i,changedIdx:s}=d.detactChangeStream(this.videoTrack.samples);i&&!e?this.fixChangeStreamVideo(s):this.doFixVideo(t);const{changed:r,changedIdx:a}=d.detactChangeStream(this.audioTrack.samples);r?this.fixChangeStreamAudio(a):this.doFixAudio(e),this.removeInvalidSamples()}doFixVideo(e,t){let{samples:i,meta:s}=this.videoTrack;for(let e=0,t=i.length;e<t;e++){const t=i[e];t.originDts=t.dts}if(s.frameRate&&!1===s.frameRate.fixed)return;if(!i||!i.length||!this._firstVideoSample)return;const r=i[0];if(this._videoLargeGap>0&&d.doFixLargeGap(i,this._videoLargeGap),r.dts!==this._firstVideoSample.dts&&t&&(t&&(this.nextVideoDts=t),this._videoLargeGap=this.nextVideoDts-r.dts,d.doFixLargeGap(i,this._videoLargeGap)),e&&this._firstAudioSample){const e=this._firstVideoSample.dts,t=e-this._firstAudioSample.dts;if(t>2*s.refSampleDuration){const a=Math.floor(t/s.refSampleDuration);for(let t=0;t<a;t++){const a=Object.assign({},r);a.dts=e-(t+1)*s.refSampleDuration,a.pts=a.dts+a.cts,i.unshift(a),this.filledVideoSamples.push({dts:a.dts,size:a.data.byteLength})}}else t<-2*s.refSampleDuration&&(this._videoLargeGap=-1*t,d.doFixLargeGap(i,-1*t))}const a=i.pop();if(i.length&&(i[i.length-1].duration=a.dts-i[i.length-1].dts),this.videoLastSample){const e=this.videoLastSample;e.duration=r.dts-e.dts,i.unshift(this.videoLastSample)}this.videoLastSample=a,this.videoTrack.samples=i}doFixAudio(e,t){let{samples:i,meta:s}=this.audioTrack;if(!i||!i.length)return;for(let e=0,t=i.length;e<t;e++){const t=i[e];t.originDts=t.dts}const r=i.length,n=a.default.getSilentFrame(s.codec,s.channelCount),o=this._firstAudioSample,l=i[0];if(this._audioLargeGap>0&&d.doFixLargeGap(i,this._audioLargeGap),l.dts!==this._firstAudioSample.dts&&(t||d.detectLargeGap(this.nextAudioDts,l))&&(t&&(this.nextAudioDts=t),this._audioLargeGap=this.nextAudioDts-l.dts,d.doFixLargeGap(i,this._audioLargeGap)),this._firstVideoSample&&e){const e=this._firstVideoSample.pts?this._firstVideoSample.pts:this._firstVideoSample.dts+this._firstVideoSample.cts,t=o.dts-e;if(t>s.refSampleDuration){const t=Math.floor((o.dts-e)/s.refSampleDuration);for(let e=0;e<t;e++){const t={data:n,datasize:n.byteLength,dts:o.dts-(e+1)*s.refSampleDuration,filtered:0};i.unshift(t),this.filledAudioSamples.push({dts:t.dts,size:t.data.byteLength})}}else t<-1*s.refSampleDuration&&(this._audioLargeGap=-1*t,d.doFixLargeGap(i,-1*t))}let h;const u=i[0].dts;if(this.nextAudioDts){h=u-this.nextAudioDts;const e=Math.abs(h);if(e>s.refSampleDuration&&1===r&&1===this.lastAudioSamplesLen&&(s.refSampleDurationFixed=void 0),h>2*s.refSampleDuration)if(1===r&&1===this.lastAudioSamplesLen)s.refSampleDurationFixed=void 0!==s.refSampleDurationFixed?s.refSampleDurationFixed+h:s.refSampleDuration+h;else{const e=Math.floor(h/s.refSampleDuration);for(let t=0;t<e;t++){const e=u-(t+1)*s.refSampleDuration,r=Object.assign({},i[0],{dts:e>this.nextAudioDts?e:this.nextAudioDts});this.filledAudioSamples.push({dts:r.dts,size:r.data.byteLength}),this.audioTrack.samples.unshift(r)}}else e<=s.refSampleDuration&&e>0?(i[0].dts=this.nextAudioDts,i[0].pts=this.nextAudioDts):h<0&&d.doFixLargeGap(i,-1*h)}const c=i[i.length-1].originDts,f=i[i.length-1].originDts,p=i.length>=2?c-i[i.length-2].originDts:s.refSampleDuration;this.lastAudioSamplesLen=r,this.nextAudioDts=s.refSampleDurationFixed?f+s.refSampleDurationFixed:f+p,this.lastAudioDts=f,i[i.length-1].duration=p;for(let e=0,t=i.length;e<t;e++){const t=i[e],s=i[e+1];if(!s)break;const r=s.dts-t.dts;i[e].duration=r}this.audioTrack.samples=d.sortAudioSamples(i)}fixChangeStreamVideo(e){const{samples:t,meta:i}=this.videoTrack,s=0===e?this.getStreamChangeStart(t[0]):t[e-1].dts,r=t[e].dts;if(Math.abs(s-r)<=2*i.refSampleDuration)return t[e].options?t[e].options.isContinue=!0:t[e].options={isContinue:!0},this.doFixVideo(!1);const a=t.slice(0,e),n=t.slice(e),o=t[0],d=n[0].dts-o.dts,l=o.options&&o.options.start+d?o.options.start:null;this.videoTrack.samples=t.slice(0,e),this.doFixVideo(!1),this.videoTrack.samples=t.slice(e),this.doFixVideo(!1,l),this.videoTrack.samples=a.concat(n)}fixChangeStreamAudio(e){const{samples:t,meta:i}=this.audioTrack,s=0===e?this.getStreamChangeStart(t[0]):t[e-1].dts,r=t[e].dts;if(Math.abs(s-r)<=2*i.refSampleDuration)return t[e].options?t[e].options.isContinue=!0:t[e].options={isContinue:!0},this.doFixAudio(!1);const a=t.slice(0,e),n=t.slice(e),o=t[0],d=n[0].dts-o.dts,l=o.options&&o.options.start+d?o.options.start:null;this.audioTrack.samples=a,this.doFixAudio(!1),this.audioTrack.samples=n,this.doFixAudio(!1,l),this.audioTrack.samples=a.concat(n)}getFirstSample(){let{samples:e}=this.videoTrack,{samples:t}=this.audioTrack,i=!1,s=!1;return!this._firstVideoSample&&e.length&&(this._firstVideoSample=d.findFirstVideoSample(e),i=!0),!this._firstAudioSample&&t.length&&(this._firstAudioSample=d.findFirstAudioSample(t),s=!0),{isFirstVideoSamples:i,isFirstAudioSamples:s}}fixRefSampleDuration(e,t){const i="video"===e.type,s=i?this.allVideoSamplesCount:this.allAudioSamplesCount,r=i?this._firstVideoSample.dts:this._firstAudioSample.dts,a=i?this.filledVideoSamples.length:this.filledAudioSamples.length;if(!e.refSampleDuration||e.refSampleDuration<=0||Number.isNaN(e.refSampleDuration)){if(t.length>=1){const i=t[t.length-1].dts;e.refSampleDuration=Math.floor((i-r)/(s+a-1))}}else if(e.refSampleDuration&&t.length>=5){const i=(t[t.length-1].dts-t[0].dts)/(t.length-1);e.refSampleDuration=Math.floor(Math.abs(e.refSampleDuration-i)<=5?e.refSampleDuration:i)}}recordSamplesCount(){const{audioTrack:e,videoTrack:t}=this;this.allAudioSamplesCount+=e.samples.length,this.allVideoSamplesCount+=t.samples.length}removeInvalidSamples(){const{_firstVideoSample:e,_firstAudioSample:t}=this;this.audioTrack.samples=this.audioTrack.samples.filter((e,i)=>e===t||e.dts>t.dts),this.videoTrack.samples=this.videoTrack.samples.filter((t,i)=>t===e||t.dts>e.dts)}getStreamChangeStart(e){return e.options&&e.options.start?e.options.start-this.dtsBase:1/0}static sortAudioSamples(e){return 1===e.length?e:e.sort((e,t)=>e.dts-t.dts)}static findFirstAudioSample(e){return e&&0!==e.length?d.sortAudioSamples(e)[0]:null}static findFirstVideoSample(e){if(!e.length)return null;const t=e.sort((e,t)=>e.dts-t.dts);for(let e=0,i=t.length;e<i;e++)if(t[e].isKeyframe)return t[e]}static detectLargeGap(e,t){if(null===e)return;const i=t.dts||0,s=e-i>=1e3||i-e>=1e3,r=t.options&&t.options.discontinue;return s||r}static doFixLargeGap(e,t){for(let i=0,s=e.length;i<s;i++){const s=e[i];s.dts+=t,s.pts&&(s.pts+=t)}}static detactChangeStream(e){let t=!1,i=-1;for(let s=0,r=e.length;s<r;s++)if(e[s].options&&e[s].options.meta){t=!0,i=s;break}return{changed:t,changedIdx:i}}get tracks(){return this._context.getInstance("TRACKS")}get audioTrack(){return this.tracks?this.tracks.audioTrack:null}get videoTrack(){return this.tracks?this.tracks.videoTrack:null}get dtsBase(){const e=this._context.getInstance("MP4_REMUXER");return e?e._dtsBase:0}}t.default=d},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{static getSilentFrame(e,t){if("mp4a.40.2"===e){if(1===t)return new Uint8Array([0,200,0,128,35,128]);if(2===t)return new Uint8Array([33,0,73,144,2,25,0,35,128]);if(3===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,142]);if(4===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,128,44,128,8,2,56]);if(5===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,56]);if(6===t)return new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,0,178,0,32,8,224])}else{if(1===t)return new Uint8Array([1,64,34,128,163,78,230,128,186,8,0,0,0,28,6,241,193,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94]);if(2===t)return new Uint8Array([1,64,34,128,163,94,230,128,186,8,0,0,0,0,149,0,6,241,161,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94]);if(3===t)return new Uint8Array([1,64,34,128,163,94,230,128,186,8,0,0,0,0,149,0,6,241,161,10,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,94])}return null}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});class s{constructor(){this.mimetype="",this.init=null,this.data=[]}}t.default=class{constructor(){this.sources={}}getSource(e){return this.sources[e]}createSource(e){return this.sources[e]=new s,this.sources[e]}clear(){this.sources={}}destroy(){this.sources={}}}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s=i(0);const r={NUMBER:0,BOOLEAN:1,STRING:2,OBJECT:3,MIX_ARRAY:8,OBJECT_END:9,STRICT_ARRAY:10,DATE:11,LONE_STRING:12};t.default=class{constructor(){this.offset=0,this.readOffset=this.offset}resolve(e,t){if(t<3)throw new Error("not enough data for metainfo");const i={},s=this.parseValue(e),r=this.parseValue(e,t-s.bodySize);return i[s.data]=r.data,this.resetStatus(),i}resetStatus(){this.offset=0,this.readOffset=this.offset}parseString(e){const t=new DataView(e,this.readOffset).getUint16(0,!s.isLe);let i="";i=t>0?s.UTF8.decode(new Uint8Array(e,this.readOffset+2,t)):"";let r=t+2;return this.readOffset+=r,{data:i,bodySize:t+2}}parseDate(e,t){const i=new DataView(e,this.readOffset,t);let r=i.getFloat64(0,!s.isLe);return r+=60*i.getInt16(8,!s.isLe)*1e3,this.readOffset+=10,{data:new Date(r),bodySize:10}}parseObject(e,t){const i=this.parseString(e,t),s=this.parseValue(e,t-i.bodySize);return{data:{name:i.data,value:s.data},bodySize:i.bodySize+s.bodySize,isObjEnd:s.isObjEnd}}parseLongString(e){const t=new DataView(e,this.readOffset).getUint32(0,!s.isLe);let i="";return i=t>0?s.UTF8.decode(new Uint8Array(e,this.readOffset+2,t)):"",this.readOffset+=t+4,{data:i,bodySize:t+4}}parseValue(e,t){let i=new ArrayBuffer;i=e instanceof ArrayBuffer?e:e.buffer;const{NUMBER:a,BOOLEAN:n,STRING:o,OBJECT:d,MIX_ARRAY:l,OBJECT_END:h,STRICT_ARRAY:u,DATE:c,LONE_STRING:f}=r,p=new DataView(i,this.readOffset,t);let m=!1;const g=p.getUint8(0);let _=1;this.readOffset+=1;let y=null;switch(g){case a:y=p.getFloat64(1,!s.isLe),this.readOffset+=8,_+=8;break;case n:y=!!p.getUint8(1),this.readOffset+=1,_+=1;break;case o:{const e=this.parseString(i);y=e.data,_+=e.bodySize;break}case d:{y={};let e=0;for(16777215&p.getUint32(t-4,!s.isLe)&&(e=3);_<t-4;){const s=this.parseObject(i,t-_-e);if(s.isObjectEnd)break;y[s.data.name]=s.data.value,_+=s.bodySize}_<=t-3&&9==(16777215&p.getUint32(_-1,!s.isLe))&&(this.readOffset+=3,_+=3);break}case l:{y={},_+=4,this.readOffset+=4;let e=0;for(9==(16777215&p.getUint32(t-4,!s.isLe))&&(e=3);_<t-8;){const s=this.parseObject(i,t-_-e);if(s.isObjectEnd)break;y[s.data.name]=s.data.value,_+=s.bodySize}_<=t-3&&9==(16777215&p.getUint32(_-1,!s.isLe))&&(_+=3,this.readOffset+=3);break}case h:y=null,m=!0;break;case u:{y=[];const e=p.getUint32(1,!s.isLe);_+=4,this.readOffset+=4;for(let s=0;s<e;s++){const e=this.parseValue(i,t-_);y.push(e.data),_+=e.bodySize}break}case c:{const e=this.parseDate(i,t-1);y=e.data,_+=e.bodySize;break}case f:{const e=this.parseLongString(i,t-1);y=e.data,_+=e.bodySize;break}default:_=t}return{data:y,bodySize:_,isObjEnd:m}}}},function(e,t,i){e.exports={Mp4Remuxer:i(37).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s,r=i(0),a=(s=i(38))&&s.__esModule?s:{default:s};const n=r.EVENTS.REMUX_EVENTS;class o{constructor(){this._dtsBase=0,this._isDtsBaseInited=!1,this._audioNextDts=null,this._videoNextDts=null,this._videoSegmentList=new r.MediaSegmentList("video"),this._audioSegmentList=new r.MediaSegmentList("audio");const{browser:e}=r.sniffer;this._fillSilenceFrame="ie"===e,this.isFirstVideo=!0,this.isFirstAudio=!0,this.videoAllDuration=0,this.audioAllDuration=0}init(){this.on(n.REMUX_MEDIA,this.remux.bind(this)),this.on(n.REMUX_METADATA,this.onMetaDataReady.bind(this)),this.on(n.DETECT_CHANGE_STREAM,this.resetDtsBase.bind(this))}destroy(){this._dtsBase=-1,this._dtsBaseInited=!1,this._videoNextDts=null,this._audioNextDts=null,this._videoSegmentList.clear(),this._audioSegmentList.clear(),this._videoSegmentList=null,this._audioSegmentList=null}remux(){const{audioTrack:e,videoTrack:t}=this._context.getInstance("TRACKS");!this._isDtsBaseInited&&this.calcDtsBase(e,t),this._remuxVideo(t),this._remuxAudio(e)}resetDtsBase(){this._dtsBase=0,this._dtsBaseInited=!1}seek(){this._videoNextDts=null,this._audioNextDts=null,this._videoSegmentList.clear(),this._audioSegmentList.clear()}onMetaDataReady(e){let t;if("audio"===e){const{audioTrack:e}=this._context.getInstance("TRACKS");t=e}else{const{videoTrack:e}=this._context.getInstance("TRACKS");t=e}let i=this._context.getInstance("PRE_SOURCE_BUFFER"),s=i.getSource(e);s||(s=i.createSource(e)),s.mimetype=t.meta.codec,s.init=this.remuxInitSegment(e,t.meta),this.emit(n.INIT_SEGMENT,e)}remuxInitSegment(e,t){let i=new r.Buffer,s=a.default.ftyp(),n=a.default.moov({type:e,meta:t});return i.write(s,n),i}calcDtsBase(e,t){if(!e.samples.length&&!t.samples.length)return;let i=1/0,s=1/0;e.samples&&e.samples.length&&(i=e.samples[0].dts),t.samples&&t.samples.length&&(s=t.samples[0].dts),this._dtsBase=Math.min(i,s),this._isDtsBaseInited=!0}_remuxVideo(e){const t=e;if(!e.samples||!e.samples.length)return;let{samples:i}=t,s=-1,o=null;const d=[],l={samples:[]};let h=1e4;for(;i.length&&h-- >0;){const e=i.shift(),{isKeyframe:t,options:r}=e;if(!this.isFirstAudio&&r&&r.meta){o=this.remuxInitSegment("video",r.meta),r.meta=null,i.unshift(e),r.isContinue||this.resetDtsBase();break}let a,h,u=e.dts-this._dtsBase;-1===s&&(s=u),void 0!==e.pts&&(a=(h=e.pts-this._dtsBase)-u),void 0!==e.cts&&(h=e.cts+u,a=e.cts);let c={buffer:[],size:0};l.samples.push(c),c.buffer.push(e.data),c.size+=e.data.byteLength;let f=0;f=e.duration?e.duration:i.length>=1?i[0].dts-this._dtsBase-u:d.length>=1?d[d.length-1].duration:this.videoMeta.refSampleDuration,this.videoAllDuration+=f,console.log(`dts ${u}`,`pts ${h}`,t,`duration ${f}`),d.push({dts:u,cts:a,pts:h,data:e.data,size:e.data.byteLength,isKeyframe:t,duration:f,flags:{isLeading:0,dependsOn:t?2:1,isDependedOn:t?1:0,hasRedundancy:0,isNonSync:t?0:1},originDts:u,type:"video"}),t&&this.emit(n.RANDOM_ACCESS_POINT,h)}let u=new r.Buffer;if(d.length){const e=a.default.moof({id:t.meta.id,time:s,samples:d}),i=a.default.mdat(l);u.write(e,i),this.writeToSource("video",u)}if(o&&(this.writeToSource("video",o),i.length))return t.samples=i,this._remuxVideo(t);this.isFirstVideo=!1,this.emit(n.MEDIA_SEGMENT,"video");const c=d[d.length-1];this._videoNextDts=c.dts+c.duration,t.samples=[],t.length=0}_remuxAudio(e){const{samples:t}=e;let i=-1,s=[],o=null;const d={samples:[]};if(!t||!t.length)return;let l=1e4,h=!1;for(;t.length&&l-- >0;){let e=t.shift();const{data:r,options:a}=e;if(!this.isFirstAudio&&a&&a.meta){o=this.remuxInitSegment("audio",a.meta),a.meta=null,t.unshift(e),a.isContinue||this.resetDtsBase();break}let n=e.dts-this._dtsBase;const l=n;h||(i=n,h=!0);let u=0;u=e.duration?e.duration:this.audioMeta.refSampleDurationFixed?this.audioMeta.refSampleDurationFixed:t.length>=1?t[0].dts-this._dtsBase-n:s.length>=1?s[s.length-1].duration:this.audioMeta.refSampleDuration,this.audioAllDuration+=u;const c={dts:n,pts:n,cts:0,size:r.byteLength,duration:e.duration?e.duration:u,flags:{isLeading:0,dependsOn:2,isDependedOn:1,hasRedundancy:0,isNonSync:0},isKeyframe:!0,originDts:l,type:"audio"};let f={buffer:[],size:0};f.buffer.push(r),f.size+=r.byteLength,d.samples.push(f),s.push(c)}const u=new r.Buffer;if(s.length){const t=a.default.moof({id:e.meta.id,time:i,samples:s}),r=a.default.mdat(d);u.write(t,r),this.writeToSource("audio",u)}if(o&&(this.writeToSource("audio",o),t.length))return e.samples=t,this._remuxAudio(e);this.isFirstAudio=!1,this.emit(n.MEDIA_SEGMENT,"audio",u);const c=s[s.length-1];this._videoNextDts=c.dts+c.duration,e.samples=[],e.length=0}writeToSource(e,t){let i=this._context.getInstance("PRE_SOURCE_BUFFER"),s=i.getSource(e);s||(s=i.createSource(e)),s.data.push(t)}initSilentAudio(e,t){const i=o.getSilentFrame(this._audioMeta.channelCount);return{dts:e,pts:e,cts:0,duration:t,unit:i,size:i.byteLength,originDts:e,type:"video"}}get videoMeta(){return this._context.getInstance("TRACKS").videoTrack.meta}get audioMeta(){return this._context.getInstance("TRACKS").audioTrack.meta}static getSilentFrame(e){return 1===e?new Uint8Array([0,200,0,128,35,128]):2===e?new Uint8Array([33,0,73,144,2,25,0,35,128]):3===e?new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,142]):4===e?new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,128,44,128,8,2,56]):5===e?new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,56]):6===e?new Uint8Array([0,200,0,128,32,132,1,38,64,8,100,0,130,48,4,153,0,33,144,2,0,178,0,32,8,224]):null}}t.default=o},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});var s=i(0);class r{static size(e){return s.Buffer.writeUint32(e)}static initBox(e,t){const i=new s.Buffer;for(var a=arguments.length,n=Array(a>2?a-2:0),o=2;o<a;o++)n[o-2]=arguments[o];return i.write.apply(i,[r.size(e),r.type(t)].concat(n)),i.buffer}static extension(e,t){return new Uint8Array([e,t>>16&255,t>>8&255,255&t])}static ftyp(){return r.initBox(24,"ftyp",new Uint8Array([105,115,111,109,0,0,0,1,105,115,111,109,97,118,99,49]))}static moov(e){let t,{type:i,meta:s}=e,a=8,n=r.mvhd(s.duration,s.timescale);t="video"===i?r.videoTrak(s):r.audioTrak(s);let o=r.mvex(s.duration,s.timescale||1e3,s.id);return[n,t,o].forEach(e=>{a+=e.byteLength}),r.initBox(a,"moov",n,t,o)}static mvhd(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1e3,i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,t>>>24&255,t>>>16&255,t>>>8&255,255&t,e>>>24&255,e>>>16&255,e>>>8&255,255&e,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255]);return r.initBox(8+i.length,"mvhd",new Uint8Array(i))}static videoTrak(e){let t=8,i=r.tkhd({id:1,duration:e.duration,timescale:e.timescale||1e3,width:e.presentWidth,height:e.presentHeight,type:"video"}),s=r.mdia({type:"video",timescale:e.timescale||1e3,duration:e.duration,avcc:e.avcc,parRatio:e.parRatio,width:e.presentWidth,height:e.presentHeight});return[i,s].forEach(e=>{t+=e.byteLength}),r.initBox(t,"trak",i,s)}static audioTrak(e){let t=8,i=r.tkhd({id:2,duration:e.duration,timescale:e.timescale||1e3,width:0,height:0,type:"audio"}),s=r.mdia({type:"audio",timescale:e.timescale||1e3,duration:e.duration,channelCount:e.channelCount,samplerate:e.sampleRate,config:e.config});return[i,s].forEach(e=>{t+=e.byteLength}),r.initBox(t,"trak",i,s)}static tkhd(e){let t=e.id,i=e.duration,s=e.width,a=e.height,n=new Uint8Array([0,0,0,7,0,0,0,0,0,0,0,0,t>>>24&255,t>>>16&255,t>>>8&255,255&t,0,0,0,0,i>>>24&255,i>>>16&255,i>>>8&255,255&i,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,s>>>8&255,255&s,0,0,a>>>8&255,255&a,0,0]);return r.initBox(8+n.byteLength,"tkhd",n)}static edts(e){let t=new s.Buffer,i=e.duration,a=e.mediaTime;return t.write(r.size(36),r.type("edts")),t.write(r.size(28),r.type("elst")),t.write(new Uint8Array([0,0,0,1,i>>24&255,i>>16&255,i>>8&255,255&i,a>>24&255,a>>16&255,a>>8&255,255&a,0,0,0,1])),t.buffer}static mdia(e){let t=8,i=r.mdhd(e.timescale,e.duration),s=r.hdlr(e.type),a=r.minf(e);return[i,s,a].forEach(e=>{t+=e.byteLength}),r.initBox(t,"mdia",i,s,a)}static mdhd(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3,t=arguments[1],i=new Uint8Array([0,0,0,0,0,0,0,0,e>>>24&255,e>>>16&255,e>>>8&255,255&e,t>>>24&255,t>>>16&255,t>>>8&255,255&t,85,196,0,0]);return r.initBox(12+i.byteLength,"mdhd",r.extension(0,0),i)}static hdlr(e){let t=[0,0,0,0,0,0,0,0,118,105,100,101,0,0,0,0,0,0,0,0,0,0,0,0,86,105,100,101,111,72,97,110,100,108,101,114,0];return"audio"===e&&(t.splice.apply(t,[8,4].concat([115,111,117,110])),t.splice.apply(t,[24,13].concat([83,111,117,110,100,72,97,110,100,108,101,114,0]))),r.initBox(8+t.length,"hdlr",new Uint8Array(t))}static minf(e){let t=8,i="video"===e.type?r.vmhd():r.smhd(),s=r.dinf(),a=r.stbl(e);return[i,s,a].forEach(e=>{t+=e.byteLength}),r.initBox(t,"minf",i,s,a)}static vmhd(){return r.initBox(20,"vmhd",new Uint8Array([0,0,0,1,0,0,0,0,0,0,0,0]))}static smhd(){return r.initBox(16,"smhd",new Uint8Array([0,0,0,0,0,0,0,0]))}static dinf(){let e=new s.Buffer;return e.write(r.size(36),r.type("dinf"),r.size(28),r.type("dref"),new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,12,117,114,108,32,0,0,0,1])),e.buffer}static stbl(e){let t=8,i=r.stsd(e),s=r.stts(),a=r.stsc(),n=r.stsz(),o=r.stco();return[i,s,a,n,o].forEach(e=>{t+=e.byteLength}),r.initBox(t,"stbl",i,s,a,n,o)}static stsd(e){let t;return t="audio"===e.type?r.mp4a(e):r.avc1(e),r.initBox(16+t.byteLength,"stsd",r.extension(0,0),new Uint8Array([0,0,0,1]),t)}static mp4a(e){let t=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,e.channelCount,0,16,0,0,0,0,e.samplerate>>8&255,255&e.samplerate,0,0]),i=r.esds(e.config);return r.initBox(8+t.byteLength+i.byteLength,"mp4a",t,i)}static esds(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[43,146,8,0];const t=e.length;let i=new s.Buffer,a=new Uint8Array([0,0,0,0,3,23+t,0,1,0,4,15+t,64,21,0,0,0,0,0,0,0,0,0,0,0,5].concat([t]).concat(e).concat([6,1,2]));return i.write(r.size(8+a.byteLength),r.type("esds"),a),i.buffer}static avc1(e){let t=new s.Buffer,i=e.width,a=e.height,n=e.parRatio.height,o=e.parRatio.width,d=e.avcc,l=new Uint8Array([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,i>>8&255,255&i,a>>8&255,255&a,0,72,0,0,0,72,0,0,0,0,0,0,0,1,18,100,97,105,108,121,109,111,116,105,111,110,47,104,108,115,46,106,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,17,17]),h=new Uint8Array([0,28,156,128,0,45,198,192,0,45,198,192]),u=new Uint8Array([n>>24,n>>16&255,n>>8&255,255&n,o>>24,o>>16&255,o>>8&255,255&o]);return t.write(r.size(40+l.byteLength+d.byteLength+h.byteLength),r.type("avc1"),l,r.size(8+d.byteLength),r.type("avcC"),d,r.size(20),r.type("btrt"),h,r.size(16),r.type("pasp"),u),t.buffer}static stts(){let e=new Uint8Array([0,0,0,0,0,0,0,0]);return r.initBox(16,"stts",e)}static stsc(){let e=new Uint8Array([0,0,0,0,0,0,0,0]);return r.initBox(16,"stsc",e)}static stco(){let e=new Uint8Array([0,0,0,0,0,0,0,0]);return r.initBox(16,"stco",e)}static stsz(){let e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0]);return r.initBox(20,"stsz",e)}static mvex(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1];let t=arguments[2],i=new s.Buffer,a=s.Buffer.writeUint32(e);return i.write(r.size(56),r.type("mvex"),r.size(16),r.type("mehd"),r.extension(0,0),a,r.trex(t)),i.buffer}static trex(e){let t=new Uint8Array([0,0,0,0,e>>24,e>>16&255,e>>8&255,255&e,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1]);return r.initBox(8+t.byteLength,"trex",t)}static moof(e){let t=8,i=r.mfhd(),s=r.traf(e);return[i,s].forEach(e=>{t+=e.byteLength}),r.initBox(t,"moof",i,s)}static mfhd(){let e=s.Buffer.writeUint32(r.sequence);return r.sequence+=1,r.initBox(16,"mfhd",r.extension(0,0),e)}static traf(e){let t=8,i=r.tfhd(e.id),s=r.tfdt(e.time),a=r.sdtp(e),n=r.trun(e,a.byteLength);return[i,s,n,a].forEach(e=>{t+=e.byteLength}),r.initBox(t,"traf",i,s,n,a)}static tfhd(e){let t=s.Buffer.writeUint32(e);return r.initBox(16,"tfhd",r.extension(0,0),t)}static tfdt(e){return r.initBox(16,"tfdt",r.extension(0,0),s.Buffer.writeUint32(e))}static trun(e,t){let i=new s.Buffer,a=s.Buffer.writeUint32(e.samples.length),n=s.Buffer.writeUint32(92+16*e.samples.length+t);return i.write(r.size(20+16*e.samples.length),r.type("trun"),new Uint8Array([0,0,15,1]),a,n),e.samples.forEach(e=>{const t=e.flags;i.write(new Uint8Array([e.duration>>>24&255,e.duration>>>16&255,e.duration>>>8&255,255&e.duration,e.size>>>24&255,e.size>>>16&255,e.size>>>8&255,255&e.size,t.isLeading<<2|t.dependsOn,t.isDependedOn<<6|t.hasRedundancy<<4|t.isNonSync,0,0,e.cts>>>24&255,e.cts>>>16&255,e.cts>>>8&255,255&e.cts]))}),i.buffer}static sdtp(e){let t=new s.Buffer;return t.write(r.size(12+e.samples.length),r.type("sdtp"),r.extension(0,0)),e.samples.forEach(e=>{const i=e.flags,s=i.isLeading<<6|i.dependsOn<<4|i.isDependedOn<<2|i.hasRedundancy;t.write(new Uint8Array([s]))}),t.buffer}static mdat(e){let t=new s.Buffer,i=8;e.samples.forEach(e=>{i+=e.size}),t.write(r.size(i),r.type("mdat"));let a=new Uint8Array(i),n=0;return a.set(t.buffer,n),n+=8,e.samples.forEach(e=>{e.buffer.forEach(e=>{a.set(e,n),n+=e.byteLength})}),a}}r.type=e=>new Uint8Array([e.charCodeAt(0),e.charCodeAt(1),e.charCodeAt(2),e.charCodeAt(3)]),r.sequence=1,t.default=r},function(e,t,i){e.exports={FetchLoader:i(40).default}},function(e,t,i){Object.defineProperty(t,"__esModule",{value:!0});const s=i(0).EVENTS.LOADER_EVENTS;t.default=class{constructor(e){this.configs=Object.assign({},e),this.url=null,this.status=0,this.error=null,this._reader=null,this._canceled=!1,this._destroyed=!1,this.readtype=this.configs.readtype,this.buffer=this.configs.buffer||"LOADER_BUFFER",this._loaderTaskNo=0}init(){this.on(s.LADER_START,this.load.bind(this))}static get type(){return"loader"}load(e,t){let i=this;this.url=e,this._canceled=!1;let r=this.getParams(t);return i.loading=!0,fetch(this.url,r).then((function(e){if(e.ok)return i.status=e.status,i._onFetchResponse(e);i.loading=!1,i.emit(s.LOADER_ERROR,i.TAG,new Error("invalid response."))})).catch((function(e){throw i.loading=!1,i.emit(s.LOADER_ERROR,i.TAG,e),new Error(e.message)}))}_onFetchResponse(e){let t=this,i=this._context.getInstance(this.buffer);this._loaderTaskNo++;let r=this._loaderTaskNo;if(!0===e.ok)switch(this.readtype){case 2:e.json().then(e=>{t.loading=!1,t._canceled||t._destroyed||(i?(i.push(e),t.emit(s.LOADER_COMPLETE,i)):t.emit(s.LOADER_COMPLETE,e))});break;case 1:e.text().then(e=>{t.loading=!1,t._canceled||t._destroyed||(i?(i.push(e),t.emit(s.LOADER_COMPLETE,i)):t.emit(s.LOADER_COMPLETE,e))});break;case 3:e.arrayBuffer().then(e=>{t.loading=!1,t._canceled||t._destroyed||(i?(i.push(new Uint8Array(e)),t.emit(s.LOADER_COMPLETE,i)):t.emit(s.LOADER_COMPLETE,e))});break;case 0:default:return this._onReader(e.body.getReader(),r)}}_onReader(e,t){let i=this._context.getInstance(this.buffer);if(!i&&this._reader||this._destroyed)try{this._reader.cancel()}catch(e){}if(this._reader=e,!1===this.loading)return;let r=this;this._reader&&this._reader.read().then((function(a){if(a.done)return r.loading=!1,r.status=0,void r.emit(s.LOADER_COMPLETE,i);if(!r._canceled&&!r._destroyed)return i.push(a.value),r.emit(s.LOADER_DATALOADED,i),r._onReader(e,t);if(r._reader)try{r._reader.cancel()}catch(e){}})).catch(e=>{r.loading=!1,r.emit(s.LOADER_ERROR,r.TAG,e)})}getParams(e){let t=Object.assign({},e),i=new Headers,s={method:"GET",headers:i,mode:"cors",cache:"default"};if("object"==typeof this.configs.headers){let e=this.configs.headers;for(let t in e)e.hasOwnProperty(t)&&i.append(t,e[t])}if("object"==typeof t.headers){let e=t.headers;for(let t in e)e.hasOwnProperty(t)&&i.append(t,e[t])}return!1===t.cors&&(s.mode="same-origin"),t.withCredentials&&(s.credentials="include"),s}cancel(){if(this._reader){try{this._reader.cancel()}catch(e){}this._reader=null,this.loading=!1,this._canceled=!0}}destroy(){this._destroyed=!0,this.cancel()}}}]))},"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */function(e,t,i){"use strict";var s=a(i(/*! xgplayer-flv-live */"../xgplayer-flv-live/dist/index.js")),r=a(i(/*! xgplayer-flv-vod */"../xgplayer-flv-vod/dist/index.js"));function a(e){return e&&e.__esModule?e:{default:e}}e.exports=function e(t){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),t.isLive?new s.default(t):new r.default(t)}},0:
/*!****************************!*\
  !*** multi ./src/index.js ***!
  \****************************/
/*! no static exports found */function(e,t,i){e.exports=i(/*! ./src/index.js */"./src/index.js")},xgplayer:
/*!*************************!*\
  !*** external "Player" ***!
  \*************************/
/*! no static exports found */function(e,t){e.exports=window.Player}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,