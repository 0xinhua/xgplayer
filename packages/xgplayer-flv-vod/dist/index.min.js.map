{"version":3,"file":"index.min.js","sources":["../../xgplayer-transmuxer-model-mediainfo/es/index.js","../../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../xgplayer-transmuxer-context/es/index.js","../../xgplayer-transmuxer-loader-fetch/es/index.js","../../xgplayer-transmuxer-model-trackmeta/es/index.js","../../xgplayer-transmuxer-codec-avc/es/golomb.js","../../xgplayer-transmuxer-codec-avc/es/sps.js","../../xgplayer-transmuxer-codec-avc/es/rbsp.js","../../xgplayer-transmuxer-codec-avc/es/sei.js","../../xgplayer-transmuxer-codec-avc/es/nalunit.js","../../xgplayer-transmuxer-buffer-track/es/index.js","../../xgplayer-utils-utf8/es/index.js","../../xgplayer-transmuxer-demux-flv/es/amf-parser.js","../../xgplayer-transmuxer-buffer-stream/es/index.js","../../xgplayer-transmuxer-demux-flv/es/index.js","../../xgplayer-transmuxer-model-mediasegmentlist/es/index.js","../../xgplayer-transmuxer-remux-mp4/es/buffer.js","../../xgplayer-transmuxer-remux-mp4/es/fmp4.js","../../xgplayer-transmuxer-remux-mp4/es/index.js","../../xgplayer-transmuxer-buffer-presource/es/index.js","../../xgplayer-transmuxer-buffer-xgbuffer/es/index.js","../../xgplayer-transmuxer-codec-aac/es/index.js","../../xgplayer-transmuxer-codec-compatibility/es/index.js","../../xgplayer-utils-mse/es/index.js","../../xgplayer-transmuxer-constant-events/es/index.js","../../xgplayer-transmuxer-codec-avc/es/index.js","../../xgplayer-utils-sniffer/es/index.js","../../xgplayer-transmuxer-remux-mp4/node_modules/concat-typed-array/lib/concat.js","../../xgplayer-transmuxer-remux-mp4/node_modules/concat-typed-array/lib/index.js","../src/flv-vod.js","../src/index.js"],"sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isObjectFilled = function isObjectFilled(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nvar MediaInfo = function () {\n  function MediaInfo() {\n    _classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n\n    this.hasVideo = null;\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n    };\n\n    this.hasAudio = null;\n\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    };\n  }\n\n  _createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this);\n    }\n  }], [{\n    key: \"isBaseInfoReady\",\n    value: function isBaseInfoReady(mediaInfo) {\n      return isObjectFilled(mediaInfo);\n    }\n  }, {\n    key: \"isVideoReady\",\n    value: function isVideoReady(mediaInfo) {\n      if (!mediaInfo.hasVideo) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }, {\n    key: \"isAudioReady\",\n    value: function isAudioReady(mediaInfo) {\n      if (!mediaInfo.hasAudio) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }]);\n\n  return MediaInfo;\n}();\n\nexport default MediaInfo;","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport MediaInfo from 'xgplayer-transmuxer-model-mediainfo';\nimport { EventEmitter } from 'events';\n\nvar DIRECT_EMIT_FLAG = '__TO__';\n\nvar Context = function () {\n  function Context() {\n    var allowedEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, Context);\n\n    this._emitter = new EventEmitter();\n    if (!this._emitter.off) {\n      this._emitter.off = this._emitter.removeListener;\n    }\n\n    this.mediaInfo = new MediaInfo();\n    this._instanceMap = {}; // 所有的解码流程实例\n    this._clsMap = {}; // 构造函数的map\n    this._inited = false;\n    this.allowedEvents = allowedEvents;\n    this._hooks = {}; // 注册在事件前/后的钩子，例如 before('DEMUX_COMPLETE')\n  }\n\n  /**\n   * 从上下文中获取解码流程实例，如果没有实例，构造一个\n   * @param tag\n   * @param args\n   * @returns {*}\n   */\n\n\n  _createClass(Context, [{\n    key: 'getInstance',\n    value: function getInstance(tag) {\n      var instance = this._instanceMap[tag];\n      if (instance) {\n        return instance;\n      } else {\n        // throw new Error(`${tag}实例尚未初始化`)\n        return null;\n      }\n    }\n\n    /**\n     * 初始化具体实例\n     * @param tag\n     * @param args\n     */\n\n  }, {\n    key: 'initInstance',\n    value: function initInstance(tag) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var a = args[0],\n          b = args[1],\n          c = args[2],\n          d = args[3];\n\n      if (this._clsMap[tag]) {\n        var newInstance = new this._clsMap[tag](a, b, c, d);\n        this._instanceMap[tag] = newInstance;\n        if (newInstance.init) {\n          newInstance.init(); // TODO: lifecircle\n        }\n        return newInstance;\n      } else {\n        throw new Error(tag + '\\u672A\\u5728context\\u4E2D\\u6CE8\\u518C');\n      }\n    }\n\n    /**\n     * 避免大量的initInstance调用，初始化所有的组件\n     * @param config\n     */\n\n  }, {\n    key: 'init',\n    value: function init(config) {\n      if (this._inited) {\n        return;\n      }\n      for (var tag in this._clsMap) {\n        // if not inited, init an instance\n        if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n          this.initInstance(tag, config);\n        }\n      }\n      this._inited = true;\n    }\n\n    /**\n     * 注册一个上下文流程，提供安全的事件发送机制\n     * @param tag\n     * @param cls\n     */\n\n  }, {\n    key: 'registry',\n    value: function registry(tag, cls) {\n      var _this2 = this;\n\n      var emitter = this._emitter;\n      var checkMessageName = this._isMessageNameValid.bind(this);\n      var self = this;\n      var enhanced = function (_cls) {\n        _inherits(enhanced, _cls);\n\n        function enhanced(a, b, c) {\n          _classCallCheck(this, enhanced);\n\n          var _this = _possibleConstructorReturn(this, (enhanced.__proto__ || Object.getPrototypeOf(enhanced)).call(this, a, b, c));\n\n          _this.listeners = {};\n          _this.onceListeners = {};\n          _this.TAG = tag;\n          _this._context = self;\n          return _this;\n        }\n\n        _createClass(enhanced, [{\n          key: 'on',\n          value: function on(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.listeners[messageName]) {\n              this.listeners[messageName].push(callback);\n            } else {\n              this.listeners[messageName] = [callback];\n            }\n\n            emitter.on('' + messageName + DIRECT_EMIT_FLAG + tag, callback); // 建立定向通信监听\n            return emitter.on(messageName, callback);\n          }\n\n          /**\n           * 在某个事件触发前执行\n           * @param messageName\n           * @param callback\n           */\n\n        }, {\n          key: 'before',\n          value: function before(messageName, callback) {\n            checkMessageName(messageName);\n            if (self._hooks[messageName]) {\n              self._hooks[messageName].push(callback);\n            } else {\n              self._hooks[messageName] = [callback];\n            }\n          }\n        }, {\n          key: 'once',\n          value: function once(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.onceListeners[messageName]) {\n              this.onceListeners[messageName].push(callback);\n            } else {\n              this.onceListeners[messageName] = [callback];\n            }\n\n            emitter.once('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n            return emitter.once(messageName, callback);\n          }\n        }, {\n          key: 'emit',\n          value: function emit(messageName) {\n            checkMessageName(messageName);\n            // console.log('emit ', messageName);\n\n            var beforeList = self._hooks ? self._hooks[messageName] : null;\n\n            if (beforeList) {\n              for (var i = 0, len = beforeList.length; i < len; i++) {\n                var callback = beforeList[i];\n                callback();\n              }\n            }\n\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            return emitter.emit.apply(emitter, [messageName].concat(args));\n          }\n\n          /**\n           * 定向发送给某个组件单例的消息\n           * @param messageName\n           * @param args\n           */\n\n        }, {\n          key: 'emitTo',\n          value: function emitTo(tag, messageName) {\n            checkMessageName(messageName);\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n              args[_key3 - 2] = arguments[_key3];\n            }\n\n            return emitter.emit.apply(emitter, ['' + messageName + DIRECT_EMIT_FLAG + tag].concat(args));\n          }\n        }, {\n          key: 'off',\n          value: function off(messageName, callback) {\n            checkMessageName(messageName);\n            return emitter.off(messageName, callback);\n          }\n        }, {\n          key: 'removeListeners',\n          value: function removeListeners() {\n            var hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners);\n\n            for (var messageName in this.listeners) {\n              if (hasOwn(messageName)) {\n                var callbacks = this.listeners[messageName] || [];\n                for (var i = 0; i < callbacks.length; i++) {\n                  var callback = callbacks[i];\n                  emitter.off(messageName, callback);\n                  emitter.off('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n                }\n              }\n            }\n\n            for (var _messageName in this.onceListeners) {\n              if (hasOwn(_messageName)) {\n                var _callbacks = this.onceListeners[_messageName] || [];\n                for (var _i = 0; _i < _callbacks.length; _i++) {\n                  var _callback = _callbacks[_i];\n                  emitter.off(_messageName, _callback);\n                  emitter.off('' + _messageName + DIRECT_EMIT_FLAG + tag, _callback);\n                }\n              }\n            }\n          }\n\n          /**\n           * 在组件销毁时，默认将它注册的事件全部卸载，确保不会造成内存泄漏\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            // step1 unlisten events\n            this.removeListeners();\n            this.listeners = {};\n\n            // step2 release from context\n            delete self._instanceMap[tag];\n            if (_get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this)) {\n              return _get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this).call(this);\n            }\n          }\n        }]);\n\n        return enhanced;\n      }(cls);\n      this._clsMap[tag] = enhanced;\n\n      /**\n       * get instance immediately\n       * e.g const instance = context.registry(tag, Cls)(config)\n       * */\n      return function () {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return _this2.initInstance.apply(_this2, [tag].concat(args));\n      };\n    }\n\n    /**\n     * 各个模块处理seek\n     * @param time\n     */\n\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      this._emitter.emit(EVENTS.PLAYER_EVENTS.SEEK, time);\n    }\n\n    /**\n     * 对存在的实例进行\n     */\n\n  }, {\n    key: 'destroyInstances',\n    value: function destroyInstances() {\n      var _this3 = this;\n\n      Object.keys(this._instanceMap).forEach(function (tag) {\n        if (_this3._instanceMap[tag].destroy) {\n          _this3._instanceMap[tag].destroy();\n        }\n      });\n    }\n\n    /**\n     * 编解码流程无需关注事件的解绑\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._emitter = null;\n      this.allowedEvents = [];\n      this._clsMap = null;\n      this._context = null;\n      this._hooks = null;\n      this.destroyInstances();\n    }\n\n    /**\n     * 对信道进行收拢\n     * @param messageName\n     * @private\n     */\n\n  }, {\n    key: '_isMessageNameValid',\n    value: function _isMessageNameValid(messageName) {\n      if (!this.allowedEvents.indexOf(messageName) < 0) {\n        throw new Error('unregistered message name: ' + messageName);\n      }\n    }\n  }]);\n\n  return Context;\n}();\n\nexport default Context;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    _classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  _createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'load',\n    value: function load(url, opts) {\n      var _this2 = this;\n\n      this.url = url;\n\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n      this.loading = true;\n      return fetch(this.url, params).then(function (response) {\n        if (response.ok) {\n          _this2.status = response.status;\n          Promise.resolve().then(function () {\n            _this2._onFetchResponse(response);\n          });\n\n          return Promise.resolve(response);\n        }\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, new Error(response.status + ' (' + response.statusText + ')'));\n      }).catch(function (error) {\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var _this3 = this;\n\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n      this._reader && this._reader.read().then(function (val) {\n        if (_this3._canceled || _this3._destroyed) {\n          if (_this3._reader) {\n            try {\n              _this3._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this3.loading = false;\n          _this3.status = 0;\n          Promise.resolve().then(function () {\n            _this3.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          });\n          return;\n        }\n\n        buffer.push(val.value);\n        Promise.resolve().then(function () {\n          _this3.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        });\n        return _this3._onReader(reader, taskno);\n      }).catch(function (error) {\n        _this3.loading = false;\n        _this3.emit(LOADER_EVENTS.LOADER_ERROR, _this3.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // 添加自定义头\n      };if (_typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (_typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials 在默认情况下不被使用。\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // 防止failed: 200错误被打印到控制台上\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      this._canceled = true;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      this.cancel();\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n\n  return FetchLoader;\n}();\n\nexport default FetchLoader;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    _classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    _classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n\n  return VideoTrackMeta;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Golomb = function () {\n  function Golomb(uint8array) {\n    _classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  _createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO 异常处理\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }]);\n\n  return Golomb;\n}();\n\nexport default Golomb;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    _classCallCheck(this, SPSParser);\n  }\n\n  _createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1,\n          par_height = 1;\n      var fps = 0,\n          fps_fixed = true,\n          fps_num = 0,\n          fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0,\n          crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var lastScale = 8;\n      var nextScale = 8;\n      var deltaScale = 0;\n      for (var i = 0; i < count; i++) {\n        if (nextScale !== 0) {\n          deltaScale = gb.readSEG();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n      return meta;\n    }\n  }]);\n\n  return SPSParser;\n}();\n\nexport default SPSParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RBSP = function () {\n  function RBSP() {\n    _classCallCheck(this, RBSP);\n  }\n\n  _createClass(RBSP, null, [{\n    key: \"EBSP2RBSP\",\n\n    /**\n     * convert EBSP to RBSP\n     * @param data {Uint8Array}\n     * @returns {Uint8Array}\n     * @constructor\n     */\n    value: function EBSP2RBSP(data) {\n      return data.filter(function (el, idx) {\n        if (idx < 2) {\n          return true;\n        } else {\n          return !(data[idx - 2] === 0 && data[idx - 1] === 0 && el === 3);\n        }\n      });\n    }\n\n    /**\n     * @param data {Uint8Array}\n     * @constructor\n     */\n\n  }, {\n    key: \"EBSP2SODB\",\n    value: function EBSP2SODB(data) {\n      var lastByte = data[data.byteLength - 1];\n      if (lastByte && lastByte === 128) {\n        return data.slice(0, data.byteLength - 1);\n      }\n\n      return data;\n    }\n  }]);\n\n  return RBSP;\n}();\n\nexport default RBSP;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport RBSP from './rbsp';\n\nvar u8aToString = function u8aToString(data) {\n  var result = '';\n  for (var i = 0; i < data.byteLength; i++) {\n    result += String.fromCharCode(data[i]);\n  }\n  return result;\n};\n\nvar SEIParser = function () {\n  function SEIParser() {\n    _classCallCheck(this, SEIParser);\n  }\n\n  _createClass(SEIParser, null, [{\n    key: '_resolveNalu',\n    value: function _resolveNalu(data) {\n      if (data.length >= 1) {\n        return RBSP.EBSP2SODB(RBSP.EBSP2RBSP(data.slice(1)));\n      }\n      return null;\n    }\n    /**\n     *\n     * @param data {Uint8Array}\n     */\n\n  }, {\n    key: 'parse',\n    value: function parse(data) {\n      var sodb = SEIParser._resolveNalu(data);\n\n      var _SEIParser$switchPayl = SEIParser.switchPayloadType(sodb),\n          payloadType = _SEIParser$switchPayl.payloadType,\n          offset = _SEIParser$switchPayl.offset;\n\n      var content = sodb.slice(offset);\n\n      switch (payloadType) {\n        case 5:\n          return SEIParser.user_data_unregistered(content);\n        default:\n          return {};\n      }\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {{payloadType: number, offset: number}}\n     */\n\n  }, {\n    key: 'switchPayloadType',\n    value: function switchPayloadType(data) {\n      var dv = new DataView(data.buffer);\n      var payloadType = 0;\n      var offset = 0;\n      while (dv.getUint8(offset) === 255) {\n        offset++;\n        payloadType += 255;\n      }\n      payloadType += dv.getUint8(offset++);\n\n      return {\n        payloadType: payloadType,\n        offset: offset\n      };\n    }\n\n    /**\n     *\n     * @param data {Uint8Array}\n     * @return {{ payloadLength: number, offset: number }}\n     */\n\n  }, {\n    key: 'getPayloadLength',\n    value: function getPayloadLength(data) {\n      var dv = new DataView(data.buffer);\n\n      var payloadLength = 0;\n      var offset = 0;\n      while (dv.getUint8(offset) === 255) {\n        offset++;\n        payloadLength += 255;\n      }\n      payloadLength += dv.getUint8(offset++);\n\n      return {\n        payloadLength: payloadLength,\n        offset: offset\n      };\n    }\n\n    /**\n     * resolve 0x05 user data unregistered\n     * @param data {Uint8Array}\n     */\n    // eslint-disable-next-line camelcase\n\n  }, {\n    key: 'user_data_unregistered',\n    value: function user_data_unregistered(data) {\n      var _SEIParser$getPayload = SEIParser.getPayloadLength(data),\n          payloadLength = _SEIParser$getPayload.payloadLength,\n          offset = _SEIParser$getPayload.offset;\n\n      if (payloadLength < 16) {\n        return {\n          uuid: '',\n          content: null\n        };\n      }\n      var payload = data.slice(offset);\n\n      var uuid = u8aToString(payload.slice(0, 16));\n      var content = u8aToString(payload.slice(16, payloadLength));\n\n      return {\n        uuid: uuid,\n        content: content\n      };\n    }\n  }]);\n\n  return SEIParser;\n}();\n\nexport default SEIParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport SpsParser from './sps';\nimport SEIParser from './sei';\nimport RBSP from './rbsp';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    _classCallCheck(this, Nalunit);\n  }\n\n  _createClass(Nalunit, null, [{\n    key: 'getNalunits',\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      // buffer.buffer = RBSP.EBSP2RBSP(new Uint8Array(buffer.buffer)).buffer;\n      // buffer.dataview = new DataView(buffer.buffer)\n      // buffer.dataview.position = 0;\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32(buffer.dataview.position);\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = new Uint8Array(buffer.buffer.slice(buffer.position, buffer.position + length));\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          unit.sei = SEIParser.parse(unit.body);\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = buffer.length;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225;\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n\n  return Nalunit;\n}();\n\nexport default Nalunit;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Track = function () {\n  /**\n   * The constructor.\n   */\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.id = -1;\n    this.sequenceNumber = 0;\n    this.samples = [];\n    this.droppedSamples = [];\n    this.length = 0;\n  }\n\n  /**\n   * Reset the track.\n   */\n\n\n  _createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n    /**\n     * destroy the track.\n     */\n\n  }, {\n    key: 'distroy',\n    value: function distroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  /**\n   * The constructor for audio track.\n   */\n  function AudioTrack() {\n    _classCallCheck(this, AudioTrack);\n\n    var _this = _possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  _inherits(VideoTrack, _Track2);\n\n  /**\n   * The constructor for video track.\n   */\n  function VideoTrack() {\n    _classCallCheck(this, VideoTrack);\n\n    var _this2 = _possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    _this2.type = 'video';\n    _this2.dropped = 0;\n    return _this2;\n  }\n  /**\n   * reset the video track.\n   */\n\n\n  _createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    _classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  _createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n\n  return Tracks;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UTF8 = function () {\n  function UTF8() {\n    _classCallCheck(this, UTF8);\n  }\n\n  _createClass(UTF8, null, [{\n    key: 'decode',\n    value: function decode(uint8array) {\n      var out = [];\n      var input = uint8array;\n      var i = 0;\n      var length = uint8array.length;\n\n      while (i < length) {\n        if (input[i] < 0x80) {\n          out.push(String.fromCharCode(input[i]));\n          ++i;\n          continue;\n        } else if (input[i] < 0xC0) {\n          // fallthrough\n        } else if (input[i] < 0xE0) {\n          if (UTF8._checkContinuation(input, i, 1)) {\n            var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n            if (ucs4 >= 0x80) {\n              out.push(String.fromCharCode(ucs4 & 0xFFFF));\n              i += 2;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF0) {\n          if (UTF8._checkContinuation(input, i, 2)) {\n            var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n            if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n              out.push(String.fromCharCode(_ucs & 0xFFFF));\n              i += 3;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF8) {\n          if (UTF8._checkContinuation(input, i, 3)) {\n            var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n            if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n              _ucs2 -= 0x10000;\n              out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n              out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n              i += 4;\n              continue;\n            }\n          }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n      }\n\n      return out.join('');\n    }\n  }, {\n    key: '_checkContinuation',\n    value: function _checkContinuation(uint8array, start, checkLength) {\n      var array = uint8array;\n      if (start + checkLength < array.length) {\n        while (checkLength--) {\n          if ((array[++start] & 0xC0) !== 0x80) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return UTF8;\n}();\n\nexport default UTF8;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport sniffer from 'xgplayer-utils-sniffer';\nimport UTF8 from 'xgplayer-utils-utf8';\n\nvar isLe = sniffer.isLe;\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta信息解析\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    _classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  _createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * 解析meta中的变量\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n\n  return AMFParser;\n}();\n\nexport default AMFParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Stream = function () {\n  function Stream(buffer) {\n    _classCallCheck(this, Stream);\n\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.dataview = new DataView(buffer);\n      this.dataview.position = 0;\n    } else {\n      throw new Error('data is invalid');\n    }\n  }\n\n  _createClass(Stream, [{\n    key: 'back',\n    value: function back(count) {\n      this.position -= count;\n    }\n  }, {\n    key: 'skip',\n    value: function skip(count) {\n      var loop = Math.floor(count / 4);\n      var last = count % 4;\n      for (var i = 0; i < loop; i++) {\n        Stream.readByte(this.dataview, 4);\n      }\n      if (last > 0) {\n        Stream.readByte(this.dataview, last);\n      }\n    }\n\n    /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n\n  }, {\n    key: 'readUint8',\n    value: function readUint8() {\n      return Stream.readByte(this.dataview, 1);\n    }\n  }, {\n    key: 'readUint16',\n    value: function readUint16() {\n      return Stream.readByte(this.dataview, 2);\n    }\n  }, {\n    key: 'readUint24',\n    value: function readUint24() {\n      return Stream.readByte(this.dataview, 3);\n    }\n  }, {\n    key: 'readUint32',\n    value: function readUint32() {\n      return Stream.readByte(this.dataview, 4);\n    }\n  }, {\n    key: 'readUint64',\n    value: function readUint64() {\n      return Stream.readByte(this.dataview, 8);\n    }\n  }, {\n    key: 'readInt8',\n    value: function readInt8() {\n      return Stream.readByte(this.dataview, 1, true);\n    }\n  }, {\n    key: 'readInt16',\n    value: function readInt16() {\n      return Stream.readByte(this.dataview, 2, true);\n    }\n  }, {\n    key: 'readInt32',\n    value: function readInt32() {\n      return Stream.readByte(this.dataview, 4, true);\n    }\n  }, {\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >>> 24 & 0xff, value >>> 16 & 0xff, value >>> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.buffer.byteLength;\n    }\n  }, {\n    key: 'position',\n    set: function set(value) {\n      this.dataview.position = value;\n    },\n    get: function get() {\n      return this.dataview.position;\n    }\n  }], [{\n    key: 'readByte',\n    value: function readByte(buffer, size, sign) {\n      var res = void 0;\n      switch (size) {\n        case 1:\n          if (sign) {\n            res = buffer.getInt8(buffer.position);\n          } else {\n            res = buffer.getUint8(buffer.position);\n          }\n          break;\n        case 2:\n          if (sign) {\n            res = buffer.getInt16(buffer.position);\n          } else {\n            res = buffer.getUint16(buffer.position);\n          }\n          break;\n        case 3:\n          if (sign) {\n            throw new Error('not supported for readByte 3');\n          } else {\n            res = buffer.getUint8(buffer.position) << 16;\n            res |= buffer.getUint8(buffer.position + 1) << 8;\n            res |= buffer.getUint8(buffer.position + 2);\n          }\n          break;\n        case 4:\n          if (sign) {\n            res = buffer.getInt32(buffer.position);\n          } else {\n            res = buffer.getUint32(buffer.position);\n          }\n          break;\n        case 8:\n          if (sign) {\n            throw new Error('not supported for readBody 8');\n          } else {\n            res = buffer.getUint32(buffer.position) << 32;\n            res |= buffer.getUint32(buffer.position + 4);\n          }\n          break;\n        default:\n          res = '';\n      }\n      buffer.position += size;\n      return res;\n    }\n  }]);\n\n  return Stream;\n}();\n\nexport default Stream;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport { AudioTrackMeta, VideoTrackMeta } from 'xgplayer-transmuxer-model-trackmeta';\nimport { SpsParser, NalUnit } from 'xgplayer-transmuxer-codec-avc';\nimport { VideoTrack, AudioTrack } from 'xgplayer-transmuxer-buffer-track';\nimport AMFParser from './amf-parser';\nimport Stream from 'xgplayer-transmuxer-buffer-stream';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    _classCallCheck(this, FlvDemuxer);\n\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n  }\n\n  _createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this));\n    }\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'doParseFlv',\n    value: function doParseFlv() {\n      if (!this._firstFragmentLoaded) {\n        if (this.loaderBuffer.length < 13) {\n          return;\n        }\n        var header = this.loaderBuffer.shift(13);\n        this.parseFlvHeader(header);\n        this.doParseFlv(); // 递归调用，继续解析flv流\n      } else {\n        if (this.loaderBuffer.length < 11) {\n          return;\n        }\n        var chunk = void 0;\n\n        var loopMax = 10000; // 防止死循环产生\n        do {\n          // console.log('mark4')\n          chunk = this._parseFlvTag();\n        } while (chunk && loopMax-- > 0);\n\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'));\n        this.doParseFlv();\n      } else {\n        this._firstFragmentLoaded = true;\n        // const playType = FlvDemuxer.getPlayType(header[4])\n\n        this.initVideoTrack();\n        this.initAudioTrack();\n      }\n      this.doParseFlv();\n    }\n\n    /**\n     * init default video track configs\n     */\n\n  }, {\n    key: 'initVideoTrack',\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8、9、18\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag() {\n      if (this.loaderBuffer.length < 11) {\n        return null;\n      }\n      var chunk = this._parseFlvTagHeader();\n      if (chunk) {\n        this._processChunk(chunk);\n      }\n      return chunk;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader() {\n      var offset = 0;\n      var chunk = {};\n\n      var tagType = this.loaderBuffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      chunk.filtered = (tagType & 32) >>> 5;\n      chunk.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      chunk.datasize = this.loaderBuffer.toInt(offset, 3);\n      offset += 3;\n\n      if (chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18 || this.loaderBuffer.toInt(8, 3) !== 0) {\n        if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n          this.loaderBuffer.shift(1);\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false);\n        return null;\n      }\n\n      if (this.loaderBuffer.length < chunk.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      this.loaderBuffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = this.loaderBuffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      chunk.dts = timestamp;\n\n      // streamId\n      this.loaderBuffer.shift(3);\n      return chunk;\n    }\n  }, {\n    key: '_processChunk',\n    value: function _processChunk(chunk) {\n      switch (chunk.tagType) {\n        case 18:\n          this._parseScriptData(chunk);\n          break;\n        case 8:\n          this._parseAACData(chunk);\n          break;\n        case 9:\n          this._parseHevcData(chunk);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          this.loaderBuffer.shift(3);\n          break;\n        default:\n          this.loaderBuffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(chunk) {\n      var audioTrack = this.tracks.audioTrack;\n      var videoTrack = this.tracks.videoTrack;\n\n      var data = this.loaderBuffer.shift(chunk.datasize);\n\n      var info = new AMFParser().resolve(data, data.length);\n\n      var onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined;\n\n      // fill mediaInfo\n      this._context.mediaInfo.duration = onMetaData.duration;\n      this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n\n      var validate = this._datasizeValidator(chunk.datasize);\n      if (validate) {\n        this.emit(DEMUX_EVENTS.MEDIA_INFO);\n        this._hasScript = true;\n      }\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 6) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n  }, {\n    key: '_parseAACData',\n    value: function _parseAACData(chunk) {\n      var track = this.tracks.audioTrack;\n      if (!track) {\n        return;\n      }\n\n      var meta = track.meta;\n\n      if (!meta) {\n        track.meta = new AudioTrackMeta();\n        meta = track.meta;\n      }\n\n      var info = this.loaderBuffer.shift(1)[0];\n\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      track.format = format;\n\n      if (format !== 10) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid audio format: ' + format));\n      }\n\n      if (format === 10 && !this._hasAudioSequence) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      delete chunk.tagType;\n      var validate = this._datasizeValidator(chunk.datasize);\n\n      if (chunk.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(chunk.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this._context.mediaInfo.duration * meta.timescale;\n        meta.config = aacHeader.config;\n\n        var audioMedia = this._context.mediaInfo.audio;\n\n        // fill audio media info\n        audioMedia.codec = aacHeader.codec;\n        audioMedia.channelCount = aacHeader.channelCount;\n        audioMedia.sampleRate = audioSampleRate;\n        audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex;\n\n        if (!this._hasAudioSequence) {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n        } else {\n          this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n          // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        }\n        this._hasAudioSequence = true;\n\n        this._metaChange = true;\n      } else {\n        if (this._metaChange) {\n          chunk.options = {\n            meta: track.meta\n          };\n          this._metaChange = false;\n        }\n\n        chunk.data = chunk.data.slice(1, chunk.data.length);\n        track.samples.push(chunk);\n      }\n      if (!validate) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false);\n        // this.logger.warn(this.TAG, error.message)\n      }\n    }\n\n    /**\n     * parse hevc/avc video data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseHevcData',\n    value: function _parseHevcData(chunk) {\n      // header\n      var info = this.loaderBuffer.shift(1)[0];\n      chunk.frameType = (info & 0xf0) >>> 4;\n      chunk.isKeyframe = chunk.frameType === 1;\n      // let tempCodecID = this.tracks.videoTrack.codecID\n      var codecID = info & 0x0f;\n      this.tracks.videoTrack.codecID = codecID;\n\n      // hevc和avc的header解析方式一样\n      chunk.avcPacketType = this.loaderBuffer.shift(1)[0];\n      chunk.cts = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 12) {\n        var data = this.loaderBuffer.shift(chunk.datasize - 5);\n        chunk.data = data;\n\n        if (Number.parseInt(chunk.avcPacketType) !== 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          }\n          var nalu = {};\n          var r = 0;\n          nalu.cts = chunk.cts;\n          nalu.dts = chunk.dts;\n          while (chunk.data.length > r) {\n            var sizes = chunk.data.slice(Number.parseInt(r), 4 + r);\n            nalu.size = sizes[3];\n            nalu.size += sizes[2] * 256;\n            nalu.size += sizes[1] * 256 * 256;\n            nalu.size += sizes[0] * 256 * 256 * 256;\n            r += 4;\n            nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r);\n            r += nalu.size;\n            this.tracks.videoTrack.samples.push(nalu);\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          } else {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        }\n      } else if (codecID === 7) {\n        var _data = this.loaderBuffer.shift(chunk.datasize - 5);\n        if (_data[4] === 0 && _data[5] === 0 && _data[6] === 0 && _data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + _data[i];\n          }\n          avcclength -= 4;\n          _data = _data.slice(4, _data.length);\n          _data[3] = avcclength % 256;\n          avcclength = (avcclength - _data[3]) / 256;\n          _data[2] = avcclength % 256;\n          avcclength = (avcclength - _data[2]) / 256;\n          _data[1] = avcclength % 256;\n          _data[0] = (avcclength - _data[1]) / 256;\n        }\n\n        chunk.data = _data;\n        // If it is AVC sequece Header.\n        if (chunk.avcPacketType === 0) {\n          this._avcSequenceHeaderParser(chunk.data);\n          var validate = this._datasizeValidator(chunk.datasize);\n          if (validate) {\n            if (!this._hasVideoSequence) {\n              this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n            } else {\n              this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n              // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n            }\n            this._hasVideoSequence = true;\n          }\n          this._metaChange = true;\n        } else {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n            return;\n          }\n          var nals = NalUnit.getAvccNals(new Stream(chunk.data.buffer));\n          for (var _i = 0; _i < nals.length; _i++) {\n            var unit = nals[_i];\n            NalUnit.analyseNal(unit);\n            if (unit.sei) {\n              this.emit(DEMUX_EVENTS.SEI_PARSED, unit.sei);\n            }\n          }\n          if (this._metaChange) {\n            chunk.options = {\n              meta: Object.assign({}, this.tracks.videoTrack.meta)\n            };\n            this._metaChange = false;\n          }\n          this.tracks.videoTrack.samples.push(chunk);\n          // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n        }\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('video codeid is ' + codecID), false);\n        chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n        }\n\n        this.tracks.videoTrack.samples.push(chunk);\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n      delete chunk.tagType;\n    }\n\n    /**\n     * parse avc metadata\n     * @param data\n     * @private\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var track = this.tracks.videoTrack;\n\n      if (!track) {\n        return;\n      }\n\n      var offset = 0;\n\n      if (!track.meta) {\n        track.meta = new VideoTrackMeta();\n      }\n      var meta = track.meta;\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        this.tracks.videoTrack.meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i2 = 0; _i2 < numOfPps; _i2++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        this.tracks.videoTrack.meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      // fill video media info\n      var videoMedia = this._context.mediaInfo.video;\n\n      videoMedia.codec = meta.codec;\n      videoMedia.profile = meta.profile;\n      videoMedia.level = meta.level;\n      videoMedia.chromaFormat = meta.chromaFormat;\n      videoMedia.frameRate = meta.frameRate;\n      videoMedia.parRatio = meta.parRatio;\n      videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth;\n      videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight;\n\n      meta.duration = this._context.mediaInfo.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      track.meta = meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize) {\n      var datasizeConfirm = this.loaderBuffer.toInt(0, 4);\n      this.loaderBuffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'isFlvFile',\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MediaSegmentList = function () {\n  function MediaSegmentList(type) {\n    _classCallCheck(this, MediaSegmentList);\n\n    this._type = type;\n    this._list = [];\n    this._lastAppendLocation = -1; // cached last insert location\n  }\n\n  _createClass(MediaSegmentList, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this._list.length === 0;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._list = [];\n      this._lastAppendLocation = -1;\n    }\n  }, {\n    key: \"_searchNearestSegmentBefore\",\n    value: function _searchNearestSegmentBefore(beginDts) {\n      var list = this._list;\n      if (list.length === 0) {\n        return -2;\n      }\n      var last = list.length - 1;\n      var mid = 0;\n      var lbound = 0;\n      var ubound = last;\n\n      var idx = 0;\n\n      if (beginDts < list[0].originDts) {\n        idx = -1;\n        return idx;\n      }\n\n      while (lbound <= ubound) {\n        mid = lbound + Math.floor((ubound - lbound) / 2);\n        if (mid === last || beginDts > list[mid].lastSample.originDts && beginDts < list[mid + 1].originDts) {\n          idx = mid;\n          break;\n        } else if (list[mid].originDts < beginDts) {\n          lbound = mid + 1;\n        } else {\n          ubound = mid - 1;\n        }\n      }\n      return idx;\n    }\n  }, {\n    key: \"_searchNearestSegmentAfter\",\n    value: function _searchNearestSegmentAfter(beginDts) {\n      return this._searchNearestSegmentBefore(beginDts) + 1;\n    }\n  }, {\n    key: \"append\",\n    value: function append(segment) {\n      var list = this._list;\n      var lastAppendIdx = this._lastAppendLocation;\n      var insertIdx = 0;\n\n      if (lastAppendIdx !== -1 && lastAppendIdx < list.length && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && segment.originStartDts < list[lastAppendIdx + 1].originStartDts)) {\n        insertIdx = lastAppendIdx + 1; // use cached location idx\n      } else {\n        if (list.length > 0) {\n          insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n        }\n      }\n\n      this._lastAppendLocation = insertIdx;\n      this._list.splice(insertIdx, 0, segment);\n    }\n  }, {\n    key: \"getLastSegmentBefore\",\n    value: function getLastSegmentBefore(beginDts) {\n      var idx = this._searchNearestSegmentBefore(beginDts);\n      if (idx >= 0) {\n        return this._list[idx];\n      } else {\n        // -1\n        return null;\n      }\n    }\n  }, {\n    key: \"getLastSampleBefore\",\n    value: function getLastSampleBefore(beginDts) {\n      var segment = this.getLastSegmentBefore(beginDts);\n      if (segment !== null) {\n        return segment.lastSample;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getLastRAPBefore\",\n    value: function getLastRAPBefore(beginDts) {\n      var segmentIdx = this._searchNearestSegmentBefore(beginDts);\n      var randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n      while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n        segmentIdx--;\n        randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n      }\n      if (randomAccessPoints.length > 0) {\n        return randomAccessPoints[randomAccessPoints.length - 1];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._list.length;\n    }\n  }]);\n\n  return MediaSegmentList;\n}();\n\nexport default MediaSegmentList;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    _classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  _createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n\n  return Buffer;\n}();\n\nexport default Buffer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Buffer from './buffer';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar Fmp4 = function () {\n  function Fmp4() {\n    _classCallCheck(this, Fmp4);\n  }\n\n  _createClass(Fmp4, null, [{\n    key: 'size',\n    value: function size(value) {\n      return Buffer.writeUint32(value);\n    }\n  }, {\n    key: 'initBox',\n    value: function initBox(size, name) {\n      var buffer = new Buffer();\n\n      for (var _len = arguments.length, content = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        content[_key - 2] = arguments[_key];\n      }\n\n      buffer.write.apply(buffer, [Fmp4.size(size), Fmp4.type(name)].concat(content));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'extension',\n    value: function extension(version, flag) {\n      return new Uint8Array([version, flag >> 16 & 0xff, flag >> 8 & 0xff, flag & 0xff]);\n    }\n  }, {\n    key: 'ftyp',\n    value: function ftyp() {\n      return Fmp4.initBox(24, 'ftyp', new Uint8Array([0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n      ]));\n    }\n  }, {\n    key: 'moov',\n    value: function moov(_ref) {\n      var type = _ref.type,\n          meta = _ref.meta;\n\n      var size = 8;\n      var mvhd = Fmp4.mvhd(meta.duration, meta.timescale);\n      var trak = void 0;\n\n      if (type === 'video') {\n        trak = Fmp4.videoTrak(meta);\n      } else {\n        trak = Fmp4.audioTrak(meta);\n      }\n\n      var mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n      [mvhd, trak, mvex].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moov', mvhd, trak, mvex);\n    }\n  }, {\n    key: 'mvhd',\n    value: function mvhd(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n\n      // duration *= timescale;\n      var bytes = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      timescale >>> 24 & 0xFF, timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n      ]);\n      return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes));\n    }\n  }, {\n    key: 'videoTrak',\n    value: function videoTrak(data) {\n      var size = 8;\n\n      var tkhd = Fmp4.tkhd({\n        id: 1,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: data.presentWidth,\n        height: data.presentHeight,\n        type: 'video'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'video',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        avcc: data.avcc,\n        parRatio: data.parRatio,\n        width: data.presentWidth,\n        height: data.presentHeight\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'audioTrak',\n    value: function audioTrak(data) {\n      var size = 8;\n      var tkhd = Fmp4.tkhd({\n        id: 2,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: 0,\n        height: 0,\n        type: 'audio'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'audio',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        channelCount: data.channelCount,\n        samplerate: data.sampleRate,\n        config: data.config\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'tkhd',\n    value: function tkhd(data) {\n      var id = data.id;\n      var duration = data.duration;\n      var width = data.width;\n      var height = data.height;\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      id >>> 24 & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      id >>> 16 & 0xFF, id >>> 8 & 0xFF, id & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      duration >>> 24 & 0xFF, // duration: 4 bytes track的时间长度\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      width >>> 8 & 0xFF, // //宽度\n      width & 0xFF, 0x00, 0x00, height >>> 8 & 0xFF, // 高度\n      height & 0xFF, 0x00, 0x00]);\n      return Fmp4.initBox(8 + content.byteLength, 'tkhd', content);\n    }\n  }, {\n    key: 'edts',\n    value: function edts(data) {\n      var buffer = new Buffer();\n      var duration = data.duration;\n      var mediaTime = data.mediaTime;\n      buffer.write(Fmp4.size(36), Fmp4.type('edts'));\n      // elst\n      buffer.write(Fmp4.size(28), Fmp4.type('elst'));\n      buffer.write(new Uint8Array([0x00, 0x00, 0x00, 0x01, // entry count\n      duration >> 24 & 0xff, duration >> 16 & 0xff, duration >> 8 & 0xff, duration & 0xff, mediaTime >> 24 & 0xff, mediaTime >> 16 & 0xff, mediaTime >> 8 & 0xff, mediaTime & 0xff, 0x00, 0x00, 0x00, 0x01 // media rate\n      ]));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdia',\n    value: function mdia(data) {\n      var size = 8;\n      var mdhd = Fmp4.mdhd(data.timescale, data.duration);\n      var hdlr = Fmp4.hdlr(data.type);\n      var minf = Fmp4.minf(data);\n      [mdhd, hdlr, minf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf);\n    }\n  }, {\n    key: 'mdhd',\n    value: function mdhd() {\n      var timescale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n      var duration = arguments[1];\n\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      timescale >>> 24 & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF, duration >>> 24 & 0xFF, // duration: 4 bytes  track的时间长度\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n      ]);\n      return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'hdlr',\n    value: function hdlr(type) {\n      var value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ];\n      if (type === 'audio') {\n        value.splice.apply(value, [8, 4].concat([0x73, 0x6f, 0x75, 0x6e]));\n        value.splice.apply(value, [24, 13].concat([0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00]));\n      }\n      return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value));\n    }\n  }, {\n    key: 'minf',\n    value: function minf(data) {\n      var size = 8;\n      var vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd();\n      var dinf = Fmp4.dinf();\n      var stbl = Fmp4.stbl(data);\n      [vmhd, dinf, stbl].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl);\n    }\n  }, {\n    key: 'vmhd',\n    value: function vmhd() {\n      return Fmp4.initBox(20, 'vmhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]));\n    }\n  }, {\n    key: 'smhd',\n    value: function smhd() {\n      return Fmp4.initBox(16, 'smhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n      ]));\n    }\n  }, {\n    key: 'dinf',\n    value: function dinf() {\n      var buffer = new Buffer();\n      var dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ];\n      buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stbl',\n    value: function stbl(data) {\n      var size = 8;\n      var stsd = Fmp4.stsd(data);\n      var stts = Fmp4.stts();\n      var stsc = Fmp4.stsc();\n      var stsz = Fmp4.stsz();\n      var stco = Fmp4.stco();\n      [stsd, stts, stsc, stsz, stco].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco);\n    }\n  }, {\n    key: 'stsd',\n    value: function stsd(data) {\n      var content = void 0;\n      if (data.type === 'audio') {\n        // if (!data.isAAC && data.codec === 'mp4') {\n        //     content = FMP4.mp3(data);\n        // } else {\n        //\n        // }\n        // 支持mp4a\n        content = Fmp4.mp4a(data);\n      } else {\n        content = Fmp4.avc1(data);\n      }\n      return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content);\n    }\n  }, {\n    key: 'mp4a',\n    value: function mp4a(data) {\n      var content = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      data.samplerate >> 8 & 0xff, data.samplerate & 0xff, //\n      0x00, 0x00]);\n      var esds = Fmp4.esds(data.config);\n      return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds);\n    }\n  }, {\n    key: 'esds',\n    value: function esds() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [43, 146, 8, 0];\n\n      var configlen = config.length;\n      var buffer = new Buffer();\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n      ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]));\n      buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'avc1',\n    value: function avc1(data) {\n      var buffer = new Buffer();\n      var size = 40; // 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n      // let sps = data.sps\n      // let pps = data.pps\n      var width = data.width;\n      var height = data.height;\n      var hSpacing = data.parRatio.height;\n      var vSpacing = data.parRatio.width;\n      // let avccBuffer = new Buffer()\n      // avccBuffer.write(new Uint8Array([\n      //   0x01, // version\n      //   sps[1], // profile\n      //   sps[2], // profile compatible\n      //   sps[3], // level\n      //   0xfc | 3,\n      //   0xE0 | 1 // 目前只处理一个sps\n      // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n      // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n      var avcc = data.avcc;\n      var avc1 = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      width >> 8 & 0xff, width & 0xff, // width\n      height >> 8 & 0xff, height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12, 0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]); // pre_defined = -1\n      var btrt = new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]);\n      var pasp = new Uint8Array([hSpacing >> 24, // hSpacing\n      hSpacing >> 16 & 0xff, hSpacing >> 8 & 0xff, hSpacing & 0xff, vSpacing >> 24, // vSpacing\n      vSpacing >> 16 & 0xff, vSpacing >> 8 & 0xff, vSpacing & 0xff]);\n\n      buffer.write(Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1, Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc, Fmp4.size(20), Fmp4.type('btrt'), btrt, Fmp4.size(16), Fmp4.type('pasp'), pasp);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stts',\n    value: function stts() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stts', content);\n    }\n  }, {\n    key: 'stsc',\n    value: function stsc() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stsc', content);\n    }\n  }, {\n    key: 'stco',\n    value: function stco() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stco', content);\n    }\n  }, {\n    key: 'stsz',\n    value: function stsz() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      return Fmp4.initBox(20, 'stsz', content);\n    }\n  }, {\n    key: 'mvex',\n    value: function mvex(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n      var trackID = arguments[2];\n\n      var buffer = new Buffer();\n      var mehd = Buffer.writeUint32(duration);\n      buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'trex',\n    value: function trex(id) {\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      id >> 24, id >> 16 & 0xff, id >> 8 & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      return Fmp4.initBox(8 + content.byteLength, 'trex', content);\n    }\n  }, {\n    key: 'moof',\n    value: function moof(data) {\n      var size = 8;\n      var mfhd = Fmp4.mfhd();\n      var traf = Fmp4.traf(data);\n      [mfhd, traf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moof', mfhd, traf);\n    }\n  }, {\n    key: 'mfhd',\n    value: function mfhd() {\n      var content = Buffer.writeUint32(Fmp4.sequence);\n      Fmp4.sequence += 1;\n      return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'traf',\n    value: function traf(data) {\n      var size = 8;\n      var tfhd = Fmp4.tfhd(data.id);\n      var tfdt = Fmp4.tfdt(data.time);\n      var sdtp = Fmp4.sdtp(data);\n      var trun = Fmp4.trun(data, sdtp.byteLength);\n\n      [tfhd, tfdt, trun, sdtp].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp);\n    }\n  }, {\n    key: 'tfhd',\n    value: function tfhd(id) {\n      var content = Buffer.writeUint32(id);\n      return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'tfdt',\n    value: function tfdt(time) {\n      // let upper = Math.floor(time / (UINT32_MAX + 1)),\n      //     lower = Math.floor(time % (UINT32_MAX + 1));\n      return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time));\n    }\n  }, {\n    key: 'trun',\n    value: function trun(data, sdtpLength) {\n      // let id = data.id;\n      // let ceil = id === 1 ? 16 : 12;\n      var buffer = new Buffer();\n      var sampleCount = Buffer.writeUint32(data.samples.length);\n      // mdat-header 8\n      // moof-header 8\n      // mfhd 16\n      // traf-header 8\n      // thhd 16\n      // tfdt 20\n      // trun-header 12\n      // sampleCount 4\n      // data-offset 4\n      // samples.length\n      var offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength);\n      buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset);\n\n      // let size = buffer.buffer.byteLength\n      // let writeOffset = 0\n      // data.samples.forEach(() => {\n      //   size += 16\n      // })\n      //\n      // let trunBox = new Uint8Array(size)\n\n      // trunBox.set(buffer.buffer, 0)\n\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        // console.log(item.type, item.dts, item.duration)\n\n        buffer.write(new Uint8Array([item.duration >>> 24 & 0xFF, // sample_duration\n        item.duration >>> 16 & 0xFF, item.duration >>> 8 & 0xFF, item.duration & 0xFF, item.size >>> 24 & 0xFF, // sample_size\n        item.size >>> 16 & 0xFF, item.size >>> 8 & 0xFF, item.size & 0xFF, flags.isLeading << 2 | flags.dependsOn, // sample_flags\n        flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.isNonSync, 0x00, 0x00, // sample_degradation_priority\n        item.cts >>> 24 & 0xFF, // sample_composition_time_offset\n        item.cts >>> 16 & 0xFF, item.cts >>> 8 & 0xFF, item.cts & 0xFF]));\n        // writeOffset += 16\n        // buffer.write(Buffer.writeUint32(0));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'sdtp',\n    value: function sdtp(data) {\n      var buffer = new Buffer();\n      buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0));\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        var num = flags.isLeading << 6 | // is_leading: 2 (bit)\n        flags.dependsOn << 4 | // sample_depends_on\n        flags.isDependedOn << 2 | // sample_is_depended_on\n        flags.hasRedundancy; // sample_has_redundancy\n\n        buffer.write(new Uint8Array([num]));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdat',\n    value: function mdat(data) {\n      var buffer = new Buffer();\n      var size = 8;\n      data.samples.forEach(function (item) {\n        size += item.size;\n      });\n      buffer.write(Fmp4.size(size), Fmp4.type('mdat'));\n      var mdatBox = new Uint8Array(size);\n      var offset = 0;\n      mdatBox.set(buffer.buffer, offset);\n      offset += 8;\n      data.samples.forEach(function (item) {\n        item.buffer.forEach(function (unit) {\n          mdatBox.set(unit, offset);\n          offset += unit.byteLength;\n          // buffer.write(unit.data);\n        });\n      });\n      return mdatBox;\n    }\n  }]);\n\n  return Fmp4;\n}();\n\nFmp4.type = function (name) {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)]);\n};\nFmp4.sequence = 1;\n\nexport default Fmp4;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport sniffer from 'xgplayer-utils-sniffer';\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport MediaSegmentList from 'xgplayer-transmuxer-model-mediasegmentlist';\n\nimport Buffer from './buffer';\nimport Fmp4 from './fmp4';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar PLAYER_EVENTS = EVENTS.PLAYER_EVENTS;\n\nvar Mp4Remuxer = function () {\n  function Mp4Remuxer() {\n    var curTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    _classCallCheck(this, Mp4Remuxer);\n\n    this._dtsBase = curTime * 1000;\n    this._isDtsBaseInited = false;\n    this._videoSegmentList = new MediaSegmentList('video');\n    this._audioSegmentList = new MediaSegmentList('audio');\n    var browser = sniffer.browser;\n\n    this._fillSilenceFrame = browser === 'ie';\n\n    this.isFirstVideo = true;\n    this.isFirstAudio = true;\n\n    this.videoAllDuration = 0;\n    this.audioAllDuration = 0;\n  }\n\n  _createClass(Mp4Remuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this));\n      this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this));\n      this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this));\n      this.on(PLAYER_EVENTS.SEEK, this.seek.bind(this));\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._dtsBase = -1;\n      this._isDtsBaseInited = false;\n      this._videoSegmentList.clear();\n      this._audioSegmentList.clear();\n      this._videoSegmentList = null;\n      this._audioSegmentList = null;\n    }\n  }, {\n    key: 'remux',\n    value: function remux() {\n      var _context$getInstance = this._context.getInstance('TRACKS'),\n          audioTrack = _context$getInstance.audioTrack,\n          videoTrack = _context$getInstance.videoTrack;\n\n      !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack);\n\n      this._remuxVideo(videoTrack);\n      this._remuxAudio(audioTrack);\n    }\n  }, {\n    key: 'resetDtsBase',\n    value: function resetDtsBase() {\n      // for hls 中途切换 meta后seek\n      this._dtsBase = 0;\n      // this._isDtsBaseInited = false\n    }\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      if (!this._isDtsBaseInited) {\n        this._dtsBase = time * 1000;\n      } else {\n        this._isDtsBaseInited = false;\n        this._dtsBase = time * 1000;\n      }\n    }\n  }, {\n    key: 'onMetaDataReady',\n    value: function onMetaDataReady(type) {\n      var track = void 0;\n\n      if (type === 'audio') {\n        var _context$getInstance2 = this._context.getInstance('TRACKS'),\n            audioTrack = _context$getInstance2.audioTrack;\n\n        track = audioTrack;\n      } else {\n        var _context$getInstance3 = this._context.getInstance('TRACKS'),\n            videoTrack = _context$getInstance3.videoTrack;\n\n        track = videoTrack;\n      }\n\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.mimetype = track.meta.codec;\n      source.init = this.remuxInitSegment(type, track.meta);\n      // source.inited = false;\n\n      // this.resetDtsBase()\n      this.emit(REMUX_EVENTS.INIT_SEGMENT, type);\n    }\n  }, {\n    key: 'remuxInitSegment',\n    value: function remuxInitSegment(type, meta) {\n      var initSegment = new Buffer();\n      var ftyp = Fmp4.ftyp();\n      var moov = Fmp4.moov({ type: type, meta: meta });\n\n      initSegment.write(ftyp, moov);\n      return initSegment;\n    }\n  }, {\n    key: 'calcDtsBase',\n    value: function calcDtsBase(audioTrack, videoTrack) {\n      if (!audioTrack && videoTrack.samples.length) {\n        return videoTrack.samples[0].dts;\n      }\n\n      if (!audioTrack.samples.length && !videoTrack.samples.length) {\n        return;\n      }\n\n      var audioBase = Infinity;\n      var videoBase = Infinity;\n\n      if (audioTrack.samples && audioTrack.samples.length) {\n        audioBase = audioTrack.samples[0].dts;\n      }\n      if (videoTrack.samples && videoTrack.samples.length) {\n        videoBase = videoTrack.samples[0].dts;\n      }\n\n      this._dtsBase = Math.min(audioBase, videoBase) - this._dtsBase; // 兼容播放器切换清晰度\n      this._isDtsBaseInited = true;\n    }\n  }, {\n    key: '_remuxVideo',\n    value: function _remuxVideo(videoTrack) {\n      var track = videoTrack || {};\n\n      if (!videoTrack.samples || !videoTrack.samples.length) {\n        return;\n      }\n\n      var samples = track.samples;\n\n      var firstDts = -1;\n\n      var initSegment = null;\n      var mp4Samples = [];\n      var mdatBox = {\n        samples: []\n      };\n\n      var maxLoop = 10000;\n      while (samples.length && maxLoop-- > 0) {\n        // console.log('mark2')\n        var avcSample = samples.shift();\n\n        var isKeyframe = avcSample.isKeyframe,\n            options = avcSample.options;\n\n        if (!this.isFirstVideo && options && options.meta) {\n          initSegment = this.remuxInitSegment('video', options.meta);\n          options.meta = null;\n          samples.unshift(avcSample);\n          if (!options.isContinue) {\n            this.resetDtsBase();\n          }\n          break;\n        }\n\n        var dts = avcSample.dts - this._dtsBase;\n\n        if (firstDts === -1) {\n          firstDts = dts;\n        }\n\n        var cts = void 0;\n        var pts = void 0;\n        if (avcSample.pts !== undefined) {\n          pts = avcSample.pts - this._dtsBase;\n          cts = pts - dts;\n        }\n        if (avcSample.cts !== undefined) {\n          pts = avcSample.cts + dts;\n          cts = avcSample.cts;\n        }\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n\n        var sampleDuration = 0;\n        if (avcSample.duration) {\n          sampleDuration = avcSample.duration;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this._dtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // lastest sample, use second last duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference duration\n            sampleDuration = this.videoMeta.refSampleDuration;\n          }\n        }\n        this.videoAllDuration += sampleDuration;\n        // console.log(`video dts ${dts}`, `pts ${pts}`, isKeyframe, `duration ${sampleDuration}`)\n        if (sampleDuration >= 0) {\n          mdatBox.samples.push(mdatSample);\n          mdatSample.buffer.push(avcSample.data);\n          mdatSample.size += avcSample.data.byteLength;\n\n          mp4Samples.push({\n            dts: dts,\n            cts: cts,\n            pts: pts,\n            data: avcSample.data,\n            size: avcSample.data.byteLength,\n            isKeyframe: isKeyframe,\n            duration: sampleDuration,\n            flags: {\n              isLeading: 0,\n              dependsOn: isKeyframe ? 2 : 1,\n              isDependedOn: isKeyframe ? 1 : 0,\n              hasRedundancy: 0,\n              isNonSync: isKeyframe ? 0 : 1\n            },\n            originDts: dts,\n            type: 'video'\n          });\n        }\n\n        if (isKeyframe) {\n          this.emit(REMUX_EVENTS.RANDOM_ACCESS_POINT, pts);\n        }\n      }\n\n      var moofMdat = new Buffer();\n      if (mp4Samples.length) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.writeToSource('video', moofMdat);\n      }\n\n      if (initSegment) {\n        this.writeToSource('video', initSegment);\n\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this._remuxVideo(track);\n        }\n      }\n\n      this.isFirstVideo = false;\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video');\n\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: '_remuxAudio',\n    value: function _remuxAudio(track) {\n      var _ref = track || {},\n          samples = _ref.samples;\n\n      var firstDts = -1;\n      var mp4Samples = [];\n\n      var initSegment = null;\n      var mdatBox = {\n        samples: []\n      };\n      if (!samples || !samples.length) {\n        return;\n      }\n\n      var maxLoop = 10000;\n      var isFirstDtsInited = false;\n      while (samples.length && maxLoop-- > 0) {\n        // console.log('mark3')\n        var sample = samples.shift();\n        var data = sample.data,\n            options = sample.options;\n\n        if (!this.isFirstAudio && options && options.meta) {\n          initSegment = this.remuxInitSegment('audio', options.meta);\n          options.meta = null;\n          samples.unshift(sample);\n          if (!options.isContinue) {\n            this.resetDtsBase();\n          }\n          break;\n        }\n\n        var dts = sample.dts - this._dtsBase;\n        var originDts = dts;\n        if (!isFirstDtsInited) {\n          firstDts = dts;\n          isFirstDtsInited = true;\n        }\n\n        var sampleDuration = 0;\n        if (sample.duration) {\n          sampleDuration = sample.duration;\n        } else if (this.audioMeta.refSampleDurationFixed) {\n          sampleDuration = this.audioMeta.refSampleDurationFixed;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this._dtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // use second last sample duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference sample duration\n            sampleDuration = this.audioMeta.refSampleDuration;\n          }\n        }\n\n        // console.log(`audio dts ${dts}`, `pts ${dts}`, `duration ${sampleDuration}`)\n        this.audioAllDuration += sampleDuration;\n        var mp4Sample = {\n          dts: dts,\n          pts: dts,\n          cts: 0,\n          size: data.byteLength,\n          duration: sample.duration ? sample.duration : sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: 2,\n            isDependedOn: 1,\n            hasRedundancy: 0,\n            isNonSync: 0\n          },\n          isKeyframe: true,\n          originDts: originDts,\n          type: 'audio'\n        };\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n\n        if (sampleDuration >= 0) {\n          mdatSample.buffer.push(data);\n          mdatSample.size += data.byteLength;\n\n          mdatBox.samples.push(mdatSample);\n          mp4Samples.push(mp4Sample);\n        }\n      }\n\n      var moofMdat = new Buffer();\n\n      if (mp4Samples.length) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.writeToSource('audio', moofMdat);\n      }\n\n      if (initSegment) {\n        this.writeToSource('audio', initSegment);\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this._remuxAudio(track);\n        }\n      }\n\n      this.isFirstAudio = false;\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat);\n\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: 'writeToSource',\n    value: function writeToSource(type, buffer) {\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.data.push(buffer);\n    }\n  }, {\n    key: 'initSilentAudio',\n    value: function initSilentAudio(dts, duration) {\n      var unit = Mp4Remuxer.getSilentFrame(this._audioMeta.channelCount);\n      return {\n        dts: dts,\n        pts: dts,\n        cts: 0,\n        duration: duration,\n        unit: unit,\n        size: unit.byteLength,\n        originDts: dts,\n        type: 'video'\n      };\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._player = null;\n    }\n  }, {\n    key: 'videoMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').videoTrack.meta;\n    }\n  }, {\n    key: 'audioMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').audioTrack.meta;\n    }\n  }], [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(channelCount) {\n      if (channelCount === 1) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n      } else if (channelCount === 2) {\n        return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n      } else if (channelCount === 3) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n      } else if (channelCount === 4) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n      } else if (channelCount === 5) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n      } else if (channelCount === 6) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n      }\n      return null;\n    }\n  }]);\n\n  return Mp4Remuxer;\n}();\n\nexport default Mp4Remuxer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Source = function Source() {\n  _classCallCheck(this, Source);\n\n  this.mimetype = '';\n  this.init = null;\n  this.data = [];\n};\n\nvar PreSource = function () {\n  function PreSource() {\n    _classCallCheck(this, PreSource);\n\n    this.sources = {};\n  }\n\n  _createClass(PreSource, [{\n    key: 'getSource',\n    value: function getSource(source) {\n      return this.sources[source];\n    }\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new Source();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.sources = {};\n    }\n  }]);\n\n  return PreSource;\n}();\n\nexport default PreSource;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    _classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n\n\n  _createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n\n  return XgBuffer;\n}();\n\nexport default XgBuffer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AAC = function () {\n  function AAC() {\n    _classCallCheck(this, AAC);\n  }\n\n  _createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n\n  return AAC;\n}();\n\nexport default AAC;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport AAC from 'xgplayer-transmuxer-codec-aac';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    _classCallCheck(this, Compatibility);\n\n    this.nextAudioDts = 0; // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0; // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined; // 上一段音频数据的长度\n    this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0; // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0; // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // 补充音频帧（）\n    this.filledVideoSamples = []; // 补充视频帧（）\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    this._videoLargeGap = 0;\n    this._audioLargeGap = 0;\n  }\n\n  _createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // 估算下一段音频数据的dts\n      this.nextVideoDts = null; // 估算下一段视频数据的dts\n\n      this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n      this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n      this.lastVideoDts = undefined; // 上一段音频数据的长度\n      this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n      // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n      // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // 补充音频帧（）\n      this.filledVideoSamples = []; // 补充视频帧（）\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n      if (this._firstAudioSample) {\n        this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples);\n      }\n\n      var _Compatibility$detact = Compatibility.detactChangeStream(this.videoTrack.samples),\n          videoChanged = _Compatibility$detact.changed,\n          videoChangedIdx = _Compatibility$detact.changedIdx;\n\n      if (videoChanged && !isFirstAudioSamples) {\n        this.fixChangeStreamVideo(videoChangedIdx);\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detact2 = Compatibility.detactChangeStream(this.audioTrack.samples),\n          audioChanged = _Compatibility$detact2.changed,\n          audioChangedIdx = _Compatibility$detact2.changedIdx;\n\n      if (audioChanged) {\n        this.fixChangeStreamAudio(audioChangedIdx);\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      // console.log('next video', this.nextVideoDts)\n\n      for (var i = 0, len = videoSamples.length; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      if (meta.frameRate && meta.frameRate.fixed === false) {\n        return;\n      }\n\n      if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n        return;\n      }\n\n      // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n      var firstSample = videoSamples[0];\n\n      // step0.修复hls流出现巨大gap，需要强制重定位的问题\n      if (this._videoLargeGap !== 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      if (firstSample.dts !== this._firstVideoSample.dts && (streamChangeStart || this.videoLastSample && Compatibility.detectLargeGap(this.videoLastSample.dts, firstSample))) {\n        if (streamChangeStart) {\n          this.nextVideoDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        } else {\n          this.nextVideoDts = this.videoLastSample.dts;\n        }\n\n        this._videoLargeGap = this.nextVideoDts - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. 修复与audio首帧差距太大的问题\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i = 0; _i < fillCount; _i++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // 视频头部帧缺失需要复制第一帧\n            // 重新计算sample的dts和pts\n            clonedFirstSample.dts = videoFirstDts - (_i + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (gap < -2 * meta.refSampleDuration) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      this.videoLastSample = curLastSample;\n\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      // console.log('next audio', this.nextAudioDts)\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n      // 对audioSamples按照dts做排序\n      // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n      if (this._audioLargeGap !== 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n\n      if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n        if (streamChangeStart) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n      // step0. 首帧与video首帧间距大的问题\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n        if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < silentSampleCount; _i2++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i2 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. 处理samples段之间的丢帧情况\n        // 当发现duration差距大于1帧时进行补帧\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          meta.refSampleDurationFixed = undefined;\n        }\n\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n            // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n            meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap;\n          } else {\n            var silentFrameCount = Math.floor(gap / meta.refSampleDuration);\n\n            for (var _i3 = 0; _i3 < silentFrameCount; _i3++) {\n              var computed = firstDts - (_i3 + 1) * meta.refSampleDuration;\n              var _silentSample = Object.assign({}, audioSamples[0], {\n                dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n              });\n\n              this.filledAudioSamples.push({\n                dts: _silentSample.dts,\n                size: _silentSample.data.byteLength\n              });\n              this.audioTrack.samples.unshift(_silentSample);\n            }\n          }\n        } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n          // 当差距比较小的时候将音频帧重定位\n          // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n          audioSamples[0].dts = this.nextAudioDts;\n          audioSamples[0].pts = this.nextAudioDts;\n        } else if (gap < 0) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n        }\n      }\n      var lastOriginDts = audioSamples[audioSamples.length - 1].originDts;\n      var lastDts = audioSamples[audioSamples.length - 1].dts;\n      var lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration;\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration;\n      this.lastAudioDts = lastDts;\n\n      audioSamples[audioSamples.length - 1].duration = lastSampleDuration;\n\n      // step3. 修复samples段内部的dts异常问题\n      for (var _i4 = 0, _len = audioSamples.length; _i4 < _len; _i4++) {\n        var current = audioSamples[_i4];\n        var next = audioSamples[_i4 + 1];\n\n        if (!next) {\n          break;\n        }\n\n        var duration = next.dts - current.dts;\n        audioSamples[_i4].duration = duration;\n        /*\n        if (duration > (2 * meta.refSampleDuration)) {\n          // 两帧之间间隔太大，需要补空白帧\n          /**\n          let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n          let frameIdx = 0\n           while (frameIdx < silentFrameCount) {\n            const silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n              filtered: 0,\n              isSilent: true\n            }\n             audioSamples.splice(i, 0, silentSample)\n             this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n             frameIdx++\n            i++ // 不对静音帧做比较\n          }\n        } */\n      }\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var prevDts = changeIdx === 0 ? this.videoLastSample ? this.videoLastSample.dts : this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixVideo(false);\n      }\n\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._videoLargeGap = 0;\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else if (this.videoLastSample) {\n        streamChangeStart = this.videoLastSample.dts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.lastAudioDts : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixAudio(false);\n      }\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._audioLargeGap = 0;\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else {\n        streamChangeStart = this.lastAudioDts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // 获取video和audio的首帧数据\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // 寻找dts最小的帧作为首个音频帧\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * 在没有refSampleDuration的问题流中，\n     */\n\n  }, {\n    key: 'fixRefSampleDuration',\n    value: function fixRefSampleDuration(meta, samples) {\n      var isVideo = meta.type === 'video';\n      var allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount;\n      var firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts;\n      var filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length;\n\n      if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          meta.refSampleDuration = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // 将refSampleDuration重置为计算后的平均值\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n          if (durationAvg > 0 && durationAvg < 1000) {\n            meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n          }\n        }\n      }\n    }\n\n    /**\n     * 记录截止目前一共播放了多少帧\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * 去除不合法的帧（倒退、重复帧）\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var firstAudioSample = this.audioTrack.samples[0];\n      var firstVideoSample = this.videoTrack.samples[0];\n      // const { _firstVideoSample, _firstAudioSample } = this\n\n      if (firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample, index) {\n          if (sample === firstAudioSample) {\n            return true;\n          }\n          return sample.dts > firstAudioSample.dts;\n        });\n      }\n\n      if (firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample, index) {\n          if (sample === firstVideoSample) {\n            return true;\n          }\n          return sample.dts > firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n\n    /**\n     * 寻找dts最小的sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectLargeGap',\n    value: function detectLargeGap(nextDts, firstSample) {\n      if (nextDts === null) {\n        return;\n      }\n      var curDts = firstSample.dts || 0;\n      var cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000; // fix hls流出现大量流dts间距问题\n      var cond2 = firstSample.options && firstSample.options.discontinue;\n\n      return cond1 || cond2;\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * 中途换流\n     */\n\n  }, {\n    key: 'detactChangeStream',\n    value: function detactChangeStream(samples) {\n      var changed = false;\n      var changedIdx = -1;\n      for (var i = 0, len = samples.length; i < len; i++) {\n        if (samples[i].options && samples[i].options.meta) {\n          changed = true;\n          changedIdx = i;\n          break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdx: changedIdx\n      };\n    }\n  }]);\n\n  return Compatibility;\n}();\n\nexport default Compatibility;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MSE = function () {\n  function MSE(configs, context) {\n    _classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n  }\n\n  _createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this.container.src = URL.createObjectURL(this.mediaSource);\n      this.url = this.container.src;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx) {\n      this._context = newCtx;\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit('SOURCE_UPDATE_END');\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (this.mediaSource.readyState !== 'open') {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track) {\n          var dur = type === 'audio' ? 21 : 40;\n          if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n          if (sources[type].data.length >= this.preloadTime / dur) {\n            add = true;\n          }\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 0) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n          var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n          this.sourceBuffers[_type] = sourceBuffer;\n          sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (sources) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var type = Object.keys(this.sourceBuffers)[i];\n          var sourceBuffer = this.sourceBuffers[type];\n          var source = sources.sources[type];\n          if (source && !source.inited) {\n            // console.log('append initial segment')\n            try {\n              sourceBuffer.appendBuffer(source.init.buffer.buffer);\n              source.inited = true;\n            } catch (e) {\n              // DO NOTHING\n            }\n          } else if (source) {\n            var data = source.data.shift();\n            if (data) {\n              try {\n                sourceBuffer.appendBuffer(data.buffer.buffer);\n              } catch (e) {\n                source.data.unshift(data);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      var _mediaSource = this.mediaSource,\n          readyState = _mediaSource.readyState,\n          activeSourceBuffers = _mediaSource.activeSourceBuffers;\n\n      if (readyState === 'open' && activeSourceBuffers.length === 0) {\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          // log\n        }\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        if (!buffer.updating) {\n          // console.log('remove', start, end)\n          buffer.remove(start, end);\n        }\n      }\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      return this.removeBuffers().then(function () {\n        for (var i = 0; i < Object.keys(_this2.sourceBuffers).length; i++) {\n          var _buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n          _this2.mediaSource.removeSourceBuffer(_buffer);\n          delete _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        }\n\n        _this2.container.removeEventListener('timeupdate', _this2.onTimeUpdate);\n        _this2.container.removeEventListener('waiting', _this2.onWaiting);\n        _this2.mediaSource.removeEventListener('sourceopen', _this2.onSourceOpen);\n\n        _this2.endOfStream();\n        window.URL.revokeObjectURL(_this2.url);\n\n        _this2.url = null;\n        _this2.configs = {};\n        _this2.container = null;\n        _this2.mediaSource = null;\n        _this2.sourceBuffers = {};\n        _this2.preloadTime = 1;\n      });\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      var buffered = buffer.buffered;\n      var bEnd = 0.1;\n      for (var i = 0, len = buffered.length; i < len; i++) {\n        bEnd = buffered.end(i);\n      }\n      try {\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n\n  return MSE;\n}();\n\nexport default MSE;","var PLAYER_EVENTS = {\n  SEEK: 'SEEK'\n};\n\nvar LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  SEI_PARSED: 'SEI_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  DETECT_CHANGE_STREAM_DISCONTINUE: 'DETECT_CHANGE_STREAM_DISCONTINUE',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n\n  // hls专有events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS, PLAYER_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYTO_EVENTS: CRYTO_EVENTS,\n  PLAYER_EVENTS: PLAYER_EVENTS\n};","import _SpsParser from './sps';\nimport _NalUnit from './nalunit';\nimport _SEIParser from './sei';\nexport var SpsParser = _SpsParser;\nexport var NalUnit = _NalUnit;\nexport var SEIParser = _SEIParser;","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport default sniffer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import FetchLoader from 'xgplayer-transmuxer-loader-fetch';\nimport FlvDemuxer from 'xgplayer-transmuxer-demux-flv'\nimport Remuxer from 'xgplayer-transmuxer-remux-mp4'\nimport EVENTS from 'xgplayer-transmuxer-constant-events'\nimport Tracks from 'xgplayer-transmuxer-buffer-track'\nimport PreSource from 'xgplayer-transmuxer-buffer-presource'\nimport XgBuffer from 'xgplayer-transmuxer-buffer-xgbuffer'\nimport Compatibility from 'xgplayer-transmuxer-codec-compatibility'\n\nimport Mse from 'xgplayer-utils-mse'\n\nimport Player from 'xgplayer'\n\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nconst DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nconst LOADER_EVENTS = EVENTS.LOADER_EVENTS\n\nconst Tag = 'FLVController'\n\nclass Logger {\n  warn () {}\n}\n\nconst FLV_ERROR = 'FLV_ERROR'\n\nclass FlvController {\n  constructor (player, mse) {\n    this.TAG = Tag\n    this._player = player\n\n    this.mse = mse;\n    this.state = {\n      initSegmentArrived: false,\n      range: {\n        start: 0,\n        end: ''\n      },\n      rangeSupport: true\n    }\n  }\n\n  static findFilePosition (time, keyframes) {\n    for (let i = 0, len = keyframes.times.length; i < len; i++) {\n      const currentKeyframeTime = keyframes.times[i]\n      const nextKeyframeTime = i + 1 < len ? keyframes.times[i + 1] : Number.MAX_SAFE_INTEGER\n\n      if (currentKeyframeTime <= time && time <= nextKeyframeTime) {\n        return keyframes.filepositions[i]\n      }\n    }\n\n    return ''\n  }\n\n  init () {\n    this._context.registry('FETCH_LOADER', FetchLoader)\n    this._context.registry('LOADER_BUFFER', XgBuffer)\n\n    this._context.registry('FLV_DEMUXER', FlvDemuxer)\n    this._context.registry('TRACKS', Tracks)\n\n    this._context.registry('MP4_REMUXER', Remuxer)(this._player.currentTime)\n    this._context.registry('PRE_SOURCE_BUFFER', PreSource)\n\n    this._context.registry('COMPATIBILITY', Compatibility)\n\n    this._context.registry('LOGGER', Logger)\n    if (!this.mse) {\n      this.mse = new Mse({ container: this._player.video }, this._context);\n      this.mse.init();\n    }\n\n    this.initListeners()\n  }\n\n  initListeners () {\n    this.on(LOADER_EVENTS.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this))\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._handleNetworkError.bind(this))\n\n    this.on(DEMUX_EVENTS.MEDIA_INFO, this._handleMediaInfo.bind(this))\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._handleMetadataParsed.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._handleDemuxError.bind(this))\n    this.on(DEMUX_EVENTS.SEI_PARSED, this._handleSEIParsed.bind(this))\n\n    this.on(REMUX_EVENTS.INIT_SEGMENT, this._handleAppendInitSegment.bind(this))\n    this.on(REMUX_EVENTS.MEDIA_SEGMENT, this._handleMediaSegment.bind(this))\n  }\n\n  _handleMediaInfo () {\n    if (!this._context.onMetaData) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('failed to get mediainfo'))\n    }\n    const buffer = this._context.getInstance('LOADER_BUFFER')\n    const loader = this._context.getInstance('FETCH_LOADER')\n    if (this.isSeekable) {\n      loader.cancel()\n      // 初始化点播的range\n      this.state.range = {\n        start: 0,\n        end: buffer.historyLen - 1\n      }\n      setTimeout(() => {\n        this.loadNext(0)\n      })\n    }\n  }\n\n  _handleLoaderDataLoaded () {\n    this.emitTo('FLV_DEMUXER', DEMUX_EVENTS.DEMUX_START)\n  }\n\n  _handleMetadataParsed (type) {\n    this.emit(REMUX_EVENTS.REMUX_METADATA, type)\n  }\n\n  _handleSEIParsed(sei) {\n    this._player.emit('SEI_PARSED', sei)\n  }\n\n  _handleDemuxComplete () {\n    this.emit(REMUX_EVENTS.REMUX_MEDIA)\n  }\n\n  _handleAppendInitSegment () {\n    this.state.initSegmentArrived = true\n    this.mse.addSourceBuffers()\n  }\n\n  _handleMediaSegment () {\n    this.mse.addSourceBuffers()\n    this.mse.doAppend();\n  }\n\n  _handleNetworkError (tag, err) {\n    this._player.emit('error', new Player.Errors('network', this._player.config.url))\n    this._onError(LOADER_EVENTS.LOADER_ERROR, tag, err, true)\n  }\n\n  _handleDemuxError (tag, err, fatal) {\n    if (fatal === undefined) {\n      fatal = false;\n    }\n    this._player.emit('error', new Player.Errors('parse', this._player.config.url))\n    this._onError(LOADER_EVENTS.LOADER_ERROR, tag, err, fatal)\n  }\n\n  _onError (type, mod, err, fatal) {\n    let error = {\n      errorType: type,\n      errorDetails: `[${mod}]: ${err.message}`,\n      errorFatal: fatal || false\n    }\n    this._player.emit(FLV_ERROR, error);\n  }\n\n  seek (time) {\n    if (!this._context.onMetaData) {\n      this.loadMeta()\n      return\n    }\n    if (!this.isSeekable) {\n      return\n    }\n\n    const buffer = this._context.getInstance('LOADER_BUFFER')\n    buffer.clear()\n\n    const { preloadTime = 15 } = this._player.config\n    const range = this.getSeekRange(time, preloadTime)\n    this.state.range = range\n\n    if (this.compat) {\n      this.compat.reset()\n    }\n\n    this.loadData()\n  }\n\n  loadNext (curTime) {\n    if (!this._context.onMetaData) {\n      return\n    }\n\n    if (this.loader.loading) {\n      return;\n    }\n\n    if (this.getNextRange(curTime)) {\n      this.loadData()\n    }\n  }\n\n  loadData () {\n    const { start, end } = this.state.range\n    this.emit(LOADER_EVENTS.LADER_START, this._player.config.url, {\n      headers: {\n        method: 'get',\n        Range: `bytes=${start}-${end}`\n      }\n    })\n  }\n\n  loadMeta () {\n    this.loader.load(this._player.config.url, {\n      headers: {\n        Range: 'bytes=0-'\n      }\n    }).catch(() => {\n      // 在尝试获取视频数据失败时，尝试使用直播方式加载整个视频\n      this.state.rangeSupport = false\n      this.loadFallback()\n    })\n  }\n\n  loadFallback () {\n    this.loader.load(this._player.config.url).catch(() => {\n      // 在尝试获取视频数据失败时，尝试使用直播方式加载整个视频\n      this._player.emit('error', new Player.Errors('network', this._player.config.url))\n    })\n  }\n\n  getSeekRange (time, preloadTime) {\n    const { keyframes } = this._context.onMetaData\n    const duration = this._context.mediaInfo.duration\n    const seekStartTime = time\n    const seekEndTime = time + preloadTime\n\n    const seekStartFilePos = FlvController.findFilePosition(seekStartTime, keyframes)\n\n    if (seekEndTime >= duration || seekStartTime >= duration) {\n      return {\n        start: seekStartFilePos,\n        end: ''\n      }\n    }\n    const seekEndFilePos = FlvController.findFilePosition(seekEndTime, keyframes)\n\n    return {\n      start: seekStartFilePos,\n      end: seekEndFilePos\n    }\n  }\n\n  getNextRange (time) {\n    if (this.state.range.end === '') {\n      return;\n    }\n    const { end } = this.getSeekRange(time, this.config.preloadTime || 15)\n    if (end <= this.state.range.end && end !== '') {\n      return;\n    }\n\n    this.state.range = {\n      start: this.state.range.end + 1,\n      end\n    }\n    return true;\n  }\n\n  destroy () {\n    this._player = null\n    this.mse = null\n    this.state = {\n      initSegmentArrived: false,\n      range: {\n        start: 0,\n        end: ''\n      },\n      rangeSupport: true\n    }\n  }\n\n  get isSeekable () {\n    if (!this.state.rangeSupport || !this._context) {\n      return false\n    }\n\n    return this._context.onMetaData.keyframes !== null && this._context.onMetaData.keyframes !== undefined\n  }\n\n  get config () {\n    return this._player.config\n  }\n\n  get loader () {\n    return this._context.getInstance('FETCH_LOADER')\n  }\n\n  get compat () {\n    return this._context.getInstance('COMPATIBILITY')\n  }\n\n  get loadBuffer () {\n    return this._context.getInstance('LOADER_BUFFER')\n  }\n}\n\nexport default FlvController\n","import Player from 'xgplayer'\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport Context from 'xgplayer-transmuxer-context';\nimport FLV from './flv-vod'\n\nconst flvAllowedEvents = EVENTS.FlvAllowedEvents;\n\nconst isEnded = (player, flv) => {\n  if (!player.config.isLive) {\n    if (player.duration - player.currentTime < 2) {\n      const range = player.getBufferedRange()\n      if (player.currentTime - range[1] < 0.1) {\n        player.emit('ended')\n        flv.mse.endOfStream()\n      }\n    }\n  }\n}\n\nclass FlvVodPlayer extends Player {\n  constructor (config) {\n    super(config)\n    this.context = new Context(flvAllowedEvents)\n    this.initEvents()\n    // const preloadTime = player.config.preloadTime || 15\n    this.started = false;\n  }\n\n  start () {\n    if (this.started) {\n      return;\n    }\n    this.started = true;\n    const flv = this.initFlv();\n\n    flv.loadMeta()\n    super.start(flv.mse.url)\n    this.started = true;\n  }\n\n  initFlv () {\n    const flv = this.context.registry('FLV_CONTROLLER', FLV)(this)\n    this.context.init();\n    this.flv = flv\n    this.mse = flv.mse;\n    return flv;\n  }\n\n  initFlvBackupEvents (flv, ctx) {\n    flv.once(EVENTS.REMUX_EVENTS.INIT_SEGMENT, () => {\n      let mediaLength = 3;\n      flv.on(EVENTS.REMUX_EVENTS.MEDIA_SEGMENT, () => {\n        mediaLength -= 1;\n        if (mediaLength === 0) {\n          // ensure switch smoothly\n          this.flv = flv;\n          this.mse.resetContext(ctx);\n          this.context.destroy();\n          this.context = ctx;\n        }\n      })\n    });\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_ERROR, () => {\n      ctx.destroy()\n    })\n  }\n\n  initEvents () {\n    this.on('timeupdate', this.handleTimeUpdate.bind(this))\n\n    this.on('seeking', this.handleSeek.bind(this))\n\n    this.once('destroy', this._destroy.bind(this))\n  }\n\n  handleTimeUpdate () {\n    this.loadData()\n    isEnded(this, this.flv)\n  }\n\n  handleSeek () {\n    const time = this.currentTime\n    const range = this.getBufferedRange()\n    if (time > range[1] || time < range[0]) {\n      this.flv.seek(this.currentTime)\n    }\n  }\n\n  _destroy () {\n    this.context.destroy()\n    this.context = null\n    this.flv = null\n  }\n\n  loadData (time = this.currentTime) {\n    const range = this.getBufferedRange()\n    if (range[1] - time < (this.config.preloadTime || 15) - 5) {\n      this.flv.loadNext(range[1] + 1)\n    }\n  }\n\n  swithURL (url) {\n    this.config.url = url;\n    const context = new Context(flvAllowedEvents);\n    const flv = context.registry('FLV_CONTROLLER', FLV)(this, this.mse)\n    context.init()\n    const remuxer = context.getInstance('MP4_REMUXER');\n    remuxer._dtsBase = 0;\n    this.initFlvBackupEvents(flv, context);\n    flv.loadMeta();\n  }\n\n  get remuxer () {\n    return this.context.getInstance('MP4_REMUXER');\n  }\n\n  get src () {\n    return this.currentSrc\n  }\n\n  set src (url) {\n    return this.swithURL(url)\n  }\n\n  static isSupported () {\n    return window.MediaSource &&\n      window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n  }\n}\n\nexport default FlvVodPlayer\n"],"names":["_classCallCheck","instance","Constructor","TypeError","EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","emitWarning","e","console","warn","log","_onceWrap","g","removeListener","fired","arguments","listenerCount","evlistener","spliceOne","list","index","k","n","pop","arr","copy","Array","unwrapListeners","ret","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","PLAYER_EVENTS","LOADER_EVENTS","DEMUX_EVENTS","REMUX_EVENTS","MSE_EVENTS","HLS_EVENTS","CRYTO_EVENTS","ALLEVENTS","assign","FlvAllowedEvents","HlsAllowedEvents","key","hasOwnProperty","_key","_createClass","defineProperties","props","descriptor","defineProperty","protoProps","staticProps","isObjectFilled","obj","MediaInfo","mimeType","duration","hasVideo","video","hasAudio","audio","isBaseInfoReady","isVideoReady","isAudioReady","mediaInfo","usingDomains","domain","active","Domain","getPrototypeOf","setMaxListeners","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","position","originalListener","removeAllListeners","keys","eventNames","Reflect","ownKeys","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","Context","allowedEvents","_emitter","off","_instanceMap","_clsMap","_inited","_hooks","tag","_len","a","b","c","d","newInstance","config","initInstance","cls","_this2","checkMessageName","_isMessageNameValid","bind","enhanced","_cls","_this","onceListeners","TAG","_context","messageName","callback","beforeList","_len2","_key2","concat","_len3","_key3","hasOwn","callbacks","_messageName","_callbacks","_i","_callback","removeListeners","_len4","_key4","time","EVENTS","SEEK","_this3","forEach","destroy","destroyInstances","indexOf","_typeof","Symbol","_typeof2","iterator","FetchLoader","configs","url","status","_reader","_canceled","_destroyed","readtype","buffer","_loaderTaskNo","LADER_START","load","opts","params","getParams","loading","fetch","then","response","ok","resolve","_onFetchResponse","Promise","LOADER_ERROR","statusText","catch","getInstance","taskno","json","data","LOADER_COMPLETE","text","arrayBuffer","Uint8Array","_onReader","body","getReader","reader","cancel","read","val","done","LOADER_DATALOADED","options","headers","Headers","configHeaders","append","optHeaders","cors","mode","withCredentials","credentials","AudioTrackMeta","meta","_default","VideoTrackMeta","sps","pps","Golomb","uint8array","_buffer","_bufferIndex","_totalBytes","byteLength","_totalBits","_currentWord","_currentWordBitsLeft","bufferBytesLeft","bytesRead","Math","min","word","set","subarray","DataView","getUint32","size","bits","valu","_fillCurrentWord","readBits","zeroCount","_skipLeadingZero","leadingZeros","readUEG","SPSParser","src","srcLength","dst","dstIdx","rbsp","_ebsp2rbsp","gb","readByte","profileIdc","levelIdc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","par_width","par_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","par_w_table","par_h_table","num_units_in_tick","time_scale","parScale","crop_unit_x","crop_unit_y","codec_width","codec_height","present_width","ceil","getChromaFormatString","lastScale","nextScale","toFixed","chroma","spsConfig","codec_size","codecWidth","width","codecHeight","height","presentWidth","present_size","presentHeight","profile","level","bitDepth","chromaFormat","parRatio","par_ratio","frameRate","frame_rate","fpsDen","fpsNum","refSampleDuration","floor","timescale","RBSP","filter","el","idx","lastByte","slice","u8aToString","result","String","fromCharCode","SEIParser","EBSP2SODB","EBSP2RBSP","sodb","_resolveNalu","_SEIParser$switchPayl","switchPayloadType","payloadType","offset","content","user_data_unregistered","dv","getUint8","payloadLength","_SEIParser$getPayload","getPayloadLength","payload","Nalunit","buf","dataview","getInt32","getInt16","getInt8","getAnnexbNals","getAvccNals","nals","getHeaderPositionAnnexB","start","pos","end","header","headerLength","skip","unit","analyseNal","ndr","idr","sei","parse","SpsParser","parseSPS","_SpsParser","NalUnit","_NalUnit","Track","id","sequenceNumber","samples","droppedSamples","reset","AudioTrack","_Track","VideoTrack","_Track2","dropped","le","Tracks","audioTrack","videoTrack","ArrayBuffer","setInt16","Int16Array","sniffer","r","os","isPc","isTablet","ua","navigator","userAgent","toLowerCase","reg","test","isWindowsPhone","isSymbian","isAndroid","isFireFox","isPhone","UTF8","out","input","_checkContinuation","ucs4","_ucs","_ucs2","join","checkLength","array","isLe","DATA_TYPES","AMFParser","readOffset","metaData","parseValue","bodySize","resetStatus","strLen","getUint16","str","decode","ts","getFloat64","Date","parseString","isObjEnd","NUMBER","BOOLEAN","STRING","OBJECT","MIX_ARRAY","OBJECT_END","STRICT_ARRAY","DATE","LONE_STRING","dataView","objEndSize","amfObj","parseObject","isObjectEnd","_objEndSize","amfVar","arrLength","script","date","parseDate","longStr","parseLongString","Stream","loop","last","sign","res","FlvDemuxer","_firstFragmentLoaded","_trackNum","_hasScript","DEMUX_START","doParseFlv","loaderBuffer","chunk","loopMax","_parseFlvTag","DEMUX_COMPLETE","shift","parseFlvHeader","isFlvFile","initVideoTrack","initAudioTrack","DEMUX_ERROR","tracks","_parseFlvTagHeader","_processChunk","tagType","toInt","filtered","datasize","timestamp","timestampExt","dts","_parseScriptData","_parseAACData","_parseHevcData","info","onMetaData","hsaAudio","_datasizeValidator","MEDIA_INFO","hasSpecificConfig","audiosamplerate","sampleRate","audiochannels","channelCount","sampleRateIndex","_meta","framerate","fixed","objectType","_switchAudioSampleRate","frameLength","dependsOnCoreCoder","extensionFlagIndex","codec","window","extensionSamplingIndex","samplingIndex","track","format","_hasAudioSequence","_switchAudioSamplingFrequency","frameLenth","audioSampleRate","audioSampleRateIndex","validate","aacHeader","_aacSequenceHeaderParser","audioMedia","AUDIO_METADATA_CHANGE","METADATA_PARSED","_metaChange","frameType","isKeyframe","codecID","avcPacketType","cts","Number","parseInt","nalu","sizes","_data","avcclength","_avcSequenceHeaderParser","_hasVideoSequence","VIDEO_METADATA_CHANGE","SEI_PARSED","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","nalUnitLength","numOfSps","j","codecString","_j","h","toString","numOfPps","_i2","_size","_j2","toVideoMeta","videoMedia","avcc","samplingFrequencyIndex","datasizeConfirm","streamFlag","MediaSegmentList","_type","_list","_lastAppendLocation","beginDts","mid","lbound","ubound","originDts","lastSample","_searchNearestSegmentBefore","segment","lastAppendIdx","insertIdx","originStartDts","splice","getLastSegmentBefore","segmentIdx","randomAccessPoints","exports","ResultConstructor","totalLength","arrays","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","next","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","_concat2","__esModule","default","_concat","module","Buffer","item","Concat","padStart4Hex","hexNum","padStart","temp","num","Fmp4","writeUint32","write","version","flag","initBox","_ref","mvhd","trak","videoTrak","audioTrak","mvex","bytes","tkhd","mdia","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","dref","stsd","stts","stsc","stsz","stco","mp4a","avc1","samplerate","esds","configlen","hSpacing","vSpacing","btrt","pasp","trackID","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","sdtp","trun","sdtpLength","sampleCount","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","mdatBox","charCodeAt","Mp4Remuxer","curTime","_dtsBase","_isDtsBaseInited","_videoSegmentList","_audioSegmentList","browser","_fillSilenceFrame","isFirstVideo","isFirstAudio","videoAllDuration","audioAllDuration","REMUX_MEDIA","remux","REMUX_METADATA","onMetaDataReady","DETECT_CHANGE_STREAM","resetDtsBase","seek","clear","_context$getInstance","calcDtsBase","_remuxVideo","_remuxAudio","presourcebuffer","source","getSource","createSource","mimetype","remuxInitSegment","INIT_SEGMENT","initSegment","ftyp","moov","audioBase","Infinity","videoBase","firstDts","mp4Samples","maxLoop","avcSample","isContinue","pts","mdatSample","sampleDuration","videoMeta","RANDOM_ACCESS_POINT","moofMdat","moof","mdat","writeToSource","MEDIA_SEGMENT","isFirstDtsInited","sample","audioMeta","refSampleDurationFixed","mp4Sample","getSilentFrame","_audioMeta","_player","Source","PreSource","sources","XgBuffer","historyLen","_shiftBuffer","_ret","_ret2","tmpoff","tmp","templength","retInt","AAC","Compatibility","nextAudioDts","nextVideoDts","lastAudioSamplesLen","lastVideoSamplesLen","lastVideoDts","lastAudioDts","allAudioSamplesCount","allVideoSamplesCount","_firstAudioSample","_firstVideoSample","filledAudioSamples","filledVideoSamples","videoLastSample","audioLastSample","_videoLargeGap","_audioLargeGap","before","doFix","_getFirstSample","getFirstSample","isFirstAudioSamples","isFirstVideoSamples","recordSamplesCount","fixRefSampleDuration","_Compatibility$detact","detactChangeStream","videoChanged","changed","videoChangedIdx","changedIdx","fixChangeStreamVideo","doFixVideo","_Compatibility$detact2","audioChanged","audioChangedIdx","fixChangeStreamAudio","doFixAudio","removeInvalidSamples","first","streamChangeStart","_videoTrack","videoSamples","firstSample","doFixLargeGap","detectLargeGap","videoFirstDts","gap","fillCount","clonedFirstSample","curLastSample","_audioTrack","audioSamples","samplesLen","silentFrame","_firstSample","videoFirstPts","_gap","silentSampleCount","silentSample","absGap","abs","silentFrameCount","_i3","computed","_silentSample","lastOriginDts","lastDts","lastSampleDuration","_i4","current","sortAudioSamples","changeIdx","_videoTrack2","prevDts","getStreamChangeStart","curDts","DETECT_CHANGE_STREAM_DISCONTINUE","firstPartSamples","secondPartSamples","dtsBase","_audioTrack2","findFirstVideoSample","findFirstAudioSample","isVideo","allSamplesCount","filledSamplesCount","durationAvg","firstAudioSample","firstVideoSample","remuxer","sort","sorted","nextDts","cond1","cond2","discontinue","MSE","container","mediaSource","sourceBuffers","preloadTime","onSourceOpen","onTimeUpdate","onUpdateEnd","onWaiting","MediaSource","addEventListener","URL","createObjectURL","newCtx","addSourceBuffers","doAppend","readyState","add","dur","_k","mime","sourceBuffer","addSourceBuffer","inited","appendBuffer","_mediaSource","activeSourceBuffers","endOfStream","updating","remove","taskList","removeEventListener","task","doCleanBuffer","retryTime","clean","clearBuffer","all","removeBuffers","removeSourceBuffer","revokeObjectURL","buffered","bEnd","Tag","Logger","FlvController","player","mse","state","registry","Remuxer","currentTime","Mse","initListeners","_handleLoaderDataLoaded","_handleNetworkError","_handleMediaInfo","_handleMetadataParsed","_handleDemuxComplete","_handleDemuxError","_handleSEIParsed","_handleAppendInitSegment","_handleMediaSegment","loader","isSeekable","range","loadNext","emitTo","initSegmentArrived","Player","Errors","_onError","fatal","mod","message","loadMeta","getSeekRange","compat","loadData","getNextRange","rangeSupport","loadFallback","keyframes","seekStartTime","seekEndTime","seekStartFilePos","findFilePosition","times","currentKeyframeTime","nextKeyframeTime","MAX_SAFE_INTEGER","filepositions","flvAllowedEvents","isEnded","flv","isLive","getBufferedRange","initEvents","started","initFlv","FLV","ctx","mediaLength","resetContext","handleTimeUpdate","handleSeek","_destroy","initFlvBackupEvents","currentSrc","swithURL","isTypeSupported"],"mappings":"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"}