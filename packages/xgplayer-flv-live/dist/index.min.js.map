{"version":3,"file":"index.min.js","sources":["../../xgplayer-transmuxer-model-mediainfo/es/index.js","../../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../xgplayer-transmuxer-context/es/index.js","../../xgplayer-transmuxer-model-mediasegmentlist/es/index.js","../../xgplayer-transmuxer-remux-mp4/es/buffer.js","../../xgplayer-transmuxer-remux-mp4/es/fmp4.js","../../xgplayer-transmuxer-remux-mp4/es/index.js","../../xgplayer-transmuxer-model-trackmeta/es/index.js","../../xgplayer-transmuxer-codec-h264/es/golomb.js","../../xgplayer-transmuxer-codec-h264/es/sps.js","../../xgplayer-transmuxer-codec-h264/es/nalunit.js","../../xgplayer-transmuxer-buffer-track/es/index.js","../../xgplayer-transmuxer-demux-flv/es/amf-parser.js","../../xgplayer-transmuxer-demux-flv/es/index.js","../../xgplayer-transmuxer-loader-fetch/es/index.js","../../xgplayer-transmuxer-buffer-presource/es/index.js","../../xgplayer-transmuxer-buffer-xgbuffer/es/index.js","../../xgplayer-transmuxer-codec-aac/es/index.js","../../xgplayer-transmuxer-codec-compatibility/es/index.js","../../xgplayer-utils-mse/es/index.js","../../xgplayer-transmuxer-constant-events/es/index.js","../../xgplayer-utils-sniffer/es/index.js","../../xgplayer-transmuxer-codec-h264/es/index.js","../src/flv-live.js","../src/index.js"],"sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isObjectFilled = function isObjectFilled(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nvar MediaInfo = function () {\n  function MediaInfo() {\n    _classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n\n    this.hasVideo = null;\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n    };\n\n    this.hasAudio = null;\n\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    };\n  }\n\n  _createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this);\n    }\n  }], [{\n    key: \"isBaseInfoReady\",\n    value: function isBaseInfoReady(mediaInfo) {\n      return isObjectFilled(mediaInfo);\n    }\n  }, {\n    key: \"isVideoReady\",\n    value: function isVideoReady(mediaInfo) {\n      if (!mediaInfo.hasVideo) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }, {\n    key: \"isAudioReady\",\n    value: function isAudioReady(mediaInfo) {\n      if (!mediaInfo.hasAudio) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }]);\n\n  return MediaInfo;\n}();\n\nexport default MediaInfo;","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport MediaInfo from 'xgplayer-transmuxer-model-mediainfo';\nimport { EventEmitter } from 'events';\n\nvar DIRECT_EMIT_FLAG = '__TO__';\n\nvar Context = function () {\n  function Context() {\n    var allowedEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, Context);\n\n    this._emitter = new EventEmitter();\n    if (!this._emitter.off) {\n      this._emitter.off = this._emitter.removeListener;\n    }\n    this._instanceMap = {}; // 所有的解码流程实例\n    this._clsMap = {}; // 构造函数的map\n    this._inited = false;\n    this.mediaInfo = new MediaInfo();\n    this.allowedEvents = allowedEvents;\n    this._hooks = {}; // 注册在事件前/后的钩子，例如 before('DEMUX_COMPLETE')\n  }\n\n  /**\n   * 从上下文中获取解码流程实例，如果没有实例，构造一个\n   * @param tag\n   * @param args\n   * @returns {*}\n   */\n\n\n  _createClass(Context, [{\n    key: 'getInstance',\n    value: function getInstance(tag) {\n      var instance = this._instanceMap[tag];\n      if (instance) {\n        return instance;\n      } else {\n        // throw new Error(`${tag}实例尚未初始化`)\n        return null;\n      }\n    }\n\n    /**\n     * 初始化具体实例\n     * @param tag\n     * @param args\n     */\n\n  }, {\n    key: 'initInstance',\n    value: function initInstance(tag) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var a = args[0],\n          b = args[1],\n          c = args[2],\n          d = args[3];\n\n      if (this._clsMap[tag]) {\n        var newInstance = new this._clsMap[tag](a, b, c, d);\n        this._instanceMap[tag] = newInstance;\n        if (newInstance.init) {\n          newInstance.init(); // TODO: lifecircle\n        }\n        return newInstance;\n      } else {\n        throw new Error(tag + '\\u672A\\u5728context\\u4E2D\\u6CE8\\u518C');\n      }\n    }\n\n    /**\n     * 避免大量的initInstance调用，初始化所有的组件\n     * @param config\n     */\n\n  }, {\n    key: 'init',\n    value: function init(config) {\n      if (this._inited) {\n        return;\n      }\n      for (var tag in this._clsMap) {\n        // if not inited, init an instance\n        if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n          this.initInstance(tag, config);\n        }\n      }\n      this._inited = true;\n    }\n\n    /**\n     * 注册一个上下文流程，提供安全的事件发送机制\n     * @param tag\n     * @param cls\n     */\n\n  }, {\n    key: 'registry',\n    value: function registry(tag, cls) {\n      var _this2 = this;\n\n      var emitter = this._emitter;\n      var checkMessageName = this._isMessageNameValid.bind(this);\n      var self = this;\n      var enhanced = function (_cls) {\n        _inherits(enhanced, _cls);\n\n        function enhanced(a, b, c) {\n          _classCallCheck(this, enhanced);\n\n          var _this = _possibleConstructorReturn(this, (enhanced.__proto__ || Object.getPrototypeOf(enhanced)).call(this, a, b, c));\n\n          _this.listeners = {};\n          _this.onceListeners = {};\n          _this.TAG = tag;\n          _this._context = self;\n          return _this;\n        }\n\n        _createClass(enhanced, [{\n          key: 'on',\n          value: function on(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.listeners[messageName]) {\n              this.listeners[messageName].push(callback);\n            } else {\n              this.listeners[messageName] = [callback];\n            }\n\n            emitter.on('' + messageName + DIRECT_EMIT_FLAG + tag, callback); // 建立定向通信监听\n            return emitter.on(messageName, callback);\n          }\n\n          /**\n           * 在某个事件触发前执行\n           * @param messageName\n           * @param callback\n           */\n\n        }, {\n          key: 'before',\n          value: function before(messageName, callback) {\n            checkMessageName(messageName);\n            if (self._hooks[messageName]) {\n              self._hooks[messageName].push(callback);\n            } else {\n              self._hooks[messageName] = [callback];\n            }\n          }\n        }, {\n          key: 'once',\n          value: function once(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.onceListeners[messageName]) {\n              this.onceListeners[messageName].push(callback);\n            } else {\n              this.onceListeners[messageName] = [callback];\n            }\n\n            emitter.once('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n            return emitter.once(messageName, callback);\n          }\n        }, {\n          key: 'emit',\n          value: function emit(messageName) {\n            checkMessageName(messageName);\n            // console.log('emit ', messageName);\n\n            var beforeList = self._hooks ? self._hooks[messageName] : null;\n\n            if (beforeList) {\n              for (var i = 0, len = beforeList.length; i < len; i++) {\n                var callback = beforeList[i];\n                callback();\n              }\n            }\n\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            return emitter.emit.apply(emitter, [messageName].concat(args));\n          }\n\n          /**\n           * 定向发送给某个组件单例的消息\n           * @param messageName\n           * @param args\n           */\n\n        }, {\n          key: 'emitTo',\n          value: function emitTo(tag, messageName) {\n            checkMessageName(messageName);\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n              args[_key3 - 2] = arguments[_key3];\n            }\n\n            return emitter.emit.apply(emitter, ['' + messageName + DIRECT_EMIT_FLAG + tag].concat(args));\n          }\n        }, {\n          key: 'off',\n          value: function off(messageName, callback) {\n            checkMessageName(messageName);\n            return emitter.off(messageName, callback);\n          }\n        }, {\n          key: 'removeListeners',\n          value: function removeListeners() {\n            var hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners);\n\n            for (var messageName in this.listeners) {\n              if (hasOwn(messageName)) {\n                var callbacks = this.listeners[messageName] || [];\n                for (var i = 0; i < callbacks.length; i++) {\n                  var callback = callbacks[i];\n                  emitter.off(messageName, callback);\n                  emitter.off('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n                }\n              }\n            }\n\n            for (var _messageName in this.onceListeners) {\n              if (hasOwn(_messageName)) {\n                var _callbacks = this.onceListeners[_messageName] || [];\n                for (var _i = 0; _i < _callbacks.length; _i++) {\n                  var _callback = _callbacks[_i];\n                  emitter.off(_messageName, _callback);\n                  emitter.off('' + _messageName + DIRECT_EMIT_FLAG + tag, _callback);\n                }\n              }\n            }\n          }\n\n          /**\n           * 在组件销毁时，默认将它注册的事件全部卸载，确保不会造成内存泄漏\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            // step1 unlisten events\n            this.removeListeners();\n            this.listeners = {};\n\n            // step2 release from context\n            delete self._instanceMap[tag];\n            if (_get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this)) {\n              return _get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this).call(this);\n            }\n          }\n        }]);\n\n        return enhanced;\n      }(cls);\n      this._clsMap[tag] = enhanced;\n\n      /**\n       * get instance immediately\n       * e.g const instance = context.registry(tag, Cls)(config)\n       * */\n      return function () {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return _this2.initInstance.apply(_this2, [tag].concat(args));\n      };\n    }\n\n    /**\n     * 对存在的实例进行\n     */\n\n  }, {\n    key: 'destroyInstances',\n    value: function destroyInstances() {\n      var _this3 = this;\n\n      Object.keys(this._instanceMap).forEach(function (tag) {\n        if (_this3._instanceMap[tag].destroy) {\n          _this3._instanceMap[tag].destroy();\n        }\n      });\n    }\n\n    /**\n     * 编解码流程无需关注事件的解绑\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._emitter = null;\n      this.allowedEvents = [];\n      this._clsMap = null;\n      this._context = null;\n      this._hooks = null;\n      this.destroyInstances();\n    }\n\n    /**\n     * 对信道进行收拢\n     * @param messageName\n     * @private\n     */\n\n  }, {\n    key: '_isMessageNameValid',\n    value: function _isMessageNameValid(messageName) {\n      if (!this.allowedEvents.indexOf(messageName) < 0) {\n        throw new Error('unregistered message name: ' + messageName);\n      }\n    }\n  }]);\n\n  return Context;\n}();\n\nexport default Context;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MediaSegmentList = function () {\n  function MediaSegmentList(type) {\n    _classCallCheck(this, MediaSegmentList);\n\n    this._type = type;\n    this._list = [];\n    this._lastAppendLocation = -1; // cached last insert location\n  }\n\n  _createClass(MediaSegmentList, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this._list.length === 0;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._list = [];\n      this._lastAppendLocation = -1;\n    }\n  }, {\n    key: \"_searchNearestSegmentBefore\",\n    value: function _searchNearestSegmentBefore(beginDts) {\n      var list = this._list;\n      if (list.length === 0) {\n        return -2;\n      }\n      var last = list.length - 1;\n      var mid = 0;\n      var lbound = 0;\n      var ubound = last;\n\n      var idx = 0;\n\n      if (beginDts < list[0].originDts) {\n        idx = -1;\n        return idx;\n      }\n\n      while (lbound <= ubound) {\n        mid = lbound + Math.floor((ubound - lbound) / 2);\n        if (mid === last || beginDts > list[mid].lastSample.originDts && beginDts < list[mid + 1].originDts) {\n          idx = mid;\n          break;\n        } else if (list[mid].originDts < beginDts) {\n          lbound = mid + 1;\n        } else {\n          ubound = mid - 1;\n        }\n      }\n      return idx;\n    }\n  }, {\n    key: \"_searchNearestSegmentAfter\",\n    value: function _searchNearestSegmentAfter(beginDts) {\n      return this._searchNearestSegmentBefore(beginDts) + 1;\n    }\n  }, {\n    key: \"append\",\n    value: function append(segment) {\n      var list = this._list;\n      var lastAppendIdx = this._lastAppendLocation;\n      var insertIdx = 0;\n\n      if (lastAppendIdx !== -1 && lastAppendIdx < list.length && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && segment.originStartDts < list[lastAppendIdx + 1].originStartDts)) {\n        insertIdx = lastAppendIdx + 1; // use cached location idx\n      } else {\n        if (list.length > 0) {\n          insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n        }\n      }\n\n      this._lastAppendLocation = insertIdx;\n      this._list.splice(insertIdx, 0, segment);\n    }\n  }, {\n    key: \"getLastSegmentBefore\",\n    value: function getLastSegmentBefore(beginDts) {\n      var idx = this._searchNearestSegmentBefore(beginDts);\n      if (idx >= 0) {\n        return this._list[idx];\n      } else {\n        // -1\n        return null;\n      }\n    }\n  }, {\n    key: \"getLastSampleBefore\",\n    value: function getLastSampleBefore(beginDts) {\n      var segment = this.getLastSegmentBefore(beginDts);\n      if (segment !== null) {\n        return segment.lastSample;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getLastRAPBefore\",\n    value: function getLastRAPBefore(beginDts) {\n      var segmentIdx = this._searchNearestSegmentBefore(beginDts);\n      var randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n      while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n        segmentIdx--;\n        randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n      }\n      if (randomAccessPoints.length > 0) {\n        return randomAccessPoints[randomAccessPoints.length - 1];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._list.length;\n    }\n  }]);\n\n  return MediaSegmentList;\n}();\n\nexport default MediaSegmentList;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    _classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  _createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n\n  return Buffer;\n}();\n\nexport default Buffer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Buffer from './buffer';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar Fmp4 = function () {\n  function Fmp4() {\n    _classCallCheck(this, Fmp4);\n  }\n\n  _createClass(Fmp4, null, [{\n    key: 'size',\n    value: function size(value) {\n      return Buffer.writeUint32(value);\n    }\n  }, {\n    key: 'initBox',\n    value: function initBox(size, name) {\n      var buffer = new Buffer();\n\n      for (var _len = arguments.length, content = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        content[_key - 2] = arguments[_key];\n      }\n\n      buffer.write.apply(buffer, [Fmp4.size(size), Fmp4.type(name)].concat(content));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'extension',\n    value: function extension(version, flag) {\n      return new Uint8Array([version, flag >> 16 & 0xff, flag >> 8 & 0xff, flag & 0xff]);\n    }\n  }, {\n    key: 'ftyp',\n    value: function ftyp() {\n      return Fmp4.initBox(24, 'ftyp', new Uint8Array([0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n      ]));\n    }\n  }, {\n    key: 'moov',\n    value: function moov(_ref) {\n      var type = _ref.type,\n          meta = _ref.meta;\n\n      var size = 8;\n      var mvhd = Fmp4.mvhd(meta.duration, meta.timescale);\n      var trak = void 0;\n\n      if (type === 'video') {\n        trak = Fmp4.videoTrak(meta);\n      } else {\n        trak = Fmp4.audioTrak(meta);\n      }\n\n      var mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n      [mvhd, trak, mvex].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moov', mvhd, trak, mvex);\n    }\n  }, {\n    key: 'mvhd',\n    value: function mvhd(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n\n      // duration *= timescale;\n      var bytes = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      timescale >>> 24 & 0xFF, timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n      ]);\n      return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes));\n    }\n  }, {\n    key: 'videoTrak',\n    value: function videoTrak(data) {\n      var size = 8;\n\n      var tkhd = Fmp4.tkhd({\n        id: 1,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: data.presentWidth,\n        height: data.presentHeight,\n        type: 'video'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'video',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        avcc: data.avcc,\n        parRatio: data.parRatio,\n        width: data.presentWidth,\n        height: data.presentHeight\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'audioTrak',\n    value: function audioTrak(data) {\n      var size = 8;\n      var tkhd = Fmp4.tkhd({\n        id: 2,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: 0,\n        height: 0,\n        type: 'audio'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'audio',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        channelCount: data.channelCount,\n        samplerate: data.sampleRate,\n        config: data.config\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'tkhd',\n    value: function tkhd(data) {\n      var id = data.id;\n      var duration = data.duration;\n      var width = data.width;\n      var height = data.height;\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      id >>> 24 & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      id >>> 16 & 0xFF, id >>> 8 & 0xFF, id & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      duration >>> 24 & 0xFF, // duration: 4 bytes track的时间长度\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      width >>> 8 & 0xFF, // //宽度\n      width & 0xFF, 0x00, 0x00, height >>> 8 & 0xFF, // 高度\n      height & 0xFF, 0x00, 0x00]);\n      return Fmp4.initBox(8 + content.byteLength, 'tkhd', content);\n    }\n  }, {\n    key: 'edts',\n    value: function edts(data) {\n      var buffer = new Buffer();\n      var duration = data.duration;\n      var mediaTime = data.mediaTime;\n      buffer.write(Fmp4.size(36), Fmp4.type('edts'));\n      // elst\n      buffer.write(Fmp4.size(28), Fmp4.type('elst'));\n      buffer.write(new Uint8Array([0x00, 0x00, 0x00, 0x01, // entry count\n      duration >> 24 & 0xff, duration >> 16 & 0xff, duration >> 8 & 0xff, duration & 0xff, mediaTime >> 24 & 0xff, mediaTime >> 16 & 0xff, mediaTime >> 8 & 0xff, mediaTime & 0xff, 0x00, 0x00, 0x00, 0x01 // media rate\n      ]));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdia',\n    value: function mdia(data) {\n      var size = 8;\n      var mdhd = Fmp4.mdhd(data.timescale, data.duration);\n      var hdlr = Fmp4.hdlr(data.type);\n      var minf = Fmp4.minf(data);\n      [mdhd, hdlr, minf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf);\n    }\n  }, {\n    key: 'mdhd',\n    value: function mdhd() {\n      var timescale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n      var duration = arguments[1];\n\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      timescale >>> 24 & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF, duration >>> 24 & 0xFF, // duration: 4 bytes  track的时间长度\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n      ]);\n      return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'hdlr',\n    value: function hdlr(type) {\n      var value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ];\n      if (type === 'audio') {\n        value.splice.apply(value, [8, 4].concat([0x73, 0x6f, 0x75, 0x6e]));\n        value.splice.apply(value, [24, 13].concat([0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00]));\n      }\n      return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value));\n    }\n  }, {\n    key: 'minf',\n    value: function minf(data) {\n      var size = 8;\n      var vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd();\n      var dinf = Fmp4.dinf();\n      var stbl = Fmp4.stbl(data);\n      [vmhd, dinf, stbl].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl);\n    }\n  }, {\n    key: 'vmhd',\n    value: function vmhd() {\n      return Fmp4.initBox(20, 'vmhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]));\n    }\n  }, {\n    key: 'smhd',\n    value: function smhd() {\n      return Fmp4.initBox(16, 'smhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n      ]));\n    }\n  }, {\n    key: 'dinf',\n    value: function dinf() {\n      var buffer = new Buffer();\n      var dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ];\n      buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stbl',\n    value: function stbl(data) {\n      var size = 8;\n      var stsd = Fmp4.stsd(data);\n      var stts = Fmp4.stts();\n      var stsc = Fmp4.stsc();\n      var stsz = Fmp4.stsz();\n      var stco = Fmp4.stco();\n      [stsd, stts, stsc, stsz, stco].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco);\n    }\n  }, {\n    key: 'stsd',\n    value: function stsd(data) {\n      var content = void 0;\n      if (data.type === 'audio') {\n        // if (!data.isAAC && data.codec === 'mp4') {\n        //     content = FMP4.mp3(data);\n        // } else {\n        //\n        // }\n        // 支持mp4a\n        content = Fmp4.mp4a(data);\n      } else {\n        content = Fmp4.avc1(data);\n      }\n      return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content);\n    }\n  }, {\n    key: 'mp4a',\n    value: function mp4a(data) {\n      var content = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      data.samplerate >> 8 & 0xff, data.samplerate & 0xff, //\n      0x00, 0x00]);\n      var esds = Fmp4.esds(data.config);\n      return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds);\n    }\n  }, {\n    key: 'esds',\n    value: function esds() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [43, 146, 8, 0];\n\n      var configlen = config.length;\n      var buffer = new Buffer();\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n      ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]));\n      buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'avc1',\n    value: function avc1(data) {\n      var buffer = new Buffer();\n      var size = 40; // 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n      // let sps = data.sps\n      // let pps = data.pps\n      var width = data.width;\n      var height = data.height;\n      var hSpacing = data.parRatio.height;\n      var vSpacing = data.parRatio.width;\n      // let avccBuffer = new Buffer()\n      // avccBuffer.write(new Uint8Array([\n      //   0x01, // version\n      //   sps[1], // profile\n      //   sps[2], // profile compatible\n      //   sps[3], // level\n      //   0xfc | 3,\n      //   0xE0 | 1 // 目前只处理一个sps\n      // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n      // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n      var avcc = data.avcc;\n      var avc1 = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      width >> 8 & 0xff, width & 0xff, // width\n      height >> 8 & 0xff, height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12, 0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]); // pre_defined = -1\n      var btrt = new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]);\n      var pasp = new Uint8Array([hSpacing >> 24, // hSpacing\n      hSpacing >> 16 & 0xff, hSpacing >> 8 & 0xff, hSpacing & 0xff, vSpacing >> 24, // vSpacing\n      vSpacing >> 16 & 0xff, vSpacing >> 8 & 0xff, vSpacing & 0xff]);\n\n      buffer.write(Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1, Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc, Fmp4.size(20), Fmp4.type('btrt'), btrt, Fmp4.size(16), Fmp4.type('pasp'), pasp);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stts',\n    value: function stts() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stts', content);\n    }\n  }, {\n    key: 'stsc',\n    value: function stsc() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stsc', content);\n    }\n  }, {\n    key: 'stco',\n    value: function stco() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stco', content);\n    }\n  }, {\n    key: 'stsz',\n    value: function stsz() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      return Fmp4.initBox(20, 'stsz', content);\n    }\n  }, {\n    key: 'mvex',\n    value: function mvex(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n      var trackID = arguments[2];\n\n      var buffer = new Buffer();\n      var mehd = Buffer.writeUint32(duration);\n      buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'trex',\n    value: function trex(id) {\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      id >> 24, id >> 16 & 0xff, id >> 8 & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      return Fmp4.initBox(8 + content.byteLength, 'trex', content);\n    }\n  }, {\n    key: 'moof',\n    value: function moof(data) {\n      var size = 8;\n      var mfhd = Fmp4.mfhd();\n      var traf = Fmp4.traf(data);\n      [mfhd, traf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moof', mfhd, traf);\n    }\n  }, {\n    key: 'mfhd',\n    value: function mfhd() {\n      var content = Buffer.writeUint32(Fmp4.sequence);\n      Fmp4.sequence += 1;\n      return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'traf',\n    value: function traf(data) {\n      var size = 8;\n      var tfhd = Fmp4.tfhd(data.id);\n      var tfdt = Fmp4.tfdt(data.time);\n      var sdtp = Fmp4.sdtp(data);\n      var trun = Fmp4.trun(data, sdtp.byteLength);\n\n      [tfhd, tfdt, trun, sdtp].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp);\n    }\n  }, {\n    key: 'tfhd',\n    value: function tfhd(id) {\n      var content = Buffer.writeUint32(id);\n      return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'tfdt',\n    value: function tfdt(time) {\n      // let upper = Math.floor(time / (UINT32_MAX + 1)),\n      //     lower = Math.floor(time % (UINT32_MAX + 1));\n      return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time));\n    }\n  }, {\n    key: 'trun',\n    value: function trun(data, sdtpLength) {\n      // let id = data.id;\n      // let ceil = id === 1 ? 16 : 12;\n      var buffer = new Buffer();\n      var sampleCount = Buffer.writeUint32(data.samples.length);\n      // mdat-header 8\n      // moof-header 8\n      // mfhd 16\n      // traf-header 8\n      // thhd 16\n      // tfdt 20\n      // trun-header 12\n      // sampleCount 4\n      // data-offset 4\n      // samples.length\n      var offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength);\n      buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset);\n\n      // let size = buffer.buffer.byteLength\n      // let writeOffset = 0\n      // data.samples.forEach(() => {\n      //   size += 16\n      // })\n      //\n      // let trunBox = new Uint8Array(size)\n\n      // trunBox.set(buffer.buffer, 0)\n\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        // console.log(item.type, item.dts, item.duration)\n\n        buffer.write(new Uint8Array([item.duration >>> 24 & 0xFF, // sample_duration\n        item.duration >>> 16 & 0xFF, item.duration >>> 8 & 0xFF, item.duration & 0xFF, item.size >>> 24 & 0xFF, // sample_size\n        item.size >>> 16 & 0xFF, item.size >>> 8 & 0xFF, item.size & 0xFF, flags.isLeading << 2 | flags.dependsOn, // sample_flags\n        flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.isNonSync, 0x00, 0x00, // sample_degradation_priority\n        item.cts >>> 24 & 0xFF, // sample_composition_time_offset\n        item.cts >>> 16 & 0xFF, item.cts >>> 8 & 0xFF, item.cts & 0xFF]));\n        // writeOffset += 16\n        // buffer.write(Buffer.writeUint32(0));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'sdtp',\n    value: function sdtp(data) {\n      var buffer = new Buffer();\n      buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0));\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        var num = flags.isLeading << 6 | // is_leading: 2 (bit)\n        flags.dependsOn << 4 | // sample_depends_on\n        flags.isDependedOn << 2 | // sample_is_depended_on\n        flags.hasRedundancy; // sample_has_redundancy\n\n        buffer.write(new Uint8Array([num]));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdat',\n    value: function mdat(data) {\n      var buffer = new Buffer();\n      var size = 8;\n      data.samples.forEach(function (item) {\n        size += item.size;\n      });\n      buffer.write(Fmp4.size(size), Fmp4.type('mdat'));\n      var mdatBox = new Uint8Array(size);\n      var offset = 0;\n      mdatBox.set(buffer.buffer, offset);\n      offset += 8;\n      data.samples.forEach(function (item) {\n        item.buffer.forEach(function (unit) {\n          mdatBox.set(unit, offset);\n          offset += unit.byteLength;\n          // buffer.write(unit.data);\n        });\n      });\n      return mdatBox;\n    }\n  }]);\n\n  return Fmp4;\n}();\n\nFmp4.type = function (name) {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)]);\n};\nFmp4.sequence = 1;\n\nexport default Fmp4;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport sniffer from 'xgplayer-utils-sniffer';\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport MediaSegmentList from 'xgplayer-transmuxer-model-mediasegmentlist';\n\nimport Buffer from './buffer';\nimport Fmp4 from './fmp4';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar PLAYER_EVENTS = EVENTS.PLAYER_EVENTS;\n\nvar Mp4Remuxer = function () {\n  function Mp4Remuxer() {\n    var curTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    _classCallCheck(this, Mp4Remuxer);\n\n    this._dtsBase = curTime * 1000;\n    this._isDtsBaseInited = false;\n    this._videoSegmentList = new MediaSegmentList('video');\n    this._audioSegmentList = new MediaSegmentList('audio');\n    var browser = sniffer.browser;\n\n    this._fillSilenceFrame = browser === 'ie';\n\n    this.isFirstVideo = true;\n    this.isFirstAudio = true;\n\n    this.videoAllDuration = 0;\n    this.audioAllDuration = 0;\n  }\n\n  _createClass(Mp4Remuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this));\n      this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this));\n      this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this));\n      this.on(PLAYER_EVENTS.SEEK, this.seek.bind(this));\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._dtsBase = -1;\n      this._isDtsBaseInited = false;\n      this._videoSegmentList.clear();\n      this._audioSegmentList.clear();\n      this._videoSegmentList = null;\n      this._audioSegmentList = null;\n    }\n  }, {\n    key: 'remux',\n    value: function remux() {\n      var _context$getInstance = this._context.getInstance('TRACKS'),\n          audioTrack = _context$getInstance.audioTrack,\n          videoTrack = _context$getInstance.videoTrack;\n\n      !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack);\n\n      this._remuxVideo(videoTrack);\n      this._remuxAudio(audioTrack);\n    }\n  }, {\n    key: 'resetDtsBase',\n    value: function resetDtsBase() {\n      // for hls 中途切换 meta后seek\n      this._dtsBase = 0;\n      // this._isDtsBaseInited = false\n    }\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      if (!this._isDtsBaseInited) {\n        this._dtsBase = time * 1000;\n      }\n    }\n  }, {\n    key: 'onMetaDataReady',\n    value: function onMetaDataReady(type) {\n      var track = void 0;\n\n      if (type === 'audio') {\n        var _context$getInstance2 = this._context.getInstance('TRACKS'),\n            audioTrack = _context$getInstance2.audioTrack;\n\n        track = audioTrack;\n      } else {\n        var _context$getInstance3 = this._context.getInstance('TRACKS'),\n            videoTrack = _context$getInstance3.videoTrack;\n\n        track = videoTrack;\n      }\n\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.mimetype = track.meta.codec;\n      source.init = this.remuxInitSegment(type, track.meta);\n      // source.inited = false;\n\n      // this.resetDtsBase()\n      this.emit(REMUX_EVENTS.INIT_SEGMENT, type);\n    }\n  }, {\n    key: 'remuxInitSegment',\n    value: function remuxInitSegment(type, meta) {\n      var initSegment = new Buffer();\n      var ftyp = Fmp4.ftyp();\n      var moov = Fmp4.moov({ type: type, meta: meta });\n\n      initSegment.write(ftyp, moov);\n      return initSegment;\n    }\n  }, {\n    key: 'calcDtsBase',\n    value: function calcDtsBase(audioTrack, videoTrack) {\n      if (!audioTrack && videoTrack.samples.length) {\n        return videoTrack.samples[0].dts;\n      }\n\n      if (!audioTrack.samples.length && !videoTrack.samples.length) {\n        return;\n      }\n\n      var audioBase = Infinity;\n      var videoBase = Infinity;\n\n      if (audioTrack.samples && audioTrack.samples.length) {\n        audioBase = audioTrack.samples[0].dts;\n      }\n      if (videoTrack.samples && videoTrack.samples.length) {\n        videoBase = videoTrack.samples[0].dts;\n      }\n\n      this._dtsBase = Math.min(audioBase, videoBase) - this._dtsBase; // 兼容播放器切换清晰度\n      this._isDtsBaseInited = true;\n    }\n  }, {\n    key: '_remuxVideo',\n    value: function _remuxVideo(videoTrack) {\n      var track = videoTrack || {};\n\n      if (!videoTrack.samples || !videoTrack.samples.length) {\n        return;\n      }\n\n      var samples = track.samples;\n\n      var firstDts = -1;\n\n      var initSegment = null;\n      var mp4Samples = [];\n      var mdatBox = {\n        samples: []\n      };\n\n      var maxLoop = 10000;\n      while (samples.length && maxLoop-- > 0) {\n        // console.log('mark2')\n        var avcSample = samples.shift();\n\n        var isKeyframe = avcSample.isKeyframe,\n            options = avcSample.options;\n\n        if (!this.isFirstVideo && options && options.meta) {\n          initSegment = this.remuxInitSegment('video', options.meta);\n          options.meta = null;\n          samples.unshift(avcSample);\n          if (!options.isContinue) {\n            this.resetDtsBase();\n          }\n          break;\n        }\n\n        var dts = avcSample.dts - this._dtsBase;\n\n        if (firstDts === -1) {\n          firstDts = dts;\n        }\n\n        var cts = void 0;\n        var pts = void 0;\n        if (avcSample.pts !== undefined) {\n          pts = avcSample.pts - this._dtsBase;\n          cts = pts - dts;\n        }\n        if (avcSample.cts !== undefined) {\n          pts = avcSample.cts + dts;\n          cts = avcSample.cts;\n        }\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n\n        var sampleDuration = 0;\n        if (avcSample.duration) {\n          sampleDuration = avcSample.duration;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this._dtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // lastest sample, use second last duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference duration\n            sampleDuration = this.videoMeta.refSampleDuration;\n          }\n        }\n        this.videoAllDuration += sampleDuration;\n        // console.log(`video dts ${dts}`, `pts ${pts}`, isKeyframe, `duration ${sampleDuration}`)\n        if (sampleDuration >= 0) {\n          mdatBox.samples.push(mdatSample);\n          mdatSample.buffer.push(avcSample.data);\n          mdatSample.size += avcSample.data.byteLength;\n\n          mp4Samples.push({\n            dts: dts,\n            cts: cts,\n            pts: pts,\n            data: avcSample.data,\n            size: avcSample.data.byteLength,\n            isKeyframe: isKeyframe,\n            duration: sampleDuration,\n            flags: {\n              isLeading: 0,\n              dependsOn: isKeyframe ? 2 : 1,\n              isDependedOn: isKeyframe ? 1 : 0,\n              hasRedundancy: 0,\n              isNonSync: isKeyframe ? 0 : 1\n            },\n            originDts: dts,\n            type: 'video'\n          });\n        }\n\n        if (isKeyframe) {\n          this.emit(REMUX_EVENTS.RANDOM_ACCESS_POINT, pts);\n        }\n      }\n\n      var moofMdat = new Buffer();\n      if (mp4Samples.length) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.writeToSource('video', moofMdat);\n      }\n\n      if (initSegment) {\n        this.writeToSource('video', initSegment);\n\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this._remuxVideo(track);\n        }\n      }\n\n      this.isFirstVideo = false;\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video');\n\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: '_remuxAudio',\n    value: function _remuxAudio(track) {\n      var _ref = track || {},\n          samples = _ref.samples;\n\n      var firstDts = -1;\n      var mp4Samples = [];\n\n      var initSegment = null;\n      var mdatBox = {\n        samples: []\n      };\n      if (!samples || !samples.length) {\n        return;\n      }\n\n      var maxLoop = 10000;\n      var isFirstDtsInited = false;\n      while (samples.length && maxLoop-- > 0) {\n        // console.log('mark3')\n        var sample = samples.shift();\n        var data = sample.data,\n            options = sample.options;\n\n        if (!this.isFirstAudio && options && options.meta) {\n          initSegment = this.remuxInitSegment('audio', options.meta);\n          options.meta = null;\n          samples.unshift(sample);\n          if (!options.isContinue) {\n            this.resetDtsBase();\n          }\n          break;\n        }\n\n        var dts = sample.dts - this._dtsBase;\n        var originDts = dts;\n        if (!isFirstDtsInited) {\n          firstDts = dts;\n          isFirstDtsInited = true;\n        }\n\n        var sampleDuration = 0;\n        if (sample.duration) {\n          sampleDuration = sample.duration;\n        } else if (this.audioMeta.refSampleDurationFixed) {\n          sampleDuration = this.audioMeta.refSampleDurationFixed;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this._dtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // use second last sample duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference sample duration\n            sampleDuration = this.audioMeta.refSampleDuration;\n          }\n        }\n\n        // console.log(`audio dts ${dts}`, `pts ${dts}`, `duration ${sampleDuration}`)\n        this.audioAllDuration += sampleDuration;\n        var mp4Sample = {\n          dts: dts,\n          pts: dts,\n          cts: 0,\n          size: data.byteLength,\n          duration: sample.duration ? sample.duration : sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: 2,\n            isDependedOn: 1,\n            hasRedundancy: 0,\n            isNonSync: 0\n          },\n          isKeyframe: true,\n          originDts: originDts,\n          type: 'audio'\n        };\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n\n        if (sampleDuration >= 0) {\n          mdatSample.buffer.push(data);\n          mdatSample.size += data.byteLength;\n\n          mdatBox.samples.push(mdatSample);\n          mp4Samples.push(mp4Sample);\n        }\n      }\n\n      var moofMdat = new Buffer();\n\n      if (mp4Samples.length) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.writeToSource('audio', moofMdat);\n      }\n\n      if (initSegment) {\n        this.writeToSource('audio', initSegment);\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this._remuxAudio(track);\n        }\n      }\n\n      this.isFirstAudio = false;\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat);\n\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: 'writeToSource',\n    value: function writeToSource(type, buffer) {\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.data.push(buffer);\n    }\n  }, {\n    key: 'initSilentAudio',\n    value: function initSilentAudio(dts, duration) {\n      var unit = Mp4Remuxer.getSilentFrame(this._audioMeta.channelCount);\n      return {\n        dts: dts,\n        pts: dts,\n        cts: 0,\n        duration: duration,\n        unit: unit,\n        size: unit.byteLength,\n        originDts: dts,\n        type: 'video'\n      };\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._player = null;\n    }\n  }, {\n    key: 'videoMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').videoTrack.meta;\n    }\n  }, {\n    key: 'audioMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').audioTrack.meta;\n    }\n  }], [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(channelCount) {\n      if (channelCount === 1) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n      } else if (channelCount === 2) {\n        return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n      } else if (channelCount === 3) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n      } else if (channelCount === 4) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n      } else if (channelCount === 5) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n      } else if (channelCount === 6) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n      }\n      return null;\n    }\n  }]);\n\n  return Mp4Remuxer;\n}();\n\nexport default Mp4Remuxer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    _classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    _classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n\n  return VideoTrackMeta;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Golomb = function () {\n  function Golomb(uint8array) {\n    _classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  _createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO 异常处理\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }]);\n\n  return Golomb;\n}();\n\nexport default Golomb;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    _classCallCheck(this, SPSParser);\n  }\n\n  _createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1,\n          par_height = 1;\n      var fps = 0,\n          fps_fixed = true,\n          fps_num = 0,\n          fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0,\n          crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var lastScale = 8;\n      var nextScale = 8;\n      var deltaScale = 0;\n      for (var i = 0; i < count; i++) {\n        if (nextScale !== 0) {\n          deltaScale = gb.readSEG();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n      return meta;\n    }\n  }]);\n\n  return SPSParser;\n}();\n\nexport default SPSParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport SpsParser from './sps';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    _classCallCheck(this, Nalunit);\n  }\n\n  _createClass(Nalunit, null, [{\n    key: 'getNalunits',\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32();\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = buffer.buffer.slice(buffer.position, buffer.position + length);\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = buffer.length;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225;\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n\n  return Nalunit;\n}();\n\nexport default Nalunit;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Track = function () {\n  /**\n   * The constructor.\n   */\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.id = -1;\n    this.sequenceNumber = 0;\n    this.samples = [];\n    this.droppedSamples = [];\n    this.length = 0;\n  }\n\n  /**\n   * Reset the track.\n   */\n\n\n  _createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n    /**\n     * destroy the track.\n     */\n\n  }, {\n    key: 'distroy',\n    value: function distroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  /**\n   * The constructor for audio track.\n   */\n  function AudioTrack() {\n    _classCallCheck(this, AudioTrack);\n\n    var _this = _possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  _inherits(VideoTrack, _Track2);\n\n  /**\n   * The constructor for video track.\n   */\n  function VideoTrack() {\n    _classCallCheck(this, VideoTrack);\n\n    var _this2 = _possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    _this2.type = 'video';\n    _this2.dropped = 0;\n    return _this2;\n  }\n  /**\n   * reset the video track.\n   */\n\n\n  _createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    _classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  _createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n\n  return Tracks;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport sniffer from 'xgplayer-utils-sniffer';\nimport UTF8 from 'xgplayer-utils-utf8';\n\nvar isLe = sniffer.isLe;\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta信息解析\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    _classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  _createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * 解析meta中的变量\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n\n  return AMFParser;\n}();\n\nexport default AMFParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport { AudioTrackMeta, VideoTrackMeta } from 'xgplayer-transmuxer-model-trackmeta';\nimport { SpsParser } from 'xgplayer-transmuxer-codec-h264';\nimport { VideoTrack, AudioTrack } from 'xgplayer-transmuxer-buffer-track';\n\nimport AMFParser from './amf-parser';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    _classCallCheck(this, FlvDemuxer);\n\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n  }\n\n  _createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this));\n    }\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'doParseFlv',\n    value: function doParseFlv() {\n      if (!this._firstFragmentLoaded) {\n        if (this.loaderBuffer.length < 13) {\n          return;\n        }\n        var header = this.loaderBuffer.shift(13);\n        this.parseFlvHeader(header);\n        this.doParseFlv(); // 递归调用，继续解析flv流\n      } else {\n        if (this.loaderBuffer.length < 11) {\n          return;\n        }\n        var chunk = void 0;\n\n        var loopMax = 10000; // 防止死循环产生\n        do {\n          // console.log('mark4')\n          chunk = this._parseFlvTag();\n        } while (chunk && loopMax-- > 0);\n\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'));\n        this.doParseFlv();\n      } else {\n        this._firstFragmentLoaded = true;\n        // const playType = FlvDemuxer.getPlayType(header[4])\n\n        this.initVideoTrack();\n        this.initAudioTrack();\n      }\n      this.doParseFlv();\n    }\n\n    /**\n     * init default video track configs\n     */\n\n  }, {\n    key: 'initVideoTrack',\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8、9、18\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag() {\n      if (this.loaderBuffer.length < 11) {\n        return null;\n      }\n      var chunk = this._parseFlvTagHeader();\n      if (chunk) {\n        this._processChunk(chunk);\n      }\n      return chunk;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader() {\n      var offset = 0;\n      var chunk = {};\n\n      var tagType = this.loaderBuffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      chunk.filtered = (tagType & 32) >>> 5;\n      chunk.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      chunk.datasize = this.loaderBuffer.toInt(offset, 3);\n      offset += 3;\n\n      if (chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18 || this.loaderBuffer.toInt(8, 3) !== 0) {\n        if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n          this.loaderBuffer.shift(1);\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false);\n        return null;\n      }\n\n      if (this.loaderBuffer.length < chunk.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      this.loaderBuffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = this.loaderBuffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      chunk.dts = timestamp;\n\n      // streamId\n      this.loaderBuffer.shift(3);\n      return chunk;\n    }\n  }, {\n    key: '_processChunk',\n    value: function _processChunk(chunk) {\n      switch (chunk.tagType) {\n        case 18:\n          this._parseScriptData(chunk);\n          break;\n        case 8:\n          this._parseAACData(chunk);\n          break;\n        case 9:\n          this._parseHevcData(chunk);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          this.loaderBuffer.shift(3);\n          break;\n        default:\n          this.loaderBuffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(chunk) {\n      var audioTrack = this.tracks.audioTrack;\n      var videoTrack = this.tracks.videoTrack;\n\n      var data = this.loaderBuffer.shift(chunk.datasize);\n\n      var info = new AMFParser().resolve(data, data.length);\n\n      var onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined;\n\n      // fill mediaInfo\n      this._context.mediaInfo.duration = onMetaData.duration;\n      this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n\n      var validate = this._datasizeValidator(chunk.datasize);\n      if (validate) {\n        this.emit(DEMUX_EVENTS.MEDIA_INFO);\n        this._hasScript = true;\n      }\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 6) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n  }, {\n    key: '_parseAACData',\n    value: function _parseAACData(chunk) {\n      var track = this.tracks.audioTrack;\n      if (!track) {\n        return;\n      }\n\n      var meta = track.meta;\n\n      if (!meta) {\n        track.meta = new AudioTrackMeta();\n        meta = track.meta;\n      }\n\n      var info = this.loaderBuffer.shift(1)[0];\n\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      track.format = format;\n\n      if (format !== 10) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid audio format: ' + format));\n      }\n\n      if (format === 10 && !this._hasAudioSequence) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      delete chunk.tagType;\n      var validate = this._datasizeValidator(chunk.datasize);\n\n      if (chunk.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(chunk.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this._context.mediaInfo.duration * meta.timescale;\n        meta.config = aacHeader.config;\n\n        var audioMedia = this._context.mediaInfo.audio;\n\n        // fill audio media info\n        audioMedia.codec = aacHeader.codec;\n        audioMedia.channelCount = aacHeader.channelCount;\n        audioMedia.sampleRate = audioSampleRate;\n        audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex;\n\n        if (!this._hasAudioSequence) {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n        } else {\n          this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n          // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        }\n        this._hasAudioSequence = true;\n\n        this._metaChange = true;\n      } else {\n        if (this._metaChange) {\n          chunk.options = {\n            meta: track.meta\n          };\n          this._metaChange = false;\n        }\n\n        chunk.data = chunk.data.slice(1, chunk.data.length);\n        track.samples.push(chunk);\n      }\n      if (!validate) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false);\n        // this.logger.warn(this.TAG, error.message)\n      }\n    }\n\n    /**\n     * parse hevc/avc video data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseHevcData',\n    value: function _parseHevcData(chunk) {\n      // header\n      var info = this.loaderBuffer.shift(1)[0];\n      chunk.frameType = (info & 0xf0) >>> 4;\n      chunk.isKeyframe = chunk.frameType === 1;\n      // let tempCodecID = this.tracks.videoTrack.codecID\n      var codecID = info & 0x0f;\n      this.tracks.videoTrack.codecID = codecID;\n\n      // hevc和avc的header解析方式一样\n      chunk.avcPacketType = this.loaderBuffer.shift(1)[0];\n      chunk.cts = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 12) {\n        var data = this.loaderBuffer.shift(chunk.datasize - 5);\n        chunk.data = data;\n\n        if (Number.parseInt(chunk.avcPacketType) !== 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          }\n          var nalu = {};\n          var r = 0;\n          nalu.cts = chunk.cts;\n          nalu.dts = chunk.dts;\n          while (chunk.data.length > r) {\n            var sizes = chunk.data.slice(Number.parseInt(r), 4 + r);\n            nalu.size = sizes[3];\n            nalu.size += sizes[2] * 256;\n            nalu.size += sizes[1] * 256 * 256;\n            nalu.size += sizes[0] * 256 * 256 * 256;\n            r += 4;\n            nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r);\n            r += nalu.size;\n            this.tracks.videoTrack.samples.push(nalu);\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          } else {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        }\n      } else if (codecID === 7) {\n        var _data = this.loaderBuffer.shift(chunk.datasize - 5);\n        if (_data[4] === 0 && _data[5] === 0 && _data[6] === 0 && _data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + _data[i];\n          }\n          avcclength -= 4;\n          _data = _data.slice(4, _data.length);\n          _data[3] = avcclength % 256;\n          avcclength = (avcclength - _data[3]) / 256;\n          _data[2] = avcclength % 256;\n          avcclength = (avcclength - _data[2]) / 256;\n          _data[1] = avcclength % 256;\n          _data[0] = (avcclength - _data[1]) / 256;\n        }\n\n        chunk.data = _data;\n        // If it is AVC sequece Header.\n        if (chunk.avcPacketType === 0) {\n          this._avcSequenceHeaderParser(chunk.data);\n          var validate = this._datasizeValidator(chunk.datasize);\n          if (validate) {\n            if (!this._hasVideoSequence) {\n              this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n            } else {\n              this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n              // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n            }\n            this._hasVideoSequence = true;\n          }\n          this._metaChange = true;\n        } else {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n            return;\n          }\n          if (this._metaChange) {\n            chunk.options = {\n              meta: Object.assign({}, this.tracks.videoTrack.meta)\n            };\n            this._metaChange = false;\n          }\n          this.tracks.videoTrack.samples.push(chunk);\n          // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n        }\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('video codeid is ' + codecID), false);\n        chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n        }\n        this.tracks.videoTrack.samples.push(chunk);\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n      delete chunk.tagType;\n    }\n\n    /**\n     * parse avc metadata\n     * @param data\n     * @private\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var track = this.tracks.videoTrack;\n\n      if (!track) {\n        return;\n      }\n\n      var offset = 0;\n\n      if (!track.meta) {\n        track.meta = new VideoTrackMeta();\n      }\n      var meta = track.meta;\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        this.tracks.videoTrack.meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i = 0; _i < numOfPps; _i++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        this.tracks.videoTrack.meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      // fill video media info\n      var videoMedia = this._context.mediaInfo.video;\n\n      videoMedia.codec = meta.codec;\n      videoMedia.profile = meta.profile;\n      videoMedia.level = meta.level;\n      videoMedia.chromaFormat = meta.chromaFormat;\n      videoMedia.frameRate = meta.frameRate;\n      videoMedia.parRatio = meta.parRatio;\n      videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth;\n      videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight;\n\n      meta.duration = this._context.mediaInfo.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      track.meta = meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize) {\n      var datasizeConfirm = this.loaderBuffer.toInt(0, 4);\n      this.loaderBuffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'isFlvFile',\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    _classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  _createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'load',\n    value: function load(url, opts) {\n      var _this2 = this;\n\n      this.url = url;\n\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n      this.loading = true;\n      return fetch(this.url, params).then(function (response) {\n        if (response.ok) {\n          _this2.status = response.status;\n          Promise.resolve().then(function () {\n            _this2._onFetchResponse(response);\n          });\n\n          return Promise.resolve(response);\n        }\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, new Error(response.status + ' (' + response.statusText + ')'));\n      }).catch(function (error) {\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var _this3 = this;\n\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n      this._reader && this._reader.read().then(function (val) {\n        if (_this3._canceled || _this3._destroyed) {\n          if (_this3._reader) {\n            try {\n              _this3._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this3.loading = false;\n          _this3.status = 0;\n          Promise.resolve().then(function () {\n            _this3.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          });\n          return;\n        }\n\n        buffer.push(val.value);\n        Promise.resolve().then(function () {\n          _this3.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        });\n        return _this3._onReader(reader, taskno);\n      }).catch(function (error) {\n        _this3.loading = false;\n        _this3.emit(LOADER_EVENTS.LOADER_ERROR, _this3.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // 添加自定义头\n      };if (_typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (_typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials 在默认情况下不被使用。\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // 防止failed: 200错误被打印到控制台上\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      this._canceled = true;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      this.cancel();\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n\n  return FetchLoader;\n}();\n\nexport default FetchLoader;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Source = function Source() {\n  _classCallCheck(this, Source);\n\n  this.mimetype = '';\n  this.init = null;\n  this.data = [];\n};\n\nvar PreSource = function () {\n  function PreSource() {\n    _classCallCheck(this, PreSource);\n\n    this.sources = {};\n  }\n\n  _createClass(PreSource, [{\n    key: 'getSource',\n    value: function getSource(source) {\n      return this.sources[source];\n    }\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new Source();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.sources = {};\n    }\n  }]);\n\n  return PreSource;\n}();\n\nexport default PreSource;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    _classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n\n\n  _createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n\n  return XgBuffer;\n}();\n\nexport default XgBuffer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AAC = function () {\n  function AAC() {\n    _classCallCheck(this, AAC);\n  }\n\n  _createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n\n  return AAC;\n}();\n\nexport default AAC;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport AAC from 'xgplayer-transmuxer-codec-aac';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    _classCallCheck(this, Compatibility);\n\n    this.nextAudioDts = 0; // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0; // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined; // 上一段音频数据的长度\n    this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0; // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0; // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // 补充音频帧（）\n    this.filledVideoSamples = []; // 补充视频帧（）\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    this._videoLargeGap = 0;\n    this._audioLargeGap = 0;\n  }\n\n  _createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // 估算下一段音频数据的dts\n      this.nextVideoDts = null; // 估算下一段视频数据的dts\n\n      this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n      this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n      this.lastVideoDts = undefined; // 上一段音频数据的长度\n      this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n      // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n      // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // 补充音频帧（）\n      this.filledVideoSamples = []; // 补充视频帧（）\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n      if (this._firstAudioSample) {\n        this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples);\n      }\n\n      var _Compatibility$detact = Compatibility.detactChangeStream(this.videoTrack.samples),\n          videoChanged = _Compatibility$detact.changed,\n          videoChangedIdx = _Compatibility$detact.changedIdx;\n\n      if (videoChanged && !isFirstAudioSamples) {\n        this.fixChangeStreamVideo(videoChangedIdx);\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detact2 = Compatibility.detactChangeStream(this.audioTrack.samples),\n          audioChanged = _Compatibility$detact2.changed,\n          audioChangedIdx = _Compatibility$detact2.changedIdx;\n\n      if (audioChanged) {\n        this.fixChangeStreamAudio(audioChangedIdx);\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      // console.log('next video', this.nextVideoDts)\n\n      for (var i = 0, len = videoSamples.length; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      if (meta.frameRate && meta.frameRate.fixed === false) {\n        return;\n      }\n\n      if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n        return;\n      }\n\n      // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n      var firstSample = videoSamples[0];\n\n      // step0.修复hls流出现巨大gap，需要强制重定位的问题\n      if (this._videoLargeGap !== 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      if (firstSample.dts !== this._firstVideoSample.dts && (streamChangeStart || this.videoLastSample && Compatibility.detectLargeGap(this.videoLastSample.dts, firstSample))) {\n        if (streamChangeStart) {\n          this.nextVideoDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        } else {\n          this.nextVideoDts = this.videoLastSample.dts;\n        }\n\n        this._videoLargeGap = this.nextVideoDts - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. 修复与audio首帧差距太大的问题\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i = 0; _i < fillCount; _i++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // 视频头部帧缺失需要复制第一帧\n            // 重新计算sample的dts和pts\n            clonedFirstSample.dts = videoFirstDts - (_i + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (gap < -2 * meta.refSampleDuration) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      this.videoLastSample = curLastSample;\n\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      // console.log('next audio', this.nextAudioDts)\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n      // 对audioSamples按照dts做排序\n      // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n      if (this._audioLargeGap !== 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n\n      if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n        if (streamChangeStart) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n      // step0. 首帧与video首帧间距大的问题\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n        if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < silentSampleCount; _i2++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i2 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. 处理samples段之间的丢帧情况\n        // 当发现duration差距大于1帧时进行补帧\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          meta.refSampleDurationFixed = undefined;\n        }\n\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n            // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n            meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap;\n          } else {\n            var silentFrameCount = Math.floor(gap / meta.refSampleDuration);\n\n            for (var _i3 = 0; _i3 < silentFrameCount; _i3++) {\n              var computed = firstDts - (_i3 + 1) * meta.refSampleDuration;\n              var _silentSample = Object.assign({}, audioSamples[0], {\n                dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n              });\n\n              this.filledAudioSamples.push({\n                dts: _silentSample.dts,\n                size: _silentSample.data.byteLength\n              });\n              this.audioTrack.samples.unshift(_silentSample);\n            }\n          }\n        } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n          // 当差距比较小的时候将音频帧重定位\n          // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n          audioSamples[0].dts = this.nextAudioDts;\n          audioSamples[0].pts = this.nextAudioDts;\n        } else if (gap < 0) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n        }\n      }\n      var lastOriginDts = audioSamples[audioSamples.length - 1].originDts;\n      var lastDts = audioSamples[audioSamples.length - 1].dts;\n      var lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration;\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration;\n      this.lastAudioDts = lastDts;\n\n      audioSamples[audioSamples.length - 1].duration = lastSampleDuration;\n\n      // step3. 修复samples段内部的dts异常问题\n      for (var _i4 = 0, _len = audioSamples.length; _i4 < _len; _i4++) {\n        var current = audioSamples[_i4];\n        var next = audioSamples[_i4 + 1];\n\n        if (!next) {\n          break;\n        }\n\n        var duration = next.dts - current.dts;\n        audioSamples[_i4].duration = duration;\n        /*\n        if (duration > (2 * meta.refSampleDuration)) {\n          // 两帧之间间隔太大，需要补空白帧\n          /**\n          let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n          let frameIdx = 0\n           while (frameIdx < silentFrameCount) {\n            const silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n              filtered: 0,\n              isSilent: true\n            }\n             audioSamples.splice(i, 0, silentSample)\n             this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n             frameIdx++\n            i++ // 不对静音帧做比较\n          }\n        } */\n      }\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var prevDts = changeIdx === 0 ? this.videoLastSample ? this.videoLastSample.dts : this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixVideo(false);\n      }\n\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._videoLargeGap = 0;\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else if (this.videoLastSample) {\n        streamChangeStart = this.videoLastSample.dts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixAudio(false);\n      }\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._audioLargeGap = 0;\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else {\n        streamChangeStart = this.lastAudioDts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // 获取video和audio的首帧数据\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // 寻找dts最小的帧作为首个音频帧\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * 在没有refSampleDuration的问题流中，\n     */\n\n  }, {\n    key: 'fixRefSampleDuration',\n    value: function fixRefSampleDuration(meta, samples) {\n      var isVideo = meta.type === 'video';\n      var allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount;\n      var firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts;\n      var filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length;\n\n      if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          meta.refSampleDuration = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // 将refSampleDuration重置为计算后的平均值\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n          if (durationAvg > 0 && durationAvg < 1000) {\n            meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n          }\n        }\n      }\n    }\n\n    /**\n     * 记录截止目前一共播放了多少帧\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * 去除不合法的帧（倒退、重复帧）\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var firstAudioSample = this.audioTrack.samples[0];\n      var firstVideoSample = this.videoTrack.samples[0];\n      // const { _firstVideoSample, _firstAudioSample } = this\n\n      if (firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample, index) {\n          if (sample === firstAudioSample) {\n            return true;\n          }\n          return sample.dts > firstAudioSample.dts;\n        });\n      }\n\n      if (firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample, index) {\n          if (sample === firstVideoSample) {\n            return true;\n          }\n          return sample.dts > firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n\n    /**\n     * 寻找dts最小的sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectLargeGap',\n    value: function detectLargeGap(nextDts, firstSample) {\n      if (nextDts === null) {\n        return;\n      }\n      var curDts = firstSample.dts || 0;\n      var cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000; // fix hls流出现大量流dts间距问题\n      var cond2 = firstSample.options && firstSample.options.discontinue;\n\n      return cond1 || cond2;\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * 中途换流\n     */\n\n  }, {\n    key: 'detactChangeStream',\n    value: function detactChangeStream(samples) {\n      var changed = false;\n      var changedIdx = -1;\n      for (var i = 0, len = samples.length; i < len; i++) {\n        if (samples[i].options && samples[i].options.meta) {\n          changed = true;\n          changedIdx = i;\n          break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdx: changedIdx\n      };\n    }\n  }]);\n\n  return Compatibility;\n}();\n\nexport default Compatibility;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MSE = function () {\n  function MSE(configs, context) {\n    _classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n  }\n\n  _createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this.container.src = URL.createObjectURL(this.mediaSource);\n      this.url = this.container.src;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx) {\n      this._context = newCtx;\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit('SOURCE_UPDATE_END');\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (this.mediaSource.readyState !== 'open') {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track) {\n          var dur = type === 'audio' ? 21 : 40;\n          if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n          if (sources[type].data.length >= this.preloadTime / dur) {\n            add = true;\n          }\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 0) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n          var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n          this.sourceBuffers[_type] = sourceBuffer;\n          sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (sources) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var type = Object.keys(this.sourceBuffers)[i];\n          var sourceBuffer = this.sourceBuffers[type];\n          var source = sources.sources[type];\n          if (source && !source.inited) {\n            // console.log('append initial segment')\n            try {\n              sourceBuffer.appendBuffer(source.init.buffer.buffer);\n              source.inited = true;\n            } catch (e) {\n              // DO NOTHING\n            }\n          } else if (source) {\n            var data = source.data.shift();\n            if (data) {\n              try {\n                sourceBuffer.appendBuffer(data.buffer.buffer);\n              } catch (e) {\n                source.data.unshift(data);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      var _mediaSource = this.mediaSource,\n          readyState = _mediaSource.readyState,\n          activeSourceBuffers = _mediaSource.activeSourceBuffers;\n\n      if (readyState === 'open' && activeSourceBuffers.length === 0) {\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          // log\n        }\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        if (!buffer.updating) {\n          // console.log('remove', start, end)\n          buffer.remove(start, end);\n        }\n      }\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      return this.removeBuffers().then(function () {\n        for (var i = 0; i < Object.keys(_this2.sourceBuffers).length; i++) {\n          var _buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n          _this2.mediaSource.removeSourceBuffer(_buffer);\n          delete _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        }\n\n        _this2.container.removeEventListener('timeupdate', _this2.onTimeUpdate);\n        _this2.container.removeEventListener('waiting', _this2.onWaiting);\n        _this2.mediaSource.removeEventListener('sourceopen', _this2.onSourceOpen);\n\n        _this2.endOfStream();\n        window.URL.revokeObjectURL(_this2.url);\n\n        _this2.url = null;\n        _this2.configs = {};\n        _this2.container = null;\n        _this2.mediaSource = null;\n        _this2.sourceBuffers = {};\n        _this2.preloadTime = 1;\n      });\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      var buffered = buffer.buffered;\n      var bEnd = 0.1;\n      for (var i = 0, len = buffered.length; i < len; i++) {\n        bEnd = buffered.end(i);\n      }\n      try {\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n\n  return MSE;\n}();\n\nexport default MSE;","var PLAYER_EVENTS = {\n  SEEK: 'SEEK'\n};\n\nvar LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  DETECT_CHANGE_STREAM_DISCONTINUE: 'DETECT_CHANGE_STREAM_DISCONTINUE',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n\n  // hls专有events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS, PLAYER_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYTO_EVENTS: CRYTO_EVENTS,\n  PLAYER_EVENTS: PLAYER_EVENTS\n};","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport default sniffer;","import _SpsParser from './sps';\nimport _NalUnit from './nalunit';\nexport var SpsParser = _SpsParser;\nexport var NalUnit = _NalUnit;","import Remuxer from 'xgplayer-transmuxer-remux-mp4'\nimport FlvDemuxer from 'xgplayer-transmuxer-demux-flv'\nimport FetchLoader from 'xgplayer-transmuxer-loader-fetch'\nimport EVENTS from 'xgplayer-transmuxer-constant-events'\n\nimport Tracks from 'xgplayer-transmuxer-buffer-track'\nimport PreSource from 'xgplayer-transmuxer-buffer-presource'\nimport XgBuffer from 'xgplayer-transmuxer-buffer-xgbuffer'\nimport Compatibility from 'xgplayer-transmuxer-codec-compatibility'\n\nimport Mse from 'xgplayer-utils-mse'\nimport Player from 'xgplayer'\n\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nconst DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nconst LOADER_EVENTS = EVENTS.LOADER_EVENTS\nconst MSE_EVENTS = EVENTS.MSE_EVENTS\n\nconst Tag = 'FLVController'\n\nclass Logger {\n  warn () {}\n}\n\nconst FLV_ERROR = 'FLV_ERROR'\n\nexport default class FlvController {\n  constructor (player, mse) {\n    this.TAG = Tag\n    this._player = player\n    this.state = {\n      initSegmentArrived: false,\n      randomAccessPoints: []\n    }\n\n    this.mse = mse;\n\n    this.bufferClearTimer = null;\n\n    this._handleTimeUpdate = this._handleTimeUpdate.bind(this)\n  }\n\n  init () {\n    if (!this.mse) {\n      this.mse = new Mse({ container: this._player.video }, this._context);\n      this.mse.init();\n    }\n\n    this.initComponents();\n    this.initListeners()\n  }\n\n  initComponents () {\n    this._context.registry('FETCH_LOADER', FetchLoader)\n    this._context.registry('LOADER_BUFFER', XgBuffer)\n\n    this._context.registry('FLV_DEMUXER', FlvDemuxer)\n    this._context.registry('TRACKS', Tracks)\n\n    this._context.registry('MP4_REMUXER', Remuxer)(this._player.currentTime)\n    this._context.registry('PRE_SOURCE_BUFFER', PreSource)\n\n    if (this._player.config.compatibility !== false) {\n      this._context.registry('COMPATIBILITY', Compatibility)\n    }\n\n    this._context.registry('LOGGER', Logger)\n  }\n\n  initListeners () {\n    this.on(LOADER_EVENTS.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this))\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._handleNetworkError.bind(this))\n\n    this.on(DEMUX_EVENTS.MEDIA_INFO, this._handleMediaInfo.bind(this))\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._handleMetadataParsed.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._handleDemuxError.bind(this))\n\n    this.on(REMUX_EVENTS.INIT_SEGMENT, this._handleAppendInitSegment.bind(this))\n    this.on(REMUX_EVENTS.MEDIA_SEGMENT, this._handleMediaSegment.bind(this))\n    this.on(REMUX_EVENTS.RANDOM_ACCESS_POINT, this._handleAddRAP.bind(this))\n\n    this.on(MSE_EVENTS.SOURCE_UPDATE_END, this._handleSourceUpdateEnd.bind(this))\n\n    this._player.on('timeupdate', this._handleTimeUpdate)\n  }\n\n  _handleMediaInfo () {\n    if (!this._context.mediaInfo) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('failed to get mediainfo'))\n    }\n  }\n\n  _handleLoaderDataLoaded () {\n    this.emitTo('FLV_DEMUXER', DEMUX_EVENTS.DEMUX_START)\n  }\n\n  _handleMetadataParsed (type) {\n    this.emit(REMUX_EVENTS.REMUX_METADATA, type)\n  }\n  _handleDemuxComplete () {\n    this.emit(REMUX_EVENTS.REMUX_MEDIA)\n  }\n\n  _handleAppendInitSegment () {\n    this.state.initSegmentArrived = true\n    this.mse.addSourceBuffers()\n  }\n\n  _handleMediaSegment () {\n    this.mse.addSourceBuffers()\n    this.mse.doAppend();\n  }\n\n  _handleSourceUpdateEnd () {\n    const time = this._player.currentTime;\n    const video = this._player.video;\n    const preloadTime = this._player.config.preloadTime || 5\n\n    const { length } = video.buffered;\n\n    if (length === 0) {\n      return;\n    }\n\n    const bufferEnd = video.buffered.end(length - 1);\n    if (bufferEnd - time > preloadTime * 2) {\n      this._player.currentTime = bufferEnd - preloadTime\n    }\n    this.mse.doAppend();\n  }\n\n  _handleTimeUpdate () {\n    const time = this._player.currentTime\n\n    const video = this._player.video;\n    let buffered = video.buffered\n\n    if (!buffered || !buffered.length) {\n      return;\n    }\n\n    let range = [0, 0]\n    let currentTime = video.currentTime\n    if (buffered) {\n      for (let i = 0, len = buffered.length; i < len; i++) {\n        range[0] = buffered.start(i)\n        range[1] = buffered.end(i)\n        if (range[0] <= currentTime && currentTime <= range[1]) {\n          break\n        }\n      }\n    }\n\n    const bufferStart = range[0]\n    const bufferEnd = range[1]\n\n    if (currentTime > bufferEnd || currentTime < bufferStart) {\n      video.currentTime = bufferStart;\n      return;\n    }\n\n    if (time - bufferStart > 10 || buffered.length > 1) {\n      // 在直播时及时清空buffer，降低直播内存占用\n      if (this.bufferClearTimer || !this.state.randomAccessPoints.length) {\n        return;\n      }\n      let rap = Infinity;\n      for (let i = 0; i < this.state.randomAccessPoints.length; i++) {\n        const temp = Math.ceil(this.state.randomAccessPoints[i] / 1000)\n        if (temp > time - 10) {\n          break;\n        } else {\n          rap = temp;\n        }\n      }\n\n      // console.log('rap', rap, `time ${time}`, `bufferEnd ${bufferEnd}`,`clean ${Math.min(rap, time - 10, bufferEnd - 10)}`)\n      this.mse.remove(Math.max(Math.min(rap, time - 10, bufferEnd - 10), 0.1), 0)\n\n      this.bufferClearTimer = setTimeout(() => {\n        this.bufferClearTimer = null\n      }, 5000)\n    }\n  }\n\n  _handleNetworkError (tag, err) {\n    this._player.emit('error', new Player.Errors('network', this._player.config.url))\n    this._onError(LOADER_EVENTS.LOADER_ERROR, tag, err, true)\n  }\n\n  _handleDemuxError (tag, err, fatal) {\n    if (fatal === undefined) {\n      fatal = false;\n    }\n    this._player.emit('error', new Player.Errors('parse', this._player.config.url))\n    this._onError(DEMUX_EVENTS.DEMUX_ERROR, tag, err, fatal)\n  }\n\n  _handleAddRAP (rap) {\n    if (this.state.randomAccessPoints) {\n      this.state.randomAccessPoints.push(rap)\n    }\n  }\n\n  _onError (type, mod, err, fatal) {\n    let error = {\n      errorType: type,\n      errorDetails: `[${mod}]: ${err.message}`,\n      errorFatal: fatal || false\n    }\n    this._player.emit(FLV_ERROR, error);\n  }\n\n  seek () {\n    if (!this.state.initSegmentArrived) {\n      this.loadData()\n    }\n  }\n\n  loadData (url = this._player.config.url) {\n    this.emit(LOADER_EVENTS.LADER_START, url)\n  }\n\n  pause () {\n    const loader = this._context.getInstance('FETCH_LOADER')\n\n    if (loader) {\n      loader.cancel()\n    }\n  }\n\n  destroy () {\n    this._player.off('timeupdate', this._handleTimeUpdate)\n    this._player = null\n    this.mse = null\n    this.state.randomAccessPoints = []\n  }\n}\n","import Player from 'xgplayer'\nimport EVENTS from 'xgplayer-transmuxer-constant-events'\nimport Context from 'xgplayer-transmuxer-context';\nimport FLV from './flv-live'\nconst flvAllowedEvents = EVENTS.FlvAllowedEvents;\n\nclass FlvPlayer extends Player {\n  constructor (config) {\n    super(config)\n    this.context = new Context(flvAllowedEvents)\n    this.initEvents()\n    this.loaderCompleteTimer = null\n    // const preloadTime = player.config.preloadTime || 15\n  }\n\n  start () {\n    this.initFlv()\n    this.context.init()\n    super.start(this.flv.mse.url)\n    this.loadData()\n  }\n\n  initFlvEvents (flv) {\n    const player = this;\n    flv.once(EVENTS.REMUX_EVENTS.INIT_SEGMENT, () => {\n      Player.util.addClass(player.root, 'xgplayer-is-live')\n      if (!Player.util.findDom(this.root, 'xg-live')) {\n        const live = Player.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live')\n        player.controls.appendChild(live)\n      }\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_COMPLETE, () => {\n      // 直播完成，待播放器播完缓存后发送关闭事件\n      if (!player.paused) {\n        this.loaderCompleteTimer = setInterval(() => {\n          const end = player.getBufferedRange()[1]\n          if (Math.abs(player.currentTime - end) < 0.5) {\n            player.emit('ended')\n            window.clearInterval(this.loaderCompleteTimer)\n          }\n        }, 200)\n      } else {\n        player.emit('ended')\n      }\n    })\n  }\n\n  initFlvBackupEvents (flv, ctx) {\n    let mediaLength = 3;\n    flv.on(EVENTS.REMUX_EVENTS.MEDIA_SEGMENT, () => {\n      mediaLength -= 1;\n      if (mediaLength === 0) {\n        // ensure switch smoothly\n        this.flv = flv;\n        this.mse.resetContext(ctx);\n        this.context.destroy();\n        this.context = ctx;\n      }\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_COMPLETE, () => {\n      // 直播完成，待播放器播完缓存后发送关闭事件\n      if (!this.paused) {\n        this.loaderCompleteTimer = setInterval(() => {\n          const end = this.getBufferedRange()[1]\n          if (Math.abs(this.currentTime - end) < 0.5) {\n            this.emit('ended')\n            window.clearInterval(this.loaderCompleteTimer)\n          }\n        }, 200)\n      } else {\n        this.emit('ended')\n      }\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_ERROR, () => {\n      ctx.destroy()\n    })\n  }\n\n  initEvents () {\n    this.on('seeking', () => {\n      const time = this.currentTime\n      const range = this.getBufferedRange()\n      if (time > range[1] || time < range[0]) {\n        this.flv.seek(this.currentTime)\n      }\n    })\n  }\n\n  initFlv () {\n    const flv = this.context.registry('FLV_CONTROLLER', FLV)(this)\n    this.initFlvEvents(flv)\n    this.flv = flv\n    this.mse = flv.mse;\n    return flv;\n  }\n\n  play () {\n    if (this._hasStart) {\n      return this._destroy().then(() => {\n        this.context = new Context(flvAllowedEvents)\n        this.start()\n        return super.play()\n      })\n    } else {\n      return super.play()\n    }\n  }\n\n  pause () {\n    super.pause()\n    if (this.flv) {\n      this.flv.pause()\n    }\n  }\n\n  loadData (time = this.currentTime) {\n    if (this.flv) {\n      this.flv.seek(time)\n    }\n  }\n\n  destroy () {\n    this._destroy().then(() => {\n      super.destroy();\n    })\n  }\n\n  _destroy () {\n    return this.flv.mse.destroy().then(() => {\n      this.context.destroy()\n      this.flv = null\n      this.context = null\n      if (this.loaderCompleteTimer) {\n        window.clearInterval(this.loaderCompleteTimer)\n      }\n    })\n  }\n\n  get src () {\n    return this.currentSrc\n  }\n\n  set src (url) {\n    this.switchURL(url)\n  }\n\n  switchURL (url) {\n    const context = new Context(flvAllowedEvents);\n    const flv = context.registry('FLV_CONTROLLER', FLV)(this, this.mse)\n    context.init()\n    this.initFlvBackupEvents(flv, context);\n    flv.loadData(url);\n  }\n\n  static isSupported () {\n    return window.MediaSource &&\n      window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n  }\n}\n\nexport default FlvPlayer\n"],"names":["_classCallCheck","instance","Constructor","TypeError","EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","emitWarning","e","console","warn","log","_onceWrap","g","removeListener","fired","arguments","listenerCount","evlistener","spliceOne","list","index","k","n","pop","arr","copy","Array","unwrapListeners","ret","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","PLAYER_EVENTS","LOADER_EVENTS","DEMUX_EVENTS","REMUX_EVENTS","MSE_EVENTS","HLS_EVENTS","CRYTO_EVENTS","ALLEVENTS","assign","FlvAllowedEvents","HlsAllowedEvents","key","hasOwnProperty","_key","_createClass","defineProperties","props","descriptor","defineProperty","protoProps","staticProps","isObjectFilled","obj","MediaInfo","mimeType","duration","hasVideo","video","hasAudio","audio","isBaseInfoReady","isVideoReady","isAudioReady","mediaInfo","usingDomains","domain","active","Domain","getPrototypeOf","setMaxListeners","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","position","originalListener","removeAllListeners","keys","eventNames","Reflect","ownKeys","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","Context","allowedEvents","_emitter","off","_instanceMap","_clsMap","_inited","_hooks","tag","_len","a","b","c","d","newInstance","config","initInstance","cls","_this2","checkMessageName","_isMessageNameValid","bind","enhanced","_cls","_this","onceListeners","TAG","_context","messageName","callback","beforeList","_len2","_key2","concat","_len3","_key3","hasOwn","callbacks","_messageName","_callbacks","_i","_callback","removeListeners","_len4","_key4","_this3","forEach","destroy","destroyInstances","indexOf","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","sniffer","r","os","isPc","isTablet","ua","navigator","userAgent","toLowerCase","reg","filter","test","isWindowsPhone","isSymbian","isAndroid","isFireFox","isPhone","MediaSegmentList","_type","_list","_lastAppendLocation","beginDts","last","mid","lbound","ubound","idx","originDts","Math","floor","lastSample","_searchNearestSegmentBefore","segment","lastAppendIdx","insertIdx","originStartDts","splice","getLastSegmentBefore","segmentIdx","randomAccessPoints","Buffer","buffer","Uint8Array","item","Concat","padStart4Hex","hexNum","toString","padStart","temp","num","parseInt","Fmp4","writeUint32","size","content","write","version","flag","initBox","_ref","meta","mvhd","timescale","trak","videoTrak","audioTrak","mvex","id","byteLength","bytes","data","tkhd","presentWidth","presentHeight","mdia","avcc","parRatio","channelCount","sampleRate","width","height","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","dref","stsd","stts","stsc","stsz","stco","mp4a","avc1","samplerate","esds","configlen","hSpacing","vSpacing","btrt","pasp","trackID","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","time","sdtp","trun","sdtpLength","sampleCount","samples","offset","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","cts","mdatBox","set","unit","charCodeAt","EVENTS","Mp4Remuxer","curTime","_dtsBase","_isDtsBaseInited","_videoSegmentList","_audioSegmentList","browser","_fillSilenceFrame","isFirstVideo","isFirstAudio","videoAllDuration","audioAllDuration","REMUX_MEDIA","remux","REMUX_METADATA","onMetaDataReady","DETECT_CHANGE_STREAM","resetDtsBase","SEEK","seek","clear","_context$getInstance","getInstance","audioTrack","videoTrack","calcDtsBase","_remuxVideo","_remuxAudio","track","presourcebuffer","source","getSource","createSource","mimetype","codec","remuxInitSegment","INIT_SEGMENT","initSegment","ftyp","moov","dts","audioBase","Infinity","videoBase","min","firstDts","mp4Samples","maxLoop","avcSample","shift","isKeyframe","options","isContinue","pts","mdatSample","sampleDuration","videoMeta","refSampleDuration","RANDOM_ACCESS_POINT","moofMdat","moof","mdat","writeToSource","MEDIA_SEGMENT","isFirstDtsInited","sample","audioMeta","refSampleDurationFixed","mp4Sample","getSilentFrame","_audioMeta","_player","AudioTrackMeta","_default","VideoTrackMeta","sps","pps","Golomb","uint8array","_buffer","_bufferIndex","_totalBytes","_totalBits","_currentWord","_currentWordBitsLeft","bufferBytesLeft","bytesRead","word","subarray","getUint32","bits","valu","_fillCurrentWord","readBits","zeroCount","_skipLeadingZero","leadingZeros","readUEG","SPSParser","src","srcLength","dst","dstIdx","rbsp","_ebsp2rbsp","gb","readByte","profileIdc","levelIdc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","par_width","par_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","par_w_table","par_h_table","num_units_in_tick","time_scale","parScale","crop_unit_x","crop_unit_y","codec_width","codec_height","present_width","ceil","getChromaFormatString","lastScale","nextScale","toFixed","chroma","spsConfig","codec_size","codecWidth","codecHeight","present_size","profile","level","bitDepth","chromaFormat","par_ratio","frameRate","frame_rate","fpsDen","fpsNum","SpsParser","Nalunit","dataview","getInt32","getInt16","getInt8","getAnnexbNals","getAvccNals","nals","getHeaderPositionAnnexB","start","pos","end","header","slice","headerLength","skip","body","analyseNal","ndr","idr","parseSPS","_SpsParser","Track","sequenceNumber","droppedSamples","reset","AudioTrack","_Track","VideoTrack","_Track2","dropped","Tracks","isLe","DATA_TYPES","AMFParser","readOffset","metaData","parseValue","bodySize","resetStatus","strLen","getUint16","str","UTF8","decode","dv","ts","getFloat64","Date","parseString","isObjEnd","NUMBER","BOOLEAN","STRING","OBJECT","MIX_ARRAY","OBJECT_END","STRICT_ARRAY","DATE","LONE_STRING","dataView","getUint8","objEndSize","amfObj","parseObject","isObjectEnd","_objEndSize","amfVar","arrLength","script","date","parseDate","longStr","parseLongString","FlvDemuxer","_firstFragmentLoaded","_trackNum","_hasScript","DEMUX_START","doParseFlv","loaderBuffer","chunk","loopMax","_parseFlvTag","DEMUX_COMPLETE","parseFlvHeader","isFlvFile","initVideoTrack","initAudioTrack","DEMUX_ERROR","tracks","_parseFlvTagHeader","_processChunk","tagType","toInt","filtered","datasize","timestamp","timestampExt","_parseScriptData","_parseAACData","_parseHevcData","info","resolve","onMetaData","hsaAudio","_datasizeValidator","MEDIA_INFO","hasSpecificConfig","audiosamplerate","audiochannels","sampleRateIndex","_meta","framerate","fixed","objectType","_switchAudioSampleRate","frameLength","dependsOnCoreCoder","extensionFlagIndex","window","extensionSamplingIndex","samplingIndex","format","_hasAudioSequence","_switchAudioSamplingFrequency","frameLenth","audioSampleRate","audioSampleRateIndex","validate","aacHeader","_aacSequenceHeaderParser","audioMedia","AUDIO_METADATA_CHANGE","METADATA_PARSED","_metaChange","frameType","codecID","avcPacketType","Number","nalu","sizes","_data","avcclength","_avcSequenceHeaderParser","_hasVideoSequence","VIDEO_METADATA_CHANGE","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","nalUnitLength","numOfSps","j","codecString","_j","h","numOfPps","_size","_j2","toVideoMeta","videoMedia","samplingFrequencyIndex","datasizeConfirm","streamFlag","result","_typeof","Symbol","_typeof2","iterator","FetchLoader","configs","url","status","_reader","_canceled","_destroyed","readtype","_loaderTaskNo","LADER_START","load","opts","params","getParams","loading","fetch","then","response","ok","_onFetchResponse","Promise","LOADER_ERROR","statusText","catch","taskno","json","LOADER_COMPLETE","text","arrayBuffer","_onReader","getReader","reader","cancel","read","val","done","LOADER_DATALOADED","headers","Headers","configHeaders","append","optHeaders","cors","mode","withCredentials","credentials","Source","PreSource","sources","XgBuffer","historyLen","array","_shiftBuffer","_ret","_ret2","tmpoff","tmp","templength","retInt","AAC","Compatibility","nextAudioDts","nextVideoDts","lastAudioSamplesLen","lastVideoSamplesLen","lastVideoDts","lastAudioDts","allAudioSamplesCount","allVideoSamplesCount","_firstAudioSample","_firstVideoSample","filledAudioSamples","filledVideoSamples","videoLastSample","audioLastSample","_videoLargeGap","_audioLargeGap","before","doFix","_getFirstSample","getFirstSample","isFirstAudioSamples","isFirstVideoSamples","recordSamplesCount","fixRefSampleDuration","_Compatibility$detact","detactChangeStream","videoChanged","changed","videoChangedIdx","changedIdx","fixChangeStreamVideo","doFixVideo","_Compatibility$detact2","audioChanged","audioChangedIdx","fixChangeStreamAudio","doFixAudio","removeInvalidSamples","first","streamChangeStart","_videoTrack","videoSamples","firstSample","doFixLargeGap","detectLargeGap","videoFirstDts","gap","fillCount","clonedFirstSample","curLastSample","_audioTrack","audioSamples","samplesLen","silentFrame","_firstSample","videoFirstPts","_gap","silentSampleCount","_i2","silentSample","absGap","abs","silentFrameCount","_i3","computed","_silentSample","lastOriginDts","lastDts","lastSampleDuration","_i4","current","next","sortAudioSamples","changeIdx","_videoTrack2","prevDts","getStreamChangeStart","curDts","DETECT_CHANGE_STREAM_DISCONTINUE","firstPartSamples","secondPartSamples","dtsBase","_audioTrack2","findFirstVideoSample","findFirstAudioSample","isVideo","allSamplesCount","filledSamplesCount","durationAvg","firstAudioSample","firstVideoSample","remuxer","sort","sorted","nextDts","cond1","cond2","discontinue","MSE","container","mediaSource","sourceBuffers","preloadTime","onSourceOpen","onTimeUpdate","onUpdateEnd","onWaiting","MediaSource","addEventListener","URL","createObjectURL","newCtx","addSourceBuffers","doAppend","readyState","add","dur","_k","mime","sourceBuffer","addSourceBuffer","inited","appendBuffer","_mediaSource","activeSourceBuffers","endOfStream","updating","remove","taskList","removeEventListener","task","doCleanBuffer","retryTime","clean","clearBuffer","all","removeBuffers","removeSourceBuffer","revokeObjectURL","buffered","bEnd","Tag","Logger","FlvController","player","mse","state","bufferClearTimer","_handleTimeUpdate","Mse","initComponents","initListeners","registry","Remuxer","currentTime","compatibility","_handleLoaderDataLoaded","_handleNetworkError","_handleMediaInfo","_handleMetadataParsed","_handleDemuxComplete","_handleDemuxError","_handleAppendInitSegment","_handleMediaSegment","_handleAddRAP","SOURCE_UPDATE_END","_handleSourceUpdateEnd","emitTo","initSegmentArrived","bufferEnd","range","bufferStart","rap","max","setTimeout","Player","Errors","_onError","fatal","mod","message","loadData","loader","flvAllowedEvents","initEvents","loaderCompleteTimer","initFlv","flv","util","addClass","root","findDom","live","createDom","controls","appendChild","paused","setInterval","getBufferedRange","clearInterval","ctx","mediaLength","resetContext","_this4","FLV","initFlvEvents","_hasStart","_destroy","pause","_this7","initFlvBackupEvents","currentSrc","switchURL","isTypeSupported"],"mappings":"kbAEA,SAASA,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCKhH,QAASC,MAGT,QAASC,OACMC,KAAKC,KAAKC,MA6CzB,QAASC,GAAiBC,cACGC,KAAvBD,EAAKE,cACAP,EAAaQ,oBACfH,EAAKE,cAYd,QAASE,GAASC,EAASC,EAAMC,MAC3BD,EACFD,EAAQR,KAAKU,YAIR,GAFDC,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGf,KAAKU,GAGxB,QAASM,GAAQR,EAASC,EAAMC,EAAMO,MAChCR,EACFD,EAAQR,KAAKU,EAAMO,YAId,GAFDN,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGf,KAAKU,EAAMO,GAG9B,QAASC,GAAQV,EAASC,EAAMC,EAAMO,EAAME,MACtCV,EACFD,EAAQR,KAAKU,EAAMO,EAAME,YAIpB,GAFDR,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGf,KAAKU,EAAMO,EAAME,GAGpC,QAASC,GAAUZ,EAASC,EAAMC,EAAMO,EAAME,EAAME,MAC9CZ,EACFD,EAAQR,KAAKU,EAAMO,EAAME,EAAME,YAI1B,GAFDV,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGf,KAAKU,EAAMO,EAAME,EAAME,GAI1C,QAASC,GAASd,EAASC,EAAMC,EAAMa,MACjCd,EACFD,EAAQgB,MAAMd,EAAMa,YAIf,GAFDZ,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGS,MAAMd,EAAMa,GAyE/B,QAASE,GAAaC,EAAQC,EAAMC,EAAUC,MACxCC,GACAC,EACAC,KAEoB,kBAAbJ,GACT,KAAM,IAAIhC,WAAU,+CAEb8B,EAAOO,QACXF,GAMCA,EAAOG,gBACFC,KAAK,cAAeR,EACfC,EAASA,SAAWA,EAASA,SAAWA,KAI3CF,EAAOO,WAEPF,EAAOJ,OAbTD,EAAOO,QAAU,GAAIpC,KACvBuC,aAAe,GAenBJ,MAKqB,kBAAbA,KAEED,EAAOJ,GAAQE,GAAWD,EAAUI,IACVA,EAAUJ,GAG3CC,IACOQ,QAAQT,KAERU,KAAKV,IAKbI,EAASO,WACRrC,EAAiBwB,KACZI,EAAI,GAAKE,EAASpB,OAASkB,EAAG,GAC5BS,QAAS,KACdC,GAAI,GAAIC,OAAM,+CACET,EAASpB,OAAS,IAAMe,EAAO,uEAEjDe,KAAO,gCACPC,QAAUjB,IACVC,KAAOA,IACPiB,MAAQZ,EAASpB,SACP4B,WA5BLT,EAAOJ,GAAQC,IACxBF,EAAOU,mBAgCJV,GAET,QAASmB,GAAYC,GACK,kBAAjBC,SAAQC,KAAsBD,QAAQC,KAAKF,GAAKC,QAAQE,IAAIH,GAarE,QAASI,GAAUxB,EAAQC,EAAMC,WAEtBuB,OACAC,eAAezB,EAAMwB,GACvBE,OACK,IACC7B,MAAME,EAAQ4B,eALvBD,IAAQ,WAQVzB,SAAWA,EACNuB,EA2JT,QAASI,GAAc5B,MACjBI,GAAS9B,KAAKgC,WAEdF,EAAQ,IACNyB,GAAazB,EAAOJ,MAEE,kBAAf6B,SACF,EACF,IAAIA,QACFA,GAAW5C,aAIf,GAQT,QAAS6C,GAAUC,EAAMC,OAClB,GAAI5C,GAAI4C,EAAOC,EAAI7C,EAAI,EAAG8C,EAAIH,EAAK9C,OAAQgD,EAAIC,EAAG9C,GAAK,EAAG6C,GAAK,EAClEF,EAAK3C,GAAK2C,EAAKE,KACZE,MAGP,QAAShD,GAAWiD,EAAKhD,UACnBiD,GAAO,GAAIC,OAAMlD,GACdA,KACLiD,EAAKjD,GAAKgD,EAAIhD,SACTiD,GAGT,QAASE,GAAgBH,OAElB,GADDI,GAAM,GAAIF,OAAMF,EAAInD,QACfG,EAAI,EAAGA,EAAIoD,EAAIvD,SAAUG,IAC5BA,GAAKgD,EAAIhD,GAAGa,UAAYmC,EAAIhD,SAE3BoD,GCrdT,QAASC,GAA2B1D,EAAMV,OAAaU,OAAc,IAAI2D,gBAAe,4DAAgE,QAAOrE,GAAyB,qBAATA,iBAAAA,KAAqC,kBAATA,GAA8BU,EAAPV,EAElO,QAASsE,GAAUC,EAAUC,MAAwC,kBAAfA,IAA4C,OAAfA,OAA6B,IAAI5E,WAAU,qEAAoE4E,iBAAAA,IAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GAEje,QAAS/E,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCNhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASwE,GAA2B1D,EAAMV,OAAaU,OAAc,IAAI2D,gBAAe,4DAAgE,QAAOrE,GAAyB,qBAATA,iBAAAA,KAAqC,kBAATA,GAA8BU,EAAPV,EAElO,QAASsE,GAAUC,EAAUC,MAAwC,kBAAfA,IAA4C,OAAfA,OAA6B,IAAI5E,WAAU,qEAAoE4E,iBAAAA,IAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GAEje,QAAS/E,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCJhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCEhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCFhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,qCCAhH,QAASH,GAAgBC,EAAUC,QAAqBD,YAAoBC,SAAsB,IAAIC,WAAU,k3BCFhH,IAAIuF,SACI,QAGJC,eACW,iCACM,oCACF,+BACH,gBAGZC,eACW,6BACG,6BACH,8BACI,wCACM,8CACA,mCACX,cAGVC,kBACc,6BACH,4BACE,4BACF,2BACC,oCACQ,wDACY,uDACb,uBAGnBC,qBACiB,qBAGfC,uBACiB,uBAGnBC,iBACa,0BACJ,aAETC,EAAYhB,OAAOiB,UAAWP,EAAeC,EAAcC,EAAcC,EAAYC,EAAYL,GAEjGS,MACAC,KAEJ,KAAK,GAAIC,MAAOJ,GACVA,EAAUK,eAAeD,QACVxD,KAAKoD,EAAUI,IAIpC,KAAK,GAAIE,MAAQN,GACXA,EAAUK,eAAeC,QACV1D,KAAKoD,EAAUM,uBAKvBN,aACCF,eACEF,eACAD,aACFE,gBACGH,mBACGQ,oBACAC,gBACJJ,gBACCN,GpBvEbc,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAI5hB6G,GAAiB,SAAwBC,OACtC,GAAIX,KAAOW,MACVA,EAAIV,eAAeD,IACJ,OAAbW,EAAIX,UACC,SAIN,GAGLY,GAAY,mBACLA,OACSzG,KAAMyG,QAEjBC,SAAW,UACXC,SAAW,UAEXC,SAAW,UACXC,aACI,WACA,YACC,aACC,WACF,uBAEE,MACF,WACI,aACA,kBAEG,qBAEL,SACC,SAIPC,SAAW,UAEXC,aACI,gBACK,qBACK,kBACH,gBAILN,QACN,mBACE,iBACEA,GAAUO,gBAAgBhH,OAASyG,EAAUQ,aAAajH,OAASyG,EAAUS,aAAalH,eAG9F,wBACE,SAAyBmH,SACvBZ,IAAeY,UAGnB,qBACE,SAAsBA,UACtBA,EAAUP,UAIRL,GAAeY,EAAUN,cAG7B,qBACE,SAAsBM,UACtBA,EAAUL,UAIRP,GAAeY,EAAUN,WAI7BJ,IC1ET7G,GAAc4E,UAAYC,OAAOC,OAAO,MAUxC7E,EAAaA,aAAeA,EAE5BA,EAAauH,cAAe,EAE5BvH,EAAa2E,UAAU6C,WAASlH,GAChCN,EAAa2E,UAAUxC,YAAU7B,GACjCN,EAAa2E,UAAUpE,kBAAgBD,GAIvCN,EAAaQ,oBAAsB,GAEnCR,EAAaC,KAAO,gBACbuH,OAAS,KACVxH,EAAauH,mBA9BfC,IAgCWC,aAhCXD,IAgC8CE,OAK3CvH,KAAKgC,SAAWhC,KAAKgC,UAAYyC,OAAO+C,eAAexH,MAAMgC,eAC3DA,QAAU,GAAIpC,QACduC,aAAe,QAGjB/B,cAAgBJ,KAAKI,mBAAiBD,IAK7CN,EAAa2E,UAAUiD,gBAAkB,SAAyB7D,MAC/C,gBAANA,IAAkBA,EAAI,GAAK8D,MAAM9D,GAC1C,KAAM,IAAIjE,WAAU,sDACjBS,cAAgBwD,EACd5D,MASTH,EAAa2E,UAAUmD,gBAAkB,iBAChC1H,GAAiBD,OA4D1BH,EAAa2E,UAAUtC,KAAO,SAAcR,MACtCkG,GAAIrH,EAASG,EAAKY,EAAMR,EAAGgB,EAAQuF,EAEnCQ,EAAoB,UAATnG,OAEN1B,KAAKgC,QAEZ6F,EAAWA,GAA2B,MAAhB/F,EAAOgG,UAC1B,KAAKD,EACR,OAAO,OAEA7H,KAAKqH,OAGVQ,EAAS,MACNxE,UAAU,IACXgE,EAOG,CAAA,GAAIO,YAAcpF,YACjBoF,MAGFG,GAAM,GAAIvF,OAAM,yCAA2CoF,EAAK,aAChEI,QAAUJ,EACRG,QAZDH,KACHA,EAAK,GAAIpF,OAAM,0CACdyF,cAAgBjI,OAChBqH,OAASA,IACTa,cAAe,IACXhG,KAAK,QAAS0F,IAShB,SAGC9F,EAAOJ,IAGf,OAAO,KAELlB,GAA0B,kBAAZD,YACZ8C,UAAU1C,YAGT,KACMJ,EAASC,EAAMR,gBAErB,KACKO,EAASC,EAAMR,KAAMqD,UAAU,cAEpC,KACK9C,EAASC,EAAMR,KAAMqD,UAAU,GAAIA,UAAU,cAElD,KACO9C,EAASC,EAAMR,KAAMqD,UAAU,GAAIA,UAAU,GAAIA,UAAU,wBAI9D,GAAIW,OAAMtD,EAAM,GAClBI,EAAI,EAAGA,EAAIJ,EAAKI,IACnBQ,EAAKR,EAAI,GAAKuC,UAAUvC,KACjBP,EAASC,EAAMR,KAAMsB,UAM3B,GAqETzB,EAAa2E,UAAU2D,YAAc,SAAqBzG,EAAMC,SACvDH,GAAaxB,KAAM0B,EAAMC,GAAU,IAG5C9B,EAAa2E,UAAU4D,GAAKvI,EAAa2E,UAAU2D,YAEnDtI,EAAa2E,UAAU6D,gBACnB,SAAyB3G,EAAMC,SACtBH,GAAaxB,KAAM0B,EAAMC,GAAU,IAgBhD9B,EAAa2E,UAAU8D,KAAO,SAAc5G,EAAMC,MACxB,kBAAbA,GACT,KAAM,IAAIhC,WAAU,sDACjByI,GAAG1G,EAAMuB,EAAUjD,KAAM0B,EAAMC,IAC7B3B,MAGTH,EAAa2E,UAAU+D,oBACnB,SAA6B7G,EAAMC,MACT,kBAAbA,GACT,KAAM,IAAIhC,WAAU,sDACjB0I,gBAAgB3G,EAAMuB,EAAUjD,KAAM0B,EAAMC,IAC1C3B,MAIbH,EAAa2E,UAAUrB,eACnB,SAAwBzB,EAAMC,MACxB8B,GAAM3B,EAAQ0G,EAAU1H,EAAG2H,KAEP,kBAAb9G,GACT,KAAM,IAAIhC,WAAU,iDAEbK,KAAKgC,SAEZ,MAAOhC,aAEF8B,EAAOJ,IAEZ,MAAO1B,SAELyD,IAAS9B,GAAa8B,EAAK9B,UAAY8B,EAAK9B,WAAaA,EAC/B,KAAtB3B,KAAKmC,aACTnC,KAAKgC,QAAU,GAAIpC,UAEZkC,GAAOJ,GACVI,EAAOqB,gBACTnD,KAAKkC,KAAK,iBAAkBR,EAAM+B,EAAK9B,UAAYA,QAElD,IAAoB,kBAAT8B,GAAqB,QACzB,EAEP3C,EAAI2C,EAAK9C,OAAQG,KAAM,MACtB2C,EAAK3C,KAAOa,GACX8B,EAAK3C,GAAGa,UAAY8B,EAAK3C,GAAGa,WAAaA,EAAW,GACpC8B,EAAK3C,GAAGa,WAChBb,WAKX0H,EAAW,EACb,MAAOxI,SAEW,IAAhByD,EAAK9C,OAAc,MAChB,OAAKR,GACkB,KAAtBH,KAAKmC,yBACJH,QAAU,GAAIpC,GACZI,WAEA8B,GAAOJ,UAGN+B,EAAM+E,EAGd1G,GAAOqB,gBACTnD,KAAKkC,KAAK,iBAAkBR,EAAM+G,GAAoB9G,SAGnD3B,OAGbH,EAAa2E,UAAUkE,mBACnB,SAA4BhH,MACtBd,GAAWkB,SAEN9B,KAAKgC,SAEZ,MAAOhC,UAGJ8B,EAAOqB,qBACe,KAArBE,UAAU1C,aACPqB,QAAU,GAAIpC,QACduC,aAAe,GACXL,EAAOJ,KACY,KAAtB1B,KAAKmC,aACTnC,KAAKgC,QAAU,GAAIpC,SAEZkC,GAAOJ,IAEX1B,QAIgB,IAArBqD,UAAU1C,OAAc,KAErB,GAAWkF,GADZ8C,EAAOlE,OAAOkE,KAAK7G,GACdhB,EAAI,EAAQA,EAAI6H,EAAKhI,SAAUG,EAE1B,sBADN6H,EAAK7H,UAEN4H,mBAAmB7C,eAErB6C,mBAAmB,uBACnB1G,QAAU,GAAIpC,QACduC,aAAe,EACbnC,QAKgB,qBAFb8B,EAAOJ,SAGZyB,eAAezB,EAAMd,OACrB,IAAIA,UAGFuC,eAAezB,EAAMd,EAAUA,EAAUD,OAAS,UAChDC,EAAU,UAGdZ,OAGbH,EAAa2E,UAAU5D,UAAY,SAAmBc,MAChD6B,GAEAzB,EAAS9B,KAAKgC,cAEbF,OAGUA,EAAOJ,IAGW,kBAAf6B,IACPA,EAAW5B,UAAY4B,GAExBU,EAAgBV,OAM5B1D,EAAayD,cAAgB,SAASZ,EAAShB,SACR,kBAA1BgB,GAAQY,cACVZ,EAAQY,cAAc5B,GAEtB4B,EAAcvD,KAAK2C,EAAShB,IAIvC7B,EAAa2E,UAAUlB,cAAgBA,EAiBvCzD,EAAa2E,UAAUoE,WAAa,iBAC3B5I,MAAKmC,aAAe,EAAI0G,QAAQC,QAAQ9I,KAAKgC,8NCnclD+G,GAAO,QAASC,GAAIC,EAAQC,EAAUC,GAA2B,OAAXF,IAAiBA,EAASG,SAAS5E,UAAW,IAAI6E,GAAO5E,OAAO6E,yBAAyBL,EAAQC,EAAW,QAAa/I,KAATkJ,EAAoB,IAAME,GAAS9E,OAAO+C,eAAeyB,EAAS,OAAe,QAAXM,SAAqDP,EAAIO,EAAQL,EAAUC,GAAoB,GAAI,SAAWE,SAAeA,GAAKzE,SAAoB4E,GAASH,EAAKL,GAAK,QAAe7I,KAAXqJ,EAA4C,MAAOA,GAAOzJ,KAAKoJ,IAExdnD,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAa5hB+J,GAAU,mBACHA,QACHC,GAAgBrG,UAAU1C,OAAS,OAAsBR,KAAjBkD,UAAU,GAAmBA,UAAU,QAEnErD,KAAMyJ,QAEjBE,SAAW,GAAI9J,GACfG,KAAK2J,SAASC,WACZD,SAASC,IAAM5J,KAAK2J,SAASxG,qBAE/B0G,qBACAC,gBACAC,SAAU,OACV5C,UAAY,GAAIV,SAChBiD,cAAgBA,OAChBM,oBAWMP,QACN,oBACE,SAAqBQ,MACtBxK,GAAWO,KAAK6J,aAAaI,SAC7BxK,IAIK,YAWN,qBACE,SAAsBwK,OACtB,GAAIC,GAAO7G,UAAU1C,OAAQW,EAAO0C,MAAMkG,EAAO,EAAIA,EAAO,EAAI,GAAInE,EAAO,EAAGA,EAAOmE,EAAMnE,MACzFA,EAAO,GAAK1C,UAAU0C,MAGzBoE,GAAI7I,EAAK,GACT8I,EAAI9I,EAAK,GACT+I,EAAI/I,EAAK,GACTgJ,EAAIhJ,EAAK,MAETtB,KAAK8J,QAAQG,GAAM,IACjBM,GAAc,GAAIvK,MAAK8J,QAAQG,GAAKE,EAAGC,EAAGC,EAAGC,eAC5CT,aAAaI,GAAOM,EACrBA,EAAYzK,QACFA,OAEPyK,OAED,IAAI/H,OAAMyH,EAAM,uBAUrB,aACE,SAAcO,OACfxK,KAAK+J,aAGJ,GAAIE,KAAOjK,MAAK8J,QAEf9J,KAAK8J,QAAQhE,eAAemE,KAASjK,KAAK6J,aAAaI,SACpDQ,aAAaR,EAAKO,QAGtBT,SAAU,UAUZ,iBACE,SAAkBE,EAAKS,MACxBC,GAAS3K,KAET0C,EAAU1C,KAAK2J,SACfiB,EAAmB5K,KAAK6K,oBAAoBC,KAAK9K,MACjDS,EAAOT,KACP+K,EAAW,SAAUC,WAGdD,GAASZ,EAAGC,EAAGC,KACNrK,KAAM+K,MAElBE,GAAQ9G,EAA2BnE,MAAO+K,EAAS9F,WAAaR,OAAO+C,eAAeuD,IAAWhL,KAAKC,KAAMmK,EAAGC,EAAGC,aAEhHzJ,eACAsK,mBACAC,IAAMlB,IACNmB,SAAW3K,EACVwK,WAXCF,EAAUC,MAcPD,QACN,WACE,SAAYM,EAAaC,YACbD,GAEbrL,KAAKY,UAAUyK,QACZzK,UAAUyK,GAAahJ,KAAKiJ,QAE5B1K,UAAUyK,IAAgBC,KAGzBlD,GAAQiD,EAlIL,SAkIsCpB,EAAKqB,GAC/C5I,EAAQ0F,GAAGiD,EAAaC,UAU5B,eACE,SAAgBD,EAAaC,KACjBD,GACb5K,EAAKuJ,OAAOqB,KACTrB,OAAOqB,GAAahJ,KAAKiJ,KAEzBtB,OAAOqB,IAAgBC,UAI3B,aACE,SAAcD,EAAaC,YACfD,GAEbrL,KAAKkL,cAAcG,QAChBH,cAAcG,GAAahJ,KAAKiJ,QAEhCJ,cAAcG,IAAgBC,KAG7BhD,KAAU+C,EAjKP,SAiKwCpB,EAAKqB,GACjD5I,EAAQ4F,KAAK+C,EAAaC,UAG9B,aACE,SAAcD,KACFA,MAGbE,GAAa9K,EAAKuJ,OAASvJ,EAAKuJ,OAAOqB,GAAe,QAEtDE,MACG,GAAIzK,GAAI,EAAGJ,EAAM6K,EAAW5K,OAAQG,EAAIJ,EAAKI,OACjCyK,EAAWzK,UAKzB,GAAI0K,GAAQnI,UAAU1C,OAAQW,EAAO0C,MAAMwH,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,MAC/FA,EAAQ,GAAKpI,UAAUoI,SAGvB/I,GAAQR,KAAKX,MAAMmB,GAAU2I,GAAaK,OAAOpK,WAUrD,eACE,SAAgB2I,EAAKoB,KACTA,OAEZ,GAAIM,GAAQtI,UAAU1C,OAAQW,EAAO0C,MAAM2H,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,MAC/FA,EAAQ,GAAKvI,UAAUuI,SAGvBlJ,GAAQR,KAAKX,MAAMmB,GAAe2I,EAzM9B,SAyM+DpB,GAAKyB,OAAOpK,WAGnF,YACE,SAAa+J,EAAaC,YACdD,GACV3I,EAAQkH,IAAIyB,EAAaC,UAG7B,wBACE,cACDO,GAASpH,OAAOD,UAAUsB,eAAegF,KAAK9K,KAAKY,eAElD,GAAIyK,KAAerL,MAAKY,aACvBiL,EAAOR,OAEJ,GADDS,GAAY9L,KAAKY,UAAUyK,OACtBvK,EAAI,EAAGA,EAAIgL,EAAUnL,OAAQG,IAAK,IACrCwK,GAAWQ,EAAUhL,KACjB8I,IAAIyB,EAAaC,KACjB1B,IAASyB,EA5NZ,SA4N6CpB,EAAKqB,OAKxD,GAAIS,KAAgB/L,MAAKkL,iBACxBW,EAAOE,OAEJ,GADDC,GAAahM,KAAKkL,cAAca,OAC3BE,EAAK,EAAGA,EAAKD,EAAWrL,OAAQsL,IAAM,IACzCC,GAAYF,EAAWC,KACnBrC,IAAImC,EAAcG,KAClBtC,IAASmC,EAvOZ,SAuO8C9B,EAAKiC,WAW3D,gBACE,mBAEAC,uBACAvL,mBAGEH,GAAKoJ,aAAaI,GACrBlB,GAAKgC,EAASvG,UAAUS,WAAaR,OAAO+C,eAAeuD,EAASvG,WAAY,UAAWxE,YACtF+I,IAAKgC,EAASvG,UAAUS,WAAaR,OAAO+C,eAAeuD,EAASvG,WAAY,UAAWxE,MAAMD,KAAKC,UAK5G+K,GACPL,eACGZ,QAAQG,GAAOc,EAMb,eACA,GAAIqB,GAAQ/I,UAAU1C,OAAQW,EAAO0C,MAAMoI,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,MAC3EA,GAAShJ,UAAUgJ,SAGnB1B,GAAOF,aAAalJ,MAAMoJ,GAASV,GAAKyB,OAAOpK,YASrD,yBACE,cACDgL,GAAStM,YAEN2I,KAAK3I,KAAK6J,cAAc0C,QAAQ,SAAUtC,GAC3CqC,EAAOzC,aAAaI,GAAKuC,WACpB3C,aAAaI,GAAKuC,mBAU1B,gBACE,gBACA7C,SAAW,UACXD,sBACAI,QAAU,UACVsB,SAAW,UACXpB,OAAS,UACTyC,0BAUF,4BACE,SAA6BpB,OAC7BrL,KAAK0J,cAAcgD,QAAQrB,GAAe,OACvC,IAAI7I,OAAM,8BAAgC6I,OAK/C5B,KmB5ULkD,GAAK,cACHC,GAAM,GAAIC,aAAY,aACtBC,UAASF,GAAKG,SAAS,EAAG,KAAK,GACD,MAA3B,GAAIC,YAAWJ,GAAK,MAGzBK,oBAEIC,GAAID,GAAQE,SACTD,GAAEE,KAAO,KAAOF,EAAEG,SAAW,SAAW,2BAG3CC,GAAKC,UAAUC,UAAUC,cACzBC,MACE,kCACI,2BACA,yBACD,wBACC,sCAEAhC,OAAOjH,OAAOkE,KAAK+E,GAAKC,OAAO,SAAU9H,SAC1C6H,GAAI7H,GAAK+H,KAAKN,MACnB,gBAGAA,GAAKC,UAAUC,UACfK,EAAiB,oBAAoBD,KAAKN,GAC1CQ,EAAY,gBAAgBF,KAAKN,IAAOO,EACxCE,EAAY,cAAcH,KAAKN,GAC/BU,EAAY,cAAcJ,KAAKN,GAC/BD,EAAW,oBAAoBO,KAAKN,IAAOS,IAAc,aAAaH,KAAKN,IAAOU,GAAa,aAAaJ,KAAKN,GACjHW,EAAU,aAAaL,KAAKN,KAAQD,kBAG5BA,UACDY,YACEF,QAJDE,IAAYF,IAAcD,YAMzBA,iBACKD,YACLG,qBAKNrB,MlB7CP3G,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAI5hBwO,GAAmB,mBACZA,GAAiBxM,KACR1B,KAAMkO,QAEjBC,MAAQzM,OACR0M,cACAC,qBAAuB,YAGjBH,QACN,gBACE,iBACwB,KAAtBlO,KAAKoO,MAAMzN,cAGf,cACE,gBACAyN,cACAC,qBAAuB,SAGzB,oCACE,SAAqCC,MACtC7K,GAAOzD,KAAKoO,SACI,IAAhB3K,EAAK9C,cACC,KAEN4N,GAAO9K,EAAK9C,OAAS,EACrB6N,EAAM,EACNC,EAAS,EACTC,EAASH,EAETI,EAAM,KAENL,EAAW7K,EAAK,GAAGmL,oBACd,OAIFH,GAAUC,GAAQ,OACjBD,EAASI,KAAKC,OAAOJ,EAASD,GAAU,MAClCF,GAAQD,EAAW7K,EAAK+K,GAAKO,WAAWH,WAAaN,EAAW7K,EAAK+K,EAAM,GAAGI,UAAW,GAC7FJ,QAEG/K,EAAK+K,GAAKI,UAAYN,IACtBE,EAAM,IAENA,EAAM,QAGZG,UAGJ,mCACE,SAAoCL,SAClCtO,MAAKgP,4BAA4BV,GAAY,SAGjD,eACE,SAAgBW,MACjBxL,GAAOzD,KAAKoO,MACZc,EAAgBlP,KAAKqO,oBACrBc,EAAY,GAEO,IAAnBD,GAAwBA,EAAgBzL,EAAK9C,QAAUsO,EAAQG,gBAAkB3L,EAAKyL,GAAeH,WAAWH,YAAcM,IAAkBzL,EAAK9C,OAAS,GAAKuO,EAAgBzL,EAAK9C,OAAS,GAAKsO,EAAQG,eAAiB3L,EAAKyL,EAAgB,GAAGE,kBAC7OF,EAAgB,EAExBzL,EAAK9C,OAAS,MACJX,KAAKgP,4BAA4BC,EAAQG,gBAAkB,QAItEf,oBAAsBc,OACtBf,MAAMiB,OAAOF,EAAW,EAAGF,UAG7B,6BACE,SAA8BX,MAC/BK,GAAM3O,KAAKgP,4BAA4BV,SACvCK,IAAO,EACF3O,KAAKoO,MAAMO,GAGX,YAIN,4BACE,SAA6BL,MAC9BW,GAAUjP,KAAKsP,qBAAqBhB,SACxB,QAAZW,EACKA,EAAQF,WAER,YAIN,yBACE,SAA0BT,UAC3BiB,GAAavP,KAAKgP,4BAA4BV,GAC9CkB,EAAqBxP,KAAKoO,MAAMmB,GAAYC,mBACX,IAA9BA,EAAmB7O,QAAgB4O,EAAa,SAEhCvP,KAAKoO,MAAMmB,GAAYC,yBAE1CA,GAAmB7O,OAAS,EACvB6O,EAAmBA,EAAmB7O,OAAS,GAE/C,YAIN,WACA,iBACIX,MAAKmO,aAGT,aACA,iBACInO,MAAKoO,MAAMzN,WAIfuN,KC/HLlI,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAM5hB+P,GAAS,mBACFA,GAAOC,KACE1P,KAAMyP,QAEjBC,OAASA,GAAU,GAAIC,YAAW,aAG5BF,QACN,cACE,eAGA,GAFDxE,GAAQjL,KAEHkK,EAAO7G,UAAU1C,OAAQ+O,EAAS1L,MAAMkG,GAAOnE,EAAO,EAAGA,EAAOmE,EAAMnE,MACtEA,GAAQ1C,UAAU0C,KAGpBwG,QAAQ,SAAUqD,KACjBF,OAASG,EAAOF,WAAY1E,EAAMyE,OAAQE,cAI/C,oBACE,SAAqBhL,SACnB,IAAI+K,aAAY/K,GAAS,GAAIA,GAAS,GAAK,IAAMA,GAAS,EAAI,IAAc,IAARA,WAGxE,kBACE,SAAmBd,WAGfgM,GAAaC,SACPA,GAAOC,SAAS,IACfC,SAAS,EAAG,QAJxBC,GAAO,YAOP3D,QAAQ,SAAU4D,MACZL,EAAaK,KAEhBC,SAASF,EAAM,QAInBT,KChDLzJ,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAQ5hB2Q,GAAO,mBACAA,OACSrQ,KAAMqQ,aAGXA,EAAM,WACZ,aACE,SAAczL,SACZ6K,IAAOa,YAAY1L,UAGvB,gBACE,SAAiB2L,EAAM9N,OAGvB,GAFDiN,GAAS,GAAID,IAERvF,EAAO7G,UAAU1C,OAAQ6P,EAAUxM,MAAMkG,EAAO,EAAIA,EAAO,EAAI,GAAInE,EAAO,EAAGA,EAAOmE,EAAMnE,MACzFA,EAAO,GAAK1C,UAAU0C,YAGzB0K,MAAMlP,MAAMmO,GAASW,EAAKE,KAAKA,GAAOF,EAAK3O,KAAKe,IAAOiJ,OAAO8E,IAC9Dd,EAAOA,cAGX,kBACE,SAAmBgB,EAASC,SAC1B,IAAIhB,aAAYe,EAASC,GAAQ,GAAK,IAAMA,GAAQ,EAAI,IAAa,IAAPA,WAGlE,aACE,iBACEN,GAAKO,QAAQ,GAAI,OAAQ,GAAIjB,aAAY,IAAM,IAAM,IAAM,MAC7D,EAAK,EAAM,MACV,IAAM,IAAM,OACZ,IAAM,GAAM,aAIf,aACE,SAAckB,MACfnP,GAAOmP,EAAKnP,KACZoP,EAAOD,EAAKC,KAEZP,EAAO,EACPQ,EAAOV,EAAKU,KAAKD,EAAKnK,SAAUmK,EAAKE,WACrCC,MAAO,KAEE,UAATvP,EACK2O,EAAKa,UAAUJ,GAEfT,EAAKc,UAAUL,MAGpBM,GAAOf,EAAKe,KAAKN,EAAKnK,SAAUmK,EAAKE,WAAa,IAAMF,EAAKO,WAChEN,EAAME,EAAMG,GAAM7E,QAAQ,SAAUqD,MAC3BA,EAAK0B,aAERjB,EAAKO,QAAQL,EAAM,OAAQQ,EAAME,EAAMG,UAG3C,aACE,SAAczK,MACfqK,GAAY3N,UAAU1C,OAAS,OAAsBR,KAAjBkD,UAAU,GAAmBA,UAAU,GAAK,IAGhFkO,EAAQ,GAAI5B,aAAY,EAAM,EAAM,EAAM,IACxC,EAAM,EAAM,IACZ,EAAM,EAAM,MAKJ,GAAK,IAAMqB,IAAc,GAAK,IAAMA,IAAc,EAAI,IAAkB,IAAZA,MAM7D,GAAK,IAAMrK,IAAa,GAAK,IAAMA,IAAa,EAAI,IAAiB,IAAXA,EAAiB,EAAM,EAAM,EAAM,IAKpG,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IACpC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IACpC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IACpC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,IACpI,EAAM,EAAM,IACZ,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IACpC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,MAC5D,IAAM,IAAM,YAEX0J,GAAKO,QAAQ,EAAIW,EAAM5Q,OAAQ,OAAQ,GAAIgP,YAAW4B,WAG1D,kBACE,SAAmBC,MACpBjB,GAAO,EAEPkB,EAAOpB,EAAKoB,SACV,WACMD,EAAK7K,mBACJ6K,EAAKR,WAAa,UACtBQ,EAAKE,oBACJF,EAAKG,mBACP,UAEJC,EAAOvB,EAAKuB,WACR,kBACKJ,EAAKR,WAAa,aACnBQ,EAAK7K,cACT6K,EAAKK,cACDL,EAAKM,eACRN,EAAKE,oBACJF,EAAKG,uBAEdF,EAAMG,GAAMrF,QAAQ,SAAUqD,MACrBA,EAAK0B,aAERjB,EAAKO,QAAQL,EAAM,OAAQkB,EAAMG,UAGrC,kBACE,SAAmBJ,MACpBjB,GAAO,EACPkB,EAAOpB,EAAKoB,SACV,WACMD,EAAK7K,mBACJ6K,EAAKR,WAAa,UACtB,SACC,OACF,UAEJY,EAAOvB,EAAKuB,WACR,kBACKJ,EAAKR,WAAa,aACnBQ,EAAK7K,sBACD6K,EAAKO,wBACPP,EAAKQ,kBACTR,EAAKhH,gBAEdiH,EAAMG,GAAMrF,QAAQ,SAAUqD,MACrBA,EAAK0B,aAERjB,EAAKO,QAAQL,EAAM,OAAQkB,EAAMG,UAGrC,aACE,SAAcJ,MACfH,GAAKG,EAAKH,GACV1K,EAAW6K,EAAK7K,SAChBsL,EAAQT,EAAKS,MACbC,EAASV,EAAKU,OACd1B,EAAU,GAAIb,aAAY,EAAM,EAAM,EAAM,IAM1C,EAAM,EAAM,IACZ,EAAM,EAAM,MACX,GAAK,QACL,GAAK,IAAM0B,IAAO,EAAI,IAAW,IAALA,EAAW,EAAM,EAAM,EAAM,MACnD,GAAK,QACL,GAAK,IAAM1K,IAAa,EAAI,IAAiB,IAAXA,EAAiB,EAAM,EAAM,EAAM,IAC5E,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IACpC,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IACpF,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,EAAM,MAChF,EAAI,IACN,MAAM,EAAM,EAAMuL,IAAW,EAAI,IAChC,MAAM,EAAM,UACd7B,GAAKO,QAAQ,EAAIJ,EAAQc,WAAY,OAAQd,UAGjD,aACE,SAAcgB,MACf9B,GAAS,GAAID,IACb9I,EAAW6K,EAAK7K,SAChBwL,EAAYX,EAAKW,mBACd1B,MAAMJ,EAAKE,KAAK,IAAKF,EAAK3O,KAAK,WAE/B+O,MAAMJ,EAAKE,KAAK,IAAKF,EAAK3O,KAAK,WAC/B+O,MAAM,GAAId,aAAY,EAAM,EAAM,EAAM,KACnC,GAAK,IAAMhJ,GAAY,GAAK,IAAMA,GAAY,EAAI,IAAiB,IAAXA,EAAiBwL,GAAa,GAAK,IAAMA,GAAa,GAAK,IAAMA,GAAa,EAAI,IAAkB,IAAZA,EAAkB,EAAM,EAAM,EAAM,KAEzLzC,EAAOA,cAGX,aACE,SAAc8B,MACfjB,GAAO,EACP6B,EAAO/B,EAAK+B,KAAKZ,EAAKR,UAAWQ,EAAK7K,UACtC0L,EAAOhC,EAAKgC,KAAKb,EAAK9P,MACtB4Q,EAAOjC,EAAKiC,KAAKd,UACpBY,EAAMC,EAAMC,GAAM/F,QAAQ,SAAUqD,MAC3BA,EAAK0B,aAERjB,EAAKO,QAAQL,EAAM,OAAQ6B,EAAMC,EAAMC,UAG3C,aACE,cACDtB,GAAY3N,UAAU1C,OAAS,OAAsBR,KAAjBkD,UAAU,GAAmBA,UAAU,GAAK,IAChFsD,EAAWtD,UAAU,GAErBmN,EAAU,GAAIb,aAAY,EAAM,EAAM,EAAM,IAC1C,EAAM,EAAM,MACJ,GAAK,QACL,GAAK,IAAMqB,IAAc,EAAI,IAAkB,IAAZA,EAAkBrK,IAAa,GAAK,QACxE,GAAK,IAAMA,IAAa,EAAI,IAAiB,IAAXA,EAAiB,GAAM,MAChE,UAEC0J,GAAKO,QAAQ,GAAKJ,EAAQc,WAAY,OAAQjB,EAAKkC,UAAU,EAAG,GAAI/B,UAGxE,aACE,SAAc9O,MACfkD,IAAS,IACP,EAAM,IACN,EAAM,EAAM,MACZ,IAAM,IAAM,MACZ,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,KACZ,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,SAE3D,UAATlD,MACI2N,OAAO9N,MAAMqD,GAAQ,EAAG,GAAG8G,QAAQ,IAAM,IAAM,IAAM,SACrD2D,OAAO9N,MAAMqD,GAAQ,GAAI,IAAI8G,QAAQ,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,MAE9G2E,EAAKO,QAAQ,EAAIhM,EAAMjE,OAAQ,OAAQ,GAAIgP,YAAW/K,WAG1D,aACE,SAAc4M,MACfjB,GAAO,EACPiC,EAAqB,UAAdhB,EAAK9P,KAAmB2O,EAAKmC,OAASnC,EAAKoC,OAClDC,EAAOrC,EAAKqC,OACZC,EAAOtC,EAAKsC,KAAKnB,UACpBgB,EAAME,EAAMC,GAAMpG,QAAQ,SAAUqD,MAC3BA,EAAK0B,aAERjB,EAAKO,QAAQL,EAAM,OAAQiC,EAAME,EAAMC,UAG3C,aACE,iBACEtC,GAAKO,QAAQ,GAAI,OAAQ,GAAIjB,aAAY,IAC1C,EAAM,IACN,IACA,EAAM,EAAM,EAAM,EAAM,YAI3B,aACE,iBACEU,GAAKO,QAAQ,GAAI,OAAQ,GAAIjB,aAAY,IAC1C,EAAM,IACN,IACA,YAIH,aACE,cACDD,GAAS,GAAID,IACbmD,GAAQ,IACN,EAAM,IACN,EAAM,EAAM,IACZ,EAAM,EAAM,OACZ,IAAM,IAAM,OAEZ,EAAM,YAELnC,MAAMJ,EAAKE,KAAK,IAAKF,EAAK3O,KAAK,QAAS2O,EAAKE,KAAK,IAAKF,EAAK3O,KAAK,QAAS,GAAIiO,YAAWiD,IACzFlD,EAAOA,cAGX,aACE,SAAc8B,MACfjB,GAAO,EACPsC,EAAOxC,EAAKwC,KAAKrB,GACjBsB,EAAOzC,EAAKyC,OACZC,EAAO1C,EAAK0C,OACZC,EAAO3C,EAAK2C,OACZC,EAAO5C,EAAK4C,cACfJ,EAAMC,EAAMC,EAAMC,EAAMC,GAAM1G,QAAQ,SAAUqD,MACvCA,EAAK0B,aAERjB,EAAKO,QAAQL,EAAM,OAAQsC,EAAMC,EAAMC,EAAMC,EAAMC,UAGvD,aACE,SAAczB,MACfhB,OAAU,YACI,UAAdgB,EAAK9P,KAOG2O,EAAK6C,KAAK1B,GAEVnB,EAAK8C,KAAK3B,GAEfnB,EAAKO,QAAQ,GAAKJ,EAAQc,WAAY,OAAQjB,EAAKkC,UAAU,EAAG,GAAI,GAAI5C,aAAY,EAAM,EAAM,EAAM,IAAQa,UAGlH,aACE,SAAcgB,MACfhB,GAAU,GAAIb,aAAY,EAAM,EAAM,IACpC,EAAM,IACN,IACA,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IACpC6B,EAAKO,eACL,KACA,EAAM,EAAM,IACbqB,YAAc,EAAI,IAAwB,IAAlB5B,EAAK4B,aAC5B,IACFC,EAAOhD,EAAKgD,KAAK7B,EAAKhH,cACnB6F,GAAKO,QAAQ,EAAIJ,EAAQc,WAAa+B,EAAK/B,WAAY,OAAQd,EAAS6C,UAG5E,aACE,cACD7I,GAASnH,UAAU1C,OAAS,OAAsBR,KAAjBkD,UAAU,GAAmBA,UAAU,IAAM,GAAI,IAAK,EAAG,GAE1FiQ,EAAY9I,EAAO7J,OACnB+O,EAAS,GAAID,IACbe,EAAU,GAAIb,aAAY,IACxB,EAAM,OAGL2D,IACD,SAICA,UAGD,EAAM,IACN,EAAM,EAAM,IACZ,EAAM,EAAM,KAGhB5H,QAAQ4H,IAAY5H,OAAOlB,GAAQkB,QAAQ,EAAM,EAAM,cAClD+E,MAAMJ,EAAKE,KAAK,EAAIC,EAAQc,YAAajB,EAAK3O,KAAK,QAAS8O,GAC5Dd,EAAOA,cAGX,aACE,SAAc8B,MACf9B,GAAS,GAAID,IAIbwC,EAAQT,EAAKS,MACbC,EAASV,EAAKU,OACdqB,EAAW/B,EAAKM,SAASI,OACzBsB,EAAWhC,EAAKM,SAASG,MAYzBJ,EAAOL,EAAKK,KACZsB,EAAO,GAAIxD,aAAY,EAAM,EAAM,IACjC,EAAM,IACN,IACA,IACA,IACA,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,KACzD,EAAI,IAAc,IAARsC,KACT,EAAI,IAAe,IAATC,IACd,GAAM,EAAM,IACZ,GAAM,EAAM,IACZ,EAAM,EAAM,IACZ,KACA,IAAM,GAAM,IAAM,QAClB,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IACtJ,MACA,KACFuB,EAAO,GAAI9D,aAAY,EAAM,GAAM,IAAM,MACvC,GAAM,IAAM,MACZ,GAAM,IAAM,MAEd+D,EAAO,GAAI/D,aAAY4D,GAAY,MAC3B,GAAK,IAAMA,GAAY,EAAI,IAAiB,IAAXA,EAAiBC,GAAY,MAC9D,GAAK,IAAMA,GAAY,EAAI,IAAiB,IAAXA,aAEtC/C,MAAMJ,EAAKE,KA3CP,GA2CmB4C,EAAK7B,WAAaO,EAAKP,WAAamC,EAAKnC,YAAajB,EAAK3O,KAAK,QAASyR,EAAM9C,EAAKE,KAAK,EAAIsB,EAAKP,YAAajB,EAAK3O,KAAK,QAASmQ,EAAMxB,EAAKE,KAAK,IAAKF,EAAK3O,KAAK,QAAS+R,EAAMpD,EAAKE,KAAK,IAAKF,EAAK3O,KAAK,QAASgS,GACzOhE,EAAOA,cAGX,aACE,cACDc,GAAU,GAAIb,aAAY,IACxB,EAAM,IACN,EAAM,EAAM,UAEXU,GAAKO,QAAQ,GAAI,OAAQJ,UAG7B,aACE,cACDA,GAAU,GAAIb,aAAY,IACxB,EAAM,IACN,EAAM,EAAM,UAEXU,GAAKO,QAAQ,GAAI,OAAQJ,UAG7B,aACE,cACDA,GAAU,GAAIb,aAAY,IACxB,EAAM,IACN,EAAM,EAAM,UAEXU,GAAKO,QAAQ,GAAI,OAAQJ,UAG7B,aACE,cACDA,GAAU,GAAIb,aAAY,IACxB,EAAM,IACN,EAAM,EAAM,IACZ,EAAM,EAAM,UAEXU,GAAKO,QAAQ,GAAI,OAAQJ,UAG7B,aACE,SAAc7J,MAEfgN,GAAUtQ,UAAU,GAEpBqM,EAAS,GAAID,IACbmE,EAAOnE,GAAOa,YAAY3J,YACvB8J,MAAMJ,EAAKE,KAAK,IAAKF,EAAK3O,KAAK,QAAS2O,EAAKE,KAAK,IAAKF,EAAK3O,KAAK,QAAS2O,EAAKkC,UAAU,EAAG,GAAIqB,EAAMvD,EAAKwD,KAAKF,IAChHjE,EAAOA,cAGX,aACE,SAAc2B,MACfb,GAAU,GAAIb,aAAY,IACxB,EAAM,KACN,GAAI0B,GAAM,GAAK,IAAMA,GAAM,EAAI,IAAW,IAALA,IACrC,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,UAEXhB,GAAKO,QAAQ,EAAIJ,EAAQc,WAAY,OAAQd,UAGjD,aACE,SAAcgB,MACfjB,GAAO,EACPuD,EAAOzD,EAAKyD,OACZC,EAAO1D,EAAK0D,KAAKvC,UACpBsC,EAAMC,GAAMxH,QAAQ,SAAUqD,MACrBA,EAAK0B,aAERjB,EAAKO,QAAQL,EAAM,OAAQuD,EAAMC,UAGrC,aACE,cACDvD,GAAUf,GAAOa,YAAYD,EAAK2D,mBACjCA,UAAY,EACV3D,EAAKO,QAAQ,GAAI,OAAQP,EAAKkC,UAAU,EAAG,GAAI/B,UAGnD,aACE,SAAcgB,MACfjB,GAAO,EACP0D,EAAO5D,EAAK4D,KAAKzC,EAAKH,IACtB6C,EAAO7D,EAAK6D,KAAK1C,EAAK2C,MACtBC,EAAO/D,EAAK+D,KAAK5C,GACjB6C,EAAOhE,EAAKgE,KAAK7C,EAAM4C,EAAK9C,mBAE/B2C,EAAMC,EAAMG,EAAMD,GAAM7H,QAAQ,SAAUqD,MACjCA,EAAK0B,aAERjB,EAAKO,QAAQL,EAAM,OAAQ0D,EAAMC,EAAMG,EAAMD,UAGjD,aACE,SAAc/C,MACfb,GAAUf,GAAOa,YAAYe,SAC1BhB,GAAKO,QAAQ,GAAI,OAAQP,EAAKkC,UAAU,EAAG,GAAI/B,UAGnD,aACE,SAAc2D,SAGZ9D,GAAKO,QAAQ,GAAI,OAAQP,EAAKkC,UAAU,EAAG,GAAI9C,GAAOa,YAAY6D,WAGtE,aACE,SAAc3C,EAAM8C,MAGrB5E,GAAS,GAAID,IACb8E,EAAc9E,GAAOa,YAAYkB,EAAKgD,QAAQ7T,QAW9C8T,EAAShF,GAAOa,YAAY,GAAwC,GAAKkB,EAAKgD,QAAQ7T,OAAS2T,YAC5F7D,MAAMJ,EAAKE,KAAK,GAAK,GAAKiB,EAAKgD,QAAQ7T,QAAS0P,EAAK3O,KAAK,QAAS,GAAIiO,aAAY,EAAM,EAAM,GAAM,IAAQ4E,EAAaE,KAY5HD,QAAQjI,QAAQ,SAAUqD,MACzB8E,GAAQ9E,EAAK8E,QAGVjE,MAAM,GAAId,aAAYC,EAAKjJ,WAAa,GAAK,MAC/CA,WAAa,GAAK,IAAMiJ,EAAKjJ,WAAa,EAAI,IAAsB,IAAhBiJ,EAAKjJ,SAAiBiJ,EAAKW,OAAS,GAAK,MAC7FA,OAAS,GAAK,IAAMX,EAAKW,OAAS,EAAI,IAAkB,IAAZX,EAAKW,KAAamE,EAAMC,WAAa,EAAID,EAAME,YAC1FC,cAAgB,EAAIH,EAAMI,eAAiB,EAAIJ,EAAMK,UAAW,EAAM,IACvEC,MAAQ,GAAK,MACbA,MAAQ,GAAK,IAAMpF,EAAKoF,MAAQ,EAAI,IAAiB,IAAXpF,EAAKoF,SAI/CtF,EAAOA,cAGX,aACE,SAAc8B,MACf9B,GAAS,GAAID,aACVgB,MAAMJ,EAAKE,KAAK,GAAKiB,EAAKgD,QAAQ7T,QAAS0P,EAAK3O,KAAK,QAAS2O,EAAKkC,UAAU,EAAG,MAClFiC,QAAQjI,QAAQ,SAAUqD,MACzB8E,GAAQ9E,EAAK8E,MACbvE,EAAMuE,EAAMC,WAAa,IACvBC,WAAa,IACbC,cAAgB,IAChBC,gBAECrE,MAAM,GAAId,aAAYQ,OAExBT,EAAOA,cAGX,aACE,SAAc8B,MACf9B,GAAS,GAAID,IACbc,EAAO,IACNiE,QAAQjI,QAAQ,SAAUqD,MACrBA,EAAKW,SAERE,MAAMJ,EAAKE,KAAKA,GAAOF,EAAK3O,KAAK,YACpCuT,GAAU,GAAItF,YAAWY,GACzBkE,EAAS,WACLS,IAAIxF,EAAOA,OAAQ+E,MACjB,IACLD,QAAQjI,QAAQ,SAAUqD,KACxBF,OAAOnD,QAAQ,SAAU4I,KACpBD,IAAIC,EAAMV,MACRU,EAAK7D,eAIZ2D,MAIJ5E,IAGTA,IAAK3O,KAAO,SAAUe,SACb,IAAIkN,aAAYlN,EAAK2S,WAAW,GAAI3S,EAAK2S,WAAW,GAAI3S,EAAK2S,WAAW,GAAI3S,EAAK2S,WAAW,MAErG/E,GAAK2D,SAAW,CC/lBhB,IAAIhO,IAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAW5hB2F,GAAegQ,GAAOhQ,aACtBH,GAAgBmQ,GAAOnQ,cAEvBoQ,GAAa,mBACNA,QACHC,GAAUlS,UAAU1C,OAAS,OAAsBR,KAAjBkD,UAAU,GAAmBA,UAAU,GAAK,IAElErD,KAAMsV,QAEjBE,SAAqB,IAAVD,OACXE,kBAAmB,OACnBC,kBAAoB,GAAIxH,IAAiB,cACzCyH,kBAAoB,GAAIzH,IAAiB,YAC1C0H,GAAU3I,GAAQ2I,aAEjBC,kBAAgC,OAAZD,OAEpBE,cAAe,OACfC,cAAe,OAEfC,iBAAmB,OACnBC,iBAAmB,YAGbX,QACN,aACE,gBACAlN,GAAG/C,GAAa6Q,YAAalW,KAAKmW,MAAMrL,KAAK9K,YAC7CoI,GAAG/C,GAAa+Q,eAAgBpW,KAAKqW,gBAAgBvL,KAAK9K,YAC1DoI,GAAG/C,GAAaiR,qBAAsBtW,KAAKuW,aAAazL,KAAK9K,YAC7DoI,GAAGlD,GAAcsR,KAAMxW,KAAKyW,KAAK3L,KAAK9K,cAGxC,gBACE,gBACAwV,UAAY,OACZC,kBAAmB,OACnBC,kBAAkBgB,aAClBf,kBAAkBe,aAClBhB,kBAAoB,UACpBC,kBAAoB,YAGtB,cACE,cACDgB,GAAuB3W,KAAKoL,SAASwL,YAAY,UACjDC,EAAaF,EAAqBE,WAClCC,EAAaH,EAAqBG,YAErC9W,KAAKyV,kBAAoBzV,KAAK+W,YAAYF,EAAYC,QAElDE,YAAYF,QACZG,YAAYJ,UAGd,qBACE,gBAEArB,SAAW,SAIb,aACE,SAAcrB,GACdnU,KAAKyV,wBACHD,SAAkB,IAAPrB,UAIf,wBACE,SAAyBzS,MAC1BwV,OAAQ,KAEC,UAATxV,EAC0B1B,KAAKoL,SAASwL,YAAY,UACfC,WAIX7W,KAAKoL,SAASwL,YAAY,UACfE,cAKrCK,GAAkBnX,KAAKoL,SAASwL,YAAY,qBAC5CQ,EAASD,EAAgBE,UAAU3V,EAClC0V,OACMD,EAAgBG,aAAa5V,MAGjC6V,SAAWL,EAAMpG,KAAK0G,QACtB1X,KAAOE,KAAKyX,iBAAiB/V,EAAMwV,EAAMpG,WAI3C5O,KAAKmD,GAAaqS,aAAchW,UAGlC,yBACE,SAA0BA,EAAMoP,MACjC6G,GAAc,GAAIlI,IAClBmI,EAAOvH,GAAKuH,OACZC,EAAOxH,GAAKwH,MAAOnW,KAAMA,EAAMoP,KAAMA,aAE7BL,MAAMmH,EAAMC,GACjBF,SAGJ,oBACE,SAAqBd,EAAYC,OACjCD,GAAcC,EAAWtC,QAAQ7T,aAC7BmW,GAAWtC,QAAQ,GAAGsD,OAG1BjB,EAAWrC,QAAQ7T,QAAWmW,EAAWtC,QAAQ7T,WAIlDoX,GAAYC,EAAAA,EACZC,EAAYD,EAAAA,CAEZnB,GAAWrC,SAAWqC,EAAWrC,QAAQ7T,WAC/BkW,EAAWrC,QAAQ,GAAGsD,KAEhChB,EAAWtC,SAAWsC,EAAWtC,QAAQ7T,WAC/BmW,EAAWtC,QAAQ,GAAGsD,UAG/BtC,SAAW3G,KAAKqJ,IAAIH,EAAWE,GAAajY,KAAKwV,cACjDC,kBAAmB,UAGrB,oBACE,SAAqBqB,MACtBI,GAAQJ,SAEPA,EAAWtC,SAAYsC,EAAWtC,QAAQ7T,eAI3C6T,GAAU0C,EAAM1C,QAEhB2D,GAAY,EAEZR,EAAc,KACdS,KACAnD,eAIAoD,EAAU,IACP7D,EAAQ7T,QAAU0X,KAAY,GAAG,IAElCC,GAAY9D,EAAQ+D,QAEpBC,EAAaF,EAAUE,WACvBC,EAAUH,EAAUG,YAEnBzY,KAAK8V,cAAgB2C,GAAWA,EAAQ3H,KAAM,GACnC9Q,KAAKyX,iBAAiB,QAASgB,EAAQ3H,QAC7CA,KAAO,OACP1O,QAAQkW,GACXG,EAAQC,iBACNnC,wBAKLuB,GAAMQ,EAAUR,IAAM9X,KAAKwV,UAEb,IAAd2C,MACSL,MAGT9C,OAAM,GACN2D,MAAM,OACYxY,KAAlBmY,EAAUK,WACNL,EAAUK,IAAM3Y,KAAKwV,UACfsC,OAEQ3X,KAAlBmY,EAAUtD,QACNsD,EAAUtD,IAAM8C,IAChBQ,EAAUtD,QAGd4D,mBAEI,GAGJC,EAAiB,IACjBP,EAAU3R,SACK2R,EAAU3R,SAClB6N,EAAQ7T,QAAU,EACb6T,EAAQ,GAAGsD,IAAM9X,KAAKwV,SACTsC,EAEvBM,EAAWzX,QAAU,EAENyX,EAAWA,EAAWzX,OAAS,GAAGgG,SAGlC3G,KAAK8Y,UAAUC,uBAG/B/C,kBAAoB6C,EAErBA,GAAkB,MACZrE,QAAQnS,KAAKuW,KACVlJ,OAAOrN,KAAKiW,EAAU9G,QACtBjB,MAAQ+H,EAAU9G,KAAKF,aAEvBjP,UACJyV,MACA9C,MACA2D,OACCL,EAAU9G,UACV8G,EAAU9G,KAAKF,sBACTkH,WACFK,mBAEG,YACAL,EAAa,EAAI,eACdA,EAAa,EAAI,gBAChB,YACJA,EAAa,EAAI,aAEnBV,OACL,WAINU,QACGtW,KAAKmD,GAAa2T,oBAAqBL,MAI5CM,GAAW,GAAIxJ,OACf2I,EAAWzX,OAAQ,IACjBuY,GAAO7I,GAAK6I,SACVhC,EAAMpG,KAAKO,QACT8G,UACGC,IAEPe,EAAO9I,GAAK8I,KAAKlE,KACZxE,MAAMyI,EAAMC,QAEhBC,cAAc,QAASH,MAG1BtB,SACGyB,cAAc,QAASzB,GAExBnD,EAAQ7T,iBAEJ6T,QAAUA,EACTxU,KAAKgX,YAAYE,QAIvBpB,cAAe,OACf5T,KAAKmD,GAAagU,cAAe,WAEhC7E,aACA7T,OAAS,UAGZ,oBACE,SAAqBuW,MAEtB1C,IADO0C,OACQ1C,QAEf2D,GAAY,EACZC,KAEAT,EAAc,KACd1C,kBAGCT,GAAYA,EAAQ7T,eAIrB0X,GAAU,IACViB,GAAmB,EAChB9E,EAAQ7T,QAAU0X,KAAY,GAAG,IAElCkB,GAAS/E,EAAQ+D,QACjB/G,EAAO+H,EAAO/H,KACdiH,EAAUc,EAAOd,YAEhBzY,KAAK+V,cAAgB0C,GAAWA,EAAQ3H,KAAM,GACnC9Q,KAAKyX,iBAAiB,QAASgB,EAAQ3H,QAC7CA,KAAO,OACP1O,QAAQmX,GACXd,EAAQC,iBACNnC,wBAKLuB,GAAMyB,EAAOzB,IAAM9X,KAAKwV,SACxB5G,EAAYkJ,CACXwB,OACQxB,KACQ,MAGjBe,GAAiB,IACjBU,EAAO5S,SACQ4S,EAAO5S,SACf3G,KAAKwZ,UAAUC,uBACPzZ,KAAKwZ,UAAUC,uBACvBjF,EAAQ7T,QAAU,EACb6T,EAAQ,GAAGsD,IAAM9X,KAAKwV,SACTsC,EAEvBM,EAAWzX,QAAU,EAENyX,EAAWA,EAAWzX,OAAS,GAAGgG,SAGlC3G,KAAKwZ,UAAUT,uBAK/B9C,kBAAoB4C,KACrBa,QACG5B,MACAA,MACA,OACCtG,EAAKF,oBACDiI,EAAO5S,SAAW4S,EAAO5S,SAAWkS,mBAEjC,YACA,eACG,gBACC,YACJ,eAED,YACDjK,OACL,SAGJgK,kBAEI,EAGJC,IAAkB,MACTnJ,OAAOrN,KAAKmP,KACZjB,MAAQiB,EAAKF,aAEhBkD,QAAQnS,KAAKuW,KACVvW,KAAKqX,OAIhBT,GAAW,GAAIxJ,OAEf2I,EAAWzX,OAAQ,IACjBuY,GAAO7I,GAAK6I,SACVhC,EAAMpG,KAAKO,QACT8G,UACGC,IAEPe,EAAO9I,GAAK8I,KAAKlE,KACZxE,MAAMyI,EAAMC,QAEhBC,cAAc,QAASH,MAG1BtB,SACGyB,cAAc,QAASzB,GACxBnD,EAAQ7T,iBAEJ6T,QAAUA,EACTxU,KAAKiX,YAAYC,QAIvBnB,cAAe,OACf7T,KAAKmD,GAAagU,cAAe,QAASJ,KAEzCzE,aACA7T,OAAS,UAGZ,sBACE,SAAuBe,EAAMgO,MAC9ByH,GAAkBnX,KAAKoL,SAASwL,YAAY,qBAC5CQ,EAASD,EAAgBE,UAAU3V,EAClC0V,OACMD,EAAgBG,aAAa5V,MAGjC8P,KAAKnP,KAAKqN,UAGd,wBACE,SAAyBoI,EAAKnR,MAC/BwO,GAAOG,EAAWqE,eAAe3Z,KAAK4Z,WAAW7H,yBAE9C+F,MACAA,MACA,WACKnR,OACJwO,OACAA,EAAK7D,qBACAwG,OACL,gBAIL,gBACE,gBACA+B,QAAU,YAGZ,gBACA,iBACI7Z,MAAKoL,SAASwL,YAAY,UAAUE,WAAWhG,YAGnD,gBACA,iBACI9Q,MAAKoL,SAASwL,YAAY,UAAUC,WAAW/F,cAGnD,uBACE,SAAwBiB,SACR,KAAjBA,EACK,GAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,MAC3B,IAAjBoC,EACF,GAAIpC,aAAY,GAAM,EAAM,GAAM,IAAM,EAAM,GAAM,EAAM,GAAM,MAC7C,IAAjBoC,EACF,GAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,MACrE,IAAjBoC,EACF,GAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,EAAM,KACnG,IAAjBoC,EACF,GAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,KACrH,IAAjBoC,EACF,GAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,EAAM,IAAM,EAAM,GAAM,EAAM,MAExK,SAIJ2F,KC9cLtP,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAIrhBoa,GAAiB,mBACjBA,GAAehJ,KACN9Q,KAAM8Z,MAElBC,eACU,kBACE,QACP,oBACE,GAAI,IAAK,IAAK,YACb,KACN,oBACe,mBACF,YACN,SACL,eAEJjJ,GACKrM,OAAOiB,UAAWqU,EAAUjJ,GAE9BiJ,YAGID,QACN,gBACE,gBACAha,KAAO,SAITga,KAGEE,GAAiB,mBACjBA,GAAelJ,KACN9Q,KAAMga,MAElBD,SACI,SACD,GAAIpK,YAAW,OACf,GAAIA,YAAW,gBACN,UACP,0BACM,eACD,cACF,oBAED,MACF,WACI,aACA,QAEP,QACG,oBACQ,iBACD,aACL,yBACU,oBAET,QACD,aAEE,SACL,eAGJmB,GACKrM,OAAOiB,UAAWqU,EAAUjJ,GAE9BiJ,YAGIC,QACN,gBACE,gBACAla,KAAO,UACPma,IAAM,UACNC,IAAM,SAIRF,KCpFLhU,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAI5hBya,GAAS,mBACFA,GAAOC,KACEpa,KAAMma,QAEjBhP,IAAM,cACNkP,QAAUD,OACVE,aAAe,OACfC,YAAcH,EAAW9I,gBACzBkJ,WAAqC,EAAxBJ,EAAW9I,gBACxBmJ,aAAe,OACfC,qBAAuB,YAGjBP,QACN,gBACE,gBACAE,QAAU,YAGZ,yBACE,cACDM,GAAkB3a,KAAKua,YAAcva,KAAKsa,aAK1CM,EAAY/L,KAAKqJ,IAAI,EAAGyC,GACxBE,EAAO,GAAIlL,YAAW,KACrBuF,IAAIlV,KAAKqa,QAAQS,SAAS9a,KAAKsa,aAActa,KAAKsa,aAAeM,SACjEH,aAAe,GAAI3N,UAAS+N,EAAKnL,QAAQqL,UAAU,QAEnDT,cAAgBM,OAChBF,qBAAmC,EAAZE,SAGzB,iBACE,SAAkBrK,MACnByK,GAAOnM,KAAKqJ,IAAIlY,KAAK0a,qBAAsBnK,GAC3C0K,EAAOjb,KAAKya,eAAiB,GAAKO,KAClCzK,EAAO,QACH,IAAI/N,OAAM,uDAEbkY,sBAAwBM,EACzBhb,KAAK0a,qBAAuB,OACzBD,eAAiBO,EACbhb,KAAKua,YAAcva,KAAKsa,aAAe,QAC3CY,qBAGA3K,EAAOyK,EACVA,EAAO,GAAKhb,KAAK0a,qBACZO,GAAQD,EAAOhb,KAAKmb,SAASH,GAE7BC,SAIN,iBACE,iBACuB,KAArBjb,KAAKmb,SAAS,UAGlB,iBACE,iBACEnb,MAAKmb,SAAS,UAGlB,yBACE,cACDC,OAAY,OACXA,EAAY,EAAGA,EAAYpb,KAAK0a,qBAAsBU,OACF,IAAlDpb,KAAKya,aAAe,aAAeW,eACjCX,eAAiBW,OACjBV,sBAAwBU,EACtBA,cAGNF,mBACEE,EAAYpb,KAAKqb,0BAGrB,gBACE,cAEDC,GAAetb,KAAKqb,yBACjBrb,MAAKmb,SAASG,EAAe,GAAK,SAGtC,gBACE,cAED1W,GAAQ5E,KAAKub,gBACL,GAAR3W,EACKA,EAAQ,IAAM,GAEb,GAAKA,IAAU,OAKtBuV,KCxGLnU,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAM5hB8b,GAAY,mBACLA,OACSxb,KAAMwb,aAGXA,EAAW,WACjB,mBACE,SAAoBpB,OAMpB,GALDqB,GAAMrB,EACNsB,EAAYD,EAAInK,WAChBqK,EAAM,GAAIhM,YAAW+L,GACrBE,EAAS,EAEJ9a,EAAI,EAAGA,EAAI4a,EAAW5a,IACzBA,GAAK,GACQ,IAAX2a,EAAI3a,IAA8B,IAAf2a,EAAI3a,EAAI,IAA8B,IAAf2a,EAAI3a,EAAI,OAIpD8a,GAAUH,EAAI3a,cAIb,IAAI6O,YAAWgM,EAAIjM,OAAQ,EAAGkM,UAGlC,iBACE,SAAkBxB,MACnByB,GAAOL,EAAUM,WAAW1B,GAC5B2B,EAAK,GAAI5B,IAAO0B,KAEjBG,cACCC,GAAaF,EAAGC,aACjBA,cACCE,GAAWH,EAAGC,aACfT,aAECY,GAAiBX,EAAUY,iBAAiBH,GAC5CI,EAAeb,EAAUc,eAAeJ,GACxCK,EAAoB,EACpBC,EAAgB,IAChBC,GAAuB,EAAG,IAAK,IAAK,KACpCC,EAAY,MAEG,MAAfT,GAAqC,MAAfA,GAAqC,MAAfA,GAAqC,MAAfA,GAAqC,KAAfA,GAAoC,KAAfA,GAAoC,KAAfA,GAAoC,MAAfA,GAAqC,MAAfA,GAAqC,MAAfA,GAAqC,MAAfA,KAEjM,OADNF,EAAGR,cAElBJ,SAAS,GAEVoB,GAAqB,MACPE,EAAoBF,MAG1BR,EAAGR,UAAY,IACxBA,YACAJ,SAAS,GACRY,EAAGY,gBAEA,GADDC,GAA2C,IAAtBL,EAA0B,EAAI,GAC9Czb,EAAI,EAAGA,EAAI8b,EAAoB9b,IAClCib,EAAGY,aACD7b,EAAI,IACI+b,iBAAiBd,EAAI,MAErBc,iBAAiBd,EAAI,OAMtCR,aACCuB,GAAqBf,EAAGR,aACD,IAAvBuB,IACCvB,cACE,IAA2B,IAAvBuB,EAA0B,GAChC3B,SAAS,KACT4B,YACAA,cAEE,GADDC,GAAwCjB,EAAGR,UACtCtP,EAAK,EAAGA,EAAK+Q,EAAuC/Q,MACxD8Q,YAGJxB,YACAJ,SAAS,MAER8B,GAA0BlB,EAAGR,UAC7B2B,EAAiCnB,EAAGR,UAEpC4B,EAAsBpB,EAAGZ,SAAS,EACV,KAAxBgC,KACChC,SAAS,KAEXA,SAAS,MAERiC,GAAyB,EACzBC,EAA0B,EAC1BC,EAAwB,EACxBC,EAA2B,CAELxB,GAAGY,eAEFZ,EAAGR,YACFQ,EAAGR,YACLQ,EAAGR,YACAQ,EAAGR,cAG5BiC,GAAY,EACZC,EAAa,EACbC,EAAM,EACNC,GAAY,EACZC,EAAU,EACVC,EAAU,KAEoB9B,EAAGY,WACJ,IAC3BZ,EAAGY,WAAY,IAEbmB,GAAmB/B,EAAGC,WACtB+B,GAAe,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,GACzEC,GAAe,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAExEF,GAAmB,GAAKA,EAAmB,MACjCC,EAAYD,EAAmB,KAC9BE,EAAYF,EAAmB,IACd,MAArBA,MACG/B,EAAGC,YAAc,EAAID,EAAGC,aACvBD,EAAGC,YAAc,EAAID,EAAGC,eAIrCD,EAAGY,cACFA,WAEDZ,EAAGY,eACFxB,SAAS,GACRY,EAAGY,cACFxB,SAAS,KAGZY,EAAGY,eACFpB,YACAA,WAEDQ,EAAGY,WAAY,IACbsB,GAAoBlC,EAAGZ,SAAS,IAChC+C,EAAanC,EAAGZ,SAAS,MACjBY,EAAGY,gBAELuB,MACoB,EAApBD,OAKVE,GAAW,CACG,KAAdX,GAAkC,IAAfC,MACVD,EAAYC,MAGrBW,GAAc,EACdC,EAAc,CACQ,KAAtB9B,KACY,IACA,EAAIY,MAEiB,IAAtBZ,EAA0B,EAAI,KACR,IAAtBA,EAA0B,EAAI,IAEnB,EAAIY,OAG1BmB,GAA8C,IAA/BrB,EAA0B,GACzCsB,EAAmF,IAAtCrB,EAAiC,IAA9D,EAAIC,OAERC,EAAyBC,GAA2Be,MACnDd,EAAwBC,GAA4Bc,KAEjEG,GAAgB3P,KAAK4P,KAAKH,EAAcH,YAEzC3R,YACE,qBAGa2P,eACFE,YACHK,gBACIF,uBACOhB,EAAUkD,sBAAsBlC,qBAG7CmB,MACFD,UACIG,UACAD,oBAIFJ,SACCC,qBAIDa,SACCC,uBAIDC,SACCD,WAKT,yBACE,SAA0BxC,EAAIpZ,OAI9B,GAHDgc,GAAY,EACZC,EAAY,EAEP9d,EAAI,EAAGA,EAAI6B,EAAO7B,IACP,IAAd8d,OAEWD,EADA5C,EAAGgB,UACsB,KAAO,OAErB,IAAd6B,EAAkBD,EAAYC,SAIzC,yBACE,SAA0B3C,UACvBA,OACD,UACI,eACJ,UACI,WACJ,UACI,eACJ,WACI,WACJ,WACI,aACJ,WACI,cACJ,WACI,wBAEA,kBAIR,uBACE,SAAwBC,UACrBA,EAAW,IAAI2C,QAAQ,UAG5B,8BACE,SAA+BC,UAC5BA,OACD,WACI,YACJ,WACI,YACJ,WACI,sBAEA,kBAIR,oBACE,SAAqBC,MACtBjO,KACAiO,IAAaA,EAAUC,eACpBC,WAAaF,EAAUC,WAAW/M,QAClCiN,YAAcH,EAAUC,WAAW9M,SACnCR,aAAeqN,EAAUI,aAAalN,QACtCN,cAAgBoN,EAAUI,aAAajN,UAGzCkN,QAAUL,EAAU5C,iBACpBkD,MAAQN,EAAU1C,eAClBiD,SAAWP,EAAUrC,YACrB6C,aAAeR,EAAUvC,gBAEzB1K,gBACIiN,EAAUS,UAAUvN,aACnB8M,EAAUS,UAAUtN,UAGzBuN,UAAYV,EAAUW,cAEvBC,GAAS7O,EAAK2O,UAAU5B,QACxB+B,EAAS9O,EAAK2O,UAAU7B,iBACvB7E,kBAAoBlK,KAAKC,MAAMgC,EAAKE,WAAa2O,EAASC,IACxD9O,MAIJ0K,KChTLxV,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MYErhBmgB,IZIG,mBACHC,OACS9f,KAAM8f,MAGXA,EAAS,WACf,oBACE,SAAqBpQ,MACtBA,EAAO/O,OAAS+O,EAAOlH,SAAW,cAIlCoE,GAAM8C,EAAOqQ,SACbvX,EAAWkH,EAAOlH,eACS,KAA3BoE,EAAIoT,SAASxX,IAA8C,IAA3BoE,EAAIqT,SAASzX,IAAiD,IAA9BoE,EAAIsT,QAAQ1X,EAAW,GAClFsX,EAAQK,cAAczQ,GAEtBoQ,EAAQM,YAAY1Q,UAI1B,sBACE,SAAuBA,UACxB2Q,MACA7X,EAAWsX,EAAQQ,wBAAwB5Q,GAC3C6Q,EAAQ/X,EAASgY,IACjBC,EAAMF,EACHA,EAAQ7Q,EAAO/O,OAAS,GAAG,IAC5B+f,GAAShR,EAAOA,OAAOiR,MAAMJ,EAAOA,EAAQ/X,EAASoY,aACrDpY,GAASgY,MAAQ9Q,EAAOlH,YACnBqY,KAAKrY,EAASoY,mBAEZd,EAAQQ,wBAAwB5Q,IAC5B8Q,OAEXrL,IAASuL,OAAQA,EAAQI,KADlB,GAAInR,YAAWD,EAAOA,OAAOiR,MAAMJ,EAAQG,EAAOpP,WAAYmP,OAEjEM,WAAW5L,GACfA,EAAKzT,MAAQ,GAAmB,IAAdyT,EAAKzT,QACpBW,KAAK8S,KAEL0L,KAAKJ,EAAM/Q,EAAOlH,YACjBiY,QAEHJ,UAGJ,oBACE,SAAqB3Q,UACtB2Q,MACG3Q,EAAOlH,SAAWkH,EAAO/O,OAAS,GAAG,IACtCA,GAAS+O,EAAOqQ,SAASC,gBACzBtQ,EAAO/O,OAAS+O,EAAOlH,UAAY7H,YACjC+f,GAAShR,EAAOA,OAAOiR,MAAMjR,EAAOlH,SAAUkH,EAAOlH,SAAW,KAC7DqY,KAAK,MACRC,GAAOpR,EAAOA,OAAOiR,MAAMjR,EAAOlH,SAAUkH,EAAOlH,SAAW7H,KAC3DkgB,KAAKlgB,MACRwU,IAASuL,OAAQA,EAAQI,KAAMA,KAC3BC,WAAW5L,GACfA,EAAKzT,MAAQ,GAAmB,IAAdyT,EAAKzT,QACpBW,KAAK8S,SAMTkL,UAGJ,mBACE,SAAoBlL,MACrBzT,GAAsB,GAAfyT,EAAK2L,KAAK,YAChBpf,KAAOA,EACJA,OACD,KAEEsf,KAAM,YAER,KAEEC,KAAM,YAER,aAGA,KAEEhH,IAAM4F,GAAUqB,SAAS/L,EAAK2L,gBAEhC,KAEE5G,KAAM,UAUZ,gCACE,SAAiCxK,UAElC8Q,GAAM9Q,EAAOlH,SACboY,EAAe,EACK,IAAjBA,GAAuC,IAAjBA,GAAsBJ,EAAM9Q,EAAO/O,OAAS,GACjC,IAAlC+O,EAAOqQ,SAASE,SAASO,GACe,IAAtC9Q,EAAOqQ,SAASE,SAASO,EAAM,KAElB,EAC+B,IAArC9Q,EAAOqQ,SAASG,QAAQM,EAAM,KACxB,gBASjBA,KAAQ9Q,EAAO/O,OAAS,IACY,IAAlC+O,EAAOqQ,SAASE,SAASO,GACe,IAAtC9Q,EAAOqQ,SAASE,SAASO,EAAM,OAElB,QAIqB,IAAlC9Q,EAAOqQ,SAASE,SAASO,IAA+C,IAAjC9Q,EAAOqQ,SAASG,QAAQM,KAElD,IAET9Q,EAAO/O,UAIV6f,IAAKA,EAAKI,aAAcA,UAG9B,gBACE,SAAiB3G,EAAKC,MACvBhW,GAAM,GAAIyL,YAAWsK,EAAI3I,WAAa4I,EAAI5I,WAAa,MACvD,GAAK,IACL,GAAK2I,EAAI,KACT,GAAKA,EAAI,KACT,GAAKA,EAAI,KACT,GAAK,MACL,GAAK,OAELxF,GAAS,WAETS,IAAI,GAAIvF,aAAYsK,EAAI3I,aAAe,EAAI,IAAuB,IAAjB2I,EAAI3I,aAAqBmD,MACpE,IACNS,IAAI+E,EAAKxF,MACHwF,EAAI3I,aAEVmD,GAAU,QAGVS,IAAI,GAAIvF,aAAYuK,EAAI5I,aAAe,EAAI,IAAuB,IAAjB4I,EAAI5I,aAAqBmD,MACpE,IACNS,IAAIgF,EAAKzF,GACNvQ,SYtKUid,iNXFnBnb,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAQ5hB0hB,GAAQ,mBAIDA,OACSphB,KAAMohB,QAEjB/P,IAAM,OACNgQ,eAAiB,OACjB7M,gBACA8M,uBACA3gB,OAAS,YAQHygB,QACN,cACE,gBACAC,eAAiB,OACjB7M,gBACA7T,OAAS,SAOX,gBACE,gBACA4gB,aACAlQ,IAAM,MAIR+P,KAMEI,GAAa,SAAUC,WAMvBD,OACSxhB,KAAMwhB,MAElBvW,GAAQ9G,EAA2BnE,MAAOwhB,EAAWvc,WAAaR,OAAO+C,eAAega,IAAazhB,KAAKC,gBAExGmL,IAAM,eACNzJ,KAAO,QACNuJ,WAZCuW,EAAYC,GAefD,GACPJ,IAESM,GAAa,SAAUC,WAMvBD,OACS1hB,KAAM0hB,MAElB/W,GAASxG,EAA2BnE,MAAO0hB,EAAWzc,WAAaR,OAAO+C,eAAeka,IAAa3hB,KAAKC,gBAExGmL,IAAM,eACNzJ,KAAO,UACPkgB,QAAU,EACVjX,WAbC+W,EAAYC,MAoBTD,QACN,cACE,gBACAL,eAAiB,OACjB7M,gBACA7T,OAAS,OACTihB,QAAU,MAIZF,GACPN,ICvGEpb,IDyGgB,mBACT6b,OACS7hB,KAAM6hB,QAEjBhL,WAAa,UACbC,WAAa,QAGP+K,QACN,gBACE,gBACAhL,WAAa,UACbC,WAAa,YCrHL,mBAAuB7Q,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,OAO5hBoiB,GAAO7U,EAAQ6U,KAEfC,WACM,UACC,SACD,SACA,YACG,aACC,eACE,QACR,eACO,IAMXC,GAAY,mBACLA,OACShiB,KAAMgiB,QAEjBvN,OAAS,OACTwN,WAAajiB,KAAKyU,iBAGZuN,QACN,gBACE,SAAiBlR,EAAMP,MACxBA,EAAO,OACH,IAAI/N,OAAM,mCAEd0f,MACAzf,EAAOzC,KAAKmiB,WAAWrR,GACvBlM,EAAQ5E,KAAKmiB,WAAWrR,EAAMP,EAAO9N,EAAK2f,mBACrC3f,EAAK+O,MAAQ5M,EAAM4M,UAEvB6Q,cACEH,SAGJ,oBACE,gBACAzN,OAAS,OACTwN,WAAajiB,KAAKyU,cAGpB,oBACE,SAAqB/E,MAEtB4S,GADK,GAAIxV,UAAS4C,EAAQ1P,KAAKiiB,YACnBM,UAAU,GAAIT,IAC1BU,EAAM,KACNF,EAAS,EACLG,EAAKC,OAAO,GAAI/S,YAAWD,EAAQ1P,KAAKiiB,WAAa,EAAGK,IAExD,MAEJ/R,GAAO+R,EAAS,cACfL,YAAc1R,QAEXiS,WACIF,EAAS,UAIlB,kBACE,SAAmB5S,EAAQa,MAC5BoS,GAAK,GAAI7V,UAAS4C,EAAQ1P,KAAKiiB,WAAY1R,GAC3CqS,EAAKD,EAAGE,WAAW,GAAIf,cAER,GADFa,EAAG1C,SAAS,GAAI6B,IACT,SAEnBG,YAAc,SAEX,GAAIa,MAAKF,YACL,WAIT,oBACE,SAAqBlT,EAAQa,MAC9B9N,GAAOzC,KAAK+iB,YAAYrT,EAAQa,GAChC3L,EAAQ5E,KAAKmiB,WAAWzS,EAAQa,EAAO9N,EAAK2f,4BAGtC3f,EAAK+O,WACJ5M,EAAM4M,eAEL/O,EAAK2f,SAAWxd,EAAMwd,kBACtBxd,EAAMoe,iBAIf,wBACE,SAAyBtT,MAE1B4S,GADK,GAAIxV,UAAS4C,EAAQ1P,KAAKiiB,YACnBlH,UAAU,GAAI+G,IAC1BU,EAAM,YACNF,EAAS,EACLG,EAAKC,OAAO,GAAI/S,YAAWD,EAAQ1P,KAAKiiB,WAAa,EAAGK,IAExD,QAGHL,YAAcK,EAAS,QAEpBE,WACIF,EAAS,UASlB,mBACE,SAAoB9Q,EAAMjB,MAC3Bb,GAAS,GAAI7C,eACb2E,YAAgB3E,aACT2E,EAEAA,EAAK9B,UAEZuT,GAASlB,GAAWkB,OACpBC,EAAUnB,GAAWmB,QACrBC,EAASpB,GAAWoB,OACpBC,EAASrB,GAAWqB,OACpBC,EAAYtB,GAAWsB,UACvBC,EAAavB,GAAWuB,WACxBC,EAAexB,GAAWwB,aAC1BC,EAAOzB,GAAWyB,KAClBC,EAAc1B,GAAW0B,YAEzBC,EAAW,GAAI5W,UAAS4C,EAAQ1P,KAAKiiB,WAAY1R,GACjDyS,GAAW,EACXthB,EAAOgiB,EAASC,SAAS,GACzBlP,EAAS,OACRwN,YAAc,KACfrd,GAAQ,YAEJlD,OACDuhB,KAEOS,EAASb,WAAW,GAAIf,SAC3BG,YAAc,KACT,YAGTiB,OAEaQ,EAASC,SAAS,QAE3B1B,YAAc,KACT,YAGTkB,MAEGX,GAAMxiB,KAAK+iB,YAAYrT,KACnB8S,EAAIhR,QACFgR,EAAIJ,mBAGbgB,WAGGQ,GAAa,MACyB,SAAtCF,EAAS3I,UAAUxK,EAAO,GAAIuR,QACnB,GAGRrN,EAASlE,EAAO,GAAG,IACpBsT,GAAS7jB,KAAK8jB,YAAYpU,EAAQa,EAAOkE,EAASmP,MAClDC,EAAOE,oBAGLF,EAAOrS,KAAK/O,MAAQohB,EAAOrS,KAAK5M,SAC5Bif,EAAOzB,SAEf3N,GAAUlE,EAAO,GAEN,KADsC,SAAxCmT,EAAS3I,UAAUtG,EAAS,GAAIqN,YAEpCG,YAAc,KACT,aAKboB,WAGS,OACLpB,YAAc,KACf+B,GAAc,MACyC,IAAhB,SAAtCN,EAAS3I,UAAUxK,EAAO,GAAIuR,SACnB,GAGTrN,EAASlE,EAAO,GAAG,IACpB0T,GAASjkB,KAAK8jB,YAAYpU,EAAQa,EAAOkE,EAASuP,MAClDC,EAAOF,oBAGLE,EAAOzS,KAAK/O,MAAQwhB,EAAOzS,KAAK5M,SAC5Bqf,EAAO7B,SAEf3N,GAAUlE,EAAO,GAEJ,KADsC,SAAxCmT,EAAS3I,UAAUtG,EAAS,GAAIqN,UAEjC,OACLG,YAAc,aAMtBqB,KAEO,QACG,YAIVC,WAGGW,GAAYR,EAAS3I,UAAU,GAAI+G,OAC7B,OACLG,YAAc,MACd,GAAInhB,GAAI,EAAGA,EAAIojB,EAAWpjB,IAAK,IAC9BqjB,GAASnkB,KAAKmiB,WAAWzS,EAAQa,EAAOkE,KACtCpS,KAAK8hB,EAAO3S,SACR2S,EAAO/B,mBAKlBoB,MAEGY,GAAOpkB,KAAKqkB,UAAU3U,EAAQa,EAAO,KACjC6T,EAAK5S,QACH4S,EAAKhC,mBAIdqB,MAEGa,GAAUtkB,KAAKukB,gBAAgB7U,EAAQa,EAAO,KAC1C+T,EAAQ9S,QACN8S,EAAQlC,yBAMT7R,cAKP3L,WACI6P,WACAuO,OAKThB,KClRLhc,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAW5hB0F,GAAeiQ,GAAOjQ,aAEtBof,GAAa,mBACNA,OACSxkB,KAAMwkB,QAEjBC,sBAAuB,OACvBC,UAAY,OACZC,YAAa,YAGPH,QACN,aACE,gBACApc,GAAGhD,GAAawf,YAAa5kB,KAAK6kB,WAAW/Z,KAAK9K,cAUpD,mBACE,cACAA,KAAKykB,qBAOH,IACDzkB,KAAK8kB,aAAankB,OAAS,aAG3BokB,OAAQ,GAERC,EAAU,SAGJhlB,KAAKilB,qBACNF,GAASC,KAAY,QAEzB9iB,KAAKkD,GAAa8f,oBAnBO,IAC1BllB,KAAK8kB,aAAankB,OAAS,aAG3B+f,GAAS1gB,KAAK8kB,aAAavM,MAAM,SAChC4M,eAAezE,QACfmE,qBAiBJ,uBACE,SAAwBnE,GACxB8D,EAAWY,UAAU1E,SAInB+D,sBAAuB,OAGvBY,sBACAC,wBAPApjB,KAAKkD,GAAamgB,YAAa,GAAI/iB,OAAM,0BACzCqiB,mBAQFA,oBAQF,uBACE,gBACAH,eACD5N,GAAa,GAAI4K,MACV5Q,KAAO,GAAIkJ,MACX3I,GAAKyF,EAAWhG,KAAKO,GAAKrR,KAAK0kB,eAErCc,OAAO1O,WAAaA,SAQtB,uBACE,gBACA4N,eACD7N,GAAa,GAAI2K,MACV1Q,KAAO,GAAIgJ,MACXzI,GAAKwF,EAAW/F,KAAKO,GAAKrR,KAAK0kB,eAErCc,OAAO3O,WAAaA,SActB,qBACE,cACD7W,KAAK8kB,aAAankB,OAAS,SACtB,SAELokB,GAAQ/kB,KAAKylB,2BACbV,SACGW,cAAcX,GAEdA,SAQJ,2BACE,cACDtQ,GAAS,EACTsQ,KAEAY,EAAU3lB,KAAK8kB,aAAac,MAAMnR,EAAQ,SACpC,IAGJoR,UAAsB,GAAVF,KAAkB,IAC9BA,QAAoB,GAAVA,IAGVG,SAAW9lB,KAAK8kB,aAAac,MAAMnR,EAAQ,MACvC,EAEY,IAAlBsQ,EAAMY,SAAmC,IAAlBZ,EAAMY,SAAmC,KAAlBZ,EAAMY,SAAoC,KAAlBZ,EAAMY,SAAoD,IAAlC3lB,KAAK8kB,aAAac,MAAM,EAAG,SACvH5lB,MAAK8kB,cAAgB9kB,KAAK8kB,aAAankB,OAAS,QAC7CmkB,aAAavM,MAAM,QAErBrW,KAAKkD,GAAamgB,YAAavlB,KAAKmL,IAAK,GAAI3I,OAAM,WAAauiB,EAAMY,UAAU,GAC9E,QAGL3lB,KAAK8kB,aAAankB,OAASokB,EAAMe,SAAW,SACvC,WAIJhB,aAAavM,MAAM,MAGpBwN,GAAY/lB,KAAK8kB,aAAac,MAAM,EAAG,QACtCd,aAAavM,MAAM,MAGpByN,GAAehmB,KAAK8kB,aAAavM,MAAM,GAAG,SAC1CyN,GAAe,OACW,SAAfA,KAGTlO,IAAMiO,OAGPjB,aAAavM,MAAM,GACjBwM,SAGJ,sBACE,SAAuBA,UACpBA,EAAMY,aACP,SACEM,iBAAiBlB,aAEnB,QACEmB,cAAcnB,aAEhB,QACEoB,eAAepB,aAEjB,SAEED,aAAavM,MAAM,sBAGnBuM,aAAavM,MAAM,WAWzB,yBACE,SAA0BwM,MAC3BlO,GAAa7W,KAAKwlB,OAAO3O,WACzBC,EAAa9W,KAAKwlB,OAAO1O,WAEzBtF,EAAOxR,KAAK8kB,aAAavM,MAAMwM,EAAMe,UAErCM,GAAO,GAAIpE,KAAYqE,QAAQ7U,EAAMA,EAAK7Q,QAE1C2lB,EAAatmB,KAAKoL,SAASkb,WAAaF,EAAOA,EAAKE,eAAanmB,WAGhEiL,SAASjE,UAAUR,SAAW2f,EAAW3f,cACzCyE,SAASjE,UAAUP,SAAW0f,EAAW1f,cACzCwE,SAASjE,UAAUof,SAAWD,EAAWxf,SAE/B9G,KAAKwmB,mBAAmBzB,EAAMe,iBAEtC5jB,KAAKkD,GAAaqhB,iBAClB9B,YAAa,GAIhB9N,IAAeA,EAAW6P,kBAAmB,IAC3C5V,GAAO+F,EAAW/F,YAClBwV,EAAWK,oBACR3U,WAAasU,EAAWK,iBAG3BL,EAAWM,kBACR7U,aAAeuU,EAAWM,eAGzBN,EAAWK,qBACZ,SACEE,gBAAkB,YAEpB,SACEA,gBAAkB,YAEpB,SACEA,gBAAkB,OAIzB/P,IAAeA,EAAW4P,kBAAmB,IAC3CI,GAAQhQ,EAAWhG,QACa,gBAAzBwV,GAAWS,UAAwB,IACxCnH,GAAS/Q,KAAKC,MAA6B,IAAvBwX,EAAWS,cAC/BnH,EAAS,EAAG,IACVlC,GAAMkC,EAAS,GACdkH,GAAMrH,cACHA,gBAEFA,UAAUuH,OAAQ,IAClBvH,UAAU/B,IAAMA,IAChB+B,UAAU7B,QAAUgC,IACpBH,UAAU5B,QAAU,cAM7B,iCACE,SAAkCrM,MACnCtN,QACAwiB,mBAAoB,IACpBO,WAAazV,EAAK,KAAO,IACzBqV,iBAA6B,EAAVrV,EAAK,KAAW,EAAIA,EAAK,KAAO,IACnDmV,gBAAkB3mB,KAAKknB,uBAAuBhjB,EAAI2iB,mBAClD9U,cAA0B,IAAVP,EAAK,MAAc,IACnC2V,aAAyB,EAAV3V,EAAK,MAAY,IAChC4V,oBAAgC,EAAV5V,EAAK,MAAY,IACvC6V,mBAA+B,EAAV7V,EAAK,KAE1BgG,MAAQ,WAAatT,EAAI+iB,cACzBzZ,GAAY8Z,OAAO/Z,UAAUC,UAAUC,cACvC8Z,MAAyB,GAEzB/c,MAAS,GACTgd,EAAgBtjB,EAAI2iB,uBAEc,IAAlCrZ,EAAUd,QAAQ,WAEhBxI,EAAI2iB,iBAAmB,KACrBI,WAAa,IACR,GAAIjjB,OAAM,KACMwjB,EAAgB,MAGrCP,WAAa,IACR,GAAIjjB,OAAM,KACMwjB,IAEgB,IAAlCha,EAAUd,QAAQ,cAEvBua,WAAa,IACR,GAAIjjB,OAAM,KACMwjB,MAIrBP,WAAa,IACQ/iB,EAAI2iB,kBACpB,GAAI7iB,OAAM,GAEfE,EAAI2iB,iBAAmB,IACA3iB,EAAI2iB,gBAAkB,EACjB,IAArB3iB,EAAI6N,iBAETkV,WAAa,IACR,GAAIjjB,OAAM,KACME,EAAI2iB,oBAI1B,GAAK3iB,EAAI+iB,YAAc,IACvB,KAA6B,GAAtB/iB,EAAI2iB,mBAA4B,IACvC,IAA4B,GAAtB3iB,EAAI2iB,kBAA2B,IACrC,KAA0B,GAAnB3iB,EAAI6N,eAAwB,EACnB,IAAnB7N,EAAI+iB,eACC,KAAgC,GAAzBM,KAAmC,IAC1C,IAA+B,EAAzBA,IAAkC,IAExC,IAAM,IACN,GAAK,KAEV/c,OAASA,EACNtG,SAGJ,sBACE,SAAuB6gB,MACxB7N,GAAQlX,KAAKwlB,OAAO3O,cACnBK,MAIDpG,GAAOoG,EAAMpG,IAEZA,OACGA,KAAO,GAAIgJ,MACV5C,EAAMpG,SAGXsV,GAAOpmB,KAAK8kB,aAAavM,MAAM,GAAG,KAEhC/G,KAAOxR,KAAK8kB,aAAavM,MAAMwM,EAAMe,SAAW,MAElD2B,IAAiB,IAAPrB,KAAgB,IAExBqB,OAASA,EAEA,KAAXA,QACGvlB,KAAKkD,GAAamgB,YAAa,GAAI/iB,OAAM,yBAA2BilB,IAG5D,KAAXA,GAAkBznB,KAAK0nB,sBACpB1V,WAAahS,KAAK2nB,8BAA8BvB,KAChDS,iBAA0B,GAAPT,KAAe,IAClCwB,YAAqB,EAAPxB,KAAc,IAC5BrU,aAAsB,EAAPqU,IACfrN,kBAAoBlK,KAAKC,MAAM,KAAOgC,EAAK+W,gBAAkB/W,EAAKE,eAGrE6W,GAAkB/W,EAAK+W,gBACvBC,EAAuBhX,EAAK+V,gBAC5B9N,EAAoBjI,EAAKiI,wBAEtBgM,GAAMY,WACToC,GAAW/nB,KAAKwmB,mBAAmBzB,EAAMe,aAEvB,IAAlBf,EAAMvT,KAAK,GAAU,IAEnBwW,GAAYhoB,KAAKioB,yBAAyBlD,EAAMvT,QAClCwW,EAAUrB,iBAAmB7V,EAAK+W,kBAC7BG,EAAUnB,iBAAmB/V,EAAK+V,kBACrChY,KAAKC,MAAM,KAAO+Y,EAAkB/W,EAAKE,aAExDe,aAAeiW,EAAUjW,eACzBC,WAAa6V,IACbhB,gBAAkBiB,IAClB/O,kBAAoBA,IACpBpS,SAAW3G,KAAKoL,SAASjE,UAAUR,SAAWmK,EAAKE,YACnDxG,OAASwd,EAAUxd,UAEpB0d,GAAaloB,KAAKoL,SAASjE,UAAUJ,QAG9ByQ,MAAQwQ,EAAUxQ,QAClBzF,aAAeiW,EAAUjW,eACzBC,WAAa6V,IACbhB,gBAAkBmB,EAAUF,qBAElC9nB,KAAK0nB,uBAGHxlB,KAAKkD,GAAa+iB,4BAFlBjmB,KAAKkD,GAAagjB,gBAAiB,cAKrCV,mBAAoB,OAEpBW,aAAc,MAEfroB,MAAKqoB,gBACD5P,cACEvB,EAAMpG,WAETuX,aAAc,KAGf7W,KAAOuT,EAAMvT,KAAKmP,MAAM,EAAGoE,EAAMvT,KAAK7Q,UACtC6T,QAAQnS,KAAK0iB,EAEhBgD,SACE7lB,KAAKkD,GAAamgB,YAAavlB,KAAKmL,IAAK,GAAI3I,OAAM,uBAAyBuiB,EAAMe,WAAW,WAYjG,uBACE,SAAwBf,MAEzBqB,GAAOpmB,KAAK8kB,aAAavM,MAAM,GAAG,KAChC+P,WAAoB,IAAPlC,KAAiB,IAC9B5N,WAAiC,IAApBuM,EAAMuD,aAErBC,GAAiB,GAAPnC,UACTZ,OAAO1O,WAAWyR,QAAUA,IAG3BC,cAAgBxoB,KAAK8kB,aAAavM,MAAM,GAAG,KAC3CvD,IAAMhV,KAAK8kB,aAAac,MAAM,EAAG,QAClCd,aAAavM,MAAM,GAGR,KAAZgQ,EAAgB,IACd/W,GAAOxR,KAAK8kB,aAAavM,MAAMwM,EAAMe,SAAW,QAC9CtU,KAAOA,EAEgC,IAAzCiX,OAAOrY,SAAS2U,EAAMyD,eAAsB,CACzCxoB,KAAKwmB,mBAAmBzB,EAAMe,gBAC5B5jB,KAAKkD,GAAamgB,YAAavlB,KAAKmL,IAAK,GAAI3I,OAAM,+BAAiCuiB,EAAMe,WAAW,MAExG4C,MACAxb,EAAI,QACH8H,IAAM+P,EAAM/P,MACZ8C,IAAMiN,EAAMjN,IACViN,EAAMvT,KAAK7Q,OAASuM,GAAG,IACxByb,GAAQ5D,EAAMvT,KAAKmP,MAAM8H,OAAOrY,SAASlD,GAAI,EAAIA,KAChDqD,KAAOoY,EAAM,KACbpY,MAAmB,IAAXoY,EAAM,KACdpY,MAAmB,IAAXoY,EAAM,GAAW,MACzBpY,MAAmB,IAAXoY,EAAM,GAAW,IAAM,OAC/B,IACAnX,KAAOuT,EAAMvT,KAAKmP,MAAM8H,OAAOrY,SAASlD,GAAIwb,EAAKnY,KAAOrD,MACxDwb,EAAKnY,UACLiV,OAAO1O,WAAWtC,QAAQnS,KAAKqmB,QAC/BxmB,KAAKkD,GAAagjB,gBAAiB,cAEQ,KAAzCK,OAAOrY,SAAS2U,EAAMyD,iBAC1BxoB,KAAKwmB,mBAAmBzB,EAAMe,eAG5B5jB,KAAKkD,GAAagjB,gBAAiB,cAFnClmB,KAAKkD,GAAamgB,YAAavlB,KAAKmL,IAAK,GAAI3I,OAAM,+BAAiCuiB,EAAMe,WAAW,QAKzG,IAAgB,IAAZyC,EAAe,IACpBK,GAAQ5oB,KAAK8kB,aAAavM,MAAMwM,EAAMe,SAAW,MACpC,IAAb8C,EAAM,IAAyB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,GAAU,KAEnE,GADDC,GAAa,EACR/nB,EAAI,EAAGA,EAAI,EAAGA,MACK,IAAb+nB,EAAmBD,EAAM9nB,MAE1B,KACN8nB,EAAMjI,MAAM,EAAGiI,EAAMjoB,SACvB,GAAKkoB,EAAa,OACVA,EAAaD,EAAM,IAAM,MACjC,GAAKC,EAAa,OACVA,EAAaD,EAAM,IAAM,MACjC,GAAKC,EAAa,MAClB,IAAMA,EAAaD,EAAM,IAAM,SAGjCpX,KAAOoX,EAEe,IAAxB7D,EAAMyD,mBACHM,yBAAyB/D,EAAMvT,MACrBxR,KAAKwmB,mBAAmBzB,EAAMe,YAEtC9lB,KAAK+oB,uBAGH7mB,KAAKkD,GAAa4jB,4BAFlB9mB,KAAKkD,GAAagjB,gBAAiB,cAKrCW,mBAAoB,QAEtBV,aAAc,MACd,KACAroB,KAAKwmB,mBAAmBzB,EAAMe,2BAC5B5jB,KAAKkD,GAAamgB,YAAavlB,KAAKmL,IAAK,GAAI3I,OAAM,+BAAiCuiB,EAAMe,WAAW,EAGxG9lB,MAAKqoB,gBACD5P,cACEhU,OAAOiB,UAAW1F,KAAKwlB,OAAO1O,WAAWhG,YAE5CuX,aAAc,QAEhB7C,OAAO1O,WAAWtC,QAAQnS,KAAK0iB,cAIjC7iB,KAAKkD,GAAamgB,YAAavlB,KAAKmL,IAAK,GAAI3I,OAAM,mBAAqB+lB,IAAU,KACjF/W,KAAOxR,KAAK8kB,aAAavM,MAAMwM,EAAMe,SAAW,GACjD9lB,KAAKwmB,mBAAmBzB,EAAMe,gBAC5B5jB,KAAKkD,GAAamgB,YAAavlB,KAAKmL,IAAK,GAAI3I,OAAM,+BAAiCuiB,EAAMe,WAAW,QAEvGN,OAAO1O,WAAWtC,QAAQnS,KAAK0iB,QAC/B7iB,KAAKkD,GAAa8f,sBAElBH,GAAMY,eAUV,iCACE,SAAkCnU,MACnC0F,GAAQlX,KAAKwlB,OAAO1O,cAEnBI,MAIDzC,GAAS,CAERyC,GAAMpG,SACHA,KAAO,GAAIkJ,QAEflJ,GAAOoG,EAAMpG,OAEZmY,qBAAuBzX,EAAK,KAC5B0X,qBAAuB1X,EAAK,KAC5B2X,qBAAuB3X,EAAK,KAC5B4X,mBAAqB5X,EAAK,GAAK,KAC/B6X,cAAmC,GAAR,EAAV7X,EAAK,OAEvB8X,GAAqB,GAAV9X,EAAK,KACX,MAIJ,GAHDhH,MAGK1J,EAAI,EAAGA,EAAIwoB,EAAUxoB,IAAK,IAC7ByP,GAAsB,IAAfiB,EAAKiD,GAAgBjD,EAAKiD,EAAS,MACpC,MAGL,GADDwF,GAAM,GAAItK,YAAWY,GAChBgZ,EAAI,EAAGA,EAAIhZ,EAAMgZ,MACpBA,GAAK/X,EAAKiD,EAAS8U,OAKpB,GADDC,GAAc,QACTC,EAAK,EAAGA,EAAK,EAAGA,IAAM,IACzBC,GAAIzP,EAAIwP,GAAIzZ,SAAS,GACrB0Z,GAAE/oB,OAAS,MACT,IAAM+oB,MAEGA,IAGZlS,MAAQgS,KAEHjZ,OACLiV,OAAO1O,WAAWhG,KAAKmJ,IAAMA,IACzB4F,GAAUqB,SAASjH,MAG1B0P,GAAWnY,EAAKiD,WAIf,GAAIxI,GAAK,EAAGA,EAAK0d,EAAU1d,IAAM,IAChC2d,GAAuB,IAAfpY,EAAKiD,GAAgBjD,EAAKiD,EAAS,MACrC,MAEL,GADDyF,GAAM,GAAIvK,YAAWia,GAChBC,EAAM,EAAGA,EAAMD,EAAOC,MACzBA,GAAOrY,EAAKiD,EAASoV,MAEjBD,OACLpE,OAAO1O,WAAWhG,KAAKoJ,IAAMA,SAG7BxU,OAAOoL,EAAM+O,GAAUiK,YAAYtf,OAGtCuf,GAAa/pB,KAAKoL,SAASjE,UAAUN,QAE9B2Q,MAAQ1G,EAAK0G,QACb4H,QAAUtO,EAAKsO,UACfC,MAAQvO,EAAKuO,QACbE,aAAezO,EAAKyO,eACpBE,UAAY3O,EAAK2O,YACjB3N,SAAWhB,EAAKgB,WAChBG,MAAQ8X,EAAW9X,QAAUnB,EAAKY,aAAeqY,EAAW9X,MAAQnB,EAAKY,eACzEQ,OAAS6X,EAAW7X,SAAWpB,EAAKa,cAAgBoY,EAAW9X,MAAQnB,EAAKa,gBAElFhL,SAAW3G,KAAKoL,SAASjE,UAAUR,SAAWmK,EAAKE,YACnDa,KAAO,GAAIlC,YAAW6B,EAAK7Q,UAC3BkR,KAAKqD,IAAI1D,KACRV,KAAOA,UAWV,+BACE,SAAgCkZ,UACR,KAAO,MAAO,KAAO,KAAO,MAAO,KAAO,KAAO,MAAO,KAAO,KAAO,MAAO,IAAM,MACnFA,UAW1B,sCACE,SAAuC5D,UAEf,KAAM,MAAO,MAAO,MAAO,OADnB,GAAPA,KAAe,UAa1C,4BACE,SAA6BA,UAER,EAAG,GADI,EAAPA,UAavB,2BACE,SAA4BN,MAC7BmE,GAAkBjqB,KAAK8kB,aAAac,MAAM,EAAG,eAC5Cd,aAAavM,MAAM,GACjB0R,IAAoBnE,EAAW,UAGnC,mBACA,cACCpW,GAAS1P,KAAKoL,SAASwL,YAAY,oBACnClH,QACKA,QAEFxN,KAAKkD,GAAamgB,YAAa,GAAI/iB,OAAM,+BAI7C,aACA,iBACIxC,MAAKoL,SAASwL,YAAY,iBAG9B,aACA,iBACI5W,MAAKoL,SAASwL,YAAY,mBAG9B,kBACE,SAAmBpF,WACH,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,IAAZA,EAAK,WASvE,oBACE,SAAqB0Y,MACtBC,cACQ,YACA,UAGK,EAAbD,MACKtjB,UAAW,IAGH,EAAbsjB,MACKpjB,UAAW,GAGbqjB,MAIJ3F,kNCxuBL4F,GAA4B,kBAAXC,SAAoD,WAA3BC,GAAOD,OAAOE,UAAwB,SAAU/jB,mBAAqBA,iBAAAA,IAAS,SAAUA,SAAcA,IAAyB,kBAAX6jB,SAAyB7jB,EAAI7B,cAAgB0lB,QAAU7jB,IAAQ6jB,OAAO7lB,UAAY,kBAAkBgC,iBAAAA,IAElQR,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAM5hByF,GAAgBkQ,GAAOlQ,cAMvBqlB,GAAc,mBACPA,GAAYC,KACHzqB,KAAMwqB,QAEjBC,QAAUhmB,OAAOiB,UAAW+kB,QAC5BC,IAAM,UACNC,OAAS,OACT7iB,MAAQ,UACR8iB,QAAU,UACVC,WAAY,OACZC,YAAa,OACbC,SAAW/qB,KAAKyqB,QAAQM,cACxBrb,OAAS1P,KAAKyqB,QAAQ/a,QAAU,qBAChCsb,cAAgB,YAGVR,QACN,aACE,gBACApiB,GAAGjD,GAAc8lB,YAAajrB,KAAKkrB,KAAKpgB,KAAK9K,cAG/C,aACE,SAAc0qB,EAAKS,MACpBxgB,GAAS3K,UAER0qB,IAAMA,OAENG,WAAY,KAGbO,GAASprB,KAAKqrB,UAAUF,eACvBG,SAAU,EACRC,MAAMvrB,KAAK0qB,IAAKU,GAAQI,KAAK,SAAUC,MACxCA,EAASC,YACJf,OAASc,EAASd,eACjBtE,UAAUmF,KAAK,aACdG,iBAAiBF,KAGnBG,QAAQvF,QAAQoF,KAElBH,SAAU,IACVppB,KAAKiD,GAAc0mB,aAAclhB,EAAOQ,IAAK,GAAI3I,OAAMipB,EAASd,OAAS,KAAOc,EAASK,WAAa,QAC5GC,MAAM,SAAUjkB,WACVwjB,SAAU,IACVppB,KAAKiD,GAAc0mB,aAAclhB,EAAOQ,IAAKrD,GAC9CA,WAIL,yBACE,SAA0B2jB,MAC3BxgB,GAAQjL,KACR0P,EAAS1P,KAAKoL,SAASwL,YAAY5W,KAAK0P,QAExCsc,SADChB,kBAEe,IAAhBS,EAASC,UACH1rB,KAAK+qB,cA7DL,KA+DKkB,OAAOT,KAAK,SAAUha,KACvB8Z,SAAU,EACXrgB,EAAM4f,WAAc5f,EAAM6f,aACzBpb,KACKrN,KAAKmP,KACNtP,KAAKiD,GAAc+mB,gBAAiBxc,MAEpCxN,KAAKiD,GAAc+mB,gBAAiB1a,gBAvE5C,KA6EK2a,OAAOX,KAAK,SAAUha,KACvB8Z,SAAU,EACXrgB,EAAM4f,WAAc5f,EAAM6f,aACzBpb,KACKrN,KAAKmP,KACNtP,KAAKiD,GAAc+mB,gBAAiBxc,MAEpCxN,KAAKiD,GAAc+mB,gBAAiB1a,gBAlF1C,KAwFG4a,cAAcZ,KAAK,SAAUha,KAC9B8Z,SAAU,EACXrgB,EAAM4f,WAAc5f,EAAM6f,aACzBpb,KACKrN,KAAK,GAAIsN,YAAW6B,MACrBtP,KAAKiD,GAAc+mB,gBAAiBxc,MAEpCxN,KAAKiD,GAAc+mB,gBAAiB1a,gBAlG1C,iBAyGCxR,MAAKqsB,UAAUZ,EAAS3K,KAAKwL,YAAaN,WAKpD,kBACE,SAAmBO,EAAQP,MAC5B1f,GAAStM,KAET0P,EAAS1P,KAAKoL,SAASwL,YAAY5W,KAAK0P,YACvCA,GAAU1P,KAAK4qB,SAAW5qB,KAAK8qB,oBAE3BF,QAAQ4B,SACb,MAAO3pB,SAKN+nB,QAAU2B,GACM,IAAjBvsB,KAAKsrB,cAMJV,SAAW5qB,KAAK4qB,QAAQ6B,OAAOjB,KAAK,SAAUkB,OAC7CpgB,EAAOue,YAAave,EAAOwe,iBAU3B4B,GAAIC,QACCrB,SAAU,IACVX,OAAS,eACRtE,UAAUmF,KAAK,aACdtpB,KAAKiD,GAAc+mB,gBAAiBxc,SAKxCrN,KAAKqqB,EAAI9nB,eACRyhB,UAAUmF,KAAK,aACdtpB,KAAKiD,GAAcynB,kBAAmBld,KAExCpD,EAAO+f,UAAUE,EAAQP,OAtB1B1f,EAAOse,cAEAA,QAAQ4B,SACf,MAAO3pB,OAoBZkpB,MAAM,SAAUjkB,WACVwjB,SAAU,IACVppB,KAAKiD,GAAc0mB,aAAcvf,EAAOnB,IAAKrD,GAC9CA,WAIL,kBACE,SAAmBqjB,MACpB1S,GAAUhU,OAAOiB,UAAWylB,GAC5B0B,EAAU,GAAIC,SAEd1B,UACM,cACCyB,OACH,aACC,UAIP,IAAsC,WAAlCzC,GAAQpqB,KAAKyqB,QAAQoC,SAAuB,IAC5CE,GAAgB/sB,KAAKyqB,QAAQoC,YAC5B,GAAIhnB,KAAOknB,GACVA,EAAcjnB,eAAeD,MACvBmnB,OAAOnnB,EAAKknB,EAAclnB,OAKP,WAA7BukB,GAAQ3R,EAAQoU,SAAuB,IACrCI,GAAaxU,EAAQoU,YACpB,GAAI9mB,KAAQknB,GACXA,EAAWnnB,eAAeC,MACpBinB,OAAOjnB,EAAMknB,EAAWlnB,WAKjB,IAAjB0S,EAAQyU,SACHC,KAAO,eAKZ1U,EAAQ2U,oBACHC,YAAc,WAIhBjC,SAGJ,eACE,cACDprB,KAAK4qB,QAAS,UAETA,QAAQ4B,SACb,MAAO3pB,SAGJ+nB,QAAU,UACVU,SAAU,OAEZT,WAAY,SAGd,gBACE,gBACAC,YAAa,OACb0B,kBAGF,WACA,iBACI,aAIJhC,KClPLxkB,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAI5hB4tB,GAAS,QAASA,OACJttB,KAAMstB,QAEjB/V,SAAW,QACXzX,KAAO,UACP0R,SAGH+b,GAAY,mBACLA,OACSvtB,KAAMutB,QAEjBC,qBAGMD,QACN,kBACE,SAAmBnW,SACjBpX,MAAKwtB,QAAQpW,UAGjB,qBACE,SAAsB3U,eACtB+qB,QAAQ/qB,GAAQ,GAAI6qB,IAClBttB,KAAKwtB,QAAQ/qB,UAGjB,cACE,gBACA+qB,kBAGF,gBACE,gBACAA,eAIFD,KC1CLvnB,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAI5hB+tB,GAAW,mBAOJA,GAAS9sB,KACAX,KAAMytB,QAEjB9sB,OAASA,GAAU,OACnB+sB,WAAa/sB,GAAU,OACvBgtB,cACAlZ,OAAS,YAUHgZ,QACN,aACE,SAAcjc,QACdmc,MAAMtrB,KAAKmP,QACX7Q,QAAU6Q,EAAKF,gBACfoc,YAAclc,EAAKF,kBAUrB,cACE,SAAe3Q,MAChBX,KAAK2tB,MAAMhtB,OAAS,QACf,IAAIgP,YAAW,UAGTxP,KAAXQ,QACKX,MAAK4tB,kBAEV5tB,KAAKyU,OAAS9T,IAAWX,KAAK2tB,MAAM,GAAGhtB,OAAQ,IAC7CktB,GAAO7tB,KAAK2tB,MAAM,GAAGhN,MAAM3gB,KAAKyU,OAAQzU,KAAKyU,OAAS9T,eACrD8T,OAAS,OACTkZ,MAAMpV,aACN5X,QAAUA,EACRktB,KAGL7tB,KAAKyU,OAAS9T,EAASX,KAAK2tB,MAAM,GAAGhtB,OAAQ,IAC3CmtB,GAAQ9tB,KAAK2tB,MAAM,GAAGhN,MAAM3gB,KAAKyU,OAAQzU,KAAKyU,OAAS9T,eACtD8T,QAAU9T,OACVA,QAAUA,EACRmtB,SAGL5pB,GAAM,GAAIyL,YAAWhP,GACrBotB,EAAS,EACN/tB,KAAK2tB,MAAMhtB,OAAS,GAAKA,EAAS,GAAG,IACtCX,KAAKyU,OAAS9T,EAASX,KAAK2tB,MAAM,GAAGhtB,OAAQ,IAC3CqtB,GAAMhuB,KAAK2tB,MAAM,GAAGhN,MAAM3gB,KAAKyU,OAAQzU,KAAKyU,OAAS9T,KACrDuU,IAAI8Y,EAAKD,QACRtZ,QAAU9T,OACVA,QAAUA,IACN,WAILstB,GAAajuB,KAAK2tB,MAAM,GAAGhtB,OAASX,KAAKyU,SACzCS,IAAIlV,KAAK2tB,MAAM,GAAGhN,MAAM3gB,KAAKyU,OAAQzU,KAAK2tB,MAAM,GAAGhtB,QAASotB,QAC3DJ,MAAMpV,aACN9D,OAAS,KACJwZ,OACLttB,QAAUstB,KACLA,QAGP/pB,UAQJ,cACE,gBACAypB,cACAhtB,OAAS,OACT8T,OAAS,SAGX,gBACE,gBACAiC,aACAgX,WAAa,SAQf,qBACE,uBACA/sB,QAAUX,KAAK2tB,MAAM,GAAGhtB,YACxB8T,OAAS,EACPzU,KAAK2tB,MAAMpV,eAWf,cACE,SAAegI,EAAO5f,UACvButB,GAAS,EACTptB,EAAId,KAAKyU,OAAS8L,EACfzf,EAAId,KAAKyU,OAAS9T,EAAS4f,GAC5Bzf,EAAId,KAAK2tB,MAAM,GAAGhtB,SACF,IAATutB,EAAeluB,KAAK2tB,MAAM,GAAG7sB,GAC7Bd,KAAK2tB,MAAM,OACF,IAATO,EAAeluB,KAAK2tB,MAAM,GAAG7sB,EAAId,KAAK2tB,MAAM,GAAGhtB,mBAKrDutB,OAIJT,KCjJLznB,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAI5hByuB,GAAM,mBACCA,OACSnuB,KAAMmuB,aAGXA,EAAK,WACX,uBACE,SAAwB3W,EAAOzF,MACtB,cAAVyF,EAAuB,IAEJ,IAAjBzF,QACK,IAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,KAChD,IAAqB,IAAjBoC,QACF,IAAIpC,aAAY,GAAM,EAAM,GAAM,IAAM,EAAM,GAAM,EAAM,GAAM,KAClE,IAAqB,IAAjBoC,QACF,IAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,KAC1F,IAAqB,IAAjBoC,QACF,IAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,EAAM,IACxH,IAAqB,IAAjBoC,QACF,IAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,IAC1I,IAAqB,IAAjBoC,QACF,IAAIpC,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,EAAM,IAAM,EAAM,GAAM,EAAM,UAE1K,IAEgB,IAAjBoC,QAEK,IAAIpC,aAAY,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IACvW,IAAqB,IAAjBoC,QAEF,IAAIpC,aAAY,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IACrW,IAAqB,IAAjBoC,QAEF,IAAIpC,aAAY,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,WAGvW,UAIJwe,KC5CLnoB,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAO5hB2F,GAAegQ,GAAOhQ,aAEtB+oB,GAAgB,mBACTA,OACSpuB,KAAMouB,QAEjBC,aAAe,OACfC,aAAe,OAEfC,oBAAsB,OACtBC,oBAAsB,OAEtBC,iBAAetuB,QACfuuB,iBAAevuB,QAEfwuB,qBAAuB,OACvBC,qBAAuB,OAEvBC,kBAAoB,UACpBC,kBAAoB,UAEpBC,2BACAC,2BAEAC,gBAAkB,UAClBC,gBAAkB,UAElBC,eAAiB,OACjBC,eAAiB,YAGXhB,QACN,aACE,gBACAiB,OAAOhqB,GAAa6Q,YAAalW,KAAKsvB,MAAMxkB,KAAK9K,cAGnD,cACE,gBACAquB,aAAe,UACfC,aAAe,UAEfC,oBAAsB,OACtBC,oBAAsB,OAEtBC,iBAAetuB,QACfuuB,iBAAevuB,QASf8uB,gBAAkB,UAClBC,gBAAkB,UAElBH,2BACAC,6BAGF,cACE,cACDO,GAAkBvvB,KAAKwvB,iBACvBC,EAAsBF,EAAgBE,oBACtCC,EAAsBH,EAAgBG,yBAErCC,qBAED3vB,KAAK8uB,wBACFc,qBAAqB5vB,KAAK8W,WAAWhG,KAAM9Q,KAAK8W,WAAWtC,SAE9DxU,KAAK6uB,wBACFe,qBAAqB5vB,KAAK6W,WAAW/F,KAAM9Q,KAAK6W,WAAWrC,YAG9Dqb,GAAwBzB,EAAc0B,mBAAmB9vB,KAAK8W,WAAWtC,SACzEub,EAAeF,EAAsBG,QACrCC,EAAkBJ,EAAsBK,UAExCH,KAAiBN,OACdU,qBAAqBF,QAErBG,WAAWV,MAGdW,GAAyBjC,EAAc0B,mBAAmB9vB,KAAK6W,WAAWrC,SAC1E8b,EAAeD,EAAuBL,QACtCO,EAAkBF,EAAuBH,UAEzCI,QACGE,qBAAqBD,QAErBE,WAAWhB,QAGbiB,8BAGF,mBACE,SAAoBC,EAAOC,OAO3B,GANDC,GAAc7wB,KAAK8W,WACnBga,EAAeD,EAAYrc,QAC3B1D,EAAO+f,EAAY/f,KAIdhQ,EAAI,EAAGJ,EAAMowB,EAAanwB,OAAQG,EAAIJ,EAAKI,IAAK,IACnDyY,GAASuX,EAAahwB,KACnB8N,UAAY2K,EAAOzB,SAGxBhH,EAAK2O,YAAsC,IAAzB3O,EAAK2O,UAAUuH,QAIhC8J,GAAiBA,EAAanwB,QAAWX,KAAK8uB,sBAM/CiC,GAAcD,EAAa,MAGH,IAAxB9wB,KAAKmvB,kBACO6B,cAAcF,EAAc9wB,KAAKmvB,gBAG7C4B,EAAYjZ,MAAQ9X,KAAK8uB,kBAAkBhX,MAAQ8Y,GAAqB5wB,KAAKivB,iBAAmBb,EAAc6C,eAAejxB,KAAKivB,gBAAgBnX,IAAKiZ,WAElJzC,aADHsC,GAGkB5wB,KAAKivB,gBAAgBnX,SAGtCqX,eAAiBnvB,KAAKsuB,aAAeyC,EAAYjZ,MACxCkZ,cAAcF,EAAc9wB,KAAKmvB,iBAI7CwB,GAAS3wB,KAAK6uB,kBAAmB,IAC/BqC,GAAgBlxB,KAAK8uB,kBAAkBlgB,UAEvCuiB,EAAMD,GADUlxB,KAAK6uB,kBAAkBjgB,WAAa5O,KAAK6uB,kBAAkB/W,QAE3EqZ,EAAM,EAAIrgB,EAAKiI,mBAAqBoY,EAAM,GAAKrgB,EAAKiI,kBAAmB,KAGpE,GAFDqY,GAAYviB,KAAKC,MAAMqiB,EAAMrgB,EAAKiI,mBAE7B9M,EAAK,EAAGA,EAAKmlB,EAAWnlB,IAAM,IACjColB,GAAoB5sB,OAAOiB,UAAWqrB,KAExBjZ,IAAMoZ,GAAiBjlB,EAAK,GAAK6E,EAAKiI,oBACtCJ,IAAM0Y,EAAkBvZ,IAAMuZ,EAAkBrc,MAErD5S,QAAQivB,QAEhBrC,mBAAmB3sB,UACjBgvB,EAAkBvZ,SACjBuZ,EAAkB7f,KAAKF,kBAG5Bwd,kBAAoB9uB,KAAKgvB,mBAAmB,IAAMhvB,KAAK8uB,sBACnDqC,IAAO,EAAIrgB,EAAKiI,yBACpBoW,gBAAkB,EAAIgC,IACbH,cAAcF,GAAe,EAAIK,OAI/CG,GAAgBR,EAAajtB,SAC7BitB,EAAanwB,WACFmwB,EAAanwB,OAAS,GAAGgG,SAAW2qB,EAAcxZ,IAAMgZ,EAAaA,EAAanwB,OAAS,GAAGmX,KAGzG9X,KAAKivB,gBAAiB,IACpBA,GAAkBjvB,KAAKivB,kBACXtoB,SAAWoqB,EAAYjZ,IAAMmX,EAAgBnX,MAChD1V,QAAQpC,KAAKivB,sBAGvBA,gBAAkBqC,OAElBxa,WAAWtC,QAAUsc,UAGvB,mBACE,SAAoBH,EAAOC,MAC5BW,GAAcvxB,KAAK6W,WACnB2a,EAAeD,EAAY/c,QAC3B1D,EAAOygB,EAAYzgB,QAGlB0gB,GAAiBA,EAAa7wB,YAK9B,GAAIG,GAAI,EAAGJ,EAAM8wB,EAAa7wB,OAAQG,EAAIJ,EAAKI,IAAK,IACnDyY,GAASiY,EAAa1wB,KACnB8N,UAAY2K,EAAOzB,OAKxB2Z,GAAaD,EAAa7wB,OAC1B+wB,EAAcvD,GAAIxU,eAAe7I,EAAK0G,MAAO1G,EAAKiB,cAElDgf,EAAc/wB,KAAK6uB,kBAEnB8C,EAAeH,EAAa,MAGJ,IAAxBxxB,KAAKovB,kBACO4B,cAAcQ,EAAcxxB,KAAKovB,gBAG7CuC,EAAa7Z,MAAQ9X,KAAK6uB,kBAAkB/W,MAAQ8Y,GAAqBxC,EAAc6C,eAAejxB,KAAKquB,aAAcsD,MACvHf,SACGvC,aAAeuC,QAEjBxB,eAAiBpvB,KAAKquB,aAAesD,EAAa7Z,MACzCkZ,cAAcQ,EAAcxxB,KAAKovB,iBAG7CpvB,KAAK8uB,mBAAqB6B,EAAO,IAC/BiB,GAAgB5xB,KAAK8uB,kBAAkBlgB,WAAa5O,KAAK8uB,kBAAkBhX,IAC3E+Z,EAAOd,EAAYjZ,IAAM8Z,KACzBC,EAAO/gB,EAAKiI,mBAAqB8Y,EAAO,GAAK/gB,EAAKiI,kBAAmB,KAGlE,GAFD+Y,GAAoBjjB,KAAKC,OAAOiiB,EAAYjZ,IAAM8Z,GAAiB9gB,EAAKiI,mBAEnEgZ,EAAM,EAAGA,EAAMD,EAAmBC,IAAO,IAC5CC,SACIN,WACIA,EAAYpgB,eACjByf,EAAYjZ,KAAOia,EAAM,GAAKjhB,EAAKiI,2BAC9B,KAGC3W,QAAQ4vB,QAEhBjD,mBAAmB1sB,UACjB2vB,EAAala,SACZka,EAAaxgB,KAAKF,kBAGvBud,kBAAoB7uB,KAAK+uB,mBAAmB,IAAM/uB,KAAK6uB,sBACnDgD,IAAQ,EAAI/gB,EAAKiI,yBACrBqW,gBAAkB,EAAIyC,IACbb,cAAcQ,GAAe,EAAIK,OAI/CV,OAAM,GACNhZ,EAAWqZ,EAAa,GAAG1Z,OAE3B9X,KAAKquB,aAAc,GAGflW,EAAWnY,KAAKquB,gBAClB4D,GAASpjB,KAAKqjB,IAAIf,MAElBc,EAASnhB,EAAKiI,mBAAoC,IAAf0Y,GAAiD,IAA7BzxB,KAAKuuB,wBACzD9U,2BAAyBtZ,IAG5BgxB,EAAM,EAAIrgB,EAAKiI,mBAAqBoY,EAAM,GAAKrgB,EAAKiI,qBACnC,IAAf0Y,GAAiD,IAA7BzxB,KAAKuuB,sBAEtB9U,2BAAyDtZ,KAAhC2Q,EAAK2I,uBAAuC3I,EAAK2I,uBAAyB0X,EAAMrgB,EAAKiI,kBAAoBoY,WAIlI,GAFDgB,GAAmBtjB,KAAKC,MAAMqiB,EAAMrgB,EAAKiI,mBAEpCqZ,EAAM,EAAGA,EAAMD,EAAkBC,IAAO,IAC3CC,GAAWla,GAAYia,EAAM,GAAKthB,EAAKiI,kBACvCuZ,EAAgB7tB,OAAOiB,UAAW8rB,EAAa,QAC5Ca,EAAWryB,KAAKquB,aAAegE,EAAWryB,KAAKquB,oBAGjDU,mBAAmB1sB,UACjBiwB,EAAcxa,SACbwa,EAAc9gB,KAAKF,kBAEtBuF,WAAWrC,QAAQpS,QAAQkwB,OAG3BL,IAAUnhB,EAAKiI,mBAAqBkZ,EAAS,KAGzC,GAAGna,IAAM9X,KAAKquB,eACd,GAAG1V,IAAM3Y,KAAKquB,cAClB8C,EAAM,KACDH,cAAcQ,GAAe,EAAIL,MAG/CoB,GAAgBf,EAAaA,EAAa7wB,OAAS,GAAGiO,UACtD4jB,EAAUhB,EAAaA,EAAa7wB,OAAS,GAAGmX,IAChD2a,EAAqBjB,EAAa7wB,QAAU,EAAI4xB,EAAgBf,EAAaA,EAAa7wB,OAAS,GAAGiO,UAAYkC,EAAKiI,uBAEtHwV,oBAAsBkD,OACtBpD,aAAevd,EAAK2I,uBAAyB+Y,EAAU1hB,EAAK2I,uBAAyB+Y,EAAUC,OAC/F/D,aAAe8D,IAEPhB,EAAa7wB,OAAS,GAAGgG,SAAW8rB,MAG5C,GAAIC,GAAM,EAAGxoB,EAAOsnB,EAAa7wB,OAAQ+xB,EAAMxoB,EAAMwoB,IAAO,IAC3DC,GAAUnB,EAAakB,GACvBE,EAAOpB,EAAakB,EAAM,OAEzBE,WAIDjsB,GAAWisB,EAAK9a,IAAM6a,EAAQ7a,MACrB4a,GAAK/rB,SAAWA,OAyB1BkQ,WAAWrC,QAAU4Z,EAAcyE,iBAAiBrB,WAGtD,6BACE,SAA8BsB,MAC/BC,GAAe/yB,KAAK8W,WACpBtC,EAAUue,EAAave,QACvB1D,EAAOiiB,EAAajiB,KAEpBkiB,EAAwB,IAAdF,EAAkB9yB,KAAKivB,gBAAkBjvB,KAAKivB,gBAAgBnX,IAAM9X,KAAKizB,qBAAqBze,EAAQ,IAAMA,EAAQse,EAAY,GAAGhb,IAC7Iob,EAAS1e,EAAQse,GAAWhb,OACfjJ,KAAKqjB,IAAIc,EAAUE,IAAW,UAGxC1e,GAAQse,GAAWra,UAKdqa,GAAWra,QAAQC,YAAa,IAJhCoa,GAAWra,qBACL,GAKTzY,KAAKowB,YAAW,QAGpBluB,KAAKmD,GAAa8tB,uCAClBhE,eAAiB,KAClBiE,GAAmB5e,EAAQmM,MAAM,EAAGmS,GACpCO,EAAoB7e,EAAQmM,MAAMmS,GAClC/B,EAAcvc,EAAQ,GAEtBoc,MAAoB,EAEpBG,GAAYtY,SAAWsY,EAAYtY,QAAQ8H,QACzBwQ,EAAYtY,SAAWsY,EAAYtY,QAAQ8H,MAAQwQ,EAAYtY,QAAQ8H,MAAQ,KAC1FvgB,KAAKivB,oBACMjvB,KAAKivB,gBAAgBnX,IAAM9X,KAAKszB,QAAUxiB,EAAKiI,wBAGhEjC,WAAWtC,QAAUA,EAAQmM,MAAM,EAAGmS,QAEtC1C,YAAW,QAEXtZ,WAAWtC,QAAUA,EAAQmM,MAAMmS,QAEnC1C,YAAW,EAAOQ,QAElB9Z,WAAWtC,QAAU4e,EAAiB1nB,OAAO2nB,UAG/C,6BACE,SAA8BP,MAC/BS,GAAevzB,KAAK6W,WACpBrC,EAAU+e,EAAa/e,QACvB1D,EAAOyiB,EAAaziB,KAGpBkiB,EAAwB,IAAdF,EAAkB9yB,KAAKizB,qBAAqBze,EAAQ,IAAMA,EAAQse,EAAY,GAAGhb,IAC3Fob,EAAS1e,EAAQse,GAAWhb,OACfjJ,KAAKqjB,IAAIc,EAAUE,IAAW,UAGxC1e,GAAQse,GAAWra,UAKdqa,GAAWra,QAAQC,YAAa,IAJhCoa,GAAWra,qBACL,GAKTzY,KAAKywB,YAAW,QAEpBvuB,KAAKmD,GAAa8tB,uCAClB/D,eAAiB,KAElBgE,GAAmB5e,EAAQmM,MAAM,EAAGmS,GACpCO,EAAoB7e,EAAQmM,MAAMmS,GAClC/B,EAAcvc,EAAQ,GAEtBoc,MAAoB,KACpBG,EAAYtY,SAAWsY,EAAYtY,QAAQ8H,MACzBwQ,EAAYtY,SAAWsY,EAAYtY,QAAQ8H,MAAQwQ,EAAYtY,QAAQ8H,MAAQ,KAE/EvgB,KAAK0uB,aAAe1uB,KAAKszB,QAAUxiB,EAAKiI,uBAGzDlC,WAAWrC,QAAU4e,OAErB3C,YAAW,QAEX5Z,WAAWrC,QAAU6e,OAErB5C,YAAW,EAAOG,QAElB/Z,WAAWrC,QAAU4e,EAAiB1nB,OAAO2nB,UAG/C,uBACE,cAEDvC,GAAe9wB,KAAK8W,WAAWtC,QAC/Bgd,EAAexxB,KAAK6W,WAAWrC,QAG/Bkb,GAAsB,EACtBD,GAAsB,SAErBzvB,KAAK8uB,mBAAqBgC,EAAanwB,cACrCmuB,kBAAoBV,EAAcoF,qBAAqB1C,QACvDJ,0BACiB,IAGnB1wB,KAAK6uB,mBAAqB2C,EAAa7wB,cACrCkuB,kBAAoBT,EAAcqF,qBAAqBjC,QACvDd,0BACiB,wBAIDhB,sBACAD,UASpB,6BACE,SAA8B3e,EAAM0D,MACrCkf,GAAwB,UAAd5iB,EAAKpP,KACfiyB,EAAkBD,EAAU1zB,KAAK4uB,qBAAuB5uB,KAAK2uB,qBAC7DxW,EAAWub,EAAU1zB,KAAK8uB,kBAAkBhX,IAAM9X,KAAK6uB,kBAAkB/W,IACzE8b,EAAqBF,EAAU1zB,KAAKgvB,mBAAmBruB,OAASX,KAAK+uB,mBAAmBpuB,WAEvFmQ,EAAKiI,mBAAqBjI,EAAKiI,mBAAqB,GAAK0P,OAAO/gB,MAAMoJ,EAAKiI,uBAC1EvE,EAAQ7T,QAAU,EAAG,IACnB6xB,GAAUhe,EAAQA,EAAQ7T,OAAS,GAAGmX,MAErCiB,kBAAoBlK,KAAKC,OAAO0jB,EAAUra,IAAawb,EAAkBC,EAAqB,SAEhG,IAAI9iB,EAAKiI,mBACVvE,EAAQ7T,QAAU,EAAG,IAGnBkzB,IAFWrf,EAAQA,EAAQ7T,OAAS,GAAGmX,IAC3BtD,EAAQ,GAAGsD,MACiBtD,EAAQ7T,OAAS,EACzDkzB,GAAc,GAAKA,EAAc,QAC9B9a,kBAAoBlK,KAAKC,MAAMD,KAAKqjB,IAAIphB,EAAKiI,kBAAoB8a,IAAgB,EAAI/iB,EAAKiI,kBAAoB8a,YAWtH,2BACE,cACDhd,GAAa7W,KAAK6W,WAClBC,EAAa9W,KAAK8W,gBAGjB6X,sBAAwB9X,EAAWrC,QAAQ7T,YAC3CiuB,sBAAwB9X,EAAWtC,QAAQ7T,cAQ7C,6BACE,cACDmzB,GAAmB9zB,KAAK6W,WAAWrC,QAAQ,GAC3Cuf,EAAmB/zB,KAAK8W,WAAWtC,QAAQ,EAG3Csf,UACGjd,WAAWrC,QAAUxU,KAAK6W,WAAWrC,QAAQ7G,OAAO,SAAU4L,EAAQ7V,SACrE6V,KAAWua,GAGRva,EAAOzB,IAAMgc,EAAiBhc,OAIrCic,SACGjd,WAAWtC,QAAUxU,KAAK8W,WAAWtC,QAAQ7G,OAAO,SAAU4L,EAAQ7V,SACrE6V,KAAWwa,GAGRxa,EAAOzB,IAAMic,EAAiBjc,cAKtC,6BACE,SAA8ByB,SAC/BA,GAAOd,SAAWc,EAAOd,QAAQ8H,MAC5BhH,EAAOd,QAAQ8H,MAAQvgB,KAAKszB,QAE9Btb,EAAAA,SAGJ,aACA,iBACIhY,MAAKoL,SAASwL,YAAY,iBAG9B,iBACA,iBACC5W,MAAKwlB,QAAUxlB,KAAKwlB,OAAO3O,WACtB7W,KAAKwlB,OAAO3O,uCAQlB,iBACA,iBACC7W,MAAKwlB,QAAUxlB,KAAKwlB,OAAO1O,WACtB9W,KAAKwlB,OAAO1O,uCAQlB,cACA,cACCkd,GAAUh0B,KAAKoL,SAASwL,YAAY,qBACpCod,GACKA,EAAQxe,SAEV,WAGJ,yBACE,SAA0BhB,SACR,KAAnBA,EAAQ7T,OACH6T,EAGFA,EAAQyf,KAAK,SAAU9pB,EAAGC,SACxBD,GAAE2N,IAAM1N,EAAE0N,aAUhB,6BACE,SAA8BtD,SAC9BA,IAA8B,IAAnBA,EAAQ7T,OAIjBytB,EAAcyE,iBAAiBre,GAAS,GAHtC,YAMN,6BACE,SAA8BA,OAC9BA,EAAQ7T,aACJ,UAOJ,GAJDuzB,GAAS1f,EAAQyf,KAAK,SAAU9pB,EAAGC,SAC9BD,GAAE2N,IAAM1N,EAAE0N,MAGVhX,EAAI,EAAGJ,EAAMwzB,EAAOvzB,OAAQG,EAAIJ,EAAKI,OACxCozB,EAAOpzB,GAAG0X,iBACL0b,GAAOpzB,UAKf,uBACE,SAAwBqzB,EAASpD,MACtB,OAAZoD,MAGAjB,GAASnC,EAAYjZ,KAAO,EAC5Bsc,EAAQD,EAAUjB,GAAU,KAAQA,EAASiB,GAAW,IACxDE,EAAQtD,EAAYtY,SAAWsY,EAAYtY,QAAQ6b,kBAEhDF,IAASC,UAGb,sBACE,SAAuB7f,EAAS2c,OAEhC,GAAIrwB,GAAI,EAAGJ,EAAM8T,EAAQ7T,OAAQG,EAAIJ,EAAKI,IAAK,IAC9CyY,GAAS/E,EAAQ1T,KACdgX,KAAOqZ,EACV5X,EAAOZ,QACFA,KAAOwY,WAUf,2BACE,SAA4B3c,OAG5B,GAFDwb,IAAU,EACVE,GAAc,EACTpvB,EAAI,EAAGJ,EAAM8T,EAAQ7T,OAAQG,EAAIJ,EAAKI,OACzC0T,EAAQ1T,GAAG2X,SAAWjE,EAAQ1T,GAAG2X,QAAQ3H,KAAM,IACvC,IACGhQ,uBAMNkvB,aACGE,OAKX9B,KCvqBLpoB,GAAe,mBAAuBC,GAAiBxE,EAAQyE,OAAc,GAAIpF,GAAI,EAAGA,EAAIoF,EAAMvF,OAAQG,IAAK,IAAMqF,GAAaD,EAAMpF,EAAIqF,GAAWtB,WAAasB,EAAWtB,aAAc,EAAOsB,EAAWpB,cAAe,EAAU,SAAWoB,KAAYA,EAAWrB,UAAW,GAAML,OAAO2B,eAAe3E,EAAQ0E,EAAWN,IAAKM,IAAiB,MAAO,UAAUzG,EAAa2G,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiBvG,EAAY8E,UAAW6B,GAAiBC,GAAaL,EAAiBvG,EAAa4G,GAAqB5G,MAI5hB60B,GAAM,mBACCA,GAAI9J,EAASziB,KACJhI,KAAMu0B,GAElBvsB,SACGoD,SAAWpD,OACX9F,KAAO8F,EAAQ2B,SAASzH,KAAK4I,KAAK9C,EAAQ2B,gBAG5C8gB,QAAUhmB,OAAOiB,UAAW+kB,QAC5B+J,UAAYx0B,KAAKyqB,QAAQ+J,eACzBC,YAAc,UACdC,sBACAC,YAAc30B,KAAKyqB,QAAQkK,aAAe,OAC1CC,aAAe50B,KAAK40B,aAAa9pB,KAAK9K,WACtC60B,aAAe70B,KAAK60B,aAAa/pB,KAAK9K,WACtC80B,YAAc90B,KAAK80B,YAAYhqB,KAAK9K,WACpC+0B,UAAY/0B,KAAK+0B,UAAUjqB,KAAK9K,gBAG1Bu0B,QACN,aACE,gBAEAE,YAAc,GAAIh0B,MAAKu0B,iBACvBP,YAAYQ,iBAAiB,aAAcj1B,KAAK40B,mBAChDJ,UAAU/Y,IAAMyZ,IAAIC,gBAAgBn1B,KAAKy0B,kBACzC/J,IAAM1qB,KAAKw0B,UAAU/Y,SACrB+Y,UAAUS,iBAAiB,aAAcj1B,KAAK60B,mBAC9CL,UAAUS,iBAAiB,UAAWj1B,KAAK+0B,kBAG7C,qBACE,SAAsBK,QACtBhqB,SAAWgqB,SAGb,qBACE,gBACAlzB,KAAK,cAAelC,KAAKw0B,kBAG3B,kBACE,gBACAtyB,KAAK,UAAWlC,KAAKw0B,kBAGvB,qBACE,gBACAa,0BAGF,oBACE,gBACAnzB,KAAK,0BACLozB,kBAGF,yBACE,cAC+B,SAAhCt1B,KAAKy0B,YAAYc,eAGjB/H,GAAUxtB,KAAKoL,SAASwL,YAAY,qBACpC4O,EAASxlB,KAAKoL,SAASwL,YAAY,UACnCM,MAAQ,KAEFsW,EAAQA,YAEb,GADDgI,IAAM,EACD10B,EAAI,EAAG6C,EAAIc,OAAOkE,KAAK6kB,GAAS7sB,OAAQG,EAAI6C,EAAG7C,IAAK,IACvDY,GAAO+C,OAAOkE,KAAK6kB,GAAS1sB,MACnB,UAATY,IACM8jB,EAAO3O,WACG,UAATnV,MACD8jB,EAAO1O,YAGbI,EAAO,IACLue,GAAe,UAAT/zB,EAAmB,GAAK,EAC9BwV,GAAMpG,MAAQoG,EAAMpG,KAAKiI,oBAAmB0c,EAAMve,EAAMpG,KAAKiI,mBAC7DyU,EAAQ9rB,GAAM8P,KAAK7Q,QAAUX,KAAK20B,YAAcc,OAC5C,OAKRD,EAAK,IACH/wB,OAAOkE,KAAK3I,KAAK00B,eAAe/zB,OAAS,aAGxC,GAAIsL,GAAK,EAAGypB,EAAKjxB,OAAOkE,KAAK6kB,GAAS7sB,OAAQsL,EAAKypB,EAAIzpB,IAAM,IAC5DkC,GAAQ1J,OAAOkE,KAAK6kB,GAASvhB,GAC7BmL,EAASoW,EAAQrf,GACjBwnB,EAAiB,UAAVxnB,EAAoB,oBAAsBiJ,EAAOG,SAAW,oBAAsBH,EAAOG,SAChGqe,EAAe51B,KAAKy0B,YAAYoB,gBAAgBF,QAC/CjB,cAAcvmB,GAASynB,IACfX,iBAAiB,YAAaj1B,KAAK80B,kBAC3CQ,qBAKN,iBACE,cACD9H,GAAUxtB,KAAKoL,SAASwL,YAAY,wBACpC4W,MACG,GAAI1sB,GAAI,EAAGA,EAAI2D,OAAOkE,KAAK3I,KAAK00B,eAAe/zB,OAAQG,IAAK,IAC3DY,GAAO+C,OAAOkE,KAAK3I,KAAK00B,eAAe5zB,GACvC80B,EAAe51B,KAAK00B,cAAchzB,GAClC0V,EAASoW,EAAQA,QAAQ9rB,MACzB0V,IAAWA,EAAO0e,aAGLC,aAAa3e,EAAOtX,KAAK4P,OAAOA,UACtComB,QAAS,EAChB,MAAOjzB,QAGJ,IAAIuU,EAAQ,IACb5F,GAAO4F,EAAO5F,KAAK+G,WACnB/G,QAEaukB,aAAavkB,EAAK9B,OAAOA,QACtC,MAAO7M,KACA2O,KAAKpP,QAAQoP,aAQ3B,oBACE,cACDwkB,GAAeh2B,KAAKy0B,YACpBc,EAAaS,EAAaT,WAC1BU,EAAsBD,EAAaC,uBAEpB,SAAfV,GAAwD,IAA/BU,EAAoBt1B,gBAExC8zB,YAAYyB,cACjB,MAAOrzB,YAMR,eACE,SAAgB4d,OAGhB,GAFDF,GAAQld,UAAU1C,OAAS,OAAsBR,KAAjBkD,UAAU,GAAmBA,UAAU,GAAK,EAEvEvC,EAAI,EAAGA,EAAI2D,OAAOkE,KAAK3I,KAAK00B,eAAe/zB,OAAQG,IAAK,IAC3D4O,GAAS1P,KAAK00B,cAAcjwB,OAAOkE,KAAK3I,KAAK00B,eAAe5zB,GAC3D4O,GAAOymB,YAEHC,OAAO7V,EAAOE,WAKtB,sBACE,eAgDA,GA/CDxV,GAAQjL,KAERq2B,KA6CKv1B,EAAI,EAAGA,EAAI2D,OAAOkE,KAAK3I,KAAK00B,eAAe/zB,OAAQG,KA3ChD,SAAeA,MACrB4O,GAASzE,EAAMypB,cAAcjwB,OAAOkE,KAAKsC,EAAMypB,eAAe5zB,MAC3Dw1B,oBAAoB,YAAarrB,EAAM6pB,gBAE1CyB,OAAO,KACP7mB,EAAOymB,SACF,GAAIvK,SAAQ,SAAUvF,MACvBmQ,GAAgB,QAASA,QACvBC,GAAY,EAEZC,EAAQ,QAASA,KACdhnB,EAAOymB,SAKDM,EAAY,cACVC,EAAO,iBALdC,YAAYjnB,KACTulB,iBAAiB,YAAa,8BAW9ByB,EAAO,OACXJ,oBAAoB,YAAaE,MAEnCvB,iBAAiB,YAAauB,KAGhC,GAAI5K,SAAQ,SAAUvF,KACvBsQ,YAAYjnB,KACTulB,iBAAiB,YAAa,qBAQhC5yB,KAAKk0B,IAIRz1B,SAGD8qB,SAAQgL,IAAIP,UAGhB,gBACE,cACD1rB,GAAS3K,WAENA,MAAK62B,gBAAgBrL,KAAK,eAC1B,GAAI1qB,GAAI,EAAGA,EAAI2D,OAAOkE,KAAKgC,EAAO+pB,eAAe/zB,OAAQG,IAAK,IAC7DuZ,GAAU1P,EAAO+pB,cAAcjwB,OAAOkE,KAAKgC,EAAO+pB,eAAe5zB,MAC9D2zB,YAAYqC,mBAAmBzc,SAC/B1P,GAAO+pB,cAAcjwB,OAAOkE,KAAKgC,EAAO+pB,eAAe5zB,MAGzD0zB,UAAU8B,oBAAoB,aAAc3rB,EAAOkqB,gBACnDL,UAAU8B,oBAAoB,UAAW3rB,EAAOoqB,aAChDN,YAAY6B,oBAAoB,aAAc3rB,EAAOiqB,gBAErDsB,qBACAhB,IAAI6B,gBAAgBpsB,EAAO+f,OAE3BA,IAAM,OACND,aACA+J,UAAY,OACZC,YAAc,OACdC,mBACAC,YAAc,aAIpB,oBACE,SAAqBjlB,OAGrB,GAFDsnB,GAAWtnB,EAAOsnB,SAClBC,EAAO,GACFn2B,EAAI,EAAGJ,EAAMs2B,EAASr2B,OAAQG,EAAIJ,EAAKI,MACvCk2B,EAASvW,IAAI3f,SAGbs1B,OAAO,EAAGa,GACjB,MAAOp0B,SAMN0xB,2PIzPHlvB,GAAegQ,GAAOhQ,aACtBD,GAAeiQ,GAAOjQ,aACtBD,GAAgBkQ,GAAOlQ,cACvBG,GAAa+P,GAAO/P,WAEpB4xB,GAAM,gBAENC,yFAMeC,yBACNC,EAAQC,kBACdnsB,IAAM+rB,QACNrd,QAAUwd,OACVE,2BACiB,8BAIjBD,IAAMA,OAENE,iBAAmB,UAEnBC,kBAAoBz3B,KAAKy3B,kBAAkB3sB,KAAK9K,gDAIhDA,KAAKs3B,WACHA,IAAM,GAAII,KAAMlD,UAAWx0B,KAAK6Z,QAAQhT,OAAS7G,KAAKoL,eACtDksB,IAAIx3B,aAGN63B,sBACAC,8DAIAxsB,SAASysB,SAAS,eAAgBrN,SAClCpf,SAASysB,SAAS,gBAAiBpK,SAEnCriB,SAASysB,SAAS,cAAerT,SACjCpZ,SAASysB,SAAS,SAAUhW,SAE5BzW,SAASysB,SAAS,cAAeC,IAAS93B,KAAK6Z,QAAQke,kBACvD3sB,SAASysB,SAAS,oBAAqBtK,KAEF,IAAtCvtB,KAAK6Z,QAAQrP,OAAOwtB,oBACjB5sB,SAASysB,SAAS,gBAAiBzJ,SAGrChjB,SAASysB,SAAS,SAAUV,iDAI5B/uB,GAAGjD,GAAcynB,kBAAmB5sB,KAAKi4B,wBAAwBntB,KAAK9K,YACtEoI,GAAGjD,GAAc0mB,aAAc7rB,KAAKk4B,oBAAoBptB,KAAK9K,YAE7DoI,GAAGhD,GAAaqhB,WAAYzmB,KAAKm4B,iBAAiBrtB,KAAK9K,YACvDoI,GAAGhD,GAAagjB,gBAAiBpoB,KAAKo4B,sBAAsBttB,KAAK9K,YACjEoI,GAAGhD,GAAa8f,eAAgBllB,KAAKq4B,qBAAqBvtB,KAAK9K,YAC/DoI,GAAGhD,GAAamgB,YAAavlB,KAAKs4B,kBAAkBxtB,KAAK9K,YAEzDoI,GAAG/C,GAAaqS,aAAc1X,KAAKu4B,yBAAyBztB,KAAK9K,YACjEoI,GAAG/C,GAAagU,cAAerZ,KAAKw4B,oBAAoB1tB,KAAK9K,YAC7DoI,GAAG/C,GAAa2T,oBAAqBhZ,KAAKy4B,cAAc3tB,KAAK9K,YAE7DoI,GAAG9C,GAAWozB,kBAAmB14B,KAAK24B,uBAAuB7tB,KAAK9K,YAElE6Z,QAAQzR,GAAG,aAAcpI,KAAKy3B,8DAI9Bz3B,KAAKoL,SAASjE,gBACZjF,KAAKkD,GAAamgB,YAAa,GAAI/iB,OAAM,mFAK3Co2B,OAAO,cAAexzB,GAAawf,2DAGnBljB,QAChBQ,KAAKmD,GAAa+Q,eAAgB1U,uDAGlCQ,KAAKmD,GAAa6Q,qEAIlBqhB,MAAMsB,oBAAqB,OAC3BvB,IAAIjC,sEAIJiC,IAAIjC,wBACJiC,IAAIhC,+DAIHnhB,GAAOnU,KAAK6Z,QAAQke,YACpBlxB,EAAQ7G,KAAK6Z,QAAQhT,MACrB8tB,EAAc30B,KAAK6Z,QAAQrP,OAAOmqB,aAAe,EAE/Ch0B,EAAWkG,EAAMmwB,SAAjBr2B,UAEO,IAAXA,MAIEm4B,GAAYjyB,EAAMmwB,SAASvW,IAAI9f,EAAS,EAC1Cm4B,GAAY3kB,EAAqB,EAAdwgB,SAChB9a,QAAQke,YAAce,EAAYnE,QAEpC2C,IAAIhC,mEAIHnhB,EAAOnU,KAAK6Z,QAAQke,YAEpBlxB,EAAQ7G,KAAK6Z,QAAQhT,MACvBmwB,EAAWnwB,EAAMmwB,YAEhBA,GAAaA,EAASr2B,WAIvBo4B,IAAS,EAAG,GACZhB,EAAclxB,EAAMkxB,eACpBf,MACG,GAAIl2B,GAAI,EAAGJ,EAAMs2B,EAASr2B,OAAQG,EAAIJ,MACnC,GAAKs2B,EAASzW,MAAMzf,KACpB,GAAKk2B,EAASvW,IAAI3f,KACpBi4B,EAAM,IAAMhB,GAAeA,GAAegB,EAAM,KAHNj4B,QAS5Ck4B,GAAcD,EAAM,GACpBD,EAAYC,EAAM,MAEpBhB,EAAce,GAAaf,EAAciB,gBACrCjB,YAAciB,MAIlB7kB,EAAO6kB,EAAc,IAAMhC,EAASr2B,OAAS,EAAG,IAE9CX,KAAKw3B,mBAAqBx3B,KAAKu3B,MAAM/nB,mBAAmB7O,kBAIvD,GADDs4B,GAAMjhB,EAAAA,EACDlX,EAAI,EAAGA,EAAId,KAAKu3B,MAAM/nB,mBAAmB7O,OAAQG,IAAK,IACvDoP,GAAOrB,KAAK4P,KAAKze,KAAKu3B,MAAM/nB,mBAAmB1O,GAAK,QACtDoP,EAAOiE,EAAO,WAGVjE,OAKLonB,IAAIlB,OAAOvnB,KAAKqqB,IAAIrqB,KAAKqJ,IAAI+gB,EAAK9kB,EAAO,GAAI2kB,EAAY,IAAK,IAAM,QAEpEtB,iBAAmB2B,WAAW,aAC5B3B,iBAAmB,MACvB,mDAIcvtB,EAAKlC,QACnB8R,QAAQ3X,KAAK,QAAS,GAAIk3B,GAAOC,OAAO,UAAWr5B,KAAK6Z,QAAQrP,OAAOkgB,WACvE4O,SAASn0B,GAAc0mB,aAAc5hB,EAAKlC,GAAK,6CAGnCkC,EAAKlC,EAAKwxB,OACbp5B,KAAVo5B,OACM,QAEL1f,QAAQ3X,KAAK,QAAS,GAAIk3B,GAAOC,OAAO,QAASr5B,KAAK6Z,QAAQrP,OAAOkgB,WACrE4O,SAASl0B,GAAamgB,YAAatb,EAAKlC,EAAKwxB,yCAGrCN,GACTj5B,KAAKu3B,MAAM/nB,yBACR+nB,MAAM/nB,mBAAmBnN,KAAK42B,oCAI7Bv3B,EAAM83B,EAAKzxB,EAAKwxB,MACpBzxB,cACSpG,mBACO83B,QAASzxB,EAAI0xB,mBACnBF,IAAS,QAElB1f,QAAQ3X,KA3LC,YA2Le4F,kCAIxB9H,KAAKu3B,MAAMsB,yBACTa,iDAIChP,0DAAM1qB,KAAK6Z,QAAQrP,OAAOkgB,SAC7BxoB,KAAKiD,GAAc8lB,YAAaP,sCAI/BiP,GAAS35B,KAAKoL,SAASwL,YAAY,eAErC+iB,MACKnN,gDAKJ3S,QAAQjQ,IAAI,aAAc5J,KAAKy3B,wBAC/B5d,QAAU,UACVyd,IAAM,UACNC,MAAM/nB,8gBCxOToqB,GAAmBvkB,GAAO1P,+CAGjB6E,4EACLA,aACDxC,QAAU,GAAIyB,IAAQmwB,MACtBC,eACAC,oBAAsB,8DAKtBC,eACA/xB,QAAQlI,4FACDE,KAAKg6B,IAAI1C,IAAI5M,UACpBgP,iDAGQM,cACP3C,EAASr3B,OACXsI,KAAK+M,GAAOhQ,aAAaqS,aAAc,gBAClCuiB,KAAKC,SAAS7C,EAAO8C,KAAM,qBAC7Bf,EAAOa,KAAKG,QAAQzvB,EAAKwvB,KAAM,WAAY,IACxCE,GAAOjB,EAAOa,KAAKK,UAAU,UAAW,UAAY,mBACnDC,SAASC,YAAYH,QAI5B/xB,KAAK+M,GAAOlQ,cAAc+mB,gBAAiB,WAExCmL,EAAOoD,SASHv4B,KAAK,WARP43B,oBAAsBY,YAAY,cAC/Bja,GAAM4W,EAAOsD,mBAAmB,EAClC9rB,MAAKqjB,IAAImF,EAAOU,YAActX,GAAO,OAChCve,KAAK,gBACL04B,cAAcjwB,EAAKmvB,uBAE3B,mDAOYE,EAAKa,cACpBC,EAAc,IACd1yB,GAAGiN,GAAOhQ,aAAagU,cAAe,WAEpB,QADL,OAGR2gB,IAAMA,IACN1C,IAAIyD,aAAaF,KACjB7yB,QAAQwE,YACRxE,QAAU6yB,OAIfvyB,KAAK+M,GAAOlQ,cAAc+mB,gBAAiB,WAExC5f,EAAKmuB,SASHv4B,KAAK,WARL43B,oBAAsBY,YAAY,cAC/Bja,GAAMnU,EAAKquB,mBAAmB,EAChC9rB,MAAKqjB,IAAI5lB,EAAKyrB,YAActX,GAAO,OAChCve,KAAK,gBACH04B,cAActuB,EAAKwtB,uBAE3B,SAMHxxB,KAAK+M,GAAOlQ,cAAc0mB,aAAc,aACtCrf,iEAKDpE,GAAG,UAAW,cACX+L,GAAO6mB,EAAKjD,YACZgB,EAAQiC,EAAKL,oBACfxmB,EAAO4kB,EAAM,IAAM5kB,EAAO4kB,EAAM,OAC7BiB,IAAIvjB,KAAKukB,EAAKjD,oDAMjBiC,GAAMh6B,KAAKgI,QAAQ6vB,SAAS,iBAAkBoD,IAAKj7B,kBACpDk7B,cAAclB,QACdA,IAAMA,OACN1C,IAAM0C,EAAI1C,IACR0C,kDAIHh6B,MAAKm7B,UACAn7B,KAAKo7B,WAAW5P,KAAK,oBACrBxjB,QAAU,GAAIyB,IAAQmwB,MACtBrZ,oSAULvgB,KAAKg6B,UACFA,IAAIqB,8CAIHlnB,0DAAOnU,KAAK+3B,WAChB/3B,MAAKg6B,UACFA,IAAIvjB,KAAKtC,qDAKXinB,WAAW5P,KAAK,mJAMdxrB,MAAKg6B,IAAI1C,IAAI9qB,UAAUgf,KAAK,aAC5BxjB,QAAQwE,YACRwtB,IAAM,OACNhyB,QAAU,KACXszB,EAAKxB,4BACAc,cAAcU,EAAKxB,yDAarBpP,MACH1iB,GAAU,GAAIyB,IAAQmwB,IACtBI,EAAMhyB,EAAQ6vB,SAAS,iBAAkBoD,IAAKj7B,KAAMA,KAAKs3B,OACvDx3B,YACHy7B,oBAAoBvB,EAAKhyB,KAC1B0xB,SAAShP,qCAZN1qB,MAAKw7B,yBAGL9Q,QACF+Q,UAAU/Q,iDAYRpD,QAAO0N,aACZ1N,OAAO0N,YAAY0G,gBAAgB,oDAzJjBtC"}