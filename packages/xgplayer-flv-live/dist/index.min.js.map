{"version":3,"file":"index.min.js","sources":["../../xgplayer-transmuxer-model-mediasegmentlist/es/index.js","../../xgplayer-transmuxer-remux-mp4/es/buffer.js","../../xgplayer-transmuxer-remux-mp4/es/fmp4.js","../../xgplayer-transmuxer-remux-mp4/es/index.js","../../xgplayer-transmuxer-model-trackmeta/es/index.js","../../xgplayer-transmuxer-codec-h264/es/golomb.js","../../xgplayer-transmuxer-codec-h264/es/sps.js","../../xgplayer-transmuxer-codec-h264/es/nalunit.js","../../xgplayer-transmuxer-buffer-track/es/index.js","../../xgplayer-utils-utf8/es/index.js","../../xgplayer-transmuxer-demux-flv/es/amf-parser.js","../../xgplayer-transmuxer-demux-flv/es/index.js","../../xgplayer-transmuxer-loader-fetch/es/index.js","../../xgplayer-transmuxer-buffer-presource/es/index.js","../../xgplayer-transmuxer-buffer-xgbuffer/es/index.js","../../xgplayer-transmuxer-codec-aac/es/index.js","../../xgplayer-transmuxer-codec-compatibility/es/index.js","../../xgplayer-utils-mse/es/index.js","../../xgplayer-transmuxer-constant-events/es/index.js","../../xgplayer-utils-sniffer/es/index.js","../../xgplayer-transmuxer-remux-mp4/node_modules/concat-typed-array/lib/concat.js","../../xgplayer-transmuxer-remux-mp4/node_modules/concat-typed-array/lib/index.js","../../xgplayer-transmuxer-codec-h264/es/index.js","../src/flv-live.js","../src/index.js"],"sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MediaSegmentList = function () {\n  function MediaSegmentList(type) {\n    _classCallCheck(this, MediaSegmentList);\n\n    this._type = type;\n    this._list = [];\n    this._lastAppendLocation = -1; // cached last insert location\n  }\n\n  _createClass(MediaSegmentList, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this._list.length === 0;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._list = [];\n      this._lastAppendLocation = -1;\n    }\n  }, {\n    key: \"_searchNearestSegmentBefore\",\n    value: function _searchNearestSegmentBefore(beginDts) {\n      var list = this._list;\n      if (list.length === 0) {\n        return -2;\n      }\n      var last = list.length - 1;\n      var mid = 0;\n      var lbound = 0;\n      var ubound = last;\n\n      var idx = 0;\n\n      if (beginDts < list[0].originDts) {\n        idx = -1;\n        return idx;\n      }\n\n      while (lbound <= ubound) {\n        mid = lbound + Math.floor((ubound - lbound) / 2);\n        if (mid === last || beginDts > list[mid].lastSample.originDts && beginDts < list[mid + 1].originDts) {\n          idx = mid;\n          break;\n        } else if (list[mid].originDts < beginDts) {\n          lbound = mid + 1;\n        } else {\n          ubound = mid - 1;\n        }\n      }\n      return idx;\n    }\n  }, {\n    key: \"_searchNearestSegmentAfter\",\n    value: function _searchNearestSegmentAfter(beginDts) {\n      return this._searchNearestSegmentBefore(beginDts) + 1;\n    }\n  }, {\n    key: \"append\",\n    value: function append(segment) {\n      var list = this._list;\n      var lastAppendIdx = this._lastAppendLocation;\n      var insertIdx = 0;\n\n      if (lastAppendIdx !== -1 && lastAppendIdx < list.length && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && segment.originStartDts < list[lastAppendIdx + 1].originStartDts)) {\n        insertIdx = lastAppendIdx + 1; // use cached location idx\n      } else {\n        if (list.length > 0) {\n          insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n        }\n      }\n\n      this._lastAppendLocation = insertIdx;\n      this._list.splice(insertIdx, 0, segment);\n    }\n  }, {\n    key: \"getLastSegmentBefore\",\n    value: function getLastSegmentBefore(beginDts) {\n      var idx = this._searchNearestSegmentBefore(beginDts);\n      if (idx >= 0) {\n        return this._list[idx];\n      } else {\n        // -1\n        return null;\n      }\n    }\n  }, {\n    key: \"getLastSampleBefore\",\n    value: function getLastSampleBefore(beginDts) {\n      var segment = this.getLastSegmentBefore(beginDts);\n      if (segment !== null) {\n        return segment.lastSample;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getLastRAPBefore\",\n    value: function getLastRAPBefore(beginDts) {\n      var segmentIdx = this._searchNearestSegmentBefore(beginDts);\n      var randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n      while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n        segmentIdx--;\n        randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n      }\n      if (randomAccessPoints.length > 0) {\n        return randomAccessPoints[randomAccessPoints.length - 1];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._type;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._list.length;\n    }\n  }]);\n\n  return MediaSegmentList;\n}();\n\nexport default MediaSegmentList;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    _classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  _createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n\n  return Buffer;\n}();\n\nexport default Buffer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Buffer from './buffer';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar Fmp4 = function () {\n  function Fmp4() {\n    _classCallCheck(this, Fmp4);\n  }\n\n  _createClass(Fmp4, null, [{\n    key: 'size',\n    value: function size(value) {\n      return Buffer.writeUint32(value);\n    }\n  }, {\n    key: 'initBox',\n    value: function initBox(size, name) {\n      var buffer = new Buffer();\n\n      for (var _len = arguments.length, content = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        content[_key - 2] = arguments[_key];\n      }\n\n      buffer.write.apply(buffer, [Fmp4.size(size), Fmp4.type(name)].concat(content));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'extension',\n    value: function extension(version, flag) {\n      return new Uint8Array([version, flag >> 16 & 0xff, flag >> 8 & 0xff, flag & 0xff]);\n    }\n  }, {\n    key: 'ftyp',\n    value: function ftyp() {\n      return Fmp4.initBox(24, 'ftyp', new Uint8Array([0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n      ]));\n    }\n  }, {\n    key: 'moov',\n    value: function moov(_ref) {\n      var type = _ref.type,\n          meta = _ref.meta;\n\n      var size = 8;\n      var mvhd = Fmp4.mvhd(meta.duration, meta.timescale);\n      var trak = void 0;\n\n      if (type === 'video') {\n        trak = Fmp4.videoTrak(meta);\n      } else {\n        trak = Fmp4.audioTrak(meta);\n      }\n\n      var mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n      [mvhd, trak, mvex].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moov', mvhd, trak, mvex);\n    }\n  }, {\n    key: 'mvhd',\n    value: function mvhd(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n\n      // duration *= timescale;\n      var bytes = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      timescale >>> 24 & 0xFF, timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n      ]);\n      return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes));\n    }\n  }, {\n    key: 'videoTrak',\n    value: function videoTrak(data) {\n      var size = 8;\n\n      var tkhd = Fmp4.tkhd({\n        id: 1,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: data.presentWidth,\n        height: data.presentHeight,\n        type: 'video'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'video',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        avcc: data.avcc,\n        parRatio: data.parRatio,\n        width: data.presentWidth,\n        height: data.presentHeight\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'audioTrak',\n    value: function audioTrak(data) {\n      var size = 8;\n      var tkhd = Fmp4.tkhd({\n        id: 2,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: 0,\n        height: 0,\n        type: 'audio'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'audio',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        channelCount: data.channelCount,\n        samplerate: data.sampleRate,\n        config: data.config\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'tkhd',\n    value: function tkhd(data) {\n      var id = data.id;\n      var duration = data.duration;\n      var width = data.width;\n      var height = data.height;\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      id >>> 24 & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      id >>> 16 & 0xFF, id >>> 8 & 0xFF, id & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      duration >>> 24 & 0xFF, // duration: 4 bytes track的时间长度\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      width >>> 8 & 0xFF, // //宽度\n      width & 0xFF, 0x00, 0x00, height >>> 8 & 0xFF, // 高度\n      height & 0xFF, 0x00, 0x00]);\n      return Fmp4.initBox(8 + content.byteLength, 'tkhd', content);\n    }\n  }, {\n    key: 'edts',\n    value: function edts(data) {\n      var buffer = new Buffer();\n      var duration = data.duration;\n      var mediaTime = data.mediaTime;\n      buffer.write(Fmp4.size(36), Fmp4.type('edts'));\n      // elst\n      buffer.write(Fmp4.size(28), Fmp4.type('elst'));\n      buffer.write(new Uint8Array([0x00, 0x00, 0x00, 0x01, // entry count\n      duration >> 24 & 0xff, duration >> 16 & 0xff, duration >> 8 & 0xff, duration & 0xff, mediaTime >> 24 & 0xff, mediaTime >> 16 & 0xff, mediaTime >> 8 & 0xff, mediaTime & 0xff, 0x00, 0x00, 0x00, 0x01 // media rate\n      ]));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdia',\n    value: function mdia(data) {\n      var size = 8;\n      var mdhd = Fmp4.mdhd(data.timescale, data.duration);\n      var hdlr = Fmp4.hdlr(data.type);\n      var minf = Fmp4.minf(data);\n      [mdhd, hdlr, minf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf);\n    }\n  }, {\n    key: 'mdhd',\n    value: function mdhd() {\n      var timescale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n      var duration = arguments[1];\n\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      timescale >>> 24 & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF, duration >>> 24 & 0xFF, // duration: 4 bytes  track的时间长度\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n      ]);\n      return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'hdlr',\n    value: function hdlr(type) {\n      var value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ];\n      if (type === 'audio') {\n        value.splice.apply(value, [8, 4].concat([0x73, 0x6f, 0x75, 0x6e]));\n        value.splice.apply(value, [24, 13].concat([0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00]));\n      }\n      return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value));\n    }\n  }, {\n    key: 'minf',\n    value: function minf(data) {\n      var size = 8;\n      var vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd();\n      var dinf = Fmp4.dinf();\n      var stbl = Fmp4.stbl(data);\n      [vmhd, dinf, stbl].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl);\n    }\n  }, {\n    key: 'vmhd',\n    value: function vmhd() {\n      return Fmp4.initBox(20, 'vmhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]));\n    }\n  }, {\n    key: 'smhd',\n    value: function smhd() {\n      return Fmp4.initBox(16, 'smhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n      ]));\n    }\n  }, {\n    key: 'dinf',\n    value: function dinf() {\n      var buffer = new Buffer();\n      var dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ];\n      buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stbl',\n    value: function stbl(data) {\n      var size = 8;\n      var stsd = Fmp4.stsd(data);\n      var stts = Fmp4.stts();\n      var stsc = Fmp4.stsc();\n      var stsz = Fmp4.stsz();\n      var stco = Fmp4.stco();\n      [stsd, stts, stsc, stsz, stco].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco);\n    }\n  }, {\n    key: 'stsd',\n    value: function stsd(data) {\n      var content = void 0;\n      if (data.type === 'audio') {\n        // if (!data.isAAC && data.codec === 'mp4') {\n        //     content = FMP4.mp3(data);\n        // } else {\n        //\n        // }\n        // 支持mp4a\n        content = Fmp4.mp4a(data);\n      } else {\n        content = Fmp4.avc1(data);\n      }\n      return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content);\n    }\n  }, {\n    key: 'mp4a',\n    value: function mp4a(data) {\n      var content = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      data.samplerate >> 8 & 0xff, data.samplerate & 0xff, //\n      0x00, 0x00]);\n      var esds = Fmp4.esds(data.config);\n      return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds);\n    }\n  }, {\n    key: 'esds',\n    value: function esds() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [43, 146, 8, 0];\n\n      var configlen = config.length;\n      var buffer = new Buffer();\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n      ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]));\n      buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'avc1',\n    value: function avc1(data) {\n      var buffer = new Buffer();\n      var size = 40; // 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n      // let sps = data.sps\n      // let pps = data.pps\n      var width = data.width;\n      var height = data.height;\n      var hSpacing = data.parRatio.height;\n      var vSpacing = data.parRatio.width;\n      // let avccBuffer = new Buffer()\n      // avccBuffer.write(new Uint8Array([\n      //   0x01, // version\n      //   sps[1], // profile\n      //   sps[2], // profile compatible\n      //   sps[3], // level\n      //   0xfc | 3,\n      //   0xE0 | 1 // 目前只处理一个sps\n      // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n      // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n      var avcc = data.avcc;\n      var avc1 = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      width >> 8 & 0xff, width & 0xff, // width\n      height >> 8 & 0xff, height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12, 0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]); // pre_defined = -1\n      var btrt = new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]);\n      var pasp = new Uint8Array([hSpacing >> 24, // hSpacing\n      hSpacing >> 16 & 0xff, hSpacing >> 8 & 0xff, hSpacing & 0xff, vSpacing >> 24, // vSpacing\n      vSpacing >> 16 & 0xff, vSpacing >> 8 & 0xff, vSpacing & 0xff]);\n\n      buffer.write(Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1, Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc, Fmp4.size(20), Fmp4.type('btrt'), btrt, Fmp4.size(16), Fmp4.type('pasp'), pasp);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stts',\n    value: function stts() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stts', content);\n    }\n  }, {\n    key: 'stsc',\n    value: function stsc() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stsc', content);\n    }\n  }, {\n    key: 'stco',\n    value: function stco() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stco', content);\n    }\n  }, {\n    key: 'stsz',\n    value: function stsz() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      return Fmp4.initBox(20, 'stsz', content);\n    }\n  }, {\n    key: 'mvex',\n    value: function mvex(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n      var trackID = arguments[2];\n\n      var buffer = new Buffer();\n      var mehd = Buffer.writeUint32(duration);\n      buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'trex',\n    value: function trex(id) {\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      id >> 24, id >> 16 & 0xff, id >> 8 & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      return Fmp4.initBox(8 + content.byteLength, 'trex', content);\n    }\n  }, {\n    key: 'moof',\n    value: function moof(data) {\n      var size = 8;\n      var mfhd = Fmp4.mfhd();\n      var traf = Fmp4.traf(data);\n      [mfhd, traf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moof', mfhd, traf);\n    }\n  }, {\n    key: 'mfhd',\n    value: function mfhd() {\n      var content = Buffer.writeUint32(Fmp4.sequence);\n      Fmp4.sequence += 1;\n      return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'traf',\n    value: function traf(data) {\n      var size = 8;\n      var tfhd = Fmp4.tfhd(data.id);\n      var tfdt = Fmp4.tfdt(data.time);\n      var sdtp = Fmp4.sdtp(data);\n      var trun = Fmp4.trun(data, sdtp.byteLength);\n\n      [tfhd, tfdt, trun, sdtp].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp);\n    }\n  }, {\n    key: 'tfhd',\n    value: function tfhd(id) {\n      var content = Buffer.writeUint32(id);\n      return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'tfdt',\n    value: function tfdt(time) {\n      // let upper = Math.floor(time / (UINT32_MAX + 1)),\n      //     lower = Math.floor(time % (UINT32_MAX + 1));\n      return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time));\n    }\n  }, {\n    key: 'trun',\n    value: function trun(data, sdtpLength) {\n      // let id = data.id;\n      // let ceil = id === 1 ? 16 : 12;\n      var buffer = new Buffer();\n      var sampleCount = Buffer.writeUint32(data.samples.length);\n      // mdat-header 8\n      // moof-header 8\n      // mfhd 16\n      // traf-header 8\n      // thhd 16\n      // tfdt 20\n      // trun-header 12\n      // sampleCount 4\n      // data-offset 4\n      // samples.length\n      var offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength);\n      buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset);\n\n      // let size = buffer.buffer.byteLength\n      // let writeOffset = 0\n      // data.samples.forEach(() => {\n      //   size += 16\n      // })\n      //\n      // let trunBox = new Uint8Array(size)\n\n      // trunBox.set(buffer.buffer, 0)\n\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        // console.log(item.type, item.dts, item.duration)\n\n        buffer.write(new Uint8Array([item.duration >>> 24 & 0xFF, // sample_duration\n        item.duration >>> 16 & 0xFF, item.duration >>> 8 & 0xFF, item.duration & 0xFF, item.size >>> 24 & 0xFF, // sample_size\n        item.size >>> 16 & 0xFF, item.size >>> 8 & 0xFF, item.size & 0xFF, flags.isLeading << 2 | flags.dependsOn, // sample_flags\n        flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.isNonSync, 0x00, 0x00, // sample_degradation_priority\n        item.cts >>> 24 & 0xFF, // sample_composition_time_offset\n        item.cts >>> 16 & 0xFF, item.cts >>> 8 & 0xFF, item.cts & 0xFF]));\n        // writeOffset += 16\n        // buffer.write(Buffer.writeUint32(0));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'sdtp',\n    value: function sdtp(data) {\n      var buffer = new Buffer();\n      buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0));\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        var num = flags.isLeading << 6 | // is_leading: 2 (bit)\n        flags.dependsOn << 4 | // sample_depends_on\n        flags.isDependedOn << 2 | // sample_is_depended_on\n        flags.hasRedundancy; // sample_has_redundancy\n\n        buffer.write(new Uint8Array([num]));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdat',\n    value: function mdat(data) {\n      var buffer = new Buffer();\n      var size = 8;\n      data.samples.forEach(function (item) {\n        size += item.size;\n      });\n      buffer.write(Fmp4.size(size), Fmp4.type('mdat'));\n      var mdatBox = new Uint8Array(size);\n      var offset = 0;\n      mdatBox.set(buffer.buffer, offset);\n      offset += 8;\n      data.samples.forEach(function (item) {\n        item.buffer.forEach(function (unit) {\n          mdatBox.set(unit, offset);\n          offset += unit.byteLength;\n          // buffer.write(unit.data);\n        });\n      });\n      return mdatBox;\n    }\n  }]);\n\n  return Fmp4;\n}();\n\nFmp4.type = function (name) {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)]);\n};\nFmp4.sequence = 1;\n\nexport default Fmp4;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport sniffer from 'xgplayer-utils-sniffer';\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport MediaSegmentList from 'xgplayer-transmuxer-model-mediasegmentlist';\n\nimport Buffer from './buffer';\nimport Fmp4 from './fmp4';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nvar PLAYER_EVENTS = EVENTS.PLAYER_EVENTS;\n\nvar Mp4Remuxer = function () {\n  function Mp4Remuxer() {\n    var curTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    _classCallCheck(this, Mp4Remuxer);\n\n    this._dtsBase = curTime * 1000;\n    this._isDtsBaseInited = false;\n    this._videoSegmentList = new MediaSegmentList('video');\n    this._audioSegmentList = new MediaSegmentList('audio');\n    var browser = sniffer.browser;\n\n    this._fillSilenceFrame = browser === 'ie';\n\n    this.isFirstVideo = true;\n    this.isFirstAudio = true;\n\n    this.videoAllDuration = 0;\n    this.audioAllDuration = 0;\n  }\n\n  _createClass(Mp4Remuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this));\n      this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this));\n      this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this));\n      this.on(PLAYER_EVENTS.SEEK, this.seek.bind(this));\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._dtsBase = -1;\n      this._isDtsBaseInited = false;\n      this._videoSegmentList.clear();\n      this._audioSegmentList.clear();\n      this._videoSegmentList = null;\n      this._audioSegmentList = null;\n    }\n  }, {\n    key: 'remux',\n    value: function remux() {\n      var _context$getInstance = this._context.getInstance('TRACKS'),\n          audioTrack = _context$getInstance.audioTrack,\n          videoTrack = _context$getInstance.videoTrack;\n\n      !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack);\n\n      this._remuxVideo(videoTrack);\n      this._remuxAudio(audioTrack);\n    }\n  }, {\n    key: 'resetDtsBase',\n    value: function resetDtsBase() {\n      // for hls 中途切换 meta后seek\n      this._dtsBase = 0;\n      // this._isDtsBaseInited = false\n    }\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      if (!this._isDtsBaseInited) {\n        this._dtsBase = time * 1000;\n      }\n    }\n  }, {\n    key: 'onMetaDataReady',\n    value: function onMetaDataReady(type) {\n      var track = void 0;\n\n      if (type === 'audio') {\n        var _context$getInstance2 = this._context.getInstance('TRACKS'),\n            audioTrack = _context$getInstance2.audioTrack;\n\n        track = audioTrack;\n      } else {\n        var _context$getInstance3 = this._context.getInstance('TRACKS'),\n            videoTrack = _context$getInstance3.videoTrack;\n\n        track = videoTrack;\n      }\n\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.mimetype = track.meta.codec;\n      source.init = this.remuxInitSegment(type, track.meta);\n      // source.inited = false;\n\n      // this.resetDtsBase()\n      this.emit(REMUX_EVENTS.INIT_SEGMENT, type);\n    }\n  }, {\n    key: 'remuxInitSegment',\n    value: function remuxInitSegment(type, meta) {\n      var initSegment = new Buffer();\n      var ftyp = Fmp4.ftyp();\n      var moov = Fmp4.moov({ type: type, meta: meta });\n\n      initSegment.write(ftyp, moov);\n      return initSegment;\n    }\n  }, {\n    key: 'calcDtsBase',\n    value: function calcDtsBase(audioTrack, videoTrack) {\n      if (!audioTrack && videoTrack.samples.length) {\n        return videoTrack.samples[0].dts;\n      }\n\n      if (!audioTrack.samples.length && !videoTrack.samples.length) {\n        return;\n      }\n\n      var audioBase = Infinity;\n      var videoBase = Infinity;\n\n      if (audioTrack.samples && audioTrack.samples.length) {\n        audioBase = audioTrack.samples[0].dts;\n      }\n      if (videoTrack.samples && videoTrack.samples.length) {\n        videoBase = videoTrack.samples[0].dts;\n      }\n\n      this._dtsBase = Math.min(audioBase, videoBase) - this._dtsBase; // 兼容播放器切换清晰度\n      this._isDtsBaseInited = true;\n    }\n  }, {\n    key: '_remuxVideo',\n    value: function _remuxVideo(videoTrack) {\n      var track = videoTrack || {};\n\n      if (!videoTrack.samples || !videoTrack.samples.length) {\n        return;\n      }\n\n      var samples = track.samples;\n\n      var firstDts = -1;\n\n      var initSegment = null;\n      var mp4Samples = [];\n      var mdatBox = {\n        samples: []\n      };\n\n      var maxLoop = 10000;\n      while (samples.length && maxLoop-- > 0) {\n        // console.log('mark2')\n        var avcSample = samples.shift();\n\n        var isKeyframe = avcSample.isKeyframe,\n            options = avcSample.options;\n\n        if (!this.isFirstVideo && options && options.meta) {\n          initSegment = this.remuxInitSegment('video', options.meta);\n          options.meta = null;\n          samples.unshift(avcSample);\n          if (!options.isContinue) {\n            this.resetDtsBase();\n          }\n          break;\n        }\n\n        var dts = avcSample.dts - this._dtsBase;\n\n        if (firstDts === -1) {\n          firstDts = dts;\n        }\n\n        var cts = void 0;\n        var pts = void 0;\n        if (avcSample.pts !== undefined) {\n          pts = avcSample.pts - this._dtsBase;\n          cts = pts - dts;\n        }\n        if (avcSample.cts !== undefined) {\n          pts = avcSample.cts + dts;\n          cts = avcSample.cts;\n        }\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n\n        var sampleDuration = 0;\n        if (avcSample.duration) {\n          sampleDuration = avcSample.duration;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this._dtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // lastest sample, use second last duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference duration\n            sampleDuration = this.videoMeta.refSampleDuration;\n          }\n        }\n        this.videoAllDuration += sampleDuration;\n        console.log('video dts ' + dts, 'pts ' + pts, isKeyframe, 'duration ' + sampleDuration);\n        if (sampleDuration >= 0) {\n          mdatBox.samples.push(mdatSample);\n          mdatSample.buffer.push(avcSample.data);\n          mdatSample.size += avcSample.data.byteLength;\n\n          mp4Samples.push({\n            dts: dts,\n            cts: cts,\n            pts: pts,\n            data: avcSample.data,\n            size: avcSample.data.byteLength,\n            isKeyframe: isKeyframe,\n            duration: sampleDuration,\n            flags: {\n              isLeading: 0,\n              dependsOn: isKeyframe ? 2 : 1,\n              isDependedOn: isKeyframe ? 1 : 0,\n              hasRedundancy: 0,\n              isNonSync: isKeyframe ? 0 : 1\n            },\n            originDts: dts,\n            type: 'video'\n          });\n        }\n\n        if (isKeyframe) {\n          this.emit(REMUX_EVENTS.RANDOM_ACCESS_POINT, pts);\n        }\n      }\n\n      var moofMdat = new Buffer();\n      if (mp4Samples.length) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.writeToSource('video', moofMdat);\n      }\n\n      if (initSegment) {\n        this.writeToSource('video', initSegment);\n\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this._remuxVideo(track);\n        }\n      }\n\n      this.isFirstVideo = false;\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video');\n\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: '_remuxAudio',\n    value: function _remuxAudio(track) {\n      var _ref = track || {},\n          samples = _ref.samples;\n\n      var firstDts = -1;\n      var mp4Samples = [];\n\n      var initSegment = null;\n      var mdatBox = {\n        samples: []\n      };\n      if (!samples || !samples.length) {\n        return;\n      }\n\n      var maxLoop = 10000;\n      var isFirstDtsInited = false;\n      while (samples.length && maxLoop-- > 0) {\n        // console.log('mark3')\n        var sample = samples.shift();\n        var data = sample.data,\n            options = sample.options;\n\n        if (!this.isFirstAudio && options && options.meta) {\n          initSegment = this.remuxInitSegment('audio', options.meta);\n          options.meta = null;\n          samples.unshift(sample);\n          if (!options.isContinue) {\n            this.resetDtsBase();\n          }\n          break;\n        }\n\n        var dts = sample.dts - this._dtsBase;\n        var originDts = dts;\n        if (!isFirstDtsInited) {\n          firstDts = dts;\n          isFirstDtsInited = true;\n        }\n\n        var sampleDuration = 0;\n        if (sample.duration) {\n          sampleDuration = sample.duration;\n        } else if (this.audioMeta.refSampleDurationFixed) {\n          sampleDuration = this.audioMeta.refSampleDurationFixed;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this._dtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // use second last sample duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference sample duration\n            sampleDuration = this.audioMeta.refSampleDuration;\n          }\n        }\n\n        // console.log(`audio dts ${dts}`, `pts ${dts}`, `duration ${sampleDuration}`)\n        this.audioAllDuration += sampleDuration;\n        var mp4Sample = {\n          dts: dts,\n          pts: dts,\n          cts: 0,\n          size: data.byteLength,\n          duration: sample.duration ? sample.duration : sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: 2,\n            isDependedOn: 1,\n            hasRedundancy: 0,\n            isNonSync: 0\n          },\n          isKeyframe: true,\n          originDts: originDts,\n          type: 'audio'\n        };\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n\n        if (sampleDuration >= 0) {\n          mdatSample.buffer.push(data);\n          mdatSample.size += data.byteLength;\n\n          mdatBox.samples.push(mdatSample);\n          mp4Samples.push(mp4Sample);\n        }\n      }\n\n      var moofMdat = new Buffer();\n\n      if (mp4Samples.length) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.writeToSource('audio', moofMdat);\n      }\n\n      if (initSegment) {\n        this.writeToSource('audio', initSegment);\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this._remuxAudio(track);\n        }\n      }\n\n      this.isFirstAudio = false;\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat);\n\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: 'writeToSource',\n    value: function writeToSource(type, buffer) {\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.data.push(buffer);\n    }\n  }, {\n    key: 'initSilentAudio',\n    value: function initSilentAudio(dts, duration) {\n      var unit = Mp4Remuxer.getSilentFrame(this._audioMeta.channelCount);\n      return {\n        dts: dts,\n        pts: dts,\n        cts: 0,\n        duration: duration,\n        unit: unit,\n        size: unit.byteLength,\n        originDts: dts,\n        type: 'video'\n      };\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._player = null;\n    }\n  }, {\n    key: 'videoMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').videoTrack.meta;\n    }\n  }, {\n    key: 'audioMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').audioTrack.meta;\n    }\n  }], [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(channelCount) {\n      if (channelCount === 1) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n      } else if (channelCount === 2) {\n        return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n      } else if (channelCount === 3) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n      } else if (channelCount === 4) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n      } else if (channelCount === 5) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n      } else if (channelCount === 6) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n      }\n      return null;\n    }\n  }]);\n\n  return Mp4Remuxer;\n}();\n\nexport default Mp4Remuxer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    _classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    _classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n\n  return VideoTrackMeta;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Golomb = function () {\n  function Golomb(uint8array) {\n    _classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  _createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO 异常处理\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }]);\n\n  return Golomb;\n}();\n\nexport default Golomb;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    _classCallCheck(this, SPSParser);\n  }\n\n  _createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1,\n          par_height = 1;\n      var fps = 0,\n          fps_fixed = true,\n          fps_num = 0,\n          fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0,\n          crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var lastScale = 8;\n      var nextScale = 8;\n      var deltaScale = 0;\n      for (var i = 0; i < count; i++) {\n        if (nextScale !== 0) {\n          deltaScale = gb.readSEG();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n      return meta;\n    }\n  }]);\n\n  return SPSParser;\n}();\n\nexport default SPSParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport SpsParser from './sps';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    _classCallCheck(this, Nalunit);\n  }\n\n  _createClass(Nalunit, null, [{\n    key: 'getNalunits',\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32();\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = buffer.buffer.slice(buffer.position, buffer.position + length);\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = buffer.length;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225;\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n\n  return Nalunit;\n}();\n\nexport default Nalunit;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Track = function () {\n  /**\n   * The constructor.\n   */\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.id = -1;\n    this.sequenceNumber = 0;\n    this.samples = [];\n    this.droppedSamples = [];\n    this.length = 0;\n  }\n\n  /**\n   * Reset the track.\n   */\n\n\n  _createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n    /**\n     * destroy the track.\n     */\n\n  }, {\n    key: 'distroy',\n    value: function distroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  /**\n   * The constructor for audio track.\n   */\n  function AudioTrack() {\n    _classCallCheck(this, AudioTrack);\n\n    var _this = _possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  _inherits(VideoTrack, _Track2);\n\n  /**\n   * The constructor for video track.\n   */\n  function VideoTrack() {\n    _classCallCheck(this, VideoTrack);\n\n    var _this2 = _possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    _this2.type = 'video';\n    _this2.dropped = 0;\n    return _this2;\n  }\n  /**\n   * reset the video track.\n   */\n\n\n  _createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    _classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  _createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n\n  return Tracks;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UTF8 = function () {\n  function UTF8() {\n    _classCallCheck(this, UTF8);\n  }\n\n  _createClass(UTF8, null, [{\n    key: 'decode',\n    value: function decode(uint8array) {\n      var out = [];\n      var input = uint8array;\n      var i = 0;\n      var length = uint8array.length;\n\n      while (i < length) {\n        if (input[i] < 0x80) {\n          out.push(String.fromCharCode(input[i]));\n          ++i;\n          continue;\n        } else if (input[i] < 0xC0) {\n          // fallthrough\n        } else if (input[i] < 0xE0) {\n          if (UTF8._checkContinuation(input, i, 1)) {\n            var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n            if (ucs4 >= 0x80) {\n              out.push(String.fromCharCode(ucs4 & 0xFFFF));\n              i += 2;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF0) {\n          if (UTF8._checkContinuation(input, i, 2)) {\n            var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n            if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n              out.push(String.fromCharCode(_ucs & 0xFFFF));\n              i += 3;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF8) {\n          if (UTF8._checkContinuation(input, i, 3)) {\n            var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n            if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n              _ucs2 -= 0x10000;\n              out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n              out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n              i += 4;\n              continue;\n            }\n          }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n      }\n\n      return out.join('');\n    }\n  }, {\n    key: '_checkContinuation',\n    value: function _checkContinuation(uint8array, start, checkLength) {\n      var array = uint8array;\n      if (start + checkLength < array.length) {\n        while (checkLength--) {\n          if ((array[++start] & 0xC0) !== 0x80) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return UTF8;\n}();\n\nexport default UTF8;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport sniffer from 'xgplayer-utils-sniffer';\nimport UTF8 from 'xgplayer-utils-utf8';\n\nvar isLe = sniffer.isLe;\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta信息解析\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    _classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  _createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * 解析meta中的变量\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n\n  return AMFParser;\n}();\n\nexport default AMFParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport { AudioTrackMeta, VideoTrackMeta } from 'xgplayer-transmuxer-model-trackmeta';\nimport { SpsParser } from 'xgplayer-transmuxer-codec-h264';\nimport { VideoTrack, AudioTrack } from 'xgplayer-transmuxer-buffer-track';\n\nimport AMFParser from './amf-parser';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    _classCallCheck(this, FlvDemuxer);\n\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n  }\n\n  _createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this));\n    }\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'doParseFlv',\n    value: function doParseFlv() {\n      if (!this._firstFragmentLoaded) {\n        if (this.loaderBuffer.length < 13) {\n          return;\n        }\n        var header = this.loaderBuffer.shift(13);\n        this.parseFlvHeader(header);\n        this.doParseFlv(); // 递归调用，继续解析flv流\n      } else {\n        if (this.loaderBuffer.length < 11) {\n          return;\n        }\n        var chunk = void 0;\n\n        var loopMax = 10000; // 防止死循环产生\n        do {\n          // console.log('mark4')\n          chunk = this._parseFlvTag();\n        } while (chunk && loopMax-- > 0);\n\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'));\n        this.doParseFlv();\n      } else {\n        this._firstFragmentLoaded = true;\n        // const playType = FlvDemuxer.getPlayType(header[4])\n\n        this.initVideoTrack();\n        this.initAudioTrack();\n      }\n      this.doParseFlv();\n    }\n\n    /**\n     * init default video track configs\n     */\n\n  }, {\n    key: 'initVideoTrack',\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8、9、18\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag() {\n      if (this.loaderBuffer.length < 11) {\n        return null;\n      }\n      var chunk = this._parseFlvTagHeader();\n      if (chunk) {\n        this._processChunk(chunk);\n      }\n      return chunk;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader() {\n      var offset = 0;\n      var chunk = {};\n\n      var tagType = this.loaderBuffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      chunk.filtered = (tagType & 32) >>> 5;\n      chunk.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      chunk.datasize = this.loaderBuffer.toInt(offset, 3);\n      offset += 3;\n\n      if (chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18 || this.loaderBuffer.toInt(8, 3) !== 0) {\n        if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n          this.loaderBuffer.shift(1);\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false);\n        return null;\n      }\n\n      if (this.loaderBuffer.length < chunk.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      this.loaderBuffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = this.loaderBuffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      chunk.dts = timestamp;\n\n      // streamId\n      this.loaderBuffer.shift(3);\n      return chunk;\n    }\n  }, {\n    key: '_processChunk',\n    value: function _processChunk(chunk) {\n      switch (chunk.tagType) {\n        case 18:\n          this._parseScriptData(chunk);\n          break;\n        case 8:\n          this._parseAACData(chunk);\n          break;\n        case 9:\n          this._parseHevcData(chunk);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          this.loaderBuffer.shift(3);\n          break;\n        default:\n          this.loaderBuffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(chunk) {\n      var audioTrack = this.tracks.audioTrack;\n      var videoTrack = this.tracks.videoTrack;\n\n      var data = this.loaderBuffer.shift(chunk.datasize);\n\n      var info = new AMFParser().resolve(data, data.length);\n\n      var onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined;\n\n      // fill mediaInfo\n      this._context.mediaInfo.duration = onMetaData.duration;\n      this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n\n      var validate = this._datasizeValidator(chunk.datasize);\n      if (validate) {\n        this.emit(DEMUX_EVENTS.MEDIA_INFO);\n        this._hasScript = true;\n      }\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 6) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n  }, {\n    key: '_parseAACData',\n    value: function _parseAACData(chunk) {\n      var track = this.tracks.audioTrack;\n      if (!track) {\n        return;\n      }\n\n      var meta = track.meta;\n\n      if (!meta) {\n        track.meta = new AudioTrackMeta();\n        meta = track.meta;\n      }\n\n      var info = this.loaderBuffer.shift(1)[0];\n\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      track.format = format;\n\n      if (format !== 10) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid audio format: ' + format));\n      }\n\n      if (format === 10 && !this._hasAudioSequence) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      delete chunk.tagType;\n      var validate = this._datasizeValidator(chunk.datasize);\n\n      if (chunk.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(chunk.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this._context.mediaInfo.duration * meta.timescale;\n        meta.config = aacHeader.config;\n\n        var audioMedia = this._context.mediaInfo.audio;\n\n        // fill audio media info\n        audioMedia.codec = aacHeader.codec;\n        audioMedia.channelCount = aacHeader.channelCount;\n        audioMedia.sampleRate = audioSampleRate;\n        audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex;\n\n        if (!this._hasAudioSequence) {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n        } else {\n          this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n          // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        }\n        this._hasAudioSequence = true;\n\n        this._metaChange = true;\n      } else {\n        if (this._metaChange) {\n          chunk.options = {\n            meta: track.meta\n          };\n          this._metaChange = false;\n        }\n\n        chunk.data = chunk.data.slice(1, chunk.data.length);\n        track.samples.push(chunk);\n      }\n      if (!validate) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false);\n        // this.logger.warn(this.TAG, error.message)\n      }\n    }\n\n    /**\n     * parse hevc/avc video data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseHevcData',\n    value: function _parseHevcData(chunk) {\n      // header\n      var info = this.loaderBuffer.shift(1)[0];\n      chunk.frameType = (info & 0xf0) >>> 4;\n      chunk.isKeyframe = chunk.frameType === 1;\n      // let tempCodecID = this.tracks.videoTrack.codecID\n      var codecID = info & 0x0f;\n      this.tracks.videoTrack.codecID = codecID;\n\n      // hevc和avc的header解析方式一样\n      chunk.avcPacketType = this.loaderBuffer.shift(1)[0];\n      chunk.cts = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 12) {\n        var data = this.loaderBuffer.shift(chunk.datasize - 5);\n        chunk.data = data;\n\n        if (Number.parseInt(chunk.avcPacketType) !== 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          }\n          var nalu = {};\n          var r = 0;\n          nalu.cts = chunk.cts;\n          nalu.dts = chunk.dts;\n          while (chunk.data.length > r) {\n            var sizes = chunk.data.slice(Number.parseInt(r), 4 + r);\n            nalu.size = sizes[3];\n            nalu.size += sizes[2] * 256;\n            nalu.size += sizes[1] * 256 * 256;\n            nalu.size += sizes[0] * 256 * 256 * 256;\n            r += 4;\n            nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r);\n            r += nalu.size;\n            this.tracks.videoTrack.samples.push(nalu);\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          } else {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        }\n      } else if (codecID === 7) {\n        var _data = this.loaderBuffer.shift(chunk.datasize - 5);\n        if (_data[4] === 0 && _data[5] === 0 && _data[6] === 0 && _data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + _data[i];\n          }\n          avcclength -= 4;\n          _data = _data.slice(4, _data.length);\n          _data[3] = avcclength % 256;\n          avcclength = (avcclength - _data[3]) / 256;\n          _data[2] = avcclength % 256;\n          avcclength = (avcclength - _data[2]) / 256;\n          _data[1] = avcclength % 256;\n          _data[0] = (avcclength - _data[1]) / 256;\n        }\n\n        chunk.data = _data;\n        // If it is AVC sequece Header.\n        if (chunk.avcPacketType === 0) {\n          this._avcSequenceHeaderParser(chunk.data);\n          var validate = this._datasizeValidator(chunk.datasize);\n          if (validate) {\n            if (!this._hasVideoSequence) {\n              this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n            } else {\n              this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n              // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n            }\n            this._hasVideoSequence = true;\n          }\n          this._metaChange = true;\n        } else {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n            return;\n          }\n          if (this._metaChange) {\n            chunk.options = {\n              meta: Object.assign({}, this.tracks.videoTrack.meta)\n            };\n            this._metaChange = false;\n          }\n          this.tracks.videoTrack.samples.push(chunk);\n          // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n        }\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('video codeid is ' + codecID), false);\n        chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n        }\n        this.tracks.videoTrack.samples.push(chunk);\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n      delete chunk.tagType;\n    }\n\n    /**\n     * parse avc metadata\n     * @param data\n     * @private\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var track = this.tracks.videoTrack;\n\n      if (!track) {\n        return;\n      }\n\n      var offset = 0;\n\n      if (!track.meta) {\n        track.meta = new VideoTrackMeta();\n      }\n      var meta = track.meta;\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        this.tracks.videoTrack.meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i = 0; _i < numOfPps; _i++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        this.tracks.videoTrack.meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      // fill video media info\n      var videoMedia = this._context.mediaInfo.video;\n\n      videoMedia.codec = meta.codec;\n      videoMedia.profile = meta.profile;\n      videoMedia.level = meta.level;\n      videoMedia.chromaFormat = meta.chromaFormat;\n      videoMedia.frameRate = meta.frameRate;\n      videoMedia.parRatio = meta.parRatio;\n      videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth;\n      videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight;\n\n      meta.duration = this._context.mediaInfo.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      track.meta = meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize) {\n      var datasizeConfirm = this.loaderBuffer.toInt(0, 4);\n      this.loaderBuffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'isFlvFile',\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    _classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  _createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'load',\n    value: function load(url, opts) {\n      var _this2 = this;\n\n      this.url = url;\n\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n      this.loading = true;\n      return fetch(this.url, params).then(function (response) {\n        if (response.ok) {\n          _this2.status = response.status;\n          Promise.resolve().then(function () {\n            _this2._onFetchResponse(response);\n          });\n\n          return Promise.resolve(response);\n        }\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, new Error(response.status + ' (' + response.statusText + ')'));\n      }).catch(function (error) {\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var _this3 = this;\n\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n      this._reader && this._reader.read().then(function (val) {\n        if (_this3._canceled || _this3._destroyed) {\n          if (_this3._reader) {\n            try {\n              _this3._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this3.loading = false;\n          _this3.status = 0;\n          Promise.resolve().then(function () {\n            _this3.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          });\n          return;\n        }\n\n        buffer.push(val.value);\n        Promise.resolve().then(function () {\n          _this3.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        });\n        return _this3._onReader(reader, taskno);\n      }).catch(function (error) {\n        _this3.loading = false;\n        _this3.emit(LOADER_EVENTS.LOADER_ERROR, _this3.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // 添加自定义头\n      };if (_typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (_typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials 在默认情况下不被使用。\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // 防止failed: 200错误被打印到控制台上\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      this._canceled = true;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      this.cancel();\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n\n  return FetchLoader;\n}();\n\nexport default FetchLoader;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Source = function Source() {\n  _classCallCheck(this, Source);\n\n  this.mimetype = '';\n  this.init = null;\n  this.data = [];\n};\n\nvar PreSource = function () {\n  function PreSource() {\n    _classCallCheck(this, PreSource);\n\n    this.sources = {};\n  }\n\n  _createClass(PreSource, [{\n    key: 'getSource',\n    value: function getSource(source) {\n      return this.sources[source];\n    }\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new Source();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.sources = {};\n    }\n  }]);\n\n  return PreSource;\n}();\n\nexport default PreSource;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    _classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n\n\n  _createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n\n  return XgBuffer;\n}();\n\nexport default XgBuffer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AAC = function () {\n  function AAC() {\n    _classCallCheck(this, AAC);\n  }\n\n  _createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n\n  return AAC;\n}();\n\nexport default AAC;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from 'xgplayer-transmuxer-constant-events';\nimport AAC from 'xgplayer-transmuxer-codec-aac';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    _classCallCheck(this, Compatibility);\n\n    this.nextAudioDts = 0; // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0; // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined; // 上一段音频数据的长度\n    this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0; // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0; // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // 补充音频帧（）\n    this.filledVideoSamples = []; // 补充视频帧（）\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    this._videoLargeGap = 0;\n    this._audioLargeGap = 0;\n  }\n\n  _createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // 估算下一段音频数据的dts\n      this.nextVideoDts = null; // 估算下一段视频数据的dts\n\n      this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n      this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n      this.lastVideoDts = undefined; // 上一段音频数据的长度\n      this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n      // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n      // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // 补充音频帧（）\n      this.filledVideoSamples = []; // 补充视频帧（）\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n      if (this._firstAudioSample) {\n        this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples);\n      }\n\n      var _Compatibility$detact = Compatibility.detactChangeStream(this.videoTrack.samples),\n          videoChanged = _Compatibility$detact.changed,\n          videoChangedIdx = _Compatibility$detact.changedIdx;\n\n      if (videoChanged && !isFirstAudioSamples) {\n        this.fixChangeStreamVideo(videoChangedIdx);\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detact2 = Compatibility.detactChangeStream(this.audioTrack.samples),\n          audioChanged = _Compatibility$detact2.changed,\n          audioChangedIdx = _Compatibility$detact2.changedIdx;\n\n      if (audioChanged) {\n        this.fixChangeStreamAudio(audioChangedIdx);\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      // console.log('next video', this.nextVideoDts)\n\n      for (var i = 0, len = videoSamples.length; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      if (meta.frameRate && meta.frameRate.fixed === false) {\n        return;\n      }\n\n      if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n        return;\n      }\n\n      // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n      var firstSample = videoSamples[0];\n\n      // step0.修复hls流出现巨大gap，需要强制重定位的问题\n      if (this._videoLargeGap !== 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      if (firstSample.dts !== this._firstVideoSample.dts && (streamChangeStart || this.videoLastSample && Compatibility.detectLargeGap(this.videoLastSample.dts, firstSample))) {\n        if (streamChangeStart) {\n          this.nextVideoDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        } else {\n          this.nextVideoDts = this.videoLastSample.dts;\n        }\n\n        this._videoLargeGap = this.nextVideoDts - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. 修复与audio首帧差距太大的问题\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i = 0; _i < fillCount; _i++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // 视频头部帧缺失需要复制第一帧\n            // 重新计算sample的dts和pts\n            clonedFirstSample.dts = videoFirstDts - (_i + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (gap < -2 * meta.refSampleDuration) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      this.videoLastSample = curLastSample;\n\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      // console.log('next audio', this.nextAudioDts)\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n      // 对audioSamples按照dts做排序\n      // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n      if (this._audioLargeGap !== 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n\n      if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n        if (streamChangeStart) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n      // step0. 首帧与video首帧间距大的问题\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n        if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < silentSampleCount; _i2++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i2 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. 处理samples段之间的丢帧情况\n        // 当发现duration差距大于1帧时进行补帧\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          meta.refSampleDurationFixed = undefined;\n        }\n\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n            // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n            meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap;\n          } else {\n            var silentFrameCount = Math.floor(gap / meta.refSampleDuration);\n\n            for (var _i3 = 0; _i3 < silentFrameCount; _i3++) {\n              var computed = firstDts - (_i3 + 1) * meta.refSampleDuration;\n              var _silentSample = Object.assign({}, audioSamples[0], {\n                dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n              });\n\n              this.filledAudioSamples.push({\n                dts: _silentSample.dts,\n                size: _silentSample.data.byteLength\n              });\n              this.audioTrack.samples.unshift(_silentSample);\n            }\n          }\n        } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n          // 当差距比较小的时候将音频帧重定位\n          // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n          audioSamples[0].dts = this.nextAudioDts;\n          audioSamples[0].pts = this.nextAudioDts;\n        } else if (gap < 0) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n        }\n      }\n      var lastOriginDts = audioSamples[audioSamples.length - 1].originDts;\n      var lastDts = audioSamples[audioSamples.length - 1].dts;\n      var lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration;\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration;\n      this.lastAudioDts = lastDts;\n\n      audioSamples[audioSamples.length - 1].duration = lastSampleDuration;\n\n      // step3. 修复samples段内部的dts异常问题\n      for (var _i4 = 0, _len = audioSamples.length; _i4 < _len; _i4++) {\n        var current = audioSamples[_i4];\n        var next = audioSamples[_i4 + 1];\n\n        if (!next) {\n          break;\n        }\n\n        var duration = next.dts - current.dts;\n        audioSamples[_i4].duration = duration;\n        /*\n        if (duration > (2 * meta.refSampleDuration)) {\n          // 两帧之间间隔太大，需要补空白帧\n          /**\n          let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n          let frameIdx = 0\n           while (frameIdx < silentFrameCount) {\n            const silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n              filtered: 0,\n              isSilent: true\n            }\n             audioSamples.splice(i, 0, silentSample)\n             this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n             frameIdx++\n            i++ // 不对静音帧做比较\n          }\n        } */\n      }\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var prevDts = changeIdx === 0 ? this.videoLastSample ? this.videoLastSample.dts : this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixVideo(false);\n      }\n\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._videoLargeGap = 0;\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else if (this.videoLastSample) {\n        streamChangeStart = this.videoLastSample.dts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixAudio(false);\n      }\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._audioLargeGap = 0;\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else {\n        streamChangeStart = this.lastAudioDts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // 获取video和audio的首帧数据\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // 寻找dts最小的帧作为首个音频帧\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * 在没有refSampleDuration的问题流中，\n     */\n\n  }, {\n    key: 'fixRefSampleDuration',\n    value: function fixRefSampleDuration(meta, samples) {\n      var isVideo = meta.type === 'video';\n      var allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount;\n      var firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts;\n      var filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length;\n\n      if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          meta.refSampleDuration = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // 将refSampleDuration重置为计算后的平均值\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n          if (durationAvg > 0 && durationAvg < 1000) {\n            meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n          }\n        }\n      }\n    }\n\n    /**\n     * 记录截止目前一共播放了多少帧\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * 去除不合法的帧（倒退、重复帧）\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var firstAudioSample = this.audioTrack.samples[0];\n      var firstVideoSample = this.videoTrack.samples[0];\n      // const { _firstVideoSample, _firstAudioSample } = this\n\n      if (firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample, index) {\n          if (sample === firstAudioSample) {\n            return true;\n          }\n          return sample.dts > firstAudioSample.dts;\n        });\n      }\n\n      if (firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample, index) {\n          if (sample === firstVideoSample) {\n            return true;\n          }\n          return sample.dts > firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n\n    /**\n     * 寻找dts最小的sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectLargeGap',\n    value: function detectLargeGap(nextDts, firstSample) {\n      if (nextDts === null) {\n        return;\n      }\n      var curDts = firstSample.dts || 0;\n      var cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000; // fix hls流出现大量流dts间距问题\n      var cond2 = firstSample.options && firstSample.options.discontinue;\n\n      return cond1 || cond2;\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * 中途换流\n     */\n\n  }, {\n    key: 'detactChangeStream',\n    value: function detactChangeStream(samples) {\n      var changed = false;\n      var changedIdx = -1;\n      for (var i = 0, len = samples.length; i < len; i++) {\n        if (samples[i].options && samples[i].options.meta) {\n          changed = true;\n          changedIdx = i;\n          break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdx: changedIdx\n      };\n    }\n  }]);\n\n  return Compatibility;\n}();\n\nexport default Compatibility;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MSE = function () {\n  function MSE(configs, context) {\n    _classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n  }\n\n  _createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this.container.src = URL.createObjectURL(this.mediaSource);\n      this.url = this.container.src;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx) {\n      this._context = newCtx;\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit('SOURCE_UPDATE_END');\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (this.mediaSource.readyState !== 'open') {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track) {\n          var dur = type === 'audio' ? 21 : 40;\n          if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n          if (sources[type].data.length >= this.preloadTime / dur) {\n            add = true;\n          }\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 0) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n          var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n          this.sourceBuffers[_type] = sourceBuffer;\n          sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (sources) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var type = Object.keys(this.sourceBuffers)[i];\n          var sourceBuffer = this.sourceBuffers[type];\n          var source = sources.sources[type];\n          if (source && !source.inited) {\n            // console.log('append initial segment')\n            try {\n              sourceBuffer.appendBuffer(source.init.buffer.buffer);\n              source.inited = true;\n            } catch (e) {\n              // DO NOTHING\n            }\n          } else if (source) {\n            var data = source.data.shift();\n            if (data) {\n              try {\n                sourceBuffer.appendBuffer(data.buffer.buffer);\n              } catch (e) {\n                source.data.unshift(data);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      var _mediaSource = this.mediaSource,\n          readyState = _mediaSource.readyState,\n          activeSourceBuffers = _mediaSource.activeSourceBuffers;\n\n      if (readyState === 'open' && activeSourceBuffers.length === 0) {\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          // log\n        }\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        if (!buffer.updating) {\n          // console.log('remove', start, end)\n          buffer.remove(start, end);\n        }\n      }\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      return this.removeBuffers().then(function () {\n        for (var i = 0; i < Object.keys(_this2.sourceBuffers).length; i++) {\n          var _buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n          _this2.mediaSource.removeSourceBuffer(_buffer);\n          delete _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        }\n\n        _this2.container.removeEventListener('timeupdate', _this2.onTimeUpdate);\n        _this2.container.removeEventListener('waiting', _this2.onWaiting);\n        _this2.mediaSource.removeEventListener('sourceopen', _this2.onSourceOpen);\n\n        _this2.endOfStream();\n        window.URL.revokeObjectURL(_this2.url);\n\n        _this2.url = null;\n        _this2.configs = {};\n        _this2.container = null;\n        _this2.mediaSource = null;\n        _this2.sourceBuffers = {};\n        _this2.preloadTime = 1;\n      });\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      var buffered = buffer.buffered;\n      var bEnd = 0.1;\n      for (var i = 0, len = buffered.length; i < len; i++) {\n        bEnd = buffered.end(i);\n      }\n      try {\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n\n  return MSE;\n}();\n\nexport default MSE;","var PLAYER_EVENTS = {\n  SEEK: 'SEEK'\n};\n\nvar LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  DETECT_CHANGE_STREAM_DISCONTINUE: 'DETECT_CHANGE_STREAM_DISCONTINUE',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n\n  // hls专有events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS, PLAYER_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYTO_EVENTS: CRYTO_EVENTS,\n  PLAYER_EVENTS: PLAYER_EVENTS\n};","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport default sniffer;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import _SpsParser from './sps';\nimport _NalUnit from './nalunit';\nexport var SpsParser = _SpsParser;\nexport var NalUnit = _NalUnit;","import Remuxer from 'xgplayer-transmuxer-remux-mp4'\nimport FlvDemuxer from 'xgplayer-transmuxer-demux-flv'\nimport FetchLoader from 'xgplayer-transmuxer-loader-fetch'\nimport EVENTS from 'xgplayer-transmuxer-constant-events'\n\nimport Tracks from 'xgplayer-transmuxer-buffer-track'\nimport PreSource from 'xgplayer-transmuxer-buffer-presource'\nimport XgBuffer from 'xgplayer-transmuxer-buffer-xgbuffer'\nimport Compatibility from 'xgplayer-transmuxer-codec-compatibility'\n\nimport Mse from 'xgplayer-utils-mse'\nimport Player from 'xgplayer'\n\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nconst DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nconst LOADER_EVENTS = EVENTS.LOADER_EVENTS\nconst MSE_EVENTS = EVENTS.MSE_EVENTS\n\nconst Tag = 'FLVController'\n\nclass Logger {\n  warn () {}\n}\n\nconst FLV_ERROR = 'FLV_ERROR'\n\nexport default class FlvController {\n  constructor (player, mse) {\n    this.TAG = Tag\n    this._player = player\n    this.state = {\n      initSegmentArrived: false,\n      randomAccessPoints: []\n    }\n\n    this.mse = mse;\n\n    this.bufferClearTimer = null;\n\n    this._handleTimeUpdate = this._handleTimeUpdate.bind(this)\n  }\n\n  init () {\n    if (!this.mse) {\n      this.mse = new Mse({ container: this._player.video }, this._context);\n      this.mse.init();\n    }\n\n    this.initComponents();\n    this.initListeners()\n  }\n\n  initComponents () {\n    this._context.registry('FETCH_LOADER', FetchLoader)\n    this._context.registry('LOADER_BUFFER', XgBuffer)\n\n    this._context.registry('FLV_DEMUXER', FlvDemuxer)\n    this._context.registry('TRACKS', Tracks)\n\n    this._context.registry('MP4_REMUXER', Remuxer)(this._player.currentTime)\n    this._context.registry('PRE_SOURCE_BUFFER', PreSource)\n\n    if (this._player.config.compatibility !== false) {\n      this._context.registry('COMPATIBILITY', Compatibility)\n    }\n\n    this._context.registry('LOGGER', Logger)\n  }\n\n  initListeners () {\n    this.on(LOADER_EVENTS.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this))\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._handleNetworkError.bind(this))\n\n    this.on(DEMUX_EVENTS.MEDIA_INFO, this._handleMediaInfo.bind(this))\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._handleMetadataParsed.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._handleDemuxError.bind(this))\n\n    this.on(REMUX_EVENTS.INIT_SEGMENT, this._handleAppendInitSegment.bind(this))\n    this.on(REMUX_EVENTS.MEDIA_SEGMENT, this._handleMediaSegment.bind(this))\n    this.on(REMUX_EVENTS.RANDOM_ACCESS_POINT, this._handleAddRAP.bind(this))\n\n    this.on(MSE_EVENTS.SOURCE_UPDATE_END, this._handleSourceUpdateEnd.bind(this))\n\n    this._player.on('timeupdate', this._handleTimeUpdate)\n  }\n\n  _handleMediaInfo () {\n    if (!this._context.mediaInfo) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('failed to get mediainfo'))\n    }\n  }\n\n  _handleLoaderDataLoaded () {\n    this.emitTo('FLV_DEMUXER', DEMUX_EVENTS.DEMUX_START)\n  }\n\n  _handleMetadataParsed (type) {\n    this.emit(REMUX_EVENTS.REMUX_METADATA, type)\n  }\n  _handleDemuxComplete () {\n    this.emit(REMUX_EVENTS.REMUX_MEDIA)\n  }\n\n  _handleAppendInitSegment () {\n    this.state.initSegmentArrived = true\n    this.mse.addSourceBuffers()\n  }\n\n  _handleMediaSegment () {\n    this.mse.addSourceBuffers()\n    this.mse.doAppend();\n  }\n\n  _handleSourceUpdateEnd () {\n    const time = this._player.currentTime;\n    const video = this._player.video;\n    const preloadTime = this._player.config.preloadTime || 5\n\n    const { length } = video.buffered;\n\n    if (length === 0) {\n      return;\n    }\n\n    const bufferEnd = video.buffered.end(length - 1);\n    if (bufferEnd - time > preloadTime * 2) {\n      this._player.currentTime = bufferEnd - preloadTime\n    }\n    this.mse.doAppend();\n  }\n\n  _handleTimeUpdate () {\n    const time = this._player.currentTime\n\n    const video = this._player.video;\n    let buffered = video.buffered\n\n    if (!buffered || !buffered.length) {\n      return;\n    }\n\n    let range = [0, 0]\n    let currentTime = video.currentTime\n    if (buffered) {\n      for (let i = 0, len = buffered.length; i < len; i++) {\n        range[0] = buffered.start(i)\n        range[1] = buffered.end(i)\n        if (range[0] <= currentTime && currentTime <= range[1]) {\n          break\n        }\n      }\n    }\n\n    const bufferStart = range[0]\n    const bufferEnd = range[1]\n\n    if (currentTime > bufferEnd || currentTime < bufferStart) {\n      video.currentTime = bufferStart;\n      return;\n    }\n\n    if (time - bufferStart > 10 || buffered.length > 1) {\n      // 在直播时及时清空buffer，降低直播内存占用\n      if (this.bufferClearTimer || !this.state.randomAccessPoints.length) {\n        return;\n      }\n      let rap = Infinity;\n      for (let i = 0; i < this.state.randomAccessPoints.length; i++) {\n        const temp = Math.ceil(this.state.randomAccessPoints[i] / 1000)\n        if (temp > time - 10) {\n          break;\n        } else {\n          rap = temp;\n        }\n      }\n\n      // console.log('rap', rap, `time ${time}`, `bufferEnd ${bufferEnd}`,`clean ${Math.min(rap, time - 10, bufferEnd - 10)}`)\n      this.mse.remove(Math.max(Math.min(rap, time - 10, bufferEnd - 10), 0.1), 0)\n\n      this.bufferClearTimer = setTimeout(() => {\n        this.bufferClearTimer = null\n      }, 5000)\n    }\n  }\n\n  _handleNetworkError (tag, err) {\n    this._player.emit('error', new Player.Errors('network', this._player.config.url))\n    this._onError(LOADER_EVENTS.LOADER_ERROR, tag, err, true)\n  }\n\n  _handleDemuxError (tag, err, fatal) {\n    if (fatal === undefined) {\n      fatal = false;\n    }\n    this._player.emit('error', new Player.Errors('parse', this._player.config.url))\n    this._onError(DEMUX_EVENTS.DEMUX_ERROR, tag, err, fatal)\n  }\n\n  _handleAddRAP (rap) {\n    if (this.state.randomAccessPoints) {\n      this.state.randomAccessPoints.push(rap)\n    }\n  }\n\n  _onError (type, mod, err, fatal) {\n    let error = {\n      errorType: type,\n      errorDetails: `[${mod}]: ${err.message}`,\n      errorFatal: fatal || false\n    }\n    this._player.emit(FLV_ERROR, error);\n  }\n\n  seek () {\n    if (!this.state.initSegmentArrived) {\n      this.loadData()\n    }\n  }\n\n  loadData (url = this._player.config.url) {\n    this.emit(LOADER_EVENTS.LADER_START, url)\n  }\n\n  pause () {\n    const loader = this._context.getInstance('FETCH_LOADER')\n\n    if (loader) {\n      loader.cancel()\n    }\n  }\n\n  destroy () {\n    this._player.off('timeupdate', this._handleTimeUpdate)\n    this._player = null\n    this.mse = null\n    this.state.randomAccessPoints = []\n  }\n}\n","import Player from 'xgplayer'\nimport EVENTS from 'xgplayer-transmuxer-constant-events'\nimport Context from 'xgplayer-transmuxer-context';\nimport FLV from './flv-live'\nconst flvAllowedEvents = EVENTS.FlvAllowedEvents;\n\nclass FlvPlayer extends Player {\n  constructor (config) {\n    super(config)\n    this.context = new Context(flvAllowedEvents)\n    this.initEvents()\n    this.loaderCompleteTimer = null\n    this.started = false\n    // const preloadTime = player.config.preloadTime || 15\n  }\n\n  start () {\n    if (this.started) {\n      return;\n    }\n    this.initFlv()\n    this.context.init()\n    super.start(this.flv.mse.url)\n    this.loadData()\n    this.started = true\n  }\n\n  initFlvEvents (flv) {\n    const player = this;\n    flv.once(EVENTS.REMUX_EVENTS.INIT_SEGMENT, () => {\n      Player.util.addClass(player.root, 'xgplayer-is-live')\n      if (!Player.util.findDom(this.root, 'xg-live')) {\n        const live = Player.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live')\n        player.controls.appendChild(live)\n      }\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_COMPLETE, () => {\n      // 直播完成，待播放器播完缓存后发送关闭事件\n      if (!player.paused) {\n        this.loaderCompleteTimer = setInterval(() => {\n          const end = player.getBufferedRange()[1]\n          if (Math.abs(player.currentTime - end) < 0.5) {\n            player.emit('ended')\n            window.clearInterval(this.loaderCompleteTimer)\n          }\n        }, 200)\n      } else {\n        player.emit('ended')\n      }\n    })\n  }\n\n  initFlvBackupEvents (flv, ctx) {\n    let mediaLength = 3;\n    flv.on(EVENTS.REMUX_EVENTS.MEDIA_SEGMENT, () => {\n      mediaLength -= 1;\n      if (mediaLength === 0) {\n        // ensure switch smoothly\n        this.flv = flv;\n        this.mse.resetContext(ctx);\n        this.context.destroy();\n        this.context = ctx;\n      }\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_COMPLETE, () => {\n      // 直播完成，待播放器播完缓存后发送关闭事件\n      if (!this.paused) {\n        this.loaderCompleteTimer = setInterval(() => {\n          const end = this.getBufferedRange()[1]\n          if (Math.abs(this.currentTime - end) < 0.5) {\n            this.emit('ended')\n            window.clearInterval(this.loaderCompleteTimer)\n          }\n        }, 200)\n      } else {\n        this.emit('ended')\n      }\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_ERROR, () => {\n      ctx.destroy()\n    })\n  }\n\n  initEvents () {\n    this.on('seeking', () => {\n      const time = this.currentTime\n      const range = this.getBufferedRange()\n      if (time > range[1] || time < range[0]) {\n        this.flv.seek(this.currentTime)\n      }\n    })\n  }\n\n  initFlv () {\n    const flv = this.context.registry('FLV_CONTROLLER', FLV)(this)\n    this.initFlvEvents(flv)\n    this.flv = flv\n    this.mse = flv.mse;\n    return flv;\n  }\n\n  play () {\n    if (this._hasStart) {\n      return this._destroy().then(() => {\n        this.context = new Context(flvAllowedEvents)\n        this.start()\n        return super.play()\n      })\n    } else {\n      return super.play()\n    }\n  }\n\n  pause () {\n    super.pause()\n    if (this.flv) {\n      this.flv.pause()\n    }\n  }\n\n  loadData (time = this.currentTime) {\n    if (this.flv) {\n      this.flv.seek(time)\n    }\n  }\n\n  destroy () {\n    this._destroy().then(() => {\n      super.destroy();\n    })\n  }\n\n  _destroy () {\n    return this.flv.mse.destroy().then(() => {\n      this.context.destroy()\n      this.flv = null\n      this.context = null\n      if (this.loaderCompleteTimer) {\n        window.clearInterval(this.loaderCompleteTimer)\n      }\n    })\n  }\n\n  get src () {\n    return this.currentSrc\n  }\n\n  set src (url) {\n    this.switchURL(url)\n  }\n\n  switchURL (url) {\n    const context = new Context(flvAllowedEvents);\n    const flv = context.registry('FLV_CONTROLLER', FLV)(this, this.mse)\n    context.init()\n    this.initFlvBackupEvents(flv, context);\n    flv.loadData(url);\n  }\n\n  static isSupported () {\n    return window.MediaSource &&\n      window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n  }\n}\n\nexport default FlvPlayer\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","PLAYER_EVENTS","LOADER_EVENTS","DEMUX_EVENTS","REMUX_EVENTS","MSE_EVENTS","HLS_EVENTS","CRYTO_EVENTS","ALLEVENTS","assign","FlvAllowedEvents","HlsAllowedEvents","key","hasOwnProperty","push","_key","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","sniffer","r","os","isPc","isTablet","ua","navigator","userAgent","toLowerCase","reg","concat","keys","filter","test","isWindowsPhone","isSymbian","isAndroid","isFireFox","isPhone","_createClass","defineProperties","target","props","i","length","descriptor","defineProperty","protoProps","staticProps","MediaSegmentList","type","this","_type","_list","_lastAppendLocation","beginDts","list","last","mid","lbound","ubound","idx","originDts","Math","floor","lastSample","_searchNearestSegmentBefore","segment","lastAppendIdx","insertIdx","originStartDts","splice","getLastSegmentBefore","segmentIdx","randomAccessPoints","exports","ResultConstructor","totalLength","_len","arguments","arrays","Array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","result","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","set","_concat2","obj","__esModule","default","_concat","module","Buffer","buffer","Uint8Array","_this","forEach","item","Concat","arr","padStart4Hex","hexNum","toString","padStart","temp","num","parseInt","Fmp4","writeUint32","size","name","content","write","apply","version","flag","initBox","_ref","meta","mvhd","duration","timescale","trak","videoTrak","audioTrak","mvex","id","byteLength","bytes","data","tkhd","presentWidth","presentHeight","mdia","avcc","parRatio","channelCount","sampleRate","config","width","height","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","dref","stsd","stts","stsc","stsz","stco","mp4a","avc1","samplerate","esds","configlen","hSpacing","vSpacing","btrt","pasp","trackID","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","time","sdtp","trun","sdtpLength","sampleCount","samples","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","cts","mdatBox","unit","charCodeAt","EVENTS","Mp4Remuxer","curTime","_dtsBase","_isDtsBaseInited","_videoSegmentList","_audioSegmentList","browser","_fillSilenceFrame","isFirstVideo","isFirstAudio","videoAllDuration","audioAllDuration","on","REMUX_MEDIA","remux","bind","REMUX_METADATA","onMetaDataReady","DETECT_CHANGE_STREAM","resetDtsBase","SEEK","seek","clear","_context$getInstance","_context","getInstance","audioTrack","videoTrack","calcDtsBase","_remuxVideo","_remuxAudio","track","presourcebuffer","source","getSource","createSource","mimetype","codec","init","remuxInitSegment","emit","INIT_SEGMENT","initSegment","ftyp","moov","dts","audioBase","Infinity","videoBase","min","firstDts","mp4Samples","maxLoop","avcSample","shift","isKeyframe","options","unshift","isContinue","pts","mdatSample","sampleDuration","videoMeta","refSampleDuration","log","RANDOM_ACCESS_POINT","moofMdat","moof","mdat","writeToSource","MEDIA_SEGMENT","isFirstDtsInited","sample","audioMeta","refSampleDurationFixed","mp4Sample","getSilentFrame","_audioMeta","_player","AudioTrackMeta","_default","VideoTrackMeta","sps","pps","Golomb","uint8array","TAG","_buffer","_bufferIndex","_totalBytes","_totalBits","_currentWord","_currentWordBitsLeft","bufferBytesLeft","bytesRead","word","subarray","getUint32","bits","valu","Error","_fillCurrentWord","readBits","zeroCount","_skipLeadingZero","leadingZeros","readUEG","SPSParser","src","srcLength","dst","dstIdx","rbsp","_ebsp2rbsp","gb","readByte","profileIdc","levelIdc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","_i","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","par_width","par_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","par_w_table","par_h_table","num_units_in_tick","time_scale","parScale","crop_unit_x","crop_unit_y","codec_width","codec_height","present_width","ceil","destroy","getChromaFormatString","count","lastScale","nextScale","toFixed","chroma","spsConfig","codec_size","codecWidth","codecHeight","present_size","profile","level","bitDepth","chromaFormat","par_ratio","frameRate","frame_rate","fpsDen","fpsNum","SpsParser","Nalunit","position","dataview","getInt32","getInt16","getInt8","getAnnexbNals","getAvccNals","nals","getHeaderPositionAnnexB","start","pos","end","header","slice","headerLength","skip","body","analyseNal","ndr","idr","parseSPS","ret","_SpsParser","Track","sequenceNumber","droppedSamples","reset","AudioTrack","_Track","getPrototypeOf","VideoTrack","_Track2","_this2","dropped","Tracks","UTF8","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs","_ucs2","join","checkLength","array","isLe","DATA_TYPES","AMFParser","readOffset","metaData","parseValue","bodySize","resetStatus","strLen","getUint16","str","decode","dv","ts","getFloat64","Date","parseString","isObjEnd","NUMBER","BOOLEAN","STRING","OBJECT","MIX_ARRAY","OBJECT_END","STRICT_ARRAY","DATE","LONE_STRING","dataView","getUint8","objEndSize","amfObj","parseObject","isObjectEnd","_objEndSize","amfVar","arrLength","script","date","parseDate","longStr","parseLongString","FlvDemuxer","_firstFragmentLoaded","_trackNum","_hasScript","DEMUX_START","doParseFlv","loaderBuffer","chunk","loopMax","_parseFlvTag","DEMUX_COMPLETE","parseFlvHeader","isFlvFile","initVideoTrack","initAudioTrack","DEMUX_ERROR","tracks","_parseFlvTagHeader","_processChunk","tagType","toInt","filtered","datasize","timestamp","timestampExt","_parseScriptData","_parseAACData","_parseHevcData","info","resolve","onMetaData","mediaInfo","hasVideo","hsaAudio","hasAudio","_datasizeValidator","MEDIA_INFO","hasSpecificConfig","audiosamplerate","audiochannels","sampleRateIndex","_meta","framerate","fixed","objectType","_switchAudioSampleRate","frameLength","dependsOnCoreCoder","extensionFlagIndex","window","extensionSamplingIndex","samplingIndex","indexOf","format","_hasAudioSequence","_switchAudioSamplingFrequency","frameLenth","audioSampleRate","audioSampleRateIndex","validate","aacHeader","_aacSequenceHeaderParser","audioMedia","audio","AUDIO_METADATA_CHANGE","METADATA_PARSED","_metaChange","frameType","codecID","avcPacketType","Number","nalu","sizes","_data","avcclength","_avcSequenceHeaderParser","_hasVideoSequence","VIDEO_METADATA_CHANGE","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","nalUnitLength","numOfSps","j","codecString","_j","h","numOfPps","_size","_j2","toVideoMeta","videoMedia","video","samplingFrequencyIndex","datasizeConfirm","streamFlag","_typeof","_typeof2","FetchLoader","configs","url","status","error","_reader","_canceled","_destroyed","readtype","_loaderTaskNo","LADER_START","load","opts","params","getParams","loading","fetch","then","response","ok","_onFetchResponse","Promise","LOADER_ERROR","statusText","catch","taskno","json","LOADER_COMPLETE","text","arrayBuffer","_onReader","getReader","reader","_this3","cancel","e","read","val","LOADER_DATALOADED","headers","Headers","configHeaders","append","optHeaders","cors","mode","withCredentials","credentials","Source","PreSource","sources","XgBuffer","historyLen","_shiftBuffer","_ret","_ret2","tmpoff","tmp","templength","retInt","AAC","Compatibility","nextAudioDts","nextVideoDts","lastAudioSamplesLen","lastVideoSamplesLen","lastVideoDts","lastAudioDts","allAudioSamplesCount","allVideoSamplesCount","_firstAudioSample","_firstVideoSample","filledAudioSamples","filledVideoSamples","videoLastSample","audioLastSample","_videoLargeGap","_audioLargeGap","before","doFix","_getFirstSample","getFirstSample","isFirstAudioSamples","isFirstVideoSamples","recordSamplesCount","fixRefSampleDuration","_Compatibility$detact","detactChangeStream","videoChanged","changed","videoChangedIdx","changedIdx","fixChangeStreamVideo","doFixVideo","_Compatibility$detact2","audioChanged","audioChangedIdx","fixChangeStreamAudio","doFixAudio","removeInvalidSamples","first","streamChangeStart","_videoTrack","videoSamples","len","firstSample","doFixLargeGap","detectLargeGap","videoFirstDts","gap","fillCount","clonedFirstSample","curLastSample","pop","_audioTrack","audioSamples","samplesLen","silentFrame","_firstSample","videoFirstPts","_gap","silentSampleCount","_i2","silentSample","absGap","abs","silentFrameCount","_i3","computed","_silentSample","lastOriginDts","lastDts","lastSampleDuration","_i4","current","sortAudioSamples","changeIdx","_videoTrack2","prevDts","getStreamChangeStart","curDts","DETECT_CHANGE_STREAM_DISCONTINUE","firstPartSamples","secondPartSamples","dtsBase","_audioTrack2","findFirstVideoSample","findFirstAudioSample","isVideo","allSamplesCount","filledSamplesCount","isNaN","durationAvg","firstAudioSample","firstVideoSample","index","remuxer","sort","a","b","sorted","nextDts","cond1","cond2","discontinue","MSE","context","_emitter","container","mediaSource","sourceBuffers","preloadTime","onSourceOpen","onTimeUpdate","onUpdateEnd","onWaiting","MediaSource","addEventListener","URL","createObjectURL","newCtx","addSourceBuffers","doAppend","readyState","add","k","dur","_k","mime","sourceBuffer","addSourceBuffer","inited","appendBuffer","_mediaSource","activeSourceBuffers","endOfStream","updating","remove","taskList","removeEventListener","task","doCleanBuffer","retryTime","clean","clearBuffer","all","removeBuffers","removeSourceBuffer","revokeObjectURL","buffered","bEnd","Tag","Logger","FlvController","player","mse","state","bufferClearTimer","_handleTimeUpdate","Mse","initComponents","initListeners","registry","Remuxer","currentTime","compatibility","_handleLoaderDataLoaded","_handleNetworkError","_handleMediaInfo","_handleMetadataParsed","_handleDemuxComplete","_handleDemuxError","_handleAppendInitSegment","_handleMediaSegment","_handleAddRAP","SOURCE_UPDATE_END","_handleSourceUpdateEnd","emitTo","initSegmentArrived","bufferEnd","range","bufferStart","rap","max","setTimeout","tag","Player","Errors","_onError","fatal","mod","message","loadData","loader","off","flvAllowedEvents","Context","initEvents","loaderCompleteTimer","started","initFlv","flv","once","util","addClass","root","findDom","live","createDom","controls","appendChild","paused","setInterval","getBufferedRange","clearInterval","ctx","mediaLength","resetContext","_this4","FLV","initFlvEvents","_hasStart","_destroy","pause","_this7","initFlvBackupEvents","currentSrc","switchURL","isTypeSupported"],"mappings":"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"}