{"version":3,"file":"index.min.js","sources":["../../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../xgplayer-polyfills/babel/external-helpers.js","../../xgplayer-utils/es/models/media-info.js","../../xgplayer-utils/es/context.js","../../xgplayer-utils/es/constants/events.js","../../xgplayer-utils/es/env/sniffer.js","../../xgplayer-utils/es/env/isle.js","../../xgplayer-utils/es/env/utf8.js","../../xgplayer-utils/es/models/media-sample.js","../../xgplayer-utils/es/models/media-segment.js","../../xgplayer-utils/es/models/media-segment-list.js","../../xgplayer-utils/es/models/track-meta.js","../../xgplayer-utils/es/models/track-sample.js","../../xgplayer-utils/es/mse/index.js","../../xgplayer-utils/es/write/stream.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/index.js","../../xgplayer-utils/es/write/buffer.js","../../xgplayer-utils/es/crypto/index.js","../../xgplayer-utils/es/index.js","../../xgplayer-remux/es/mp4/fmp4.js","../../xgplayer-remux/es/mp4/index.js","../../xgplayer-remux/es/index.js","../../xgplayer-demux/es/hls/demuxer/m3u8parser.js","../../xgplayer-codec/es/h264/nalunit/golomb.js","../../xgplayer-codec/es/h264/nalunit/sps.js","../../xgplayer-codec/es/h264/nalunit/index.js","../../xgplayer-codec/es/aac/aac-helper.js","../../xgplayer-codec/es/compatibility.js","../../xgplayer-codec/es/index.js","../../xgplayer-buffer/es/track.js","../../xgplayer-buffer/es/buffer.js","../../xgplayer-buffer/es/presouce.js","../../xgplayer-buffer/es/index.js","../../xgplayer-demux/es/hls/demuxer/ts.js","../../xgplayer-demux/es/hls/playlist.js","../../xgplayer-demux/es/flv/amf-parser.js","../../xgplayer-demux/es/flv/index.js","../../xgplayer-demux/es/index.js","../../xgplayer-loader/es/fetch-loader.js","../../xgplayer-loader/es/index.js","../src/flv-live.js","../src/index.js"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","(function (global) {\n  var babelHelpers = global.babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  babelHelpers.possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n})(typeof global === \"undefined\" ? self : global);\n","var isObjectFilled = function isObjectFilled(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nvar MediaInfo = function () {\n  function MediaInfo() {\n    babelHelpers.classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n\n    this.hasVideo = null;\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n    };\n\n    this.hasAudio = null;\n\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    };\n  }\n\n  babelHelpers.createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this);\n    }\n  }], [{\n    key: \"isBaseInfoReady\",\n    value: function isBaseInfoReady(mediaInfo) {\n      return isObjectFilled(mediaInfo);\n    }\n  }, {\n    key: \"isVideoReady\",\n    value: function isVideoReady(mediaInfo) {\n      if (!mediaInfo.hasVideo) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }, {\n    key: \"isAudioReady\",\n    value: function isAudioReady(mediaInfo) {\n      if (!mediaInfo.hasAudio) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }]);\n  return MediaInfo;\n}();\n\nexport default MediaInfo;","import MediaInfo from './models/media-info';\nimport { EventEmitter } from 'events';\n\nvar DIRECT_EMIT_FLAG = '__TO__';\n\nvar Context = function () {\n  function Context() {\n    var allowedEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    babelHelpers.classCallCheck(this, Context);\n\n    this._emitter = new EventEmitter();\n    if (!this._emitter.off) {\n      this._emitter.off = this._emitter.removeListener;\n    }\n    this._instanceMap = {}; // 所有的解码流程实例\n    this._clsMap = {}; // 构造函数的map\n    this._inited = false;\n    this.mediaInfo = new MediaInfo();\n    this.allowedEvents = allowedEvents;\n    this._hooks = {}; // 注册在事件前/后的钩子，例如 before('DEMUX_COMPLETE')\n    this._emitCounter = {};\n  }\n\n  /**\n   * 从上下文中获取解码流程实例，如果没有实例，构造一个\n   * @param tag\n   * @param args\n   * @returns {*}\n   */\n\n\n  babelHelpers.createClass(Context, [{\n    key: 'getInstance',\n    value: function getInstance(tag) {\n      var instance = this._instanceMap[tag];\n      if (instance) {\n        return instance;\n      } else {\n        // throw new Error(`${tag}实例尚未初始化`)\n        return null;\n      }\n    }\n\n    /**\n     * 初始化具体实例\n     * @param tag\n     * @param args\n     */\n\n  }, {\n    key: 'initInstance',\n    value: function initInstance(tag) {\n      if (this._clsMap[tag]) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var newInstance = new (Function.prototype.bind.apply(this._clsMap[tag], [null].concat(args)))();\n        this._instanceMap[tag] = newInstance;\n        if (newInstance.init) {\n          newInstance.init(); // TODO: lifecircle\n        }\n        return newInstance;\n      } else {\n        throw new Error(tag + '\\u672A\\u5728context\\u4E2D\\u6CE8\\u518C');\n      }\n    }\n\n    /**\n     * 避免大量的initInstance调用，初始化所有的组件\n     * @param config\n     */\n\n  }, {\n    key: 'init',\n    value: function init(config) {\n      if (this._inited) {\n        return;\n      }\n      for (var tag in this._clsMap) {\n        // if not inited, init an instance\n        if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n          this.initInstance(tag, config);\n        }\n      }\n      this._inited = true;\n    }\n\n    /**\n     * 注册一个上下文流程，提供安全的事件发送机制\n     * @param tag\n     * @param cls\n     */\n\n  }, {\n    key: 'registry',\n    value: function registry(tag, cls) {\n      var _this2 = this;\n\n      var emitter = this._emitter;\n      var checkMessageName = this._isMessageNameValid.bind(this);\n      var self = this;\n      var enhanced = function (_cls) {\n        babelHelpers.inherits(enhanced, _cls);\n\n        function enhanced(a, b, c) {\n          babelHelpers.classCallCheck(this, enhanced);\n\n          var _this = babelHelpers.possibleConstructorReturn(this, (enhanced.__proto__ || Object.getPrototypeOf(enhanced)).call(this, a, b, c));\n\n          _this.listeners = {};\n          _this.onceListeners = {};\n          _this.TAG = tag;\n          _this._context = self;\n          return _this;\n        }\n\n        babelHelpers.createClass(enhanced, [{\n          key: 'on',\n          value: function on(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.listeners[messageName]) {\n              this.listeners[messageName].push(callback);\n            } else {\n              this.listeners[messageName] = [callback];\n            }\n\n            emitter.on('' + messageName + DIRECT_EMIT_FLAG + tag, callback); // 建立定向通信监听\n            return emitter.on(messageName, callback);\n          }\n\n          /**\n           * 在某个事件触发前执行\n           * @param messageName\n           * @param callback\n           */\n\n        }, {\n          key: 'before',\n          value: function before(messageName, callback) {\n            checkMessageName(messageName);\n            if (self._hooks[messageName]) {\n              self._hooks[messageName].push(callback);\n            } else {\n              self._hooks[messageName] = [callback];\n            }\n          }\n        }, {\n          key: 'once',\n          value: function once(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.onceListeners[messageName]) {\n              this.onceListeners[messageName].push(callback);\n            } else {\n              this.onceListeners[messageName] = [callback];\n            }\n\n            emitter.once('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n            return emitter.once(messageName, callback);\n          }\n        }, {\n          key: 'emit',\n          value: function emit(messageName) {\n            checkMessageName(messageName);\n            if (self._emitCounter[messageName]) {\n              self._emitCounter[messageName] += 1;\n              if (self._emitCounter[messageName] % 1000 === 0) {\n                var a = 'con';\n                var b = 'sole';\n                if (window.console) {\n                  window[a + b].warn('invoke: ', messageName);\n                  window.localStorage.setItem('xgplayer_invoke_' + messageName, self._emitCounter[messageName]);\n                }\n              }\n            } else {\n              self._emitCounter[messageName] = 1;\n            }\n\n            var beforeList = self._hooks ? self._hooks[messageName] : null;\n\n            if (beforeList) {\n              for (var i = 0, len = beforeList.length; i < len; i++) {\n                var callback = beforeList[i];\n                callback();\n              }\n            }\n\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            return emitter.emit.apply(emitter, [messageName].concat(args));\n          }\n\n          /**\n           * 定向发送给某个组件单例的消息\n           * @param messageName\n           * @param args\n           */\n\n        }, {\n          key: 'emitTo',\n          value: function emitTo(tag, messageName) {\n            checkMessageName(messageName);\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n              args[_key3 - 2] = arguments[_key3];\n            }\n\n            return emitter.emit.apply(emitter, ['' + messageName + DIRECT_EMIT_FLAG + tag].concat(args));\n          }\n        }, {\n          key: 'off',\n          value: function off(messageName, callback) {\n            checkMessageName(messageName);\n            return emitter.off(messageName, callback);\n          }\n        }, {\n          key: 'removeListeners',\n          value: function removeListeners() {\n            var hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners);\n\n            for (var messageName in this.listeners) {\n              if (hasOwn(messageName)) {\n                var callbacks = this.listeners[messageName] || [];\n                for (var i = 0; i < callbacks.length; i++) {\n                  var callback = callbacks[i];\n                  emitter.off(messageName, callback);\n                  emitter.off('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n                }\n              }\n            }\n\n            for (var _messageName in this.onceListeners) {\n              if (hasOwn(_messageName)) {\n                var _callbacks = this.onceListeners[_messageName] || [];\n                for (var _i = 0; _i < _callbacks.length; _i++) {\n                  var _callback = _callbacks[_i];\n                  emitter.off(_messageName, _callback);\n                  emitter.off('' + _messageName + DIRECT_EMIT_FLAG + tag, _callback);\n                }\n              }\n            }\n          }\n\n          /**\n           * 在组件销毁时，默认将它注册的事件全部卸载，确保不会造成内存泄漏\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            // step1 unlisten events\n            this.removeListeners();\n            this.listeners = {};\n\n            // step2 release from context\n            delete self._instanceMap[tag];\n            if (babelHelpers.get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this)) {\n              return babelHelpers.get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this).call(this);\n            }\n          }\n        }]);\n        return enhanced;\n      }(cls);\n      this._clsMap[tag] = enhanced;\n\n      /**\n       * get instance immediately\n       * e.g const instance = context.registry(tag, Cls)(config)\n       * */\n      return function () {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return _this2.initInstance.apply(_this2, [tag].concat(args));\n      };\n    }\n\n    /**\n     * 对存在的实例进行\n     */\n\n  }, {\n    key: 'destroyInstances',\n    value: function destroyInstances() {\n      var _this3 = this;\n\n      Object.keys(this._instanceMap).forEach(function (tag) {\n        if (_this3._instanceMap[tag].destroy) {\n          _this3._instanceMap[tag].destroy();\n        }\n      });\n    }\n\n    /**\n     * 编解码流程无需关注事件的解绑\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._emitter = null;\n      this.allowedEvents = [];\n      this._clsMap = null;\n      this._context = null;\n      this._hooks = null;\n      this._emitCounter = {};\n      this.destroyInstances();\n    }\n\n    /**\n     * 对信道进行收拢\n     * @param messageName\n     * @private\n     */\n\n  }, {\n    key: '_isMessageNameValid',\n    value: function _isMessageNameValid(messageName) {\n      if (!this.allowedEvents.indexOf(messageName) < 0) {\n        throw new Error('unregistered message name: ' + messageName);\n      }\n    }\n  }]);\n  return Context;\n}();\n\nexport default Context;","var LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n\n  // hls专有events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYTO_EVENTS: CRYTO_EVENTS\n};","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport default sniffer;","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nexport default le;","var UTF8 = function () {\n  function UTF8() {\n    babelHelpers.classCallCheck(this, UTF8);\n  }\n\n  babelHelpers.createClass(UTF8, null, [{\n    key: 'decode',\n    value: function decode(uint8array) {\n      var out = [];\n      var input = uint8array;\n      var i = 0;\n      var length = uint8array.length;\n\n      while (i < length) {\n        if (input[i] < 0x80) {\n          out.push(String.fromCharCode(input[i]));\n          ++i;\n          continue;\n        } else if (input[i] < 0xC0) {\n          // fallthrough\n        } else if (input[i] < 0xE0) {\n          if (UTF8._checkContinuation(input, i, 1)) {\n            var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n            if (ucs4 >= 0x80) {\n              out.push(String.fromCharCode(ucs4 & 0xFFFF));\n              i += 2;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF0) {\n          if (UTF8._checkContinuation(input, i, 2)) {\n            var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n            if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n              out.push(String.fromCharCode(_ucs & 0xFFFF));\n              i += 3;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF8) {\n          if (UTF8._checkContinuation(input, i, 3)) {\n            var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n            if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n              _ucs2 -= 0x10000;\n              out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n              out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n              i += 4;\n              continue;\n            }\n          }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n      }\n\n      return out.join('');\n    }\n  }, {\n    key: '_checkContinuation',\n    value: function _checkContinuation(uint8array, start, checkLength) {\n      var array = uint8array;\n      if (start + checkLength < array.length) {\n        while (checkLength--) {\n          if ((array[++start] & 0xC0) !== 0x80) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n  return UTF8;\n}();\n\nexport default UTF8;","var MediaSample = function () {\n  function MediaSample(info) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, MediaSample);\n\n    var _default = MediaSample.getDefaultInf();\n\n    if (!info || Object.prototype.toString.call(info) !== '[object Object]') {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    Object.entries(sample).forEach(function (_ref) {\n      var _ref2 = babelHelpers.slicedToArray(_ref, 2),\n          k = _ref2[0],\n          v = _ref2[1];\n\n      _this[k] = v;\n    });\n  }\n\n  babelHelpers.createClass(MediaSample, null, [{\n    key: 'getDefaultInf',\n    value: function getDefaultInf() {\n      return {\n        dts: null,\n        pts: null,\n        duration: null,\n        position: null,\n        isRAP: false, // is Random access point\n        originDts: null\n      };\n    }\n  }]);\n  return MediaSample;\n}();\n\nexport default MediaSample;","var MediaSegment = function () {\n    function MediaSegment() {\n        babelHelpers.classCallCheck(this, MediaSegment);\n\n        this.startDts = -1;\n        this.endDts = -1;\n        this.startPts = -1;\n        this.endPts = -1;\n        this.originStartDts = -1;\n        this.originEndDts = -1;\n        this.randomAccessPoints = [];\n        this.firstSample = null;\n        this.lastSample = null;\n    }\n\n    babelHelpers.createClass(MediaSegment, [{\n        key: \"addRAP\",\n        value: function addRAP(sample) {\n            sample.isRAP = true;\n            this.randomAccessPoints.push(sample);\n        }\n    }]);\n    return MediaSegment;\n}();\n\nexport default MediaSegment;","var MediaSegmentList = function () {\n    function MediaSegmentList(type) {\n        babelHelpers.classCallCheck(this, MediaSegmentList);\n\n        this._type = type;\n        this._list = [];\n        this._lastAppendLocation = -1; // cached last insert location\n    }\n\n    babelHelpers.createClass(MediaSegmentList, [{\n        key: \"isEmpty\",\n        value: function isEmpty() {\n            return this._list.length === 0;\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            this._list = [];\n            this._lastAppendLocation = -1;\n        }\n    }, {\n        key: \"_searchNearestSegmentBefore\",\n        value: function _searchNearestSegmentBefore(beginDts) {\n            var list = this._list;\n            if (list.length === 0) {\n                return -2;\n            }\n            var last = list.length - 1;\n            var mid = 0;\n            var lbound = 0;\n            var ubound = last;\n\n            var idx = 0;\n\n            if (beginDts < list[0].originDts) {\n                idx = -1;\n                return idx;\n            }\n\n            while (lbound <= ubound) {\n                mid = lbound + Math.floor((ubound - lbound) / 2);\n                if (mid === last || beginDts > list[mid].lastSample.originDts && beginDts < list[mid + 1].originDts) {\n                    idx = mid;\n                    break;\n                } else if (list[mid].originDts < beginDts) {\n                    lbound = mid + 1;\n                } else {\n                    ubound = mid - 1;\n                }\n            }\n            return idx;\n        }\n    }, {\n        key: \"_searchNearestSegmentAfter\",\n        value: function _searchNearestSegmentAfter(beginDts) {\n            return this._searchNearestSegmentBefore(beginDts) + 1;\n        }\n    }, {\n        key: \"append\",\n        value: function append(segment) {\n            var list = this._list;\n            var lastAppendIdx = this._lastAppendLocation;\n            var insertIdx = 0;\n\n            if (lastAppendIdx !== -1 && lastAppendIdx < list.length && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && segment.originStartDts < list[lastAppendIdx + 1].originStartDts)) {\n                insertIdx = lastAppendIdx + 1; // use cached location idx\n            } else {\n                if (list.length > 0) {\n                    insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n                }\n            }\n\n            this._lastAppendLocation = insertIdx;\n            this._list.splice(insertIdx, 0, segment);\n        }\n    }, {\n        key: \"getLastSegmentBefore\",\n        value: function getLastSegmentBefore(beginDts) {\n            var idx = this._searchNearestSegmentBefore(beginDts);\n            if (idx >= 0) {\n                return this._list[idx];\n            } else {\n                // -1\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastSampleBefore\",\n        value: function getLastSampleBefore(beginDts) {\n            var segment = this.getLastSegmentBefore(beginDts);\n            if (segment !== null) {\n                return segment.lastSample;\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastRAPBefore\",\n        value: function getLastRAPBefore(beginDts) {\n            var segmentIdx = this._searchNearestSegmentBefore(beginDts);\n            var randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n                segmentIdx--;\n                randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            }\n            if (randomAccessPoints.length > 0) {\n                return randomAccessPoints[randomAccessPoints.length - 1];\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"type\",\n        get: function get() {\n            return this._type;\n        }\n    }, {\n        key: \"length\",\n        get: function get() {\n            return this._list.length;\n        }\n    }]);\n    return MediaSegmentList;\n}();\n\nexport default MediaSegmentList;","export var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    babelHelpers.classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  babelHelpers.createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    babelHelpers.classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  babelHelpers.createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n  return VideoTrackMeta;\n}();","export var AudioTrackSample = function () {\n  function AudioTrackSample(info) {\n    babelHelpers.classCallCheck(this, AudioTrackSample);\n\n    var _default = AudioTrackSample.getDefault();\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  babelHelpers.createClass(AudioTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n  return AudioTrackSample;\n}();\n\nexport var VideoTrackSample = function () {\n  function VideoTrackSample(info) {\n    babelHelpers.classCallCheck(this, VideoTrackSample);\n\n    var _default = VideoTrackSample.getDefault();\n\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  babelHelpers.createClass(VideoTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        isKeyframe: false, // is Random access point\n        originDts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n  return VideoTrackSample;\n}();","var MSE = function () {\n  function MSE(configs, context) {\n    babelHelpers.classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n  }\n\n  babelHelpers.createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this.container.src = URL.createObjectURL(this.mediaSource);\n      this.url = this.container.src;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx) {\n      this._context = newCtx;\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit('SOURCE_UPDATE_END');\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (this.mediaSource.readyState !== 'open') {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track) {\n          var dur = type === 'audio' ? 21 : 40;\n          if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n          if (sources[type].data.length >= this.preloadTime / dur) {\n            add = true;\n          }\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 0) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n          var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n          this.sourceBuffers[_type] = sourceBuffer;\n          sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (sources) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var type = Object.keys(this.sourceBuffers)[i];\n          var sourceBuffer = this.sourceBuffers[type];\n          if (!sourceBuffer.updating) {\n            var source = sources.sources[type];\n            if (source && !source.inited) {\n              // console.log('append initial segment')\n              sourceBuffer.appendBuffer(source.init.buffer.buffer);\n              source.inited = true;\n            } else if (source) {\n              var data = source.data.shift();\n              if (data) {\n                sourceBuffer.appendBuffer(data.buffer.buffer);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      var _mediaSource = this.mediaSource,\n          readyState = _mediaSource.readyState,\n          activeSourceBuffers = _mediaSource.activeSourceBuffers;\n\n      if (readyState === 'open' && activeSourceBuffers.length === 0) {\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          // log\n        }\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        if (!buffer.updating) {\n\n          // console.log('remove', start, end)\n          buffer.remove(start, end);\n        }\n      }\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      return this.removeBuffers().then(function () {\n        for (var i = 0; i < Object.keys(_this2.sourceBuffers).length; i++) {\n          var _buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n          _this2.mediaSource.removeSourceBuffer(_buffer);\n          delete _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        }\n\n        _this2.container.removeEventListener('timeupdate', _this2.onTimeUpdate);\n        _this2.container.removeEventListener('waiting', _this2.onWaiting);\n        _this2.mediaSource.removeEventListener('sourceopen', _this2.onSourceOpen);\n\n        _this2.endOfStream();\n        window.URL.revokeObjectURL(_this2.url);\n\n        _this2.url = null;\n        _this2.configs = {};\n        _this2.container = null;\n        _this2.mediaSource = null;\n        _this2.sourceBuffers = {};\n        _this2.preloadTime = 1;\n      });\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      var buffered = buffer.buffered;\n      var bEnd = 0.1;\n      for (var i = 0, len = buffered.length; i < len; i++) {\n        bEnd = buffered.end(i);\n      }\n      try {\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n  return MSE;\n}();\n\nexport default MSE;","var Stream = function () {\n  function Stream(buffer) {\n    babelHelpers.classCallCheck(this, Stream);\n\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.dataview = new DataView(buffer);\n      this.dataview.position = 0;\n    } else {\n      throw new Error('data is invalid');\n    }\n  }\n\n  babelHelpers.createClass(Stream, [{\n    key: 'back',\n    value: function back(count) {\n      this.position -= count;\n    }\n  }, {\n    key: 'skip',\n    value: function skip(count) {\n      var loop = Math.floor(count / 4);\n      var last = count % 4;\n      for (var i = 0; i < loop; i++) {\n        Stream.readByte(this.dataview, 4);\n      }\n      if (last > 0) {\n        Stream.readByte(this.dataview, last);\n      }\n    }\n\n    /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n\n  }, {\n    key: 'readUint8',\n    value: function readUint8() {\n      return Stream.readByte(this.dataview, 1);\n    }\n  }, {\n    key: 'readUint16',\n    value: function readUint16() {\n      return Stream.readByte(this.dataview, 2);\n    }\n  }, {\n    key: 'readUint24',\n    value: function readUint24() {\n      return Stream.readByte(this.dataview, 3);\n    }\n  }, {\n    key: 'readUint32',\n    value: function readUint32() {\n      return Stream.readByte(this.dataview, 4);\n    }\n  }, {\n    key: 'readUint64',\n    value: function readUint64() {\n      return Stream.readByte(this.dataview, 8);\n    }\n  }, {\n    key: 'readInt8',\n    value: function readInt8() {\n      return Stream.readByte(this.dataview, 1, true);\n    }\n  }, {\n    key: 'readInt16',\n    value: function readInt16() {\n      return Stream.readByte(this.dataview, 2, true);\n    }\n  }, {\n    key: 'readInt32',\n    value: function readInt32() {\n      return Stream.readByte(this.dataview, 4, true);\n    }\n  }, {\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >>> 24 & 0xff, value >>> 16 & 0xff, value >>> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.buffer.byteLength;\n    }\n  }, {\n    key: 'position',\n    set: function set(value) {\n      this.dataview.position = value;\n    },\n    get: function get() {\n      return this.dataview.position;\n    }\n  }], [{\n    key: 'readByte',\n    value: function readByte(buffer, size, sign) {\n      var res = void 0;\n      switch (size) {\n        case 1:\n          if (sign) {\n            res = buffer.getInt8(buffer.position);\n          } else {\n            res = buffer.getUint8(buffer.position);\n          }\n          break;\n        case 2:\n          if (sign) {\n            res = buffer.getInt16(buffer.position);\n          } else {\n            res = buffer.getUint16(buffer.position);\n          }\n          break;\n        case 3:\n          if (sign) {\n            throw new Error('not supported for readByte 3');\n          } else {\n            res = buffer.getUint8(buffer.position) << 16;\n            res |= buffer.getUint8(buffer.position + 1) << 8;\n            res |= buffer.getUint8(buffer.position + 2);\n          }\n          break;\n        case 4:\n          if (sign) {\n            res = buffer.getInt32(buffer.position);\n          } else {\n            res = buffer.getUint32(buffer.position);\n          }\n          break;\n        case 8:\n          if (sign) {\n            throw new Error('not supported for readBody 8');\n          } else {\n            res = buffer.getUint32(buffer.position) << 32;\n            res |= buffer.getUint32(buffer.position + 4);\n          }\n          break;\n        default:\n          res = '';\n      }\n      buffer.position += size;\n      return res;\n    }\n  }]);\n  return Stream;\n}();\n\nexport default Stream;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    babelHelpers.classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  babelHelpers.createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n  return Buffer;\n}();\n\nexport default Buffer;","import EVENTS from '../constants/events';\nvar CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\n\nvar Crypto = function () {\n    function Crypto(config) {\n        babelHelpers.classCallCheck(this, Crypto);\n\n        this.inputBuffer = config.inputbuffer;\n        this.outputBuffer = config.outputbuffer;\n        this.key = config.key;\n        this.iv = config.iv;\n        this.method = config.method;\n\n        this.crypto = window.crypto || window.msCrypto;\n    }\n\n    babelHelpers.createClass(Crypto, [{\n        key: 'init',\n        value: function init() {\n            this.on(CRYTO_EVENTS.START_DECRYPT, this.decript.bind(this));\n        }\n    }, {\n        key: 'decript',\n        value: function decript() {\n            var _this = this;\n\n            if (!this.aeskey) {\n                var sbkey = this.crypto.subtle.importKey('raw', this.key.buffer, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n                sbkey.then(function (key) {\n                    _this.aeskey = key;\n                    _this.decriptData();\n                });\n            } else {\n                this.decriptData();\n            }\n        }\n    }, {\n        key: 'decriptData',\n        value: function decriptData() {\n            var _this2 = this;\n\n            var inputbuffer = this._context.getInstance(this.inputBuffer);\n            var outputbuffer = this._context.getInstance(this.outputBuffer);\n            var data = inputbuffer.shift();\n            if (data) {\n                this.crypto.subtle.decrypt({ name: 'AES-CBC', iv: this.iv.buffer }, this.aeskey, data).then(function (res) {\n                    outputbuffer.push(new Uint8Array(res));\n                    _this2.emit(CRYTO_EVENTS.DECRYPTED);\n                    _this2.decriptData(data);\n                });\n            }\n        }\n    }]);\n    return Crypto;\n}();\n\nexport default Crypto;","import _Context from './context';\n\n// Modules from constants\nimport _EVENTS from './constants/events';\nimport { CONTEXT_COMOMANDS } from './constants/worker-commands';\n\n// Modules from env\nimport _sniffer from './env/sniffer';\nimport _isLe from './env/isle';\nimport _UTF8 from './env/utf8';\n\n// Models\nimport _MediaInfo from './models/media-info';\nimport _MediaSample from './models/media-sample';\nimport _MediaSegment from './models/media-segment';\nimport _MediaSegmentList from './models/media-segment-list';\nimport { AudioTrackMeta as _AudioTrackMeta, VideoTrackMeta as _VideoTrackMeta } from './models/track-meta';\n\nimport { AudioTrackSample as _AudioTrackSample, VideoTrackSample as _VideoTrackSample } from './models/track-sample';\n\n// Modules from mse\nimport _Mse from './mse/index';\n\n// Modules from write\nimport _Stream from './write/stream';\nimport _Buffer from './write/buffer';\n\n// Crypto\nimport _Crypto from './crypto';\n\nexport var Context = _Context;\nexport var EVENTS = _EVENTS;\nexport var WORKER_COMMANDS = {\n  CONTEXT_COMOMANDS: CONTEXT_COMOMANDS\n};\nexport var sniffer = _sniffer;\nexport var isLe = _isLe;\nexport var UTF8 = _UTF8;\nexport var MediaInfo = _MediaInfo;\nexport var MediaSample = _MediaSample;\nexport var MediaSegment = _MediaSegment;\nexport var MediaSegmentList = _MediaSegmentList;\nexport var AudioTrackMeta = _AudioTrackMeta;\nexport var VideoTrackMeta = _VideoTrackMeta;\nexport var AudioTrackSample = _AudioTrackSample;\nexport var VideoTrackSample = _VideoTrackSample;\nexport var Mse = _Mse;\nexport var Stream = _Stream;\nexport var Buffer = _Buffer;\nexport var Crypto = _Crypto;","import { Buffer } from 'xgplayer-utils';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar Fmp4 = function () {\n  function Fmp4() {\n    babelHelpers.classCallCheck(this, Fmp4);\n  }\n\n  babelHelpers.createClass(Fmp4, null, [{\n    key: 'size',\n    value: function size(value) {\n      return Buffer.writeUint32(value);\n    }\n  }, {\n    key: 'initBox',\n    value: function initBox(size, name) {\n      var buffer = new Buffer();\n\n      for (var _len = arguments.length, content = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        content[_key - 2] = arguments[_key];\n      }\n\n      buffer.write.apply(buffer, [Fmp4.size(size), Fmp4.type(name)].concat(content));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'extension',\n    value: function extension(version, flag) {\n      return new Uint8Array([version, flag >> 16 & 0xff, flag >> 8 & 0xff, flag & 0xff]);\n    }\n  }, {\n    key: 'ftyp',\n    value: function ftyp() {\n      return Fmp4.initBox(24, 'ftyp', new Uint8Array([0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n      ]));\n    }\n  }, {\n    key: 'moov',\n    value: function moov(_ref) {\n      var type = _ref.type,\n          meta = _ref.meta;\n\n      var size = 8;\n      var mvhd = Fmp4.mvhd(meta.duration, meta.timescale);\n      var trak = void 0;\n\n      if (type === 'video') {\n        trak = Fmp4.videoTrak(meta);\n      } else {\n        trak = Fmp4.audioTrak(meta);\n      }\n\n      var mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n      [mvhd, trak, mvex].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moov', mvhd, trak, mvex);\n    }\n  }, {\n    key: 'mvhd',\n    value: function mvhd(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n\n      // duration *= timescale;\n      var bytes = new Uint8Array([0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      timescale >>> 24 & 0xFF, timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n      ]);\n      return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes));\n    }\n  }, {\n    key: 'videoTrak',\n    value: function videoTrak(data) {\n      var size = 8;\n\n      var tkhd = Fmp4.tkhd({\n        id: 1,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: data.presentWidth,\n        height: data.presentHeight,\n        type: 'video'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'video',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        avcc: data.avcc,\n        parRatio: data.parRatio,\n        width: data.presentWidth,\n        height: data.presentHeight\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'audioTrak',\n    value: function audioTrak(data) {\n      var size = 8;\n      var tkhd = Fmp4.tkhd({\n        id: 2,\n        duration: data.duration,\n        timescale: data.timescale || 1000,\n        width: 0,\n        height: 0,\n        type: 'audio'\n      });\n      var mdia = Fmp4.mdia({\n        type: 'audio',\n        timescale: data.timescale || 1000,\n        duration: data.duration,\n        channelCount: data.channelCount,\n        samplerate: data.sampleRate,\n        config: data.config\n      });\n      [tkhd, mdia].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'trak', tkhd, mdia);\n    }\n  }, {\n    key: 'tkhd',\n    value: function tkhd(data) {\n      var id = data.id;\n      var duration = data.duration;\n      var width = data.width;\n      var height = data.height;\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      id >>> 24 & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      id >>> 16 & 0xFF, id >>> 8 & 0xFF, id & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      duration >>> 24 & 0xFF, // duration: 4 bytes track的时间长度\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      width >>> 8 & 0xFF, // //宽度\n      width & 0xFF, 0x00, 0x00, height >>> 8 & 0xFF, // 高度\n      height & 0xFF, 0x00, 0x00]);\n      return Fmp4.initBox(8 + content.byteLength, 'tkhd', content);\n    }\n  }, {\n    key: 'edts',\n    value: function edts(data) {\n      var buffer = new Buffer();\n      var duration = data.duration;\n      var mediaTime = data.mediaTime;\n      buffer.write(Fmp4.size(36), Fmp4.type('edts'));\n      // elst\n      buffer.write(Fmp4.size(28), Fmp4.type('elst'));\n      buffer.write(new Uint8Array([0x00, 0x00, 0x00, 0x01, // entry count\n      duration >> 24 & 0xff, duration >> 16 & 0xff, duration >> 8 & 0xff, duration & 0xff, mediaTime >> 24 & 0xff, mediaTime >> 16 & 0xff, mediaTime >> 8 & 0xff, mediaTime & 0xff, 0x00, 0x00, 0x00, 0x01 // media rate\n      ]));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdia',\n    value: function mdia(data) {\n      var size = 8;\n      var mdhd = Fmp4.mdhd(data.timescale, data.duration);\n      var hdlr = Fmp4.hdlr(data.type);\n      var minf = Fmp4.minf(data);\n      [mdhd, hdlr, minf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf);\n    }\n  }, {\n    key: 'mdhd',\n    value: function mdhd() {\n      var timescale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n      var duration = arguments[1];\n\n      var content = new Uint8Array([0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      timescale >>> 24 & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      timescale >>> 16 & 0xFF, timescale >>> 8 & 0xFF, timescale & 0xFF, duration >>> 24 & 0xFF, // duration: 4 bytes  track的时间长度\n      duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, 0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n      ]);\n      return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'hdlr',\n    value: function hdlr(type) {\n      var value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ];\n      if (type === 'audio') {\n        value.splice.apply(value, [8, 4].concat([0x73, 0x6f, 0x75, 0x6e]));\n        value.splice.apply(value, [24, 13].concat([0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00]));\n      }\n      return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value));\n    }\n  }, {\n    key: 'minf',\n    value: function minf(data) {\n      var size = 8;\n      var vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd();\n      var dinf = Fmp4.dinf();\n      var stbl = Fmp4.stbl(data);\n      [vmhd, dinf, stbl].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl);\n    }\n  }, {\n    key: 'vmhd',\n    value: function vmhd() {\n      return Fmp4.initBox(20, 'vmhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]));\n    }\n  }, {\n    key: 'smhd',\n    value: function smhd() {\n      return Fmp4.initBox(16, 'smhd', new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n      ]));\n    }\n  }, {\n    key: 'dinf',\n    value: function dinf() {\n      var buffer = new Buffer();\n      var dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ];\n      buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stbl',\n    value: function stbl(data) {\n      var size = 8;\n      var stsd = Fmp4.stsd(data);\n      var stts = Fmp4.stts();\n      var stsc = Fmp4.stsc();\n      var stsz = Fmp4.stsz();\n      var stco = Fmp4.stco();\n      [stsd, stts, stsc, stsz, stco].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco);\n    }\n  }, {\n    key: 'stsd',\n    value: function stsd(data) {\n      var content = void 0;\n      if (data.type === 'audio') {\n        // if (!data.isAAC && data.codec === 'mp4') {\n        //     content = FMP4.mp3(data);\n        // } else {\n        //\n        // }\n        // 支持mp4a\n        content = Fmp4.mp4a(data);\n      } else {\n        content = Fmp4.avc1(data);\n      }\n      return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content);\n    }\n  }, {\n    key: 'mp4a',\n    value: function mp4a(data) {\n      var content = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      data.samplerate >> 8 & 0xff, data.samplerate & 0xff, //\n      0x00, 0x00]);\n      var esds = Fmp4.esds(data.config);\n      return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds);\n    }\n  }, {\n    key: 'esds',\n    value: function esds() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [43, 146, 8, 0];\n\n      var configlen = config.length;\n      var buffer = new Buffer();\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n      ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]));\n      buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'avc1',\n    value: function avc1(data) {\n      var buffer = new Buffer();\n      var size = 40; // 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n      // let sps = data.sps\n      // let pps = data.pps\n      var width = data.width;\n      var height = data.height;\n      var hSpacing = data.parRatio.height;\n      var vSpacing = data.parRatio.width;\n      // let avccBuffer = new Buffer()\n      // avccBuffer.write(new Uint8Array([\n      //   0x01, // version\n      //   sps[1], // profile\n      //   sps[2], // profile compatible\n      //   sps[3], // level\n      //   0xfc | 3,\n      //   0xE0 | 1 // 目前只处理一个sps\n      // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n      // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n      var avcc = data.avcc;\n      var avc1 = new Uint8Array([0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      width >> 8 & 0xff, width & 0xff, // width\n      height >> 8 & 0xff, height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12, 0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]); // pre_defined = -1\n      var btrt = new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]);\n      var pasp = new Uint8Array([hSpacing >> 24, // hSpacing\n      hSpacing >> 16 & 0xff, hSpacing >> 8 & 0xff, hSpacing & 0xff, vSpacing >> 24, // vSpacing\n      vSpacing >> 16 & 0xff, vSpacing >> 8 & 0xff, vSpacing & 0xff]);\n\n      buffer.write(Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1, Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc, Fmp4.size(20), Fmp4.type('btrt'), btrt, Fmp4.size(16), Fmp4.type('pasp'), pasp);\n      return buffer.buffer;\n    }\n  }, {\n    key: 'stts',\n    value: function stts() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stts', content);\n    }\n  }, {\n    key: 'stsc',\n    value: function stsc() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stsc', content);\n    }\n  }, {\n    key: 'stco',\n    value: function stco() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      return Fmp4.initBox(16, 'stco', content);\n    }\n  }, {\n    key: 'stsz',\n    value: function stsz() {\n      var content = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      return Fmp4.initBox(20, 'stsz', content);\n    }\n  }, {\n    key: 'mvex',\n    value: function mvex(duration) {\n      var timescale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n      var trackID = arguments[2];\n\n      var buffer = new Buffer();\n      var mehd = Buffer.writeUint32(duration);\n      buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID));\n      return buffer.buffer;\n    }\n  }, {\n    key: 'trex',\n    value: function trex(id) {\n      var content = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      id >> 24, id >> 16 & 0xff, id >> 8 & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]);\n      return Fmp4.initBox(8 + content.byteLength, 'trex', content);\n    }\n  }, {\n    key: 'moof',\n    value: function moof(data) {\n      var size = 8;\n      var mfhd = Fmp4.mfhd();\n      var traf = Fmp4.traf(data);\n      [mfhd, traf].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'moof', mfhd, traf);\n    }\n  }, {\n    key: 'mfhd',\n    value: function mfhd() {\n      var content = Buffer.writeUint32(Fmp4.sequence);\n      Fmp4.sequence += 1;\n      return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'traf',\n    value: function traf(data) {\n      var size = 8;\n      var tfhd = Fmp4.tfhd(data.id);\n      var tfdt = Fmp4.tfdt(data.time);\n      var sdtp = Fmp4.sdtp(data);\n      var trun = Fmp4.trun(data, sdtp.byteLength);\n\n      [tfhd, tfdt, trun, sdtp].forEach(function (item) {\n        size += item.byteLength;\n      });\n      return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp);\n    }\n  }, {\n    key: 'tfhd',\n    value: function tfhd(id) {\n      var content = Buffer.writeUint32(id);\n      return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content);\n    }\n  }, {\n    key: 'tfdt',\n    value: function tfdt(time) {\n      // let upper = Math.floor(time / (UINT32_MAX + 1)),\n      //     lower = Math.floor(time % (UINT32_MAX + 1));\n      return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time));\n    }\n  }, {\n    key: 'trun',\n    value: function trun(data, sdtpLength) {\n      // let id = data.id;\n      // let ceil = id === 1 ? 16 : 12;\n      var buffer = new Buffer();\n      var sampleCount = Buffer.writeUint32(data.samples.length);\n      // mdat-header 8\n      // moof-header 8\n      // mfhd 16\n      // traf-header 8\n      // thhd 16\n      // tfdt 20\n      // trun-header 12\n      // sampleCount 4\n      // data-offset 4\n      // samples.length\n      var offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength);\n      buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset);\n\n      // let size = buffer.buffer.byteLength\n      // let writeOffset = 0\n      // data.samples.forEach(() => {\n      //   size += 16\n      // })\n      //\n      // let trunBox = new Uint8Array(size)\n\n      // trunBox.set(buffer.buffer, 0)\n\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        // console.log(item.type, item.dts, item.duration)\n\n        buffer.write(new Uint8Array([item.duration >>> 24 & 0xFF, // sample_duration\n        item.duration >>> 16 & 0xFF, item.duration >>> 8 & 0xFF, item.duration & 0xFF, item.size >>> 24 & 0xFF, // sample_size\n        item.size >>> 16 & 0xFF, item.size >>> 8 & 0xFF, item.size & 0xFF, flags.isLeading << 2 | flags.dependsOn, // sample_flags\n        flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.isNonSync, 0x00, 0x00, // sample_degradation_priority\n        item.cts >>> 24 & 0xFF, // sample_composition_time_offset\n        item.cts >>> 16 & 0xFF, item.cts >>> 8 & 0xFF, item.cts & 0xFF]));\n        // writeOffset += 16\n        // buffer.write(Buffer.writeUint32(0));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'sdtp',\n    value: function sdtp(data) {\n      var buffer = new Buffer();\n      buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0));\n      data.samples.forEach(function (item) {\n        var flags = item.flags;\n        var num = flags.isLeading << 6 | // is_leading: 2 (bit)\n        flags.dependsOn << 4 | // sample_depends_on\n        flags.isDependedOn << 2 | // sample_is_depended_on\n        flags.hasRedundancy; // sample_has_redundancy\n\n        buffer.write(new Uint8Array([num]));\n      });\n      return buffer.buffer;\n    }\n  }, {\n    key: 'mdat',\n    value: function mdat(data) {\n      var buffer = new Buffer();\n      var size = 8;\n      data.samples.forEach(function (item) {\n        size += item.size;\n      });\n      buffer.write(Fmp4.size(size), Fmp4.type('mdat'));\n      var mdatBox = new Uint8Array(size);\n      var offset = 0;\n      mdatBox.set(buffer.buffer, offset);\n      offset += 8;\n      data.samples.forEach(function (item) {\n        item.buffer.forEach(function (unit) {\n          mdatBox.set(unit, offset);\n          offset += unit.byteLength;\n          // buffer.write(unit.data);\n        });\n      });\n      return mdatBox;\n    }\n  }]);\n  return Fmp4;\n}();\n\nFmp4.type = function (name) {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)]);\n};\nFmp4.sequence = 1;\n\nexport default Fmp4;","import { EVENTS, sniffer, MediaSegmentList, Buffer } from 'xgplayer-utils';\nimport Fmp4 from './fmp4';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nvar Mp4Remuxer = function () {\n  function Mp4Remuxer() {\n    var curTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    babelHelpers.classCallCheck(this, Mp4Remuxer);\n\n    this._dtsBase = curTime * 1000;\n    this._isDtsBaseInited = false;\n    this._audioNextDts = null;\n    this._videoNextDts = null;\n    this._videoSegmentList = new MediaSegmentList('video');\n    this._audioSegmentList = new MediaSegmentList('audio');\n    var browser = sniffer.browser;\n\n    this._fillSilenceFrame = browser === 'ie';\n\n    this.isFirstVideo = true;\n    this.isFirstAudio = true;\n\n    this.videoAllDuration = 0;\n    this.audioAllDuration = 0;\n  }\n\n  babelHelpers.createClass(Mp4Remuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this));\n      this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this));\n      this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this));\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._dtsBase = -1;\n      this._dtsBaseInited = false;\n      this._videoNextDts = null;\n      this._audioNextDts = null;\n      this._videoSegmentList.clear();\n      this._audioSegmentList.clear();\n      this._videoSegmentList = null;\n      this._audioSegmentList = null;\n    }\n  }, {\n    key: 'remux',\n    value: function remux() {\n      var _context$getInstance = this._context.getInstance('TRACKS'),\n          audioTrack = _context$getInstance.audioTrack,\n          videoTrack = _context$getInstance.videoTrack;\n\n      !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack);\n\n      this._remuxVideo(videoTrack);\n      this._remuxAudio(audioTrack);\n    }\n  }, {\n    key: 'resetDtsBase',\n    value: function resetDtsBase() {\n      // for hls 中途切换 meta后seek\n      this._dtsBase = 0;\n      this._dtsBaseInited = false;\n    }\n  }, {\n    key: 'seek',\n    value: function seek() {\n      this._videoNextDts = null;\n      this._audioNextDts = null;\n      this._videoSegmentList.clear();\n      this._audioSegmentList.clear();\n    }\n  }, {\n    key: 'onMetaDataReady',\n    value: function onMetaDataReady(type) {\n      var track = void 0;\n\n      if (type === 'audio') {\n        var _context$getInstance2 = this._context.getInstance('TRACKS'),\n            audioTrack = _context$getInstance2.audioTrack;\n\n        track = audioTrack;\n      } else {\n        var _context$getInstance3 = this._context.getInstance('TRACKS'),\n            videoTrack = _context$getInstance3.videoTrack;\n\n        track = videoTrack;\n      }\n\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.mimetype = track.meta.codec;\n      source.init = this.remuxInitSegment(type, track.meta);\n      // source.inited = false;\n\n      // this.resetDtsBase()\n      this.emit(REMUX_EVENTS.INIT_SEGMENT, type);\n    }\n  }, {\n    key: 'remuxInitSegment',\n    value: function remuxInitSegment(type, meta) {\n      var initSegment = new Buffer();\n      var ftyp = Fmp4.ftyp();\n      var moov = Fmp4.moov({ type: type, meta: meta });\n\n      initSegment.write(ftyp, moov);\n      return initSegment;\n    }\n  }, {\n    key: 'calcDtsBase',\n    value: function calcDtsBase(audioTrack, videoTrack) {\n      if (!audioTrack && videoTrack.samples.length) {\n        return videoTrack.samples[0].dts;\n      }\n\n      if (!audioTrack.samples.length && !videoTrack.samples.length) {\n        return;\n      }\n\n      var audioBase = Infinity;\n      var videoBase = Infinity;\n\n      if (audioTrack.samples && audioTrack.samples.length) {\n        audioBase = audioTrack.samples[0].dts;\n      }\n      if (videoTrack.samples && videoTrack.samples.length) {\n        videoBase = videoTrack.samples[0].dts;\n      }\n\n      this._dtsBase = Math.min(audioBase, videoBase) - this._dtsBase; // 兼容播放器切换清晰度\n      this._isDtsBaseInited = true;\n    }\n  }, {\n    key: '_remuxVideo',\n    value: function _remuxVideo(videoTrack) {\n      var track = videoTrack || {};\n\n      if (!videoTrack.samples || !videoTrack.samples.length) {\n        return;\n      }\n\n      var samples = track.samples;\n\n      var firstDts = -1;\n\n      var initSegment = null;\n      var mp4Samples = [];\n      var mdatBox = {\n        samples: []\n      };\n\n      var maxLoop = 10000;\n      while (samples.length && maxLoop-- > 0) {\n        // console.log('mark2')\n        var avcSample = samples.shift();\n\n        var isKeyframe = avcSample.isKeyframe,\n            options = avcSample.options;\n\n        if (!this.isFirstVideo && options && options.meta) {\n          initSegment = this.remuxInitSegment('video', options.meta);\n          options.meta = null;\n          samples.unshift(avcSample);\n          if (!options.isContinue) {\n            this.resetDtsBase();\n          }\n          break;\n        }\n\n        var dts = avcSample.dts - this._dtsBase;\n\n        if (firstDts === -1) {\n          firstDts = dts;\n        }\n\n        var cts = void 0;\n        var pts = void 0;\n        if (avcSample.pts !== undefined) {\n          pts = avcSample.pts - this._dtsBase;\n          cts = pts - dts;\n        }\n        if (avcSample.cts !== undefined) {\n          pts = avcSample.cts + dts;\n          cts = avcSample.cts;\n        }\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n        mdatBox.samples.push(mdatSample);\n        mdatSample.buffer.push(avcSample.data);\n        mdatSample.size += avcSample.data.byteLength;\n\n        var sampleDuration = 0;\n        if (avcSample.duration) {\n          sampleDuration = avcSample.duration;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this._dtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // lastest sample, use second last duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference duration\n            sampleDuration = this.videoMeta.refSampleDuration;\n          }\n        }\n        this.videoAllDuration += sampleDuration;\n        // console.log(`video dts ${dts}`, `pts ${pts}`, isKeyframe, `duration ${sampleDuration}`)\n        if (sampleDuration >= 0) {\n          mp4Samples.push({\n            dts: dts,\n            cts: cts,\n            pts: pts,\n            data: avcSample.data,\n            size: avcSample.data.byteLength,\n            isKeyframe: isKeyframe,\n            duration: sampleDuration,\n            flags: {\n              isLeading: 0,\n              dependsOn: isKeyframe ? 2 : 1,\n              isDependedOn: isKeyframe ? 1 : 0,\n              hasRedundancy: 0,\n              isNonSync: isKeyframe ? 0 : 1\n            },\n            originDts: dts,\n            type: 'video'\n          });\n        }\n\n        if (isKeyframe) {\n          this.emit(REMUX_EVENTS.RANDOM_ACCESS_POINT, pts);\n        }\n      }\n\n      var moofMdat = new Buffer();\n      if (mp4Samples.length) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.writeToSource('video', moofMdat);\n      }\n\n      if (initSegment) {\n        this.writeToSource('video', initSegment);\n\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this._remuxVideo(track);\n        }\n      }\n\n      this.isFirstVideo = false;\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video');\n\n      var lastSample = mp4Samples[mp4Samples.length - 1];\n      this._videoNextDts = lastSample.dts + lastSample.duration;\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: '_remuxAudio',\n    value: function _remuxAudio(track) {\n      var _ref = track || {},\n          samples = _ref.samples;\n\n      var firstDts = -1;\n      var mp4Samples = [];\n\n      var initSegment = null;\n      var mdatBox = {\n        samples: []\n      };\n      if (!samples || !samples.length) {\n        return;\n      }\n\n      var maxLoop = 10000;\n      var isFirstDtsInited = false;\n      while (samples.length && maxLoop-- > 0) {\n        // console.log('mark3')\n        var sample = samples.shift();\n        var data = sample.data,\n            options = sample.options;\n\n        if (!this.isFirstAudio && options && options.meta) {\n          initSegment = this.remuxInitSegment('audio', options.meta);\n          options.meta = null;\n          samples.unshift(sample);\n          if (!options.isContinue) {\n            this.resetDtsBase();\n          }\n          break;\n        }\n\n        var dts = sample.dts - this._dtsBase;\n        var originDts = dts;\n        if (!isFirstDtsInited) {\n          firstDts = dts;\n          isFirstDtsInited = true;\n        }\n\n        var sampleDuration = 0;\n        if (sample.duration) {\n          sampleDuration = sample.duration;\n        } else if (this.audioMeta.refSampleDurationFixed) {\n          sampleDuration = this.audioMeta.refSampleDurationFixed;\n        } else if (samples.length >= 1) {\n          var nextDts = samples[0].dts - this._dtsBase;\n          sampleDuration = nextDts - dts;\n        } else {\n          if (mp4Samples.length >= 1) {\n            // use second last sample duration\n            sampleDuration = mp4Samples[mp4Samples.length - 1].duration;\n          } else {\n            // the only one sample, use reference sample duration\n            sampleDuration = this.audioMeta.refSampleDuration;\n          }\n        }\n\n        // console.log(`audio dts ${dts}`, `pts ${dts}`, `duration ${sampleDuration}`)\n        this.audioAllDuration += sampleDuration;\n        var mp4Sample = {\n          dts: dts,\n          pts: dts,\n          cts: 0,\n          size: data.byteLength,\n          duration: sample.duration ? sample.duration : sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: 2,\n            isDependedOn: 1,\n            hasRedundancy: 0,\n            isNonSync: 0\n          },\n          isKeyframe: true,\n          originDts: originDts,\n          type: 'audio'\n        };\n\n        var mdatSample = {\n          buffer: [],\n          size: 0\n        };\n        mdatSample.buffer.push(data);\n        mdatSample.size += data.byteLength;\n\n        mdatBox.samples.push(mdatSample);\n        if (sampleDuration >= 0) {\n          mp4Samples.push(mp4Sample);\n        }\n      }\n\n      var moofMdat = new Buffer();\n\n      if (mp4Samples.length) {\n        var moof = Fmp4.moof({\n          id: track.meta.id,\n          time: firstDts,\n          samples: mp4Samples\n        });\n        var mdat = Fmp4.mdat(mdatBox);\n        moofMdat.write(moof, mdat);\n\n        this.writeToSource('audio', moofMdat);\n      }\n\n      if (initSegment) {\n        this.writeToSource('audio', initSegment);\n        if (samples.length) {\n          // second part of stream change\n          track.samples = samples;\n          return this._remuxAudio(track);\n        }\n      }\n\n      this.isFirstAudio = false;\n      this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat);\n\n      var lastSample = mp4Samples[mp4Samples.length - 1];\n      this._videoNextDts = lastSample.dts + lastSample.duration;\n      track.samples = [];\n      track.length = 0;\n    }\n  }, {\n    key: 'writeToSource',\n    value: function writeToSource(type, buffer) {\n      var presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var source = presourcebuffer.getSource(type);\n      if (!source) {\n        source = presourcebuffer.createSource(type);\n      }\n\n      source.data.push(buffer);\n    }\n  }, {\n    key: 'initSilentAudio',\n    value: function initSilentAudio(dts, duration) {\n      var unit = Mp4Remuxer.getSilentFrame(this._audioMeta.channelCount);\n      return {\n        dts: dts,\n        pts: dts,\n        cts: 0,\n        duration: duration,\n        unit: unit,\n        size: unit.byteLength,\n        originDts: dts,\n        type: 'video'\n      };\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._player = null;\n    }\n  }, {\n    key: 'videoMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').videoTrack.meta;\n    }\n  }, {\n    key: 'audioMeta',\n    get: function get() {\n      return this._context.getInstance('TRACKS').audioTrack.meta;\n    }\n  }], [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(channelCount) {\n      if (channelCount === 1) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n      } else if (channelCount === 2) {\n        return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n      } else if (channelCount === 3) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n      } else if (channelCount === 4) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n      } else if (channelCount === 5) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n      } else if (channelCount === 6) {\n        return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n      }\n      return null;\n    }\n  }]);\n  return Mp4Remuxer;\n}();\n\nexport default Mp4Remuxer;","import Mp4Remuxer from './mp4';\n\nexport default {\n  Mp4Remuxer: Mp4Remuxer\n};","/**\n * Reference: https://tools.ietf.org/html/rfc8216#section-4.3\n */\nvar M3U8Parser = function () {\n  function M3U8Parser() {\n    babelHelpers.classCallCheck(this, M3U8Parser);\n  }\n\n  babelHelpers.createClass(M3U8Parser, null, [{\n    key: 'parse',\n    value: function parse(text) {\n      var baseurl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      var ret = {\n        duration: 0\n      };\n      if (!text || !text.split) {\n        return;\n      }\n      var refs = text.split(/\\r|\\n/);\n      refs = refs.filter(function (ref) {\n        return ref;\n      });\n      var ref = refs.shift();\n      if (!ref.match('#EXTM3U')) {\n        throw new Error('Invalid m3u8 file: not \"#EXTM3U\"');\n        return null;\n      }\n      ref = refs.shift();\n      var nextDiscontinue = false;\n      while (ref) {\n        var refm = ref.match(/#(.[A-Z|-]*):(.*)/);\n        var refd = ref.match(/#(.[A-Z|-]*)/);\n        if (refd && refm && refm.length > 2) {\n          switch (refm[1]) {\n            case 'EXT-X-VERSION':\n              ret.version = parseInt(refm[2]);\n              break;\n            case 'EXT-X-MEDIA-SEQUENCE':\n              ret.sequence = parseInt(refm[2]);\n              break;\n            case 'EXT-X-TARGETDURATION':\n              ret.targetduration = parseFloat(refm[2]);\n              break;\n            case 'EXTINF':\n              M3U8Parser.parseFrag(refm, refs, ret, baseurl, nextDiscontinue);\n              nextDiscontinue = false;\n              break;\n            case 'EXT-X-KEY':\n              M3U8Parser.parseDecrypt(refm[2], ret);\n              break;\n            default:\n              break;\n          }\n        }if (refd && refd.length > 1) {\n          switch (refd[1]) {\n            case 'EXT-X-DISCONTINUITY':\n              nextDiscontinue = true;\n              break;\n            default:\n              break;\n          }\n        }\n        ref = refs.shift();\n      }\n      return ret;\n    }\n  }, {\n    key: 'parseFrag',\n    value: function parseFrag(refm, refs, ret, baseurl, discontinue) {\n      if (!ret.frags) {\n        ret.frags = [];\n      }\n\n      var freg = {\n        start: ret.duration,\n        duration: parseFloat(refm[2]) * 1000\n      };\n\n      ret.duration += freg.duration;\n      var nextline = refs.shift();\n      if (nextline.match(/#(.*):(.*)/)) {\n        nextline = refs.shift();\n      }\n      if (nextline.length > 0 && nextline.charAt(0) === '/' && baseurl.match(/.*\\/\\/.*\\.\\w+/g)) {\n        baseurl = baseurl.match(/.*\\/\\/.*\\.\\w+/g)[0];\n      }\n      if (nextline.match(/.*:\\/\\/.*/)) {\n        freg.url = nextline;\n      } else {\n        freg.url = baseurl + nextline;\n      }\n      freg.discontinue = discontinue;\n      ret.frags.push(freg);\n    }\n  }, {\n    key: 'parseURL',\n    value: function parseURL(url) {\n      var baseurl = '';\n      var urls = url.match(/(.*\\/).*\\.m3u8/);\n      if (urls && urls.length > 0) {\n        for (var i = 0; i < urls.length; i++) {\n          if (urls[i].match(/.*\\/$/g) && urls[i].length > baseurl.length) {\n            baseurl = urls[i];\n          }\n        }\n      }\n      return baseurl;\n    }\n  }, {\n    key: 'parseDecrypt',\n    value: function parseDecrypt(refm, ret) {\n      ret.encrypt = {};\n      var refs = refm.split(',');\n      for (var i in refs) {\n        var cmd = refs[i];\n        if (cmd.match(/METHOD=(.*)/)) {\n          ret.encrypt.method = cmd.match(/METHOD=(.*)/)[1];\n        }\n        if (cmd.match(/URI=\"(.*)\"/)) {\n          ret.encrypt.uri = cmd.match(/URI=\"(.*)\"/)[1];\n        }\n\n        if (cmd.match(/IV=0x(.*)/)) {\n          var iv = cmd.match(/IV=0x(.*)/)[1];\n          var length = Math.ceil(iv.length / 2);\n          ret.encrypt.ivb = new Uint8Array(length);\n          for (var _i = length - 1; _i >= 0; _i--) {\n            var im = parseInt(iv.substr(_i * 2, 2), 16);\n            ret.encrypt.ivb[_i] = im;\n          }\n          ret.encrypt.iv = iv;\n        }\n      };\n    }\n  }]);\n  return M3U8Parser;\n}();\n\nexport default M3U8Parser;","var Golomb = function () {\n  function Golomb(uint8array) {\n    babelHelpers.classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  babelHelpers.createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO 异常处理\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }]);\n  return Golomb;\n}();\n\nexport default Golomb;","/* eslint-disable camelcase  */\n/* eslint-disable one-var  */\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    babelHelpers.classCallCheck(this, SPSParser);\n  }\n\n  babelHelpers.createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1,\n          par_height = 1;\n      var fps = 0,\n          fps_fixed = true,\n          fps_num = 0,\n          fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0,\n          crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var last_scale = 8,\n          next_scale = 8;\n      var delta_scale = 0;\n      for (var i = 0; i < count; i++) {\n        if (next_scale !== 0) {\n          delta_scale = gb.readSEG();\n          next_scale = (last_scale + delta_scale + 256) % 256;\n        }\n        last_scale = next_scale === 0 ? last_scale : next_scale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n    }\n  }]);\n  return SPSParser;\n}();\n\nexport default SPSParser;","import SpsParser from './sps';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    babelHelpers.classCallCheck(this, Nalunit);\n  }\n\n  babelHelpers.createClass(Nalunit, null, [{\n    key: 'getNalunits',\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32();\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = buffer.buffer.slice(buffer.position, buffer.position + length);\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = buffer.length;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225;\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n  return Nalunit;\n}();\n\nexport default Nalunit;","var AAC = function () {\n  function AAC() {\n    babelHelpers.classCallCheck(this, AAC);\n  }\n\n  babelHelpers.createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n  return AAC;\n}();\n\nexport default AAC;","import { EVENTS } from 'xgplayer-utils';\nimport AAC from './aac/aac-helper';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS,\n    LOADER_EVENTS = EVENTS.LOADER_EVENTS;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    babelHelpers.classCallCheck(this, Compatibility);\n\n    this.nextAudioDts = 0; // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0; // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined; // 上一段音频数据的长度\n    this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0; // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0; // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // 补充音频帧（）\n    this.filledVideoSamples = []; // 补充视频帧（）\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    this._videoLargeGap = 0;\n    this._audioLargeGap = 0;\n  }\n\n  babelHelpers.createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // 估算下一段音频数据的dts\n      this.nextVideoDts = null; // 估算下一段视频数据的dts\n\n      this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n      this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n      this.lastVideoDts = undefined; // 上一段音频数据的长度\n      this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n      // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n      // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // 补充音频帧（）\n      this.filledVideoSamples = []; // 补充视频帧（）\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n      if (this._firstAudioSample) {\n        this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples);\n      }\n\n      var _Compatibility$detact = Compatibility.detactChangeStream(this.videoTrack.samples),\n          videoChanged = _Compatibility$detact.changed,\n          videoChangedIdx = _Compatibility$detact.changedIdx;\n\n      if (videoChanged && !isFirstAudioSamples) {\n        this.fixChangeStreamVideo(videoChangedIdx);\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detact2 = Compatibility.detactChangeStream(this.audioTrack.samples),\n          audioChanged = _Compatibility$detact2.changed,\n          audioChangedIdx = _Compatibility$detact2.changedIdx;\n\n      if (audioChanged) {\n        this.fixChangeStreamAudio(audioChangedIdx);\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      // console.log('next video', this.nextVideoDts)\n\n      for (var i = 0, len = videoSamples.length; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      if (meta.frameRate && meta.frameRate.fixed === false) {\n        return;\n      }\n\n      if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n        return;\n      }\n\n      // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n      var firstSample = videoSamples[0];\n\n      // step0.修复hls流出现巨大gap，需要强制重定位的问题\n      if (this._videoLargeGap > 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      if (firstSample.dts !== this._firstVideoSample.dts && streamChangeStart) {\n        if (streamChangeStart) {\n          this.nextVideoDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n\n        this._videoLargeGap = this.nextVideoDts - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. 修复与audio首帧差距太大的问题\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i = 0; _i < fillCount; _i++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // 视频头部帧缺失需要复制第一帧\n            // 重新计算sample的dts和pts\n            clonedFirstSample.dts = videoFirstDts - (_i + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (gap < -2 * meta.refSampleDuration) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      this.videoLastSample = curLastSample;\n\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      // console.log('next audio', this.nextAudioDts)\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n      // 对audioSamples按照dts做排序\n      // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n      if (this._audioLargeGap > 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n\n      if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n        if (streamChangeStart) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n      // step0. 首帧与video首帧间距大的问题\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n        if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < silentSampleCount; _i2++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i2 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. 处理samples段之间的丢帧情况\n        // 当发现duration差距大于1帧时进行补帧\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          meta.refSampleDurationFixed = undefined;\n        }\n\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n            // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n            meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap;\n          } else {\n            var silentFrameCount = Math.floor(gap / meta.refSampleDuration);\n\n            for (var _i3 = 0; _i3 < silentFrameCount; _i3++) {\n              var computed = firstDts - (_i3 + 1) * meta.refSampleDuration;\n              var _silentSample = Object.assign({}, audioSamples[0], {\n                dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n              });\n\n              this.filledAudioSamples.push({\n                dts: _silentSample.dts,\n                size: _silentSample.data.byteLength\n              });\n              this.audioTrack.samples.unshift(_silentSample);\n            }\n          }\n        } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n          // 当差距比较小的时候将音频帧重定位\n          // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n          audioSamples[0].dts = this.nextAudioDts;\n          audioSamples[0].pts = this.nextAudioDts;\n        } else if (gap < 0) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n        }\n      }\n      var lastOriginDts = audioSamples[audioSamples.length - 1].originDts;\n      var lastDts = audioSamples[audioSamples.length - 1].dts;\n      var lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration;\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration;\n      this.lastAudioDts = lastDts;\n\n      audioSamples[audioSamples.length - 1].duration = lastSampleDuration;\n\n      // step3. 修复samples段内部的dts异常问题\n      for (var _i4 = 0, _len = audioSamples.length; _i4 < _len; _i4++) {\n        var current = audioSamples[_i4];\n        var next = audioSamples[_i4 + 1];\n\n        if (!next) {\n          break;\n        }\n\n        var duration = next.dts - current.dts;\n        audioSamples[_i4].duration = duration;\n        /*\n        if (duration > (2 * meta.refSampleDuration)) {\n          // 两帧之间间隔太大，需要补空白帧\n          /**\n          let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n          let frameIdx = 0\n           while (frameIdx < silentFrameCount) {\n            const silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n              filtered: 0,\n              isSilent: true\n            }\n             audioSamples.splice(i, 0, silentSample)\n             this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n             frameIdx++\n            i++ // 不对静音帧做比较\n          }\n        } */\n      }\n\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * meta.refSampleDuration;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixVideo(false);\n      }\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var changeSample = secondPartSamples[0];\n      var firstPartDuration = changeSample.dts - firstSample.dts;\n      var streamChangeStart = firstSample.options && firstSample.options.start + firstPartDuration ? firstSample.options.start : null;\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * meta.refSampleDuration;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixAudio(false);\n      }\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var changeSample = secondPartSamples[0];\n      var firstPartDuration = changeSample.dts - firstSample.dts;\n      var streamChangeStart = firstSample.options && firstSample.options.start + firstPartDuration ? firstSample.options.start : null;\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // 获取video和audio的首帧数据\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // 寻找dts最小的帧作为首个音频帧\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * 在没有refSampleDuration的问题流中，\n     */\n\n  }, {\n    key: 'fixRefSampleDuration',\n    value: function fixRefSampleDuration(meta, samples) {\n      var isVideo = meta.type === 'video';\n      var allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount;\n      var firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts;\n      var filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length;\n\n      if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          meta.refSampleDuration = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // 将refSampleDuration重置为计算后的平均值\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n\n          meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n        }\n      }\n    }\n\n    /**\n     * 记录截止目前一共播放了多少帧\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * 去除不合法的帧（倒退、重复帧）\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var _firstVideoSample = this._firstVideoSample,\n          _firstAudioSample = this._firstAudioSample;\n\n\n      if (_firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample) {\n          if (sample === _firstAudioSample) {\n            return true;\n          }\n\n          if (sample.duration !== undefined && sample.duration <= 0) {\n            return false;\n          }\n          return sample.dts > _firstAudioSample.dts;\n        });\n      }\n\n      if (_firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample) {\n          if (sample === _firstVideoSample) {\n            return true;\n          }\n\n          if (sample.duration !== undefined && sample.duration <= 0) {\n            return false;\n          }\n\n          return sample.dts > _firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n\n    /**\n     * 寻找dts最小的sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectLargeGap',\n    value: function detectLargeGap(nextDts, firstSample) {\n      if (nextDts === null) {\n        return;\n      }\n      var curDts = firstSample.dts || 0;\n      var cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000; // fix hls流出现大量流dts间距问题\n      var cond2 = firstSample.options && firstSample.options.discontinue;\n\n      return cond1 || cond2;\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * 中途换流\n     */\n\n  }, {\n    key: 'detactChangeStream',\n    value: function detactChangeStream(samples) {\n      var changed = false;\n      var changedIdx = -1;\n      for (var i = 0, len = samples.length; i < len; i++) {\n        if (samples[i].options && samples[i].options.meta) {\n          changed = true;\n          changedIdx = i;\n          break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdx: changedIdx\n      };\n    }\n  }]);\n  return Compatibility;\n}();\n\nexport default Compatibility;","import _Nalunit from './h264/nalunit';\nimport _SpsParser from './h264/nalunit/sps';\nimport _Compatibility from './compatibility';\n\nexport var Nalunit = _Nalunit;\nexport var SpsParser = _SpsParser;\nexport var Compatibility = _Compatibility;","var Track = function () {\n  /**\n   * The constructor.\n   */\n  function Track() {\n    babelHelpers.classCallCheck(this, Track);\n\n    this.id = -1;\n    this.sequenceNumber = 0;\n    this.samples = [];\n    this.droppedSamples = [];\n    this.length = 0;\n  }\n\n  /**\n   * Reset the track.\n   */\n\n\n  babelHelpers.createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n    /**\n     * destroy the track.\n     */\n\n  }, {\n    key: 'distroy',\n    value: function distroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  babelHelpers.inherits(AudioTrack, _Track);\n\n  /**\n   * The constructor for audio track.\n   */\n  function AudioTrack() {\n    babelHelpers.classCallCheck(this, AudioTrack);\n\n    var _this = babelHelpers.possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  babelHelpers.inherits(VideoTrack, _Track2);\n\n  /**\n   * The constructor for video track.\n   */\n  function VideoTrack() {\n    babelHelpers.classCallCheck(this, VideoTrack);\n\n    var _this2 = babelHelpers.possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    _this2.type = 'video';\n    _this2.dropped = 0;\n    return _this2;\n  }\n  /**\n   * reset the video track.\n   */\n\n\n  babelHelpers.createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    babelHelpers.classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  babelHelpers.createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n  return Tracks;\n}();","export var XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    babelHelpers.classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n\n\n  babelHelpers.createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n  return XgBuffer;\n}();\n\nexport var RemuxBuffer = function () {\n  function RemuxBuffer() {\n    babelHelpers.classCallCheck(this, RemuxBuffer);\n\n    this.video = [];\n    this.audio = [];\n  }\n\n  babelHelpers.createClass(RemuxBuffer, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.video = [];\n      this.audio = [];\n    }\n  }]);\n  return RemuxBuffer;\n}();","var Source = function Source() {\n  babelHelpers.classCallCheck(this, Source);\n\n  this.mimetype = '';\n  this.init = null;\n  this.data = [];\n};\n\nvar PreSource = function () {\n  function PreSource() {\n    babelHelpers.classCallCheck(this, PreSource);\n\n    this.sources = {};\n  }\n\n  babelHelpers.createClass(PreSource, [{\n    key: 'getSource',\n    value: function getSource(source) {\n      return this.sources[source];\n    }\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new Source();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.sources = {};\n    }\n  }]);\n  return PreSource;\n}();\n\nexport default PreSource;","import _Track, { Tracks as _Tracks, AudioTrack as _AudioTrack, VideoTrack as _VideoTrack } from './track';\nimport { XgBuffer as _XgBuffer, RemuxBuffer as _RemuxBuffer } from './buffer';\nimport _PreSource from './presouce';\n\nexport var Track = _Track;\nexport var Tracks = _Tracks;\nexport var AudioTrack = _AudioTrack;\nexport var VideoTrack = _VideoTrack;\nexport var XgBuffer = _XgBuffer;\nexport var RemuxBuffer = _RemuxBuffer;\nexport var PreSource = _PreSource;","import { Nalunit } from 'xgplayer-codec';\nimport { AudioTrack, VideoTrack } from 'xgplayer-buffer';\nimport { AudioTrackMeta, VideoTrackMeta, AudioTrackSample, VideoTrackSample, EVENTS, Stream } from 'xgplayer-utils';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar StreamType = {\n  0x01: ['video', 'MPEG-1'],\n  0x02: ['video', 'MPEG-2'],\n  0x1b: ['video', 'AVC.H264'],\n  0xea: ['video', 'VC-1'],\n  0x03: ['audio', 'MPEG-1'],\n  0x04: ['audio', 'MPEG-2'],\n  0x0f: ['audio', 'MPEG-2.AAC'],\n  0x11: ['audio', 'MPEG-4.AAC'],\n  0x80: ['audio', 'LPCM'],\n  0x81: ['audio', 'AC3'],\n  0x06: ['audio', 'AC3'],\n  0x82: ['audio', 'DTS'],\n  0x83: ['audio', 'Dolby TrueHD'],\n  0x84: ['audio', 'AC3-Plus'],\n  0x85: ['audio', 'DTS-HD'],\n  0x86: ['audio', 'DTS-MA'],\n  0xa1: ['audio', 'AC3-Plus-SEC'],\n  0xa2: ['audio', 'DTS-HD-SEC']\n};\n\nvar TsDemuxer = function () {\n  function TsDemuxer(configs) {\n    babelHelpers.classCallCheck(this, TsDemuxer);\n\n    this.configs = Object.assign({}, configs);\n    this.demuxing = false;\n    this.pat = [];\n    this.pmt = [];\n    this._hasVideoMeta = false;\n    this._hasAudioMeta = false;\n  }\n\n  babelHelpers.createClass(TsDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.demux.bind(this));\n    }\n  }, {\n    key: 'demux',\n    value: function demux(frag) {\n      if (this.demuxing) {\n        return;\n      }\n\n      var buffer = this.inputBuffer;\n      var frags = { pat: [], pmt: [] };\n      var peses = {};\n\n      // Read TS segment\n      while (buffer.length >= 188) {\n        if (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('Untrust sync code: ' + buffer.array[0][buffer.offset] + ', try to recover;'), false);\n        }\n        while (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          buffer.shift(1);\n        }\n        var buf = buffer.shift(188);\n        // console.log(buf);\n        var tsStream = new Stream(buf.buffer);\n        var ts = {};\n        TsDemuxer.read(tsStream, ts, frags);\n        if (ts.pes) {\n          if (!peses[ts.header.pid]) {\n            peses[ts.header.pid] = [];\n          }\n          peses[ts.header.pid].push(ts.pes);\n          ts.pes.ES.buffer = [ts.pes.ES.buffer];\n        } else if (peses[ts.header.pid]) {\n          peses[ts.header.pid][peses[ts.header.pid].length - 1].ES.buffer.push(ts.payload.stream);\n        }\n      }\n\n      var AudioOptions = frag;\n      var VideoOptions = frag;\n\n      // Get Frames data\n      for (var i = 0; i < Object.keys(peses).length; i++) {\n        var epeses = peses[Object.keys(peses)[i]];\n        for (var j = 0; j < epeses.length; j++) {\n          epeses[j].id = Object.keys(peses)[i];\n          epeses[j].ES.buffer = TsDemuxer.Merge(epeses[j].ES.buffer);\n          if (epeses[j].type === 'audio') {\n            this.pushAudioSample(epeses[j], AudioOptions);\n            AudioOptions = {};\n          } else if (epeses[j].type === 'video') {\n            this.pushVideoSample(epeses[j], VideoOptions);\n            VideoOptions = {};\n          }\n        }\n      }\n\n      if (this._hasAudioMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'audio');\n      }\n      if (this._hasVideoMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'video');\n      }\n    }\n  }, {\n    key: 'pushAudioSample',\n    value: function pushAudioSample(pes, options) {\n      var track = void 0;\n      if (!this._tracks.audioTrack) {\n        this._tracks.audioTrack = new AudioTrack();\n        track = this._tracks.audioTrack;\n      } else {\n        track = this._tracks.audioTrack;\n      }\n      var meta = new AudioTrackMeta({\n        audioSampleRate: pes.ES.frequence,\n        sampleRate: pes.ES.frequence,\n        channelCount: pes.ES.channel,\n        codec: 'mp4a.40.' + pes.ES.audioObjectType,\n        config: pes.ES.audioConfig,\n        id: 2,\n        sampleRateIndex: pes.ES.frequencyIndex\n      });\n      meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n\n      var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n\n      if (!this._hasAudioMeta || !metaEqual) {\n        track.meta = meta;\n        this._hasAudioMeta = true;\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n      }\n\n      var data = new Uint8Array(pes.ES.buffer.buffer.slice(pes.ES.buffer.position, pes.ES.buffer.length));\n      var dts = parseInt(pes.pts / 90);\n      var pts = parseInt(pes.pts / 90);\n      var sample = new AudioTrackSample({ dts: dts, pts: pts, data: data, options: options });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'pushVideoSample',\n    value: function pushVideoSample(pes, options) {\n      var nals = Nalunit.getNalunits(pes.ES.buffer);\n      var track = void 0;\n      var meta = new VideoTrackMeta();\n      if (!this._tracks.videoTrack) {\n        this._tracks.videoTrack = new VideoTrack();\n        track = this._tracks.videoTrack;\n      } else {\n        track = this._tracks.videoTrack;\n      }\n      var sampleLength = 0;\n      var sps = false;\n      var pps = false;\n      for (var i = 0; i < nals.length; i++) {\n        var nal = nals[i];\n        if (nal.sps) {\n          sps = nal;\n          track.sps = nal.body;\n          meta.chromaFormat = sps.sps.chroma_format;\n          meta.codec = 'avc1.';\n          for (var j = 1; j < 4; j++) {\n            var h = sps.body[j].toString(16);\n            if (h.length < 2) {\n              h = '0' + h;\n            }\n            meta.codec += h;\n          }\n          meta.codecHeight = sps.sps.codec_size.height;\n          meta.codecWidth = sps.sps.codec_size.width;\n          meta.frameRate = sps.sps.frame_rate;\n          meta.id = 1;\n          meta.level = sps.sps.level_string;\n          meta.presentHeight = sps.sps.present_size.height;\n          meta.presentWidth = sps.sps.present_size.width;\n          meta.profile = sps.sps.profile_string;\n          meta.refSampleDuration = Math.floor(meta.timescale * (sps.sps.frame_rate.fps_den / sps.sps.frame_rate.fps_num));\n          meta.sarRatio = sps.sps.sar_ratio ? sps.sps.sar_ratio : sps.sps.par_ratio;\n        } else if (nal.pps) {\n          track.pps = nal.body;\n          pps = nal;\n        } else if (nal.type < 9) {\n          sampleLength += 4 + nal.body.byteLength;\n        }\n      }\n\n      if (sps && pps) {\n        meta.avcc = Nalunit.getAvcc(sps.body, pps.body);\n        var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n        if (!this._hasVideoMeta || !metaEqual) {\n          if (options) {\n            options.meta = Object.assign({}, meta);\n          } else {\n            options = {\n              meta: Object.assign({}, meta)\n            };\n          }\n          track.meta = meta;\n          this._hasVideoMeta = true;\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n        }\n      }\n\n      var data = new Uint8Array(sampleLength);\n      var offset = 0;\n      var isKeyframe = false;\n      for (var _i = 0; _i < nals.length; _i++) {\n        var _nal = nals[_i];\n        if (_nal.type && _nal.type >= 9) {\n          continue;\n        }\n        var length = _nal.body.byteLength;\n        if (_nal.idr) {\n          isKeyframe = true;\n        }\n        if (!_nal.pps && !_nal.sps) {\n          data.set(new Uint8Array([length >>> 24 & 0xff, length >>> 16 & 0xff, length >>> 8 & 0xff, length & 0xff]), offset);\n          offset += 4;\n          data.set(_nal.body, offset);\n          offset += length;\n        }\n      }\n      var sample = new VideoTrackSample({\n        dts: parseInt(pes.dts / 90),\n        pts: parseInt(pes.pts / 90),\n        cts: (pes.pts - pes.dts) / 90,\n        originDts: pes.dts,\n        isKeyframe: isKeyframe,\n        data: data,\n        options: options\n      });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'destory',\n    value: function destory() {\n      this.off(DEMUX_EVENTS.DEMUX_START, this.demux);\n      this.configs = {};\n      this.demuxing = false;\n      this.pat = [];\n      this.pmt = [];\n      this._hasVideoMeta = false;\n      this._hasAudioMeta = false;\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get() {\n      return this._context.getInstance(this.configs.inputbuffer);\n    }\n  }, {\n    key: '_tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }], [{\n    key: 'compaireArray',\n    value: function compaireArray(a, b, type) {\n      var al = 0;\n      var bl = 0;\n      if (type === 'Uint8Array') {\n        al = a.byteLength;\n        bl = b.byteLength;\n      } else if (type === 'Array') {\n        al = a.length;\n        bl = b.length;\n      }\n      if (al !== bl) {\n        return false;\n      }\n\n      for (var i = 0; i < al; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compaireMeta',\n    value: function compaireMeta(a, b, ignoreDuration) {\n      if (!a || !b) {\n        return false;\n      }\n\n      for (var i = 0, k = Object.keys(a).length; i < k; i++) {\n        var itema = a[Object.keys(a)[i]];\n        var itemb = b[Object.keys(a)[i]];\n        if ((typeof itema === 'undefined' ? 'undefined' : babelHelpers.typeof(itema)) !== 'object') {\n          if (ignoreDuration && Object.keys(a)[i] !== 'duration' && Object.keys(a)[i] !== 'refSampleDuration' && Object.keys(a)[i] !== 'refSampleDurationFixed' && itema !== itemb) {\n            return false;\n          }\n        } else if (itema.byteLength !== undefined) {\n          if (itemb.byteLength === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Uint8Array')) {\n            return false;\n          }\n        } else if (itema.length !== undefined) {\n          if (itemb.length === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Array')) {\n            return false;\n          }\n        } else {\n          if (!TsDemuxer.compaireMeta(itema, itemb)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'Merge',\n    value: function Merge(buffers) {\n      var data = void 0;\n      var length = 0;\n      var offset = 0;\n      for (var i = 0; i < buffers.length; i++) {\n        length += buffers[i].length - buffers[i].position;\n      }\n\n      data = new Uint8Array(length);\n      for (var _i2 = 0; _i2 < buffers.length; _i2++) {\n        var buffer = buffers[_i2];\n        data.set(new Uint8Array(buffer.buffer, buffer.position), offset);\n        offset += buffer.length - buffer.position;\n      }\n      return new Stream(data.buffer);\n    }\n  }, {\n    key: 'read',\n    value: function read(stream, ts, frags) {\n      TsDemuxer.readHeader(stream, ts);\n      TsDemuxer.readPayload(stream, ts, frags);\n      if (ts.header.packet === 'MEDIA' && ts.header.payload === 1 && !ts.unknownPIDs) {\n        ts.pes = TsDemuxer.PES(ts);\n      }\n    }\n  }, {\n    key: 'readPayload',\n    value: function readPayload(stream, ts, frags) {\n      var header = ts.header;\n      var pid = header.pid;\n      switch (pid) {\n        case 0:\n          TsDemuxer.PAT(stream, ts, frags);\n          break;\n        case 1:\n          TsDemuxer.CAT(stream, ts, frags);\n          break;\n        case 2:\n          TsDemuxer.TSDT(stream, ts, frags);\n          break;\n        case 0x1fff:\n          break;\n        default:\n          // TODO: some的写法不太好，得改\n          if (frags.pat.some(function (item) {\n            return item.pid === pid;\n          })) {\n            TsDemuxer.PMT(stream, ts, frags);\n          } else {\n            var sts = frags.pmt ? frags.pmt.filter(function (item) {\n              return item.pid === pid;\n            }) : [];\n            if (sts.length > 0) {\n              TsDemuxer.Media(stream, ts, StreamType[sts[0].streamType][0]);\n            } else {\n              ts.unknownPIDs = true;\n            };\n          }\n      }\n    }\n  }, {\n    key: 'readHeader',\n    value: function readHeader(stream, ts) {\n      var header = {};\n      header.sync = stream.readUint8();\n      var next = stream.readUint16();\n      header.error = next >>> 15;\n      header.payload = next >>> 14 & 1;\n      header.priority = next >>> 13 & 1;\n      header.pid = next & 0x1fff;\n\n      next = stream.readUint8();\n\n      header.scrambling = next >> 6 & 0x3; // 是否加密，00表示不加密\n\n      /**\n       * 00 ISO/IEC未来使用保留\n       * 01 没有调整字段，仅含有184B有效净荷\n       * 02 没有有效净荷，仅含有183B调整字段\n       * 03 0~182B调整字段后为有效净荷\n       */\n      header.adaptation = next >> 4 & 0x3;\n      header.continuity = next & 15;\n      header.packet = header.pid === 0 ? 'PAT' : 'MEDIA';\n      ts.header = header;\n    }\n  }, {\n    key: 'PAT',\n    value: function PAT(stream, ts, frags) {\n      var ret = {};\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tabelID = next;\n      next = stream.readUint16();\n      ret.error = next >>> 7;\n      ret.zero = next >>> 6 & 1;\n      ret.sectionLength = next & 0xfff;\n      ret.streamID = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (ret.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        var programNumber = stream.readUint16();\n        var pid = stream.readUint16() & 0x1fff;\n        list.push({\n          program: programNumber,\n          pid: pid,\n          type: programNumber === 0 ? 'network' : 'mapPID'\n        });\n      }\n      if (list.length > 0) {\n        frags.pat = frags.pat.concat(list);\n      }\n      ret.list = list;\n      ret.program = stream.readUint16();\n      ret.pid = stream.readUint16() & 0x1fff;\n      ts.payload = ret;\n      // TODO CRC\n    }\n  }, {\n    key: 'PMT',\n    value: function PMT(stream, ts, frags) {\n      var ret = {};\n      var header = ts.header;\n      header.packet = 'PMT';\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tableID = next;\n      next = stream.readUint16();\n      ret.sectionLength = next & 0xfff;\n      ret.program = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.order = stream.readUint8();\n      ret.lastOrder = stream.readUint8();\n      ret.PCR_PID = stream.readUint16() & 0x1fff;\n      ret.programLength = stream.readUint16() & 0xfff;\n      var N = (ret.sectionLength - 13) / 5;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({\n          streamType: stream.readUint8(),\n          pid: stream.readUint16() & 0x1fff, // 0x07e5 视频，0x07e6\n          es: stream.readUint16() & 0xfff\n        });\n      }\n      ret.list = list;\n      if (!this.pmt) {\n        this.pmt = [];\n      }\n      frags.pmt = this.pmt.concat(list.map(function (item) {\n        return {\n          pid: item.pid,\n          es: item.es,\n          streamType: item.streamType,\n          program: ret.program\n        };\n      }));\n      ts.payload = ret;\n    }\n  }, {\n    key: 'Media',\n    value: function Media(stream, ts, type) {\n      var header = ts.header;\n      var payload = {};\n      header.type = type;\n      if (header.adaptation === 0x03) {\n        payload.adaptationLength = stream.readUint8();\n        if (payload.adaptationLength > 0) {\n          var next = stream.readUint8();\n          payload.discontinue = next >>> 7;\n          payload.access = next >>> 6 & 0x01;\n          payload.priority = next >>> 5 & 0x01;\n          payload.PCR = next >>> 4 & 0x01;\n          payload.OPCR = next >>> 3 & 0x01;\n          payload.splicePoint = next >>> 2 & 0x01;\n          payload.transportPrivate = next >>> 1 & 0x01;\n          payload.adaptationField = next & 0x01;\n          var _start = stream.position;\n          if (payload.PCR === 1) {\n            payload.programClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.programClockBase |= next >>> 15;\n            payload.programClockExtension = next & 0x1ff;\n          }\n          if (payload.OPCR === 1) {\n            payload.originProgramClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.originProgramClockBase += next >>> 15;\n            payload.originProgramClockExtension = next & 0x1ff;\n          }\n          if (payload.splicePoint === 1) {\n            payload.spliceCountdown = stream.readUint8();\n          }\n          if (payload.transportPrivate === 1) {\n            var length = stream.readUint8();\n            var transportPrivateData = [];\n            for (var i = 0; i < length; i++) {\n              transportPrivateData.push(stream.readUint8());\n            }\n          }\n          if (payload.adaptationField === 1) {\n            var _length = stream.readUint8();\n            var _next = stream.readUint8();\n            var start = stream.position;\n            var ltw = _next >>> 7;\n            var piecewise = _next >>> 6 & 0x1;\n            var seamless = _next >>> 5 & 0x1;\n            if (ltw === 1) {\n              _next = stream.readUint16();\n              payload.ltwValid = _next >>> 15;\n              payload.ltwOffset = _next & 0xefff;\n            }\n            if (piecewise === 1) {\n              _next = stream.readUint24();\n              payload.piecewiseRate = _next & 0x3fffff;\n            }\n            if (seamless === 1) {\n              _next = stream.readInt8();\n              payload.spliceType = _next >>> 4;\n              payload.dtsNextAU1 = _next >>> 1 & 0x7;\n              payload.marker1 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU2 = _next >>> 1;\n              payload.marker2 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU3 = _next;\n            }\n            stream.skip(_length - 1 - (stream.position - start));\n          }\n          var lastStuffing = payload.adaptationLength - 1 - (stream.position - _start);\n          stream.skip(lastStuffing);\n        }\n      }\n      payload.stream = new Stream(stream.buffer.slice(stream.position));\n      ts.payload = payload;\n    }\n  }, {\n    key: 'PES',\n    value: function PES(ts) {\n      var ret = {};\n      var buffer = ts.payload.stream;\n\n      var next = buffer.readUint24();\n      if (next !== 1) {\n        ret.ES = {};\n        ret.ES.buffer = buffer;\n      } else {\n        var streamID = buffer.readUint8();\n        if (streamID >= 0xe0 && streamID <= 0xef) {\n          ret.type = 'video';\n        }\n        if (streamID >= 0xc0 && streamID <= 0xdf) {\n          ret.type = 'audio';\n        }\n        var packetLength = buffer.readUint16();\n        ret.packetLength = packetLength;\n        if (ret.type === 'video' || ret.type === 'audio') {\n          var _next2 = buffer.readUint8();\n          var first = _next2 >>> 6;\n          if (first !== 0x02) {\n            throw new Error('error when parse pes header');\n          }\n          _next2 = buffer.readUint8();\n          ret.ptsDTSFlag = _next2 >>> 6;\n          ret.escrFlag = _next2 >>> 5 & 0x01;\n          ret.esRateFlag = _next2 >>> 4 & 0x01;\n          ret.dsmFlag = _next2 >>> 3 & 0x01;\n          ret.additionalFlag = _next2 >>> 2 & 0x01;\n          ret.crcFlag = _next2 >>> 1 & 0x01;\n          ret.extensionFlag = _next2 & 0x01;\n          ret.pesHeaderLength = buffer.readUint8();\n          var N1 = ret.pesHeaderLength;\n\n          if (ret.ptsDTSFlag === 2) {\n            var pts = [];\n            _next2 = buffer.readUint8();\n            pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            ret.pts = pts[0] << 30 | pts[1] << 15 | pts[2];\n            N1 -= 5;\n            // 视频如果没有dts用pts\n            if (ret.type === 'video') {\n              ret.dts = ret.pts;\n            }\n          }\n          if (ret.ptsDTSFlag === 3) {\n            var _pts = [];\n            _next2 = buffer.readUint8();\n            _pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            ret.pts = _pts[0] << 30 | _pts[1] << 15 | _pts[2];\n            var dts = [];\n            _next2 = buffer.readUint8();\n            dts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            ret.dts = dts[0] << 30 | dts[1] << 15 | dts[2];\n            N1 -= 10;\n          }\n          if (ret.escrFlag === 1) {\n            var escr = [];\n            var ex = [];\n            _next2 = buffer.readUint8();\n            escr.push(_next2 >>> 3 & 0x07);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            ex.push(_next2 & 0x03);\n            _next2 = buffer.readUint8();\n            ex.push(_next2 >>> 1);\n            ret.escr = (escr[0] << 30 | escr[1] << 28 | escr[2] << 15 | escr[3] << 13 | escr[4]) * 300 + (ex[0] << 7 | ex[1]);\n            N1 -= 6;\n          }\n          if (ret.esRateFlag === 1) {\n            _next2 = buffer.readUint24();\n            ret.esRate = _next2 >>> 1 & 0x3fffff;\n            N1 -= 3;\n          }\n          if (ret.dsmFlag === 1) {\n            throw new Error('not support DSM_trick_mode');\n          }\n          if (ret.additionalFlag === 1) {\n            _next2 = buffer.readUint8();\n            ret.additionalCopyInfo = _next2 & 0x7f;\n            N1 -= 1;\n          }\n          if (ret.crcFlag === 1) {\n            ret.pesCRC = buffer.readUint16();\n            N1 -= 2;\n          }\n          if (ret.extensionFlag === 1) {\n            throw new Error('not support extension');\n          }\n          if (N1 > 0) {\n            buffer.skip(N1);\n          }\n          ret.ES = TsDemuxer.ES(buffer, ret.type);\n        } else {\n          throw new Error('format is not supported');\n        }\n      }\n      return ret;\n    }\n  }, {\n    key: 'ES',\n    value: function ES(buffer, type) {\n      var next = void 0;\n      var ret = {};\n      if (type === 'video') {\n        next = buffer.readUint32();\n        if (next !== 1) {\n          buffer.back(4);\n          next = buffer.readUint24();\n          if (next !== 1) {\n            throw new Error('h264 nal header parse failed');\n          }\n        }\n        buffer.skip(2); // 09 F0\n        // TODO readnalu\n        ret.buffer = buffer;\n      } else if (type === 'audio') {\n        next = buffer.readUint16();\n        // adts的同步字节，12位\n        if (next >>> 4 !== 0xfff) {\n          throw new Error('aac ES parse Error');\n        }\n        var fq = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n        ret.id = (next >>> 3 & 0x01) === 0 ? 'MPEG-4' : 'MPEG-2';\n        ret.layer = next >>> 1 & 0x03;\n        ret.absent = next & 0x01;\n        next = buffer.readUint16();\n        ret.audioObjectType = (next >>> 14 & 0x03) + 1;\n        ret.profile = ret.audioObjectType - 1;\n        ret.frequencyIndex = next >>> 10 & 0x0f;\n        ret.frequence = fq[ret.frequencyIndex];\n        ret.channel = next >>> 6 & 0x07;\n        ret.frameLength = (next & 0x03) << 11 | buffer.readUint16() >>> 5;\n        TsDemuxer.getAudioConfig(ret);\n        buffer.skip(1);\n        ret.buffer = buffer;\n      } else {\n        throw new Error('ES ' + type + ' is not supported');\n      }\n\n      return ret;\n    }\n  }, {\n    key: 'TSDT',\n    value: function TSDT(stream, ts, frags) {\n      // TODO\n      ts.payload = {};\n    }\n  }, {\n    key: 'CAT',\n    value: function CAT(stream, ts, frags) {\n      var ret = {};\n      ret.tableID = stream.readUint8();\n      var next = stream.readUint16();\n      ret.sectionIndicator = next >>> 7;\n      ret.sectionLength = next & 0x0fff;\n      stream.skip(2);\n      next = stream.readUint8();\n      ret.version = next >>> 3;\n      ret.currentNextIndicator = next & 0x01;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (this.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({});\n      }\n      ret.crc32 = stream.readUint32();\n      ts.payload = ret;\n    }\n  }, {\n    key: 'getAudioConfig',\n    value: function getAudioConfig(ret) {\n      var userAgent = navigator.userAgent.toLowerCase();\n      var config = void 0;\n      var extensionSampleIndex = void 0;\n      if (/firefox/i.test(userAgent)) {\n        if (ret.frequencyIndex >= 6) {\n          ret.audioObjectType = 5;\n          config = new Array(4);\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          ret.audioObjectType = 2;\n          config = new Array(2);\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        ret.audioObjectType = 2;\n        config = new Array(2);\n        extensionSampleIndex = ret.frequencyIndex;\n      } else {\n        ret.audioObjectType = 5;\n        config = new Array(4);\n        if (ret.frequencyIndex >= 6) {\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          if (ret.channel === 1) {\n            ret.audioObjectType = 2;\n            config = new Array(2);\n          }\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      }\n\n      config[0] = ret.audioObjectType << 3;\n      config[0] |= (ret.frequencyIndex & 0x0e) >> 1;\n      config[1] = (ret.frequencyIndex & 0x01) << 7;\n      config[1] |= ret.channel << 3;\n      if (ret.audioObjectType === 5) {\n        config[1] |= (extensionSampleIndex & 0x0e) >> 1;\n        config[2] = (extensionSampleIndex & 0x01) << 7;\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.audioConfig = config;\n    }\n  }]);\n  return TsDemuxer;\n}();\n\nexport default TsDemuxer;","var Playlist = function () {\n  function Playlist(configs) {\n    babelHelpers.classCallCheck(this, Playlist);\n\n    this._baseURL = '';\n    this._list = {};\n    this._ts = {};\n    this.version = 0;\n    this.sequence = -1;\n    this.targetduration = 0;\n    this.duration = 0;\n    this.fragLength = 0;\n    this._lastget = undefined;\n    this._audoclear = configs.autoclear || false;\n  }\n\n  babelHelpers.createClass(Playlist, [{\n    key: 'push',\n    value: function push(ts, duration, discontinue) {\n      if (!this._ts[ts]) {\n        this._ts[ts] = { duration: duration,\n          downloaded: false,\n          downloading: false,\n          start: this.duration,\n          discontinue: discontinue ? true : false\n        };\n        this._list[this.duration] = ts;\n        this.duration += duration;\n        this.fragLength += 1;\n      }\n    }\n  }, {\n    key: 'deleteFrag',\n    value: function deleteFrag(url) {\n      if (this._ts[url]) {\n        if (this._ts[url].start > this._lastget.time) {\n          this._lastget = {\n            duration: this._ts[url].duration,\n            time: this._ts[url].start,\n            downloaded: false,\n            downloading: false,\n            url: url\n          };\n        }\n        delete this._list[this._ts[url].start];\n        delete this._ts[url];\n        this.fragLength -= 1;\n      }\n    }\n  }, {\n    key: 'pushM3U8',\n    value: function pushM3U8(data, deletepre) {\n      // 常规信息替换\n      if (!data) {\n        throw new Error('No m3u8 data received.');\n        return;\n      }\n      this.version = data.version;\n      this.targetduration = data.targetduration;\n      if (data.encrypt && !this.encrypt) {\n        this.encrypt = data.encrypt;\n      }\n      // 新分片信息\n      if (data.sequence > this.sequence) {\n        this.sequence = data.sequence;\n        var newfraglist = [];\n        for (var i = 0; i < data.frags.length; i++) {\n          var frag = data.frags[i];\n          if (!this._ts[frag.url]) {\n            newfraglist.push(frag.url);\n            this.push(frag.url, frag.duration, frag.discontinue);\n          }\n        }\n\n        if (newfraglist.length < 1) {\n          throw new Error('Can not read ts file list.');\n        }\n\n        if (deletepre) {\n          var tslist = this.getTsList();\n          for (var _i = 0; _i < tslist.length; _i++) {\n            if (newfraglist.indexOf(tslist[_i]) < 0) {\n              this.deleteFrag(tslist[_i]);\n            }\n          }\n        }\n      } else {\n        throw new Error('Old m3u8 file received, ' + data.sequence);\n      }\n    }\n  }, {\n    key: 'getTsList',\n    value: function getTsList() {\n      return Object.keys(this._ts);\n    }\n  }, {\n    key: 'downloaded',\n    value: function downloaded(tsname, isloaded) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloaded = isloaded;\n      }\n    }\n  }, {\n    key: 'downloading',\n    value: function downloading(tsname, loading) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloading = loading;\n      }\n    }\n  }, {\n    key: 'getTsByName',\n    value: function getTsByName(name) {\n      return this._ts[name];\n    }\n  }, {\n    key: 'getTs',\n    value: function getTs(time) {\n      var timelist = Object.keys(this._list);\n      var ts = void 0;\n\n      if (time === undefined) {\n        if (this._lastget) {\n          time = this._lastget.time + this._lastget.duration;\n        } else {\n          time = 0;\n        }\n      }\n\n      if (timelist.length < 1 || time >= this.duration) {\n        return undefined;\n      }\n      timelist.sort(function (a, b) {\n        return parseFloat(a) - parseFloat(b);\n      });\n      for (var i = 0; i < timelist.length; i++) {\n        if (time >= parseInt(timelist[i])) {\n          var url = this._list[timelist[i]];\n          var downloaded = this._ts[url].downloaded;\n          var downloading = this._ts[url].downloading;\n          ts = { url: url, downloaded: downloaded, downloading: downloading, time: parseInt(timelist[i]), duration: parseInt(this._ts[url].duration) };\n          if (this.autoclear) {\n            delete this._ts[this._lastget.url];\n            delete this._list[this._lastget.time];\n          }\n          this._lastget = ts;\n        } else {\n          break;\n        }\n      }\n      return ts;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n    }\n  }, {\n    key: 'clearDownloaded',\n    value: function clearDownloaded() {\n      for (var i = 0, l = Object.keys(this._ts).length; i < l; i++) {\n        var ts = this._ts[Object.keys(this._ts)[i]];\n        ts.downloaded = false;\n        ts.downloading = false;\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n      this.fragLength = 0;\n      this._lastget = undefined;\n      this._audoclear = false;\n    }\n  }, {\n    key: 'list',\n    get: function get() {\n      return this._list;\n    }\n  }, {\n    key: 'baseURL',\n    set: function set(baseURL) {\n      if (this.baseURL !== baseURL) {\n        this.clear();\n        this._baseURL = baseURL;\n      }\n    },\n    get: function get() {\n      return this._baseURL;\n    }\n  }]);\n  return Playlist;\n}();\n\nexport default Playlist;","import { isLe, UTF8 } from 'xgplayer-utils';\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta信息解析\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    babelHelpers.classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  babelHelpers.createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * 解析meta中的变量\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n  return AMFParser;\n}();\n\nexport default AMFParser;","import { EVENTS, AudioTrackMeta, VideoTrackMeta } from 'xgplayer-utils';\nimport { SpsParser } from 'xgplayer-codec';\nimport { VideoTrack, AudioTrack } from 'xgplayer-buffer';\n\nimport AMFParser from './amf-parser';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    babelHelpers.classCallCheck(this, FlvDemuxer);\n\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n  }\n\n  babelHelpers.createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this));\n    }\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'doParseFlv',\n    value: function doParseFlv() {\n      if (!this._firstFragmentLoaded) {\n        if (this.loaderBuffer.length < 13) {\n          return;\n        }\n        var header = this.loaderBuffer.shift(13);\n        this.parseFlvHeader(header);\n        this.doParseFlv(); // 递归调用，继续解析flv流\n      } else {\n        if (this.loaderBuffer.length < 11) {\n          return;\n        }\n        var chunk = void 0;\n\n        var loopMax = 10000; // 防止死循环产生\n        do {\n          // console.log('mark4')\n          chunk = this._parseFlvTag();\n        } while (chunk && loopMax-- > 0);\n\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'));\n        this.doParseFlv();\n      } else {\n        this._firstFragmentLoaded = true;\n        // const playType = FlvDemuxer.getPlayType(header[4])\n\n        this.initVideoTrack();\n        this.initAudioTrack();\n      }\n      this.doParseFlv();\n    }\n\n    /**\n     * init default video track configs\n     */\n\n  }, {\n    key: 'initVideoTrack',\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8、9、18\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag() {\n      if (this.loaderBuffer.length < 11) {\n        return null;\n      }\n      var chunk = this._parseFlvTagHeader();\n      if (chunk) {\n        this._processChunk(chunk);\n      }\n      return chunk;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader() {\n      var offset = 0;\n      var chunk = {};\n\n      var tagType = this.loaderBuffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      chunk.filtered = (tagType & 32) >>> 5;\n      chunk.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      chunk.datasize = this.loaderBuffer.toInt(offset, 3);\n      offset += 3;\n\n      if (chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18 || this.loaderBuffer.toInt(8, 3) !== 0) {\n        if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n          this.loaderBuffer.shift(1);\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false);\n        return null;\n      }\n\n      if (this.loaderBuffer.length < chunk.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      this.loaderBuffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = this.loaderBuffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      chunk.dts = timestamp;\n\n      // streamId\n      this.loaderBuffer.shift(3);\n      return chunk;\n    }\n  }, {\n    key: '_processChunk',\n    value: function _processChunk(chunk) {\n      switch (chunk.tagType) {\n        case 18:\n          this._parseScriptData(chunk);\n          break;\n        case 8:\n          this._parseAACData(chunk);\n          break;\n        case 9:\n          this._parseHevcData(chunk);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          this.loaderBuffer.shift(3);\n          break;\n        default:\n          this.loaderBuffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(chunk) {\n      var audioTrack = this.tracks.audioTrack;\n      var videoTrack = this.tracks.videoTrack;\n\n      var data = this.loaderBuffer.shift(chunk.datasize);\n\n      var info = new AMFParser().resolve(data, data.length);\n\n      var onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined;\n\n      // fill mediaInfo\n      this._context.mediaInfo.duration = onMetaData.duration;\n      this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n\n      var validate = this._datasizeValidator(chunk.datasize);\n      if (validate) {\n        this.emit(DEMUX_EVENTS.MEDIA_INFO);\n        this._hasScript = true;\n      }\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 6) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n  }, {\n    key: '_parseAACData',\n    value: function _parseAACData(chunk) {\n      var track = this.tracks.audioTrack;\n      if (!track) {\n        return;\n      }\n\n      var meta = track.meta;\n\n      if (!meta) {\n        track.meta = new AudioTrackMeta();\n        meta = track.meta;\n      }\n\n      var info = this.loaderBuffer.shift(1)[0];\n\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      track.format = format;\n\n      if (format !== 10) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid audio format: ' + format));\n      }\n\n      if (format === 10 && !this._hasAudioSequence) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      delete chunk.tagType;\n      var validate = this._datasizeValidator(chunk.datasize);\n\n      if (chunk.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(chunk.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this._context.mediaInfo.duration * meta.timescale;\n        meta.config = aacHeader.config;\n\n        var audioMedia = this._context.mediaInfo.audio;\n\n        // fill audio media info\n        audioMedia.codec = aacHeader.codec;\n        audioMedia.channelCount = aacHeader.channelCount;\n        audioMedia.sampleRate = audioSampleRate;\n        audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex;\n\n        if (!this._hasAudioSequence) {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n        } else {\n          this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n          // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        }\n        this._hasAudioSequence = true;\n\n        this._metaChange = true;\n      } else {\n        if (this._metaChange) {\n          chunk.options = {\n            meta: track.meta\n          };\n          this._metaChange = false;\n        }\n\n        chunk.data = chunk.data.slice(1, chunk.data.length);\n        track.samples.push(chunk);\n      }\n      if (!validate) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false);\n        // this.logger.warn(this.TAG, error.message)\n      }\n    }\n\n    /**\n     * parse hevc/avc video data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseHevcData',\n    value: function _parseHevcData(chunk) {\n      // header\n      var info = this.loaderBuffer.shift(1)[0];\n      chunk.frameType = (info & 0xf0) >>> 4;\n      chunk.isKeyframe = chunk.frameType === 1;\n      // let tempCodecID = this.tracks.videoTrack.codecID\n      var codecID = info & 0x0f;\n      this.tracks.videoTrack.codecID = codecID;\n\n      // hevc和avc的header解析方式一样\n      chunk.avcPacketType = this.loaderBuffer.shift(1)[0];\n      chunk.cts = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 12) {\n        var data = this.loaderBuffer.shift(chunk.datasize - 5);\n        chunk.data = data;\n\n        if (Number.parseInt(chunk.avcPacketType) !== 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          }\n          var nalu = {};\n          var r = 0;\n          nalu.cts = chunk.cts;\n          nalu.dts = chunk.dts;\n          while (chunk.data.length > r) {\n            var sizes = chunk.data.slice(Number.parseInt(r), 4 + r);\n            nalu.size = sizes[3];\n            nalu.size += sizes[2] * 256;\n            nalu.size += sizes[1] * 256 * 256;\n            nalu.size += sizes[0] * 256 * 256 * 256;\n            r += 4;\n            nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r);\n            r += nalu.size;\n            this.tracks.videoTrack.samples.push(nalu);\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          } else {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        }\n      } else if (codecID === 7) {\n        var _data = this.loaderBuffer.shift(chunk.datasize - 5);\n        if (_data[4] === 0 && _data[5] === 0 && _data[6] === 0 && _data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + _data[i];\n          }\n          avcclength -= 4;\n          _data = _data.slice(4, _data.length);\n          _data[3] = avcclength % 256;\n          avcclength = (avcclength - _data[3]) / 256;\n          _data[2] = avcclength % 256;\n          avcclength = (avcclength - _data[2]) / 256;\n          _data[1] = avcclength % 256;\n          _data[0] = (avcclength - _data[1]) / 256;\n        }\n\n        chunk.data = _data;\n        // If it is AVC sequece Header.\n        if (chunk.avcPacketType === 0) {\n          this._avcSequenceHeaderParser(chunk.data);\n          var validate = this._datasizeValidator(chunk.datasize);\n          if (validate) {\n            if (!this._hasVideoSequence) {\n              this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n            } else {\n              this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n              // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n            }\n            this._hasVideoSequence = true;\n          }\n          this._metaChange = true;\n        } else {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n            return;\n          }\n          if (this._metaChange) {\n            chunk.options = {\n              meta: Object.assign({}, this.tracks.videoTrack.meta)\n            };\n            this._metaChange = false;\n          }\n          this.tracks.videoTrack.samples.push(chunk);\n          // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n        }\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('video codeid is ' + codecID), false);\n        chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n        }\n        this.tracks.videoTrack.samples.push(chunk);\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n      delete chunk.tagType;\n    }\n\n    /**\n     * parse avc metadata\n     * @param data\n     * @private\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var track = this.tracks.videoTrack;\n\n      if (!track) {\n        return;\n      }\n\n      var offset = 0;\n\n      if (!track.meta) {\n        track.meta = new VideoTrackMeta();\n      }\n      var meta = track.meta;\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        this.tracks.videoTrack.meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i = 0; _i < numOfPps; _i++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        this.tracks.videoTrack.meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      // fill video media info\n      var videoMedia = this._context.mediaInfo.video;\n\n      videoMedia.codec = meta.codec;\n      videoMedia.profile = meta.profile;\n      videoMedia.level = meta.level;\n      videoMedia.chromaFormat = meta.chromaFormat;\n      videoMedia.frameRate = meta.frameRate;\n      videoMedia.parRatio = meta.parRatio;\n      videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth;\n      videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight;\n\n      meta.duration = this._context.mediaInfo.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      track.meta = meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize) {\n      var datasizeConfirm = this.loaderBuffer.toInt(0, 4);\n      this.loaderBuffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'isFlvFile',\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;","import _M3U8Parser from './hls/demuxer/m3u8parser';\nimport _TsDemuxer from './hls/demuxer/ts';\nimport _Playlist from './hls/playlist';\nimport _FlvDemuxer from './flv/index';\n\nexport var M3U8Parser = _M3U8Parser;\nexport var TsDemuxer = _TsDemuxer;\nexport var Playlist = _Playlist;\nexport var FlvDemuxer = _FlvDemuxer;","import { EVENTS } from 'xgplayer-utils';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    babelHelpers.classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  babelHelpers.createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'load',\n    value: function load(url, opts) {\n      var _this = this;\n      this.url = url;\n\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n      _this.loading = true;\n      return fetch(this.url, params).then(function (response) {\n        if (response.ok) {\n          _this.status = response.status;\n          return _this._onFetchResponse(response);\n        }\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, new Error('invalid response.'));\n      }).catch(function (error) {\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, error);\n        throw new Error(error.message);\n      });\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      var _this = this;\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n      this._reader && this._reader.read().then(function (val) {\n        if (_this._canceled || _this._destroyed) {\n          if (_this._reader) {\n            try {\n              _this._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this.loading = false;\n          _this.status = 0;\n          _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          return;\n        }\n\n        buffer.push(val.value);\n        _this.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        return _this._onReader(reader, taskno);\n      }).catch(function (error) {\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, error);\n      });\n    }\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // 添加自定义头\n      };if (babelHelpers.typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (babelHelpers.typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials 在默认情况下不被使用。\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // 防止failed: 200错误被打印到控制台上\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      this._canceled = true;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      this.cancel();\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n  return FetchLoader;\n}();\n\nexport default FetchLoader;","import _FetchLoader from './fetch-loader';\n\nexport var FetchLoader = _FetchLoader;","import Remuxer from 'xgplayer-remux'\nimport { FlvDemuxer } from 'xgplayer-demux'\nimport { FetchLoader } from 'xgplayer-loader'\nimport { Tracks, XgBuffer, PreSource } from 'xgplayer-buffer'\nimport { Mse, EVENTS } from 'xgplayer-utils'\nimport { Compatibility } from 'xgplayer-codec'\nimport Player from 'xgplayer'\n\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nconst DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nconst LOADER_EVENTS = EVENTS.LOADER_EVENTS\nconst MSE_EVENTS = EVENTS.MSE_EVENTS\n\nconst Tag = 'FLVController'\n\nclass Logger {\n  warn () {}\n}\n\nconst FLV_ERROR = 'FLV_ERROR'\n\nexport default class FlvController {\n  constructor (player, mse) {\n    this.TAG = Tag\n    this._player = player\n    this.state = {\n      initSegmentArrived: false,\n      randomAccessPoints: []\n    }\n\n    this.mse = mse;\n\n    this.bufferClearTimer = null;\n\n    this._handleTimeUpdate = this._handleTimeUpdate.bind(this)\n  }\n\n  init () {\n    if (!this.mse) {\n      this.mse = new Mse({ container: this._player.video }, this._context);\n      this.mse.init();\n    }\n\n    this.initComponents();\n    this.initListeners()\n  }\n\n  initComponents () {\n    this._context.registry('FETCH_LOADER', FetchLoader)\n    this._context.registry('LOADER_BUFFER', XgBuffer)\n\n    this._context.registry('FLV_DEMUXER', FlvDemuxer)\n    this._context.registry('TRACKS', Tracks)\n\n    this._context.registry('MP4_REMUXER', Remuxer.Mp4Remuxer)(this._player.currentTime)\n    this._context.registry('PRE_SOURCE_BUFFER', PreSource)\n\n    if (this._player.config.compatibility !== false) {\n      this._context.registry('COMPATIBILITY', Compatibility)\n    }\n\n    this._context.registry('LOGGER', Logger)\n  }\n\n  initListeners () {\n    this.on(LOADER_EVENTS.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this))\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._handleNetworkError.bind(this))\n\n    this.on(DEMUX_EVENTS.MEDIA_INFO, this._handleMediaInfo.bind(this))\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._handleMetadataParsed.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this))\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._handleDemuxError.bind(this))\n\n    this.on(REMUX_EVENTS.INIT_SEGMENT, this._handleAppendInitSegment.bind(this))\n    this.on(REMUX_EVENTS.MEDIA_SEGMENT, this._handleMediaSegment.bind(this))\n    this.on(REMUX_EVENTS.RANDOM_ACCESS_POINT, this._handleAddRAP.bind(this))\n\n    this.on(MSE_EVENTS.SOURCE_UPDATE_END, this._handleSourceUpdateEnd.bind(this))\n\n    this._player.on('timeupdate', this._handleTimeUpdate)\n  }\n\n  _handleMediaInfo () {\n    if (!this._context.mediaInfo) {\n      this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('failed to get mediainfo'))\n    }\n  }\n\n  _handleLoaderDataLoaded () {\n    this.emitTo('FLV_DEMUXER', DEMUX_EVENTS.DEMUX_START)\n  }\n\n  _handleMetadataParsed (type) {\n    this.emit(REMUX_EVENTS.REMUX_METADATA, type)\n  }\n  _handleDemuxComplete () {\n    this.emit(REMUX_EVENTS.REMUX_MEDIA)\n  }\n\n  _handleAppendInitSegment () {\n    this.state.initSegmentArrived = true\n    this.mse.addSourceBuffers()\n  }\n\n  _handleMediaSegment () {\n    this.mse.addSourceBuffers()\n    this.mse.doAppend();\n  }\n\n  _handleSourceUpdateEnd () {\n    const time = this._player.currentTime;\n    const video = this._player.video;\n    const preloadTime = this._player.config.preloadTime || 5\n\n    const { length } = video.buffered;\n\n    if (length === 0) {\n      return;\n    }\n\n    const bufferEnd = video.buffered.end(length - 1);\n    if (bufferEnd - time > preloadTime * 2) {\n      this._player.currentTime = bufferEnd - preloadTime\n    }\n    this.mse.doAppend();\n  }\n\n  _handleTimeUpdate () {\n    const time = this._player.currentTime\n\n    const video = this._player.video;\n    let buffered = video.buffered\n\n    if (!buffered || !buffered.length) {\n      return;\n    }\n\n    let range = [0, 0]\n    let currentTime = video.currentTime\n    if (buffered) {\n      for (let i = 0, len = buffered.length; i < len; i++) {\n        range[0] = buffered.start(i)\n        range[1] = buffered.end(i)\n        if (range[0] <= currentTime && currentTime <= range[1]) {\n          break\n        }\n      }\n    }\n\n    const bufferStart = range[0]\n    const bufferEnd = range[1]\n\n    if (currentTime > bufferEnd || currentTime < bufferStart) {\n      video.currentTime = bufferStart;\n      return;\n    }\n\n    if (time - bufferStart > 10 || buffered.length > 1) {\n      // 在直播时及时清空buffer，降低直播内存占用\n      if (this.bufferClearTimer || !this.state.randomAccessPoints.length) {\n        return;\n      }\n      let rap = Infinity;\n      for (let i = 0; i < this.state.randomAccessPoints.length; i++) {\n        const temp = Math.ceil(this.state.randomAccessPoints[i] / 1000)\n        if (temp > time - 10) {\n          break;\n        } else {\n          rap = temp;\n        }\n      }\n\n      // console.log('rap', rap, `time ${time}`, `bufferEnd ${bufferEnd}`,`clean ${Math.min(rap, time - 10, bufferEnd - 10)}`)\n      this.mse.remove(Math.max(Math.min(rap, time - 10, bufferEnd - 10), 0.1), 0)\n\n      this.bufferClearTimer = setTimeout(() => {\n        this.bufferClearTimer = null\n      }, 5000)\n    }\n  }\n\n  _handleNetworkError (tag, err) {\n    this._player.emit('error', new Player.Errors('network', this._player.config.url))\n    this._onError(LOADER_EVENTS.LOADER_ERROR, tag, err, true)\n  }\n\n  _handleDemuxError (tag, err, fatal) {\n    if (fatal === undefined) {\n      fatal = false;\n    }\n    this._player.emit('error', new Player.Errors('parse', this._player.config.url))\n    this._onError(DEMUX_EVENTS.DEMUX_ERROR, tag, err, fatal)\n  }\n\n  _handleAddRAP (rap) {\n    if (this.state.randomAccessPoints) {\n      this.state.randomAccessPoints.push(rap)\n    }\n  }\n\n  _onError (type, mod, err, fatal) {\n    let error = {\n      errorType: type,\n      errorDetails: `[${mod}]: ${err.message}`,\n      errorFatal: fatal || false\n    }\n    this._player.emit(FLV_ERROR, error);\n  }\n\n  seek () {\n    if (!this.state.initSegmentArrived) {\n      this.loadData()\n    }\n  }\n\n  loadData (url = this._player.config.url) {\n    this.emit(LOADER_EVENTS.LADER_START, url)\n  }\n\n  pause () {\n    const loader = this._context.getInstance('FETCH_LOADER')\n\n    if (loader) {\n      loader.cancel()\n    }\n  }\n\n  destroy () {\n    this._player.off('timeupdate', this._handleTimeUpdate)\n    this._player = null\n    this.mse = null\n    this.state.randomAccessPoints = []\n  }\n}\n","import 'xgplayer-polyfills/babel/external-helpers';\nimport Player from 'xgplayer'\nimport { Context, EVENTS } from 'xgplayer-utils';\nimport FLV from './flv-live'\nconst flvAllowedEvents = EVENTS.FlvAllowedEvents;\n\nclass FlvPlayer extends Player {\n  constructor (config) {\n    super(config)\n    this.context = new Context(flvAllowedEvents)\n    this.initEvents()\n    this.loaderCompleteTimer = null\n    // const preloadTime = player.config.preloadTime || 15\n  }\n\n  start () {\n    this.initFlv()\n    this.context.init()\n    super.start(this.flv.mse.url)\n  }\n\n  initFlvEvents (flv) {\n    const player = this;\n    flv.once(EVENTS.REMUX_EVENTS.INIT_SEGMENT, () => {\n      Player.util.addClass(player.root, 'xgplayer-is-live')\n      if (!Player.util.findDom(this.root, 'xg-live')) {\n        const live = Player.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live')\n        player.controls.appendChild(live)\n      }\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_COMPLETE, () => {\n      // 直播完成，待播放器播完缓存后发送关闭事件\n      if (!player.paused) {\n        this.loaderCompleteTimer = setInterval(() => {\n          const end = player.getBufferedRange()[1]\n          if (Math.abs(player.currentTime - end) < 0.5) {\n            player.emit('ended')\n            window.clearInterval(this.loaderCompleteTimer)\n          }\n        }, 200)\n      } else {\n        player.emit('ended')\n      }\n    })\n  }\n\n  initFlvBackupEvents (flv, ctx) {\n    let mediaLength = 3;\n    flv.on(EVENTS.REMUX_EVENTS.MEDIA_SEGMENT, () => {\n      mediaLength -= 1;\n      if (mediaLength === 0) {\n        // ensure switch smoothly\n        this.flv = flv;\n        this.mse.resetContext(ctx);\n        this.context.destroy();\n        this.context = ctx;\n      }\n\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_COMPLETE, () => {\n      // 直播完成，待播放器播完缓存后发送关闭事件\n      if (!this.paused) {\n        this.loaderCompleteTimer = setInterval(() => {\n          const end = this.getBufferedRange()[1]\n          if (Math.abs(this.currentTime - end) < 0.5) {\n            this.emit('ended')\n            window.clearInterval(this.loaderCompleteTimer)\n          }\n        }, 200)\n      } else {\n        this.emit('ended')\n      }\n    })\n\n    flv.once(EVENTS.LOADER_EVENTS.LOADER_ERROR, () => {\n      ctx.destroy()\n    })\n  }\n\n  initEvents () {\n    this.on('timeupdate', () => {\n      this.loadData()\n    })\n\n    this.on('seeking', () => {\n      const time = this.currentTime\n      const range = this.getBufferedRange()\n      if (time > range[1] || time < range[0]) {\n        this.flv.seek(this.currentTime)\n      }\n    })\n\n  }\n\n  initFlv () {\n    const flv = this.context.registry('FLV_CONTROLLER', FLV)(this)\n    this.initFlvEvents(flv)\n    this.flv = flv\n    this.mse = flv.mse;\n    return flv;\n  }\n\n  play () {\n    if (this._hasStart) {\n      return this._destroy().then(() => {\n        this.context = new Context(flvAllowedEvents)\n        this.initFlv();\n        this.context.init()\n        super.start(this.mse.url)\n        return super.play()\n      })\n\n    } else {\n      return super.play()\n    }\n  }\n\n  pause () {\n    super.pause()\n    if (this.flv) {\n      this.flv.pause()\n    }\n  }\n\n  loadData (time = this.currentTime) {\n    if (this.flv) {\n      this.flv.seek(time)\n    }\n  }\n\n  destroy () {\n    this._destroy().then(() => {\n      super.destroy();\n    })\n  }\n\n  _destroy () {\n    return this.flv.mse.destroy().then(() => {\n      this.context.destroy()\n      this.flv = null\n      this.context = null\n      if (this.loaderCompleteTimer) {\n        window.clearInterval(this.loaderCompleteTimer)\n      }\n    })\n  }\n\n  get src () {\n    return this.currentSrc\n  }\n\n  set src (url) {\n    this.switchURL(url)\n  }\n\n  switchURL (url) {\n    const context = new Context(flvAllowedEvents);\n    const flv = context.registry('FLV_CONTROLLER', FLV)(this, this.mse)\n    context.init()\n    this.initFlvBackupEvents(flv, context);\n    flv.loadData(url);\n  }\n\n  static isSupported () {\n    return window.MediaSource &&\n      window.MediaSource.isTypeSupported('video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"');\n  }\n}\n\nexport default FlvPlayer\n"],"names":["EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","TypeError","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","emitWarning","e","console","warn","log","_onceWrap","g","removeListener","fired","arguments","listenerCount","evlistener","spliceOne","list","index","k","n","pop","arr","copy","Array","unwrapListeners","ret","global","babelHelpers","classCallCheck","instance","Constructor","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","prototype","inherits","subClass","superClass","Object","create","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","isObjectFilled","obj","hasOwnProperty","MediaInfo","mimeType","duration","hasVideo","video","hasAudio","audio","isBaseInfoReady","isVideoReady","isAudioReady","mediaInfo","domain","usingDomains","active","Domain","getPrototypeOf","setMaxListeners","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","position","originalListener","removeAllListeners","keys","eventNames","Reflect","ownKeys","DIRECT_EMIT_FLAG","Context","allowedEvents","_emitter","off","_instanceMap","_clsMap","_inited","_hooks","_emitCounter","tag","_len","_key","newInstance","Function","bind","concat","config","initInstance","cls","_this2","checkMessageName","_isMessageNameValid","enhanced","_cls","a","b","c","_this","onceListeners","TAG","_context","messageName","callback","window","localStorage","setItem","beforeList","_len2","_key2","_len3","_key3","hasOwn","callbacks","_messageName","_callbacks","_i","_callback","removeListeners","get","_len4","_key4","_this3","forEach","destroy","destroyInstances","indexOf","LOADER_EVENTS","DEMUX_EVENTS","REMUX_EVENTS","MSE_EVENTS","HLS_EVENTS","CRYTO_EVENTS","ALLEVENTS","assign","FlvAllowedEvents","HlsAllowedEvents","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","sniffer","r","os","isPc","isTablet","ua","navigator","userAgent","toLowerCase","reg","filter","test","isWindowsPhone","isSymbian","isAndroid","isFireFox","isPhone","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs","_ucs2","join","start","checkLength","array","MediaSample","info","_default","getDefaultInf","toString","sample","entries","_ref","_ref2","slicedToArray","v","MediaSegment","startDts","endDts","startPts","endPts","originStartDts","originEndDts","randomAccessPoints","firstSample","lastSample","isRAP","MediaSegmentList","_type","_list","_lastAppendLocation","beginDts","last","mid","lbound","ubound","idx","originDts","Math","floor","_searchNearestSegmentBefore","segment","lastAppendIdx","insertIdx","splice","getLastSegmentBefore","segmentIdx","AudioTrackMeta","meta","VideoTrackMeta","Uint8Array","sps","pps","AudioTrackSample","getDefault","VideoTrackSample","MSE","configs","container","mediaSource","sourceBuffers","preloadTime","onSourceOpen","onTimeUpdate","onUpdateEnd","onWaiting","MediaSource","addEventListener","src","URL","createObjectURL","url","newCtx","addSourceBuffers","doAppend","readyState","sources","getInstance","tracks","track","add","audioTrack","videoTrack","dur","refSampleDuration","data","_k","source","mime","mimetype","sourceBuffer","addSourceBuffer","updating","inited","appendBuffer","buffer","shift","_mediaSource","activeSourceBuffers","endOfStream","end","remove","taskList","removeEventListener","task","Promise","resolve","doCleanBuffer","retryTime","clean","clearBuffer","all","removeBuffers","then","_buffer","removeSourceBuffer","revokeObjectURL","buffered","bEnd","Stream","dataview","loop","readByte","value","byteLength","size","sign","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","exports","ResultConstructor","totalLength","arrays","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","result","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","set","_concat2","__esModule","default","_concat","module","Buffer","item","Concat","padStart4Hex","hexNum","padStart","temp","num","parseInt","EVENTS","Crypto","inputBuffer","inputbuffer","outputBuffer","outputbuffer","iv","method","crypto","msCrypto","START_DECRYPT","decript","aeskey","decriptData","subtle","importKey","decrypt","DECRYPTED","_Context","_EVENTS","_sniffer","isLe","_isLe","_UTF8","_MediaSegmentList","_AudioTrackMeta","_VideoTrackMeta","_AudioTrackSample","_VideoTrackSample","Mse","_Mse","_Stream","_Buffer","Fmp4","writeUint32","content","write","version","flag","initBox","mvhd","timescale","trak","videoTrak","audioTrak","mvex","id","bytes","tkhd","presentWidth","presentHeight","mdia","avcc","parRatio","channelCount","sampleRate","width","height","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","dref","stsd","stts","stsc","stsz","stco","mp4a","avc1","samplerate","esds","configlen","hSpacing","vSpacing","btrt","pasp","trackID","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","time","sdtp","trun","sdtpLength","sampleCount","samples","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","cts","mdatBox","unit","charCodeAt","Mp4Remuxer","curTime","_dtsBase","_isDtsBaseInited","_audioNextDts","_videoNextDts","_videoSegmentList","_audioSegmentList","browser","_fillSilenceFrame","isFirstVideo","isFirstAudio","videoAllDuration","audioAllDuration","REMUX_MEDIA","remux","REMUX_METADATA","onMetaDataReady","DETECT_CHANGE_STREAM","resetDtsBase","_dtsBaseInited","clear","_context$getInstance","calcDtsBase","_remuxVideo","_remuxAudio","presourcebuffer","getSource","createSource","codec","remuxInitSegment","INIT_SEGMENT","initSegment","ftyp","moov","dts","audioBase","Infinity","videoBase","min","firstDts","mp4Samples","maxLoop","avcSample","isKeyframe","options","isContinue","pts","mdatSample","sampleDuration","videoMeta","RANDOM_ACCESS_POINT","moofMdat","moof","mdat","writeToSource","MEDIA_SEGMENT","isFirstDtsInited","audioMeta","refSampleDurationFixed","mp4Sample","getSilentFrame","_audioMeta","_player","M3U8Parser","text","baseurl","split","refs","ref","match","nextDiscontinue","refm","refd","targetduration","parseFloat","parseFrag","parseDecrypt","discontinue","frags","freg","nextline","charAt","urls","encrypt","cmd","uri","ceil","ivb","im","substr","Golomb","_bufferIndex","_totalBytes","_totalBits","_currentWord","_currentWordBitsLeft","bufferBytesLeft","bytesRead","word","subarray","bits","valu","_fillCurrentWord","readBits","zeroCount","_skipLeadingZero","leadingZeros","readUEG","SPSParser","srcLength","dst","dstIdx","rbsp","_ebsp2rbsp","gb","profileIdc","levelIdc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","par_width","par_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","par_w_table","par_h_table","num_units_in_tick","time_scale","parScale","crop_unit_x","crop_unit_y","codec_width","codec_height","present_width","getChromaFormatString","last_scale","next_scale","toFixed","chroma","spsConfig","codec_size","codecWidth","codecHeight","present_size","profile","level","bitDepth","chromaFormat","par_ratio","frameRate","frame_rate","fpsDen","fpsNum","Nalunit","getAnnexbNals","getAvccNals","nals","getHeaderPositionAnnexB","pos","header","slice","headerLength","skip","body","analyseNal","ndr","idr","SpsParser","parseSPS","AAC","Compatibility","nextAudioDts","nextVideoDts","lastAudioSamplesLen","lastVideoSamplesLen","lastVideoDts","lastAudioDts","allAudioSamplesCount","allVideoSamplesCount","_firstAudioSample","_firstVideoSample","filledAudioSamples","filledVideoSamples","videoLastSample","audioLastSample","_videoLargeGap","_audioLargeGap","before","doFix","_getFirstSample","getFirstSample","isFirstAudioSamples","isFirstVideoSamples","recordSamplesCount","fixRefSampleDuration","_Compatibility$detact","detactChangeStream","videoChanged","changed","videoChangedIdx","changedIdx","fixChangeStreamVideo","doFixVideo","_Compatibility$detact2","audioChanged","audioChangedIdx","fixChangeStreamAudio","doFixAudio","removeInvalidSamples","first","streamChangeStart","_videoTrack","videoSamples","fixed","doFixLargeGap","videoFirstDts","gap","fillCount","clonedFirstSample","curLastSample","_audioTrack","audioSamples","samplesLen","silentFrame","_firstSample","detectLargeGap","videoFirstPts","_gap","silentSampleCount","_i2","silentSample","absGap","abs","silentFrameCount","_i3","computed","_silentSample","lastOriginDts","lastDts","lastSampleDuration","_i4","current","sortAudioSamples","changeIdx","_videoTrack2","prevDts","getStreamChangeStart","curDts","firstPartSamples","secondPartSamples","firstPartDuration","_audioTrack2","findFirstVideoSample","findFirstAudioSample","isVideo","allSamplesCount","filledSamplesCount","Number","durationAvg","dtsBase","remuxer","sort","sorted","nextDts","cond1","cond2","_Nalunit","_SpsParser","_Compatibility","Track","sequenceNumber","droppedSamples","reset","AudioTrack","_Track","VideoTrack","_Track2","dropped","Tracks","XgBuffer","historyLen","_shiftBuffer","_ret","_ret2","tmpoff","tmp","templength","retInt","RemuxBuffer","Source","PreSource","_Tracks","_AudioTrack","_VideoTrack","_XgBuffer","_PreSource","StreamType","TsDemuxer","demuxing","pat","pmt","_hasVideoMeta","_hasAudioMeta","DEMUX_START","demux","frag","peses","DEMUX_ERROR","tsStream","ts","read","pes","pid","ES","payload","stream","AudioOptions","VideoOptions","epeses","j","Merge","pushAudioSample","pushVideoSample","DEMUX_COMPLETE","_tracks","frequence","channel","audioObjectType","audioConfig","frequencyIndex","audioSampleRate","metaEqual","compaireMeta","METADATA_PARSED","getNalunits","sampleLength","nal","h","sarRatio","sar_ratio","getAvcc","_nal","al","bl","ignoreDuration","itema","itemb","typeof","compaireArray","buffers","readHeader","readPayload","packet","unknownPIDs","PES","PAT","CAT","TSDT","some","PMT","sts","Media","streamType","sync","readUint8","readUint16","priority","scrambling","adaptation","continuity","tabelID","zero","sectionLength","streamID","sectionNumber","lastSectionNumber","N","programNumber","program","tableID","order","lastOrder","PCR_PID","programLength","map","es","adaptationLength","access","PCR","OPCR","splicePoint","transportPrivate","adaptationField","_start","programClockBase","readUint32","programClockExtension","originProgramClockBase","originProgramClockExtension","spliceCountdown","transportPrivateData","_length","_next","piecewise","seamless","ltwValid","ltwOffset","readUint24","piecewiseRate","readInt8","spliceType","dtsNextAU1","marker1","dtsNextAU2","marker2","dtsNextAU3","lastStuffing","packetLength","_next2","ptsDTSFlag","escrFlag","esRateFlag","dsmFlag","additionalFlag","crcFlag","extensionFlag","pesHeaderLength","N1","_pts","escr","ex","esRate","additionalCopyInfo","pesCRC","back","fq","layer","absent","frameLength","getAudioConfig","sectionIndicator","currentNextIndicator","crc32","extensionSampleIndex","Playlist","_baseURL","_ts","fragLength","_lastget","_audoclear","autoclear","deletepre","newfraglist","tslist","getTsList","deleteFrag","tsname","isloaded","downloaded","loading","downloading","timelist","l","baseURL","DATA_TYPES","AMFParser","readOffset","metaData","parseValue","bodySize","resetStatus","strLen","str","decode","dv","getFloat64","Date","parseString","isObjEnd","NUMBER","BOOLEAN","STRING","OBJECT","MIX_ARRAY","OBJECT_END","STRICT_ARRAY","DATE","LONE_STRING","dataView","objEndSize","amfObj","parseObject","isObjectEnd","_objEndSize","amfVar","arrLength","script","date","parseDate","longStr","parseLongString","FlvDemuxer","_firstFragmentLoaded","_trackNum","_hasScript","doParseFlv","loaderBuffer","chunk","loopMax","_parseFlvTag","parseFlvHeader","isFlvFile","initVideoTrack","initAudioTrack","_parseFlvTagHeader","_processChunk","tagType","toInt","filtered","datasize","timestamp","timestampExt","_parseScriptData","_parseAACData","_parseHevcData","onMetaData","hsaAudio","_datasizeValidator","MEDIA_INFO","hasSpecificConfig","audiosamplerate","audiochannels","sampleRateIndex","_meta","framerate","objectType","_switchAudioSampleRate","dependsOnCoreCoder","extensionFlagIndex","extensionSamplingIndex","samplingIndex","format","_hasAudioSequence","_switchAudioSamplingFrequency","frameLenth","audioSampleRateIndex","validate","aacHeader","_aacSequenceHeaderParser","audioMedia","AUDIO_METADATA_CHANGE","_metaChange","frameType","codecID","avcPacketType","nalu","sizes","_data","avcclength","_avcSequenceHeaderParser","_hasVideoSequence","VIDEO_METADATA_CHANGE","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","nalUnitLength","numOfSps","codecString","_j","numOfPps","_size","_j2","toVideoMeta","videoMedia","samplingFrequencyIndex","datasizeConfirm","streamFlag","_FlvDemuxer","READ_STREAM","READ_TEXT","READ_JSON","READ_BUFFER","FetchLoader","status","_reader","_canceled","_destroyed","readtype","_loaderTaskNo","LADER_START","load","opts","params","getParams","fetch","response","ok","_onFetchResponse","LOADER_ERROR","catch","message","taskno","json","LOADER_COMPLETE","arrayBuffer","_onReader","getReader","reader","cancel","val","LOADER_DATALOADED","headers","Headers","configHeaders","append","optHeaders","cors","mode","withCredentials","credentials","_FetchLoader","Tag","Logger","FLV_ERROR","FlvController","player","mse","state","bufferClearTimer","_handleTimeUpdate","initComponents","initListeners","registry","Remuxer","currentTime","compatibility","_handleLoaderDataLoaded","_handleNetworkError","_handleMediaInfo","_handleMetadataParsed","_handleDemuxComplete","_handleDemuxError","_handleAppendInitSegment","_handleMediaSegment","_handleAddRAP","SOURCE_UPDATE_END","_handleSourceUpdateEnd","emitTo","initSegmentArrived","bufferEnd","range","bufferStart","rap","max","setTimeout","Player","Errors","_onError","fatal","mod","loadData","loader","flvAllowedEvents","FlvPlayer","initEvents","loaderCompleteTimer","initFlv","flv","util","addClass","root","findDom","live","createDom","controls","appendChild","paused","setInterval","getBufferedRange","clearInterval","ctx","mediaLength","resetContext","_this4","seek","FLV","initFlvEvents","_hasStart","_destroy","_this5","pause","_this7","initFlvBackupEvents","currentSrc","switchURL","isTypeSupported"],"mappings":"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"}