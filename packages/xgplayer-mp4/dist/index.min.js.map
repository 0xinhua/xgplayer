{"version":3,"file":"index.min.js","sources":["../node_modules/deepmerge/dist/es.js","../node_modules/type/value/is.js","../node_modules/type/object/is.js","../node_modules/type/prototype/is.js","../node_modules/type/function/is.js","../node_modules/type/plain-function/is.js","../node_modules/es5-ext/object/is-value.js","../node_modules/es5-ext/object/keys/shim.js","../node_modules/es5-ext/object/keys/is-implemented.js","../node_modules/es5-ext/object/keys/index.js","../node_modules/es5-ext/object/valid-value.js","../node_modules/es5-ext/object/assign/shim.js","../node_modules/es5-ext/object/assign/is-implemented.js","../node_modules/es5-ext/object/assign/index.js","../node_modules/es5-ext/object/normalize-options.js","../node_modules/es5-ext/string/#/contains/is-implemented.js","../node_modules/es5-ext/string/#/contains/shim.js","../node_modules/es5-ext/string/#/contains/index.js","../node_modules/d/index.js","../node_modules/es5-ext/object/valid-callable.js","../node_modules/event-emitter/index.js","../src/error.js","../src/parse/stream.js","../src/parse/box.js","../src/parse/box/avc1.js","../src/parse/box/avcC.js","../src/parse/box/btrt.js","../src/parse/box/co64.js","../src/parse/box/ctts.js","../src/parse/box/dref.js","../src/parse/box/elst.js","../src/parse/box/esds.js","../src/parse/box/ftyp.js","../src/parse/box/hdlr.js","../src/parse/box/iods.js","../src/parse/box/mdat.js","../src/parse/date.js","../src/parse/box/mdhd.js","../src/parse/box/mp4a.js","../src/parse/box/MP4DecConfigDescrTag.js","../src/parse/box/MP4DecSpecificDescrTag.js","../src/parse/box/MP4ESDescrTag.js","../src/parse/box/mvhd.js","../src/parse/box/pasp.js","../src/parse/box/SLConfigDescriptor.js","../src/parse/box/smhd.js","../src/parse/box/stco.js","../src/parse/box/stsc.js","../src/parse/box/stsd.js","../src/parse/box/stss.js","../src/parse/box/stsz.js","../src/parse/box/stts.js","../src/parse/box/tkhd.js","../src/parse/box/udta.js","../src/parse/box/url.js","../src/parse/box/vmhd.js","../node_modules/concat-typed-array/lib/concat.js","../node_modules/concat-typed-array/lib/index.js","../src/parse/index.js","../src/fmp4/buffer.js","../src/fmp4/mp4.js","../src/media/task.js","../src/util/index.js","../src/mp4.js","../src/media/mse.js","../src/index.js"],"sourcesContent":["var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","import Player from 'xgplayer'\nimport {version} from '../package.json'\n\nclass _Errors extends Player.Errors {\n  constructor (type, vid, errd = {}, url = '') {\n    errd.version = version\n    super(type, vid, errd)\n    this.url = url\n  }\n}\n\nexport default _Errors\n","import Errors from '../error'\nclass Stream {\n  constructor (buffer) {\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer\n      this.dataview = new DataView(buffer)\n      this.dataview.position = 0\n    } else {\n      throw new Errors('parse', '', {line: 9, handle: '[Stream] constructor', msg: 'data is valid'})\n    }\n  }\n\n  set position (value) {\n    this.dataview.position = value\n  }\n\n  get position () {\n    return this.dataview.position\n  }\n\n  skip (count) {\n    let loop = Math.floor(count / 4)\n    let last = count % 4\n    for (let i = 0; i < loop; i++) {\n      Stream.readByte(this.dataview, 4)\n    }\n    if (last > 0) {\n      Stream.readByte(this.dataview, last)\n    }\n  }\n\n  /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n  static readByte (buffer, size, sign) {\n    let res\n    switch (size) {\n      case 1:\n        if (sign) {\n          res = buffer.getInt8(buffer.position)\n        } else {\n          res = buffer.getUint8(buffer.position)\n        }\n        break\n      case 2:\n        if (sign) {\n          res = buffer.getInt16(buffer.position)\n        } else {\n          res = buffer.getUint16(buffer.position)\n        }\n        break\n      case 3:\n        if (sign) {\n          throw 'not supported for readByte 3'\n        } else {\n          res = buffer.getUint8(buffer.position) << 16\n          res |= buffer.getUint8(buffer.position + 1) << 8\n          res |= buffer.getUint8(buffer.position + 2)\n        }\n        break\n      case 4:\n        if (sign) {\n          res = buffer.getInt32(buffer.position)\n        } else {\n          res = buffer.getUint32(buffer.position)\n        }\n        break\n      case 8:\n        if (sign) {\n          throw new Errors('parse', '', {line: 73, handle: '[Stream] readByte', msg: 'not supported for readBody 8'})\n        } else {\n          res = buffer.getUint32(buffer.position) << 32\n          res |= buffer.getUint32(buffer.position + 4)\n        }\n        break\n      default:\n        res = ''\n    }\n    buffer.position += size\n    return res\n  }\n\n  readUint8 () {\n    return Stream.readByte(this.dataview, 1)\n  }\n\n  readUint16 () {\n    return Stream.readByte(this.dataview, 2)\n  }\n\n  readUint32 () {\n    return Stream.readByte(this.dataview, 4)\n  }\n\n  readUint64 () {\n    return Stream.readByte(this.dataview, 8)\n  }\n\n  readInt8 () {\n    return Stream.readByte(this.dataview, 1, true)\n  }\n  readInt16 () {\n    return Stream.readByte(this.dataview, 2, true)\n  }\n  readInt32 () {\n    return Stream.readByte(this.dataview, 4, true)\n  }\n}\n\nexport default Stream\n","import Stream from './stream'\nimport Errors from '../error'\nclass Box {\n  constructor () {\n    this.headSize = 8\n    this.size = 0\n    this.type = ''\n    this.subBox = []\n    this.start = -1\n  }\n  readHeader (stream) {\n    this.start = stream.position\n    this.size = stream.readUint32()\n    this.type = String.fromCharCode(stream.readUint8(), stream.readUint8(), stream.readUint8(), stream.readUint8())\n    if (this.size === 1) {\n      this.size = stream.readUint64()\n    } else if (this.size === 0) {\n      if (this.type !== 'mdat') {\n        throw new Errors('parse', '', {line: 19, handle: '[Box] readHeader', msg: 'parse mp4 mdat box failed'})\n      }\n    }\n    if (this.type === 'uuid') {\n      let uuid = []\n      for (let i = 0; i < 16; i++) {\n        uuid.push(stream.readUint8())\n      }\n    }\n  }\n  readBody (stream) {\n    let end = this.size - stream.position + this.start\n    let type = this.type\n    this.data = stream.buffer.slice(stream.position, stream.position + end)\n    stream.position += this.data.byteLength\n    let parser\n    if (Box.containerBox.find(item => item === type)) {\n      parser = Box.containerParser\n    } else {\n      parser = Box[type]\n    }\n    if (parser && parser instanceof Function) {\n      parser.call(this)\n    }\n  }\n  read (stream) {\n    this.readHeader(stream)\n    this.readBody(stream)\n  }\n\n  static containerParser () {\n    let stream = new Stream(this.data)\n    let size = stream.buffer.byteLength\n    let self = this\n    while (stream.position < size) {\n      let box = new Box()\n      box.readHeader(stream)\n      self.subBox.push(box)\n      box.readBody(stream)\n    }\n    delete self.data\n    stream = null\n  }\n}\n\nBox.containerBox = ['moov', 'trak', 'edts', 'mdia', 'minf', 'dinf', 'stbl', 'mvex', 'moof', 'traf', 'mfra']\n\nexport default Box\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.avc1 = function () {\n  let stream = new Stream(this.data)\n  let self = this\n  stream.skip(6)\n  this.dataReferenceIndex = stream.readUint16()\n  stream.skip(16)\n  this.width = stream.readUint16()\n  this.height = stream.readUint16()\n  this.horizresolution = stream.readUint32()\n  this.vertresolution = stream.readUint32()\n  stream.skip(4)\n  this.frameCount = stream.readUint16()\n  stream.skip(1)\n  for (let i = 0; i < 31; i++) {\n    String.fromCharCode(stream.readUint8())\n  }\n  this.depth = stream.readUint16()\n  stream.skip(2)\n  while (stream.position < stream.buffer.byteLength) {\n    let box = new Box()\n    box.readHeader(stream)\n    self.subBox.push(box)\n    box.readBody(stream)\n  }\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.avcC = function () {\n  let stream = new Stream(this.data)\n  this.configVersion = stream.readUint8()\n  this.profile = stream.readUint8()\n  this.profileCompatibility = stream.readUint8()\n  this.AVCLevelIndication = stream.readUint8()\n  this.lengthSizeMinusOne = (stream.readUint8() & 3) + 1\n  this.numOfSequenceParameterSets = stream.readUint8() & 31\n  let sequenceLength = stream.readUint16()\n  this.sequenceLength = sequenceLength\n  let sequence = []\n  for (let i = 0; i < sequenceLength; i++) {\n    sequence.push(Number(stream.readUint8()).toString(16))\n  }\n  this.ppsCount = stream.readUint8()\n  let ppsLength = stream.readUint16()\n  this.ppsLength = ppsLength\n  let pps = []\n  for (let i = 0; i < ppsLength; i++) {\n    pps.push(Number(stream.readUint8()).toString(16))\n  }\n  this.pps = pps\n  this.sequence = sequence\n  let last = []; let dataviewLength = stream.dataview.byteLength\n  while (stream.position < dataviewLength) {\n    last.push(stream.readUint8())\n  }\n  this.last = last\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.btrt = function () {\n  let stream = new Stream(this.data)\n  this.bufferSizeDB = stream.readUint32()\n  this.maxBitrate = stream.readUint32()\n  this.avgBitrate = stream.readUint32()\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.co64 = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push(stream.readUint64())\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.ctts = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n\n  this.entryCount = stream.readUint32()\n  let entry = []\n  this.entry = entry\n  for (let i = 0, count = this.entryCount; i < count; i++) {\n    entry.push({\n      count: stream.readUint32(),\n      offset: stream.readUint32()\n    })\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.dref = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  let entryCount = stream.readUint32()\n  this.entryCount = entryCount\n  let self = this\n  // 暂时不支持离散视频，视频的部分内容由url指定\n  for (let i = 0; i < entryCount; i++) {\n    let box = new Box()\n    self.subBox.push(box)\n    box.read(stream)\n  }\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.elst = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  let entries = []\n  let entry_count = stream.readUint32()\n  this.entries = entries\n  for (let i = 0; i < entry_count; i++) {\n    let entry = {}\n    entries.push(entry)\n    if (this.version === 1) {\n      entry.segment_duration = stream.readUint64()\n      entry.media_time = stream.readUint64()\n    } else {\n      entry.segment_duration = stream.readUint32()\n      entry.media_time = stream.readInt32()\n    }\n    entry.media_rate_integer = stream.readInt16()\n    entry.media_rate_fraction = stream.readInt16()\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.esds = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  let box = Box.MP4ESDescrTag(stream)\n  this.subBox.push(box)\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.ftyp = function () {\n  let stream = new Stream(this.data)\n  this.major_brand = String.fromCharCode(stream.readUint8(), stream.readUint8(), stream.readUint8(), stream.readUint8())\n  this.minor_version = stream.readUint32()\n  let compatibleBrands = []\n  for (let i = 0, len = Math.floor((stream.buffer.byteLength - 8) / 4); i < len; i++) {\n    compatibleBrands.push(String.fromCharCode(stream.readUint8(), stream.readUint8(), stream.readUint8(), stream.readUint8()))\n  }\n  this.compatible_brands = compatibleBrands\n  stream = null\n  delete this.subBox\n  delete this.data\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.hdlr = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  stream.skip(4)\n  this.handleType = `${String.fromCharCode(stream.readUint8())}${String.fromCharCode(stream.readUint8())}${String.fromCharCode(stream.readUint8())}${String.fromCharCode(stream.readUint8())}`\n  stream.skip(12)\n  let name = []\n  while (stream.position < this.size - 8) {\n    name.push(String.fromCharCode(stream.readUint8()))\n  }\n  this.name = name.join('')\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.iods = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  let content = []\n  let length = stream.buffer.byteLength\n  while (stream.position < length) {\n    content.push(stream.readUint8())\n  }\n  this.content = content\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\n\nBox.mdat = function () {\n  delete this.subBox\n}\n","class UTC {\n  constructor () {\n    let time = new Date()\n    time.setFullYear(1904)\n    time.setMonth(0)\n    time.setDate(1)\n    time.setHours(0)\n    time.setMinutes(0)\n    time.setSeconds(0)\n    this.time = time\n  }\n  setTime (value) {\n    this.time.setTime(this.time.getTime() + value * 1)\n    return this.time.toLocaleString()\n  }\n}\n\nexport default UTC\n","import Box from '../box'\nimport Stream from '../stream'\nimport UTC from '../date'\n\nBox.mdhd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  if (this.version === 1) {\n    this.create = stream.readUint64()\n    this.modify = stream.readUint64()\n    this.createTime = new UTC().setTime(this.create * 1000)\n    this.modifyTime = new UTC().setTime(this.modify * 1000)\n    this.timescale = stream.readUint32()\n    this.duration = stream.readUint64()\n  } else {\n    this.create = stream.readUint32()\n    this.modify = stream.readUint32()\n    this.createTime = new UTC().setTime(this.create * 1000)\n    this.modifyTime = new UTC().setTime(this.modify * 1000)\n    this.timescale = stream.readUint32()\n    this.duration = stream.readUint32()\n  }\n  this.language = stream.readUint16()\n  stream.readUint16()\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.mp4a = function () {\n  let stream = new Stream(this.data)\n  stream.skip(6)\n  this.dataReferenceIndex = stream.readUint16()\n  stream.skip(8)\n  this.channelCount = stream.readUint16()\n  this.sampleSize = stream.readUint16()\n  stream.skip(4)\n  this.sampleRate = stream.readUint32() >> 16\n  let box = new Box()\n  box.readHeader(stream)\n  this.subBox.push(box)\n  box.readBody(stream)\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.MP4DecConfigDescrTag = function (stream) {\n  let box = new Box()\n  let size\n  box.type = stream.readUint8()\n  size = stream.readUint8()\n  if (size === 0x80) {\n    box.extend = true\n    stream.skip(2)\n    size = stream.readUint8() + 5\n  } else {\n    size += 2\n  }\n  box.size = size\n  box.typeID = stream.readUint8()\n  // 6 bits stream type,1 bit upstream flag,1 bit reserved flag\n  box.streamUint = stream.readUint8()\n  box.bufferSize = Stream.readByte(stream.dataview, 3)\n  box.maximum = stream.readUint32()\n  box.average = stream.readUint32()\n  box.subBox.push(Box.MP4DecSpecificDescrTag(stream))\n  return box\n}\n","import Box from '../box'\n\nBox.MP4DecSpecificDescrTag = function (stream) {\n  let box = new Box()\n  let size, dataSize\n  box.type = stream.readUint8()\n  size = stream.readUint8()\n  if (size === 0x80) {\n    box.extend = true\n    stream.skip(2)\n    size = stream.readUint8() + 5\n    dataSize = size - 5\n  } else {\n    dataSize = size\n    size += 2\n  }\n  box.size = size\n  let EScode = []\n  for (let i = 0; i < dataSize; i++) {\n    EScode.push(Number(stream.readUint8()).toString(16).padStart(2, '0'))\n  }\n  box.EScode = EScode\n  delete box.subBox\n  return box\n}\n","import Box from '../box'\n\nBox.MP4ESDescrTag = function (stream) {\n  let box = new Box()\n  let size\n  box.type = stream.readUint8()\n  size = stream.readUint8()\n  if (size === 0x80) {\n    box.extend = true\n    stream.skip(2)\n    size = stream.readUint8() + 5\n  } else {\n    size += 2\n  }\n  box.size = size\n  box.esID = stream.readUint16()\n  box.priority = stream.readUint8()\n  box.subBox.push(Box.MP4DecConfigDescrTag(stream))\n  box.subBox.push(Box.SLConfigDescriptor(stream))\n  return box\n}\n","import Box from '../box'\nimport Stream from '../stream'\nimport UTC from '../date'\n\nBox.mvhd = function () {\n  let stream = new Stream(this.data)\n\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.create = stream.readUint32()\n  this.modify = stream.readUint32()\n  this.createTime = new UTC().setTime(this.create * 1000)\n  this.modifyTime = new UTC().setTime(this.modify * 1000)\n  this.timeScale = stream.readUint32()\n  this.duration = stream.readUint32()\n  this.rate = stream.readUint16() + '.' + stream.readUint16()\n  this.volume = stream.readUint8() + '.' + stream.readUint8()\n  // 越过保留的10字节\n  Stream.readByte(stream.dataview, 8)\n  Stream.readByte(stream.dataview, 2)\n  // 视频转换矩阵\n  let matrix = []\n  for (let i = 0; i < 9; i++) {\n    matrix.push(stream.readUint16() + '.' + stream.readUint16())\n  }\n  this.matrix = matrix\n  Stream.readByte(stream.dataview, 24)\n  this.nextTrackID = stream.readUint32()\n  delete this.subBox\n  delete this.data\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.pasp = function () {\n  let stream = new Stream(this.data)\n  this.content = stream.buffer.slice(0, this.size - 8)\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\n\nBox.SLConfigDescriptor = function (stream) {\n  let box = new Box()\n  let size\n  box.type = stream.readUint8()\n  size = stream.readUint8()\n  if (size === 0x80) {\n    box.extend = true\n    stream.skip(2)\n    size = stream.readUint8() + 5\n  } else {\n    size += 2\n  }\n  box.size = size\n  box.SL = stream.readUint8()\n  delete box.subBox\n  return box\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.smhd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.balance = stream.readInt8() + '.' + stream.readInt8()\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stco = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push(stream.readUint32())\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stsc = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push({\n      first_chunk: stream.readUint32(),\n      samples_per_chunk: stream.readUint32(),\n      sample_desc_index: stream.readUint32()\n    })\n  }\n  for (let i = 0, count = this.count, entry, preEntry; i < count - 1; i++) {\n    entry = entries[i]\n    preEntry = entries[i - 1]\n    entry.chunk_count = entries[i + 1].first_chunk - entry.first_chunk\n    entry.first_sample = i === 0 ? 1 : preEntry.first_sample + preEntry.chunk_count * preEntry.samples_per_chunk\n  }\n  if (this.count === 1) {\n    let entry = entries[0]\n    entry.first_sample = 1\n    entry.chunk_count = 0\n  } else if (this.count > 1) {\n    let last = entries[this.count - 1]; let pre = entries[this.count - 2]\n    last.first_sample = pre.first_sample + pre.chunk_count * pre.samples_per_chunk\n    last.chunk_count = 0\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox.stsd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.entryCount = stream.readUint32()\n  let box = new Box()\n  box.readHeader(stream)\n  this.subBox.push(box)\n  box.readBody(stream)\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stss = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push(stream.readUint32())\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stsz = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.sampleSize = stream.readUint32()\n  this.count = stream.readUint32()\n  let entries = []\n  this.entries = entries\n  for (let i = 0, count = this.count; i < count; i++) {\n    entries.push(stream.readUint32())\n  }\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.stts = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3)\n  this.count = stream.readUint32()\n  let entry = []\n  for (let i = 0, count = this.count; i < count; i++) {\n    entry.push({\n      sampleCount: stream.readUint32(),\n      sampleDuration: stream.readUint32()\n    })\n  }\n  this.entry = entry\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\nimport UTC from '../date'\n\nBox.tkhd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = Stream.readByte(stream.dataview, 3, 0)\n  if (this.version === 1) {\n    this.create = stream.readUint64()\n    this.modify = stream.readUint64()\n    this.createTime = new UTC().setTime(this.create * 1000)\n    this.modifyTime = new UTC().setTime(this.modify * 1000)\n    this.trackID = stream.readUint32()\n    this.reserverd = stream.readUint32()\n    this.duration = stream.readUint64()\n  } else {\n    this.create = stream.readUint32()\n    this.modify = stream.readUint32()\n    this.createTime = new UTC().setTime(this.create * 1000)\n    this.modifyTime = new UTC().setTime(this.modify * 1000)\n    this.trackID = stream.readUint32()\n    this.reserverd = stream.readUint32()\n    this.duration = stream.readUint32()\n  }\n  stream.readUint64()\n  this.layer = stream.readInt16()\n  this.alternate_group = stream.readInt16()\n  this.volume = stream.readInt16() >> 8\n  stream.readUint16()\n  // 视频转换矩阵\n  let matrix = []\n  for (let i = 0; i < 9; i++) {\n    matrix.push(stream.readUint16() + '.' + stream.readUint16())\n  }\n  this.matrix = matrix\n  this.width = stream.readUint16() + '.' + stream.readUint16()\n  this.height = stream.readUint16() + '.' + stream.readUint16()\n  delete this.data\n  delete this.subBox\n  stream = null\n}\n","import Box from '../box'\nBox.udta = function () {\n  delete this.subBox\n}\n","import Box from '../box'\nimport Stream from '../stream'\nBox['url '] = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = [stream.readUint8(), stream.readUint8(), stream.readUint8()]\n  let location = []; let length = stream.buffer.byteLength\n  while (stream.position < length) {\n    location.push(stream.readUint8())\n  }\n  this.location = location\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","import Box from '../box'\nimport Stream from '../stream'\n\nBox.vmhd = function () {\n  let stream = new Stream(this.data)\n  this.version = stream.readUint8()\n  this.flag = [stream.readUint8(), stream.readUint8(), stream.readUint8()]\n  this.graphicsmode = stream.readUint16()\n  this.opcolor = [stream.readUint16(), stream.readUint16(), stream.readUint16()]\n  delete this.subBox\n  delete this.data\n  stream = null\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import Box from './box'\nimport './box/index'\nimport Concat from 'concat-typed-array'\nimport Stream from './stream'\n\nclass Parse {\n  constructor (buffer) {\n    this.buffer = null\n    this.boxes = []\n    this.nextBox = null\n    this.start = 0\n    let self = this\n    if (self.buffer) {\n      Concat(Uint8Array, self.buffer, buffer)\n    } else {\n      self.buffer = buffer\n    }\n    let bufferLength = buffer.byteLength\n    buffer.position = 0\n    let stream = new Stream(buffer)\n    while (bufferLength - stream.position >= 8) {\n      let box = new Box()\n      box.readHeader(stream)\n      if (box.size - 8 <= (bufferLength - stream.position)) {\n        box.readBody(stream)\n        self.boxes.push(box)\n      } else {\n        if (box.type === 'mdat') {\n          box.readBody(stream)\n          self.boxes.push(box)\n        } else {\n          self.nextBox = box\n          stream.position -= 8\n          break\n        }\n      }\n    }\n    self.buffer = new Uint8Array(self.buffer.slice(stream.position))\n  }\n}\n\nexport default Parse\n","import Concat from 'concat-typed-array'\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n  write (...buffer) {\n    let self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.error(item)\n      }\n    })\n  }\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import Buffer from './buffer'\nconst UINT32_MAX = Math.pow(2, 32) - 1\nclass FMP4 {\n  static type (name) {\n    return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)])\n  }\n  static size (value) {\n    return Buffer.writeUint32(value)\n  }\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n  static ftyp () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(24), FMP4.type('ftyp'), new Uint8Array([\n      0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n    ]))\n    return buffer.buffer\n  }\n  static moov (data) {\n    let buffer = new Buffer(); let size = 8\n    let mvhd = FMP4.mvhd(data.duration, data.timeScale)\n    let trak1 = FMP4.videoTrak(data)\n    let trak2 = FMP4.audioTrak(data)\n    let mvex = FMP4.mvex(data.duration, data.timeScale);\n    [mvhd, trak1, trak2, mvex].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('moov'), mvhd, trak1, trak2, mvex)\n    return buffer.buffer\n  }\n  static mvhd (duration, timescale) {\n    let buffer = new Buffer()\n    duration *= timescale\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let bytes = new Uint8Array([\n      0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ])\n    buffer.write(FMP4.size(8 + bytes.length), FMP4.type('mvhd'), new Uint8Array(bytes))\n    return buffer.buffer\n  }\n  static videoTrak (data) {\n    let buffer = new Buffer(); let size = 8\n    let tkhd = FMP4.tkhd({\n      id: 1,\n      duration: data.videoDuration,\n      timescale: data.videoTimeScale,\n      width: data.width,\n      height: data.height,\n      type: 'video'\n    })\n    let mdia = FMP4.mdia({\n      type: 'video',\n      timescale: data.videoTimeScale,\n      duration: data.videoDuration,\n      sps: data.sps,\n      pps: data.pps,\n      pixelRatio: data.pixelRatio,\n      width: data.width,\n      height: data.height\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('trak'), tkhd, mdia)\n    return buffer.buffer\n  }\n  static audioTrak (data) {\n    let buffer = new Buffer(); let size = 8\n    let tkhd = FMP4.tkhd({\n      id: 2,\n      duration: data.audioDuration,\n      timescale: data.audioTimeScale,\n      width: 0,\n      height: 0,\n      type: 'audio'\n    })\n    let mdia = FMP4.mdia({\n      type: 'audio',\n      timescale: data.audioTimeScale,\n      duration: data.audioDuration,\n      channelCount: data.channelCount,\n      samplerate: data.sampleRate,\n      audioConfig: data.audioConfig\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('trak'), tkhd, mdia)\n    return buffer.buffer\n  }\n  static tkhd (data) {\n    let buffer = new Buffer()\n    let id = data.id\n\n    let duration = data.duration * data.timeScale\n\n    let width = data.width\n\n    let height = data.height\n\n    let type = data.type\n\n    let upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n\n    let lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let content = new Uint8Array([\n      0x01, // version 1\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (id >> 24) & 0xff,\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, type === 'video' ? 0x01 : 0x00, // alternate_group\n      type === 'audio' ? 0x01 : 0x00, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (width >> 8) & 0xff,\n      width & 0xff,\n      0x00, 0x00, // width\n      (height >> 8) & 0xff,\n      height & 0xff,\n      0x00, 0x00 // height\n    ])\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('tkhd'), content)\n    return buffer.buffer\n  }\n  static edts (data) {\n    let buffer = new Buffer(); let duration = data.duration; let mediaTime = data.mediaTime\n    buffer.write(FMP4.size(36), FMP4.type('edts'))\n    // elst\n    buffer.write(FMP4.size(28), FMP4.type('elst'))\n    buffer.write(new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, // entry count\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      (mediaTime >> 24) & 0xff, (mediaTime >> 16) & 0xff, (mediaTime >> 8) & 0xff, mediaTime & 0xff,\n      0x00, 0x00, 0x00, 0x01 // media rate\n    ]))\n    return buffer.buffer\n  }\n  static mdia (data) {\n    let buffer = new Buffer(); let size = 8\n    let mdhd = FMP4.mdhd(data.timescale)\n    let hdlr = FMP4.hdlr(data.type)\n    let minf = FMP4.minf(data);\n    [mdhd, hdlr, minf].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('mdia'), mdhd, hdlr, minf)\n    return buffer.buffer\n  }\n  static mdhd (timescale, duration = 0) {\n    let buffer = new Buffer()\n    duration *= timescale\n    const upperWordDuration = Math.floor(duration / (UINT32_MAX + 1))\n    const lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1))\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (upperWordDuration >> 24),\n      (upperWordDuration >> 16) & 0xff,\n      (upperWordDuration >> 8) & 0xff,\n      upperWordDuration & 0xff,\n      (lowerWordDuration >> 24),\n      (lowerWordDuration >> 16) & 0xff,\n      (lowerWordDuration >> 8) & 0xff,\n      lowerWordDuration & 0xff,\n      0x55, 0xc4, // 'und' language\n      0x00, 0x00\n    ])\n    buffer.write(FMP4.size(12 + content.byteLength), FMP4.type('mdhd'), FMP4.extension(1, 0), content)\n    return buffer.buffer\n  }\n  static hdlr (type) {\n    let buffer = new Buffer()\n    let value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]\n    if (type === 'audio') {\n      value.splice(8, 4, ...[0x73, 0x6f, 0x75, 0x6e])\n      value.splice(24, 13, ...[0x53, 0x6f, 0x75, 0x6e,\n        0x64, 0x48, 0x61, 0x6e,\n        0x64, 0x6c, 0x65, 0x72, 0x00])\n    }\n    buffer.write(FMP4.size(8 + value.length), FMP4.type('hdlr'), new Uint8Array(value))\n    return buffer.buffer\n  }\n  static minf (data) {\n    let buffer = new Buffer(); let size = 8\n    let vmhd = data.type === 'video' ? FMP4.vmhd() : FMP4.smhd()\n    let dinf = FMP4.dinf()\n    let stbl = FMP4.stbl(data);\n    [vmhd, dinf, stbl].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('minf'), vmhd, dinf, stbl)\n    return buffer.buffer\n  }\n  static vmhd () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(20), FMP4.type('vmhd'), new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]))\n    return buffer.buffer\n  }\n  static smhd () {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(16), FMP4.type('smhd'), new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]))\n    return buffer.buffer\n  }\n  static dinf () {\n    let buffer = new Buffer()\n    let dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]\n    buffer.write(FMP4.size(36), FMP4.type('dinf'), FMP4.size(28), FMP4.type('dref'), new Uint8Array(dref))\n    return buffer.buffer\n  }\n  static stbl (data) {\n    let buffer = new Buffer(); let size = 8\n    let stsd = FMP4.stsd(data)\n    let stts = FMP4.stts()\n    let stsc = FMP4.stsc()\n    let stsz = FMP4.stsz()\n    let stco = FMP4.stco();\n    [stsd, stts, stsc, stsz, stco].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('stbl'), stsd, stts, stsc, stsz, stco)\n    return buffer.buffer\n  }\n  static stsd (data) {\n    let buffer = new Buffer(); let content\n    if (data.type === 'audio') {\n      // if (!data.isAAC && data.codec === 'mp4') {\n      //     content = FMP4.mp3(data);\n      // } else {\n      //\n      // }\n      // 支持mp4a\n      content = FMP4.mp4a(data)\n    } else {\n      content = FMP4.avc1(data)\n    }\n    buffer.write(FMP4.size(16 + content.byteLength), FMP4.type('stsd'), FMP4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content)\n    return buffer.buffer\n  }\n  static mp4a (data) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (data.samplerate >> 8) & 0xff,\n      data.samplerate & 0xff, //\n      0x00, 0x00\n    ])\n    let esds = FMP4.esds(data.audioConfig)\n    buffer.write(FMP4.size(8 + content.byteLength + esds.byteLength), FMP4.type('mp4a'), content, esds)\n    return buffer.buffer\n  }\n  static esds (config = [43, 146, 8, 0]) {\n    const configlen = config.length\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n    ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]))\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('esds'), content)\n    return buffer.buffer\n  }\n  static avc1 (data) {\n    let buffer = new Buffer(); let size = 40// 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n    let sps = data.sps; let pps = data.pps; let width = data.width; let height = data.height; let hSpacing = data.pixelRatio[0]; let vSpacing = data.pixelRatio[1]\n    let avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1 // 目前只处理一个sps\n    ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff]).concat(sps).concat(1).concat([pps.length >>> 8 & 0xff, pps.length & 0xff]).concat(pps))\n    let avc1 = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1\n    let btrt = new Uint8Array([\n      0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n    ])\n    let pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n\n    buffer.write(\n      FMP4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), FMP4.type('avc1'), avc1,\n      FMP4.size(8 + avcc.byteLength), FMP4.type('avcC'), avcc,\n      FMP4.size(20), FMP4.type('btrt'), btrt,\n      FMP4.size(16), FMP4.type('pasp'), pasp\n    )\n    return buffer.buffer\n  }\n  static stts () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stts'), content)\n    return buffer.buffer\n  }\n  static stsc () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stsc'), content)\n    return buffer.buffer\n  }\n  static stco () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    buffer.write(FMP4.size(16), FMP4.type('stco'), content)\n    return buffer.buffer\n  }\n  static stsz () {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n    ])\n    buffer.write(FMP4.size(20), FMP4.type('stsz'), content)\n    return buffer.buffer\n  }\n  static mvex (duration, timeScale) {\n    let buffer = new Buffer()\n    let mehd = Buffer.writeUint32(duration * timeScale)\n    buffer.write(FMP4.size(88), FMP4.type('mvex'), FMP4.size(16), FMP4.type('mehd'), FMP4.extension(0, 0), mehd, FMP4.trex(1), FMP4.trex(2))\n    return buffer.buffer\n  }\n  static trex (id) {\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ])\n    buffer.write(FMP4.size(8 + content.byteLength), FMP4.type('trex'), content)\n    return buffer.buffer\n  }\n  static moof (data) {\n    let buffer = new Buffer(); let size = 8\n    let mfhd = FMP4.mfhd()\n    let traf = FMP4.traf(data);\n    [mfhd, traf].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('moof'), mfhd, traf)\n    return buffer.buffer\n  }\n  static mfhd () {\n    let buffer = new Buffer()\n    let content = Buffer.writeUint32(FMP4.sequence)\n    FMP4.sequence += 1\n    buffer.write(FMP4.size(16), FMP4.type('mfhd'), FMP4.extension(0, 0), content)\n    return buffer.buffer\n  }\n  static traf (data) {\n    let buffer = new Buffer(); let size = 8\n    let tfhd = FMP4.tfhd(data.id)\n    let tfdt = FMP4.tfdt(data.time)\n    let sdtp = FMP4.sdtp(data)\n    let trun = FMP4.trun(data, sdtp.byteLength);\n    [tfhd, tfdt, sdtp, trun].forEach(item => {\n      size += item.byteLength\n    })\n    buffer.write(FMP4.size(size), FMP4.type('traf'), tfhd, tfdt, sdtp, trun)\n    return buffer.buffer\n  }\n  static tfhd (id) {\n    let buffer = new Buffer()\n    let content = Buffer.writeUint32(id)\n    buffer.write(FMP4.size(16), FMP4.type('tfhd'), FMP4.extension(0, 0), content)\n    return buffer.buffer\n  }\n  static tfdt (time) {\n    let buffer = new Buffer()\n    let upper = Math.floor(time / (UINT32_MAX + 1))\n\n    let lower = Math.floor(time % (UINT32_MAX + 1))\n    buffer.write(FMP4.size(20), FMP4.type('tfdt'), FMP4.extension(1, 0), Buffer.writeUint32(upper), Buffer.writeUint32(lower))\n    return buffer.buffer\n  }\n  static trun (data, sdtpLength) {\n    let id = data.id\n    let ceil = id === 1 ? 16 : 12\n    let buffer = new Buffer()\n    let sampleCount = Buffer.writeUint32(data.samples.length)\n    // mdat-header 8\n    // moof-header 8\n    // mfhd 16\n    // traf-header 8\n    // thhd 16\n    // tfdt 20\n    // trun-header 12\n    // sampleCount 4\n    // data-offset 4\n    // samples.length\n    let offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 20 + 12 + 4 + 4 + ceil * data.samples.length + sdtpLength)\n    buffer.write(FMP4.size(20 + ceil * data.samples.length), FMP4.type('trun'), FMP4.extension(0, data.flags), sampleCount, offset)\n    data.samples.forEach((item, idx) => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      if (id === 1) {\n        buffer.write(Buffer.writeUint32(item.key ? 0x02000000 : 0x01010000))\n        buffer.write(Buffer.writeUint32(item.offset))\n      } else {\n        buffer.write(Buffer.writeUint32(0x1000000))\n      }\n    })\n    return buffer.buffer\n  }\n  static sdtp (data) {\n    let buffer = new Buffer()\n    buffer.write(FMP4.size(12 + data.samples.length), FMP4.type('sdtp'), FMP4.extension(0, 0))\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.id === 1 ? [item.key ? 32 : 16] : [16]))\n    })\n    return buffer.buffer\n  }\n  static mdat (data) {\n    let buffer = new Buffer(); let size = 8\n    data.samples.forEach(item => {\n      size += item.size\n    })\n    buffer.write(FMP4.size(size), FMP4.type('mdat'))\n    data.samples.forEach(item => {\n      buffer.write(item.buffer)\n    })\n    return buffer.buffer\n  }\n}\n\nFMP4.sequence = 1\n\nexport default FMP4\n","import EventEmitter from 'event-emitter'\nimport Errors from '../error'\n\nclass Task {\n  constructor (url, range, withCredentials, callback) {\n    EventEmitter(this)\n    this.url = url\n    this.range = range\n    this.withCredentials = withCredentials\n    this.id = range.join('-')\n    this.on = false\n    let xhr = new window.XMLHttpRequest()\n    xhr.target = this\n    xhr.responseType = 'arraybuffer'\n    xhr.withCredentials = this.withCredentials || false\n    xhr.open('get', url)\n    xhr.setRequestHeader('Range', `bytes=${range[0]}-${range[1]}`)\n    xhr.onload = function () {\n      if (xhr.status === 200 || xhr.status === 206) {\n        if (callback && callback instanceof Function) {\n          callback(xhr.response)\n        }\n      }\n      xhr.target.remove()\n    }\n    xhr.onerror = function (e) {\n      xhr.target.emit('error', new Errors('network', '', {line: 25, handle: '[Task] constructor', msg: e.message, url}))\n      xhr.target.remove()\n    }\n    xhr.onabort = function () {\n      xhr.target.remove()\n    }\n    this.xhr = xhr\n    Task.queue.push(this)\n    this.update()\n  }\n  cancel () {\n    this.xhr.abort()\n  }\n\n  remove () {\n    Task.queue.filter((item, idx) => {\n      if (item.url === this.url && item.id === this.id) {\n        Task.queue.splice(idx, 1)\n        return true\n      } else {\n        return false\n      }\n    })\n    this.update()\n  }\n\n  update () {\n    let Queue = Task.queue\n    let sended = Queue.filter((item) => item.on)\n    let wait = Queue.filter(item => !item.on)\n    let max = Task.limit - sended.length\n    wait.forEach((item, idx) => {\n      if (idx < max) {\n        item.run()\n      }\n    })\n  }\n\n  run () {\n    if (this.xhr.readyState === 1) {\n      this.on = true\n      this.xhr.send()\n    } else {\n      this.remove()\n    }\n  }\n\n  static clear () {\n    Task.queue.forEach(item => {\n      if (item.on) {\n        item.cancel()\n      }\n    })\n    Task.queue.length = 0\n  }\n}\n\nTask.queue = []\nTask.limit = 2\nwindow.Task = Task\n\nexport default Task\n","let util = {}\n\n/**\n * [使用递归查询指定type的box]\n * var mimeCodec = 'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"';\n * @param  {Object} root [JSON对象]\n * @param  {String} type [box的类型]\n * @param  {?Array} type [box]\n * @return {Object|Array<Object>|undefined} [box]\n */\nutil.findBox = function (root, type, result = []) {\n  if (root.type !== type) {\n    if (root && root.subBox) {\n      let box = root.subBox.filter(item => item.type === type)\n      if (box.length) {\n        box.forEach(item => result.push(item))\n      } else {\n        root.subBox.forEach(item => util.findBox(item, type, result))\n      }\n    }\n  } else {\n    result.push(root)\n  }\n  result = [].concat(result)\n  return result.length > 1 ? result : result[0]\n}\n\nutil.padStart = function (str, length, pad) {\n  let charstr = String(pad); let len = length >> 0; let maxlen = Math.ceil(len / charstr.length)\n  let chars = []; let r = String(str)\n  while (maxlen--) {\n    chars.push(charstr)\n  }\n  return chars.join('').substring(0, len - r.length) + r\n}\n\n/**\n * [十进制转十六进制]\n * @param  {Number} value [要转换的十进制数字]\n * @return {String}       [十六进制]\n */\nutil.toHex = function (...value) {\n  let hex = []\n  value.forEach(item => {\n    hex.push(util.padStart(Number(item).toString(16), 2, 0))\n  })\n  return hex\n}\n\n/**\n * [求和计算]\n * @param  {[type]} rst [description]\n * @return {[type]}     [description]\n */\nutil.sum = function (...rst) {\n  let count = 0\n  rst.forEach(item => { count += item })\n  return count\n}\n\n/**\n * [计算音视频数据在Mdat中的偏移量]\n * @param  {Array} stsc         [块偏移量]\n * @param  {Number} sample_order [帧次序]\n * @return {Object}              [块的位置和当前帧的偏移数]\n */\nutil.stscOffset = function (stsc, sample_order) {\n  let chunk_index; let samples_offset = ''\n  let chunk_start = stsc.entries.filter((item) => {\n    return item.first_sample <= sample_order && sample_order < item.first_sample + item.chunk_count * item.samples_per_chunk\n  })[0]\n  if (!chunk_start) {\n    let last_chunk = stsc.entries.pop()\n    stsc.entries.push(last_chunk)\n    let chunk_offset = Math.floor((sample_order - last_chunk.first_sample) / last_chunk.samples_per_chunk)\n    let last_chunk_index = last_chunk.first_chunk + chunk_offset\n    let last_chunk_first_sample = last_chunk.first_sample + last_chunk.samples_per_chunk * chunk_offset\n    return {\n      chunk_index: last_chunk_index,\n      samples_offset: [last_chunk_first_sample, sample_order]\n    }\n  } else {\n    let chunk_offset = Math.floor((sample_order - chunk_start.first_sample) / chunk_start.samples_per_chunk)\n    let chunk_offset_sample = chunk_start.first_sample + chunk_offset * chunk_start.samples_per_chunk\n    chunk_index = chunk_start.first_chunk + chunk_offset\n    samples_offset = [chunk_offset_sample, sample_order]\n    return {\n      chunk_index: chunk_index,\n      samples_offset\n    }\n  }\n}\n\nutil.seekSampleOffset = function (stsc, stco, stsz, order, mdatStart) {\n  let chunkOffset = util.stscOffset(stsc, order + 1)\n  let result = stco.entries[chunkOffset.chunk_index - 1] + util.sum.apply(null, stsz.entries.slice(chunkOffset.samples_offset[0] - 1, chunkOffset.samples_offset[1] - 1)) - mdatStart\n  if (result === undefined) {\n    throw `result=${result},stco.length=${stco.entries.length},sum=${util.sum.apply(null, stsz.entries.slice(0, order))}`\n  } else if (result < 0) {\n    throw `result=${result},stco.length=${stco.entries.length},sum=${util.sum.apply(null, stsz.entries.slice(0, order))}`\n  }\n  return result\n}\n\nutil.seekSampleTime = function (stts, ctts, order) {\n  let time; let duration; let count = 0; let startTime = 0; let offset = 0\n  stts.entry.every(item => {\n    duration = item.sampleDuration\n    if (order < count + item.sampleCount) {\n      time = startTime + (order - count) * item.sampleDuration\n      return false\n    } else {\n      count += item.sampleCount\n      startTime += item.sampleCount * duration\n      return true\n    }\n  })\n  if (ctts) {\n    let ct = 0\n    ctts.entry.every(item => {\n      ct += item.count\n      if (order < ct) {\n        offset = item.offset\n        return false\n      } else {\n        return true\n      }\n    })\n  }\n  if (!time) {\n    time = startTime + (order - count) * duration\n  }\n  return {time, duration, offset}\n}\n\nutil.seekOrderSampleByTime = function (stts, timeScale, time) {\n  let startTime = 0; let order = 0; let count = 0; let itemDuration\n  stts.every((item, idx) => {\n    itemDuration = item.sampleCount * item.sampleDuration / timeScale\n    if (time <= startTime + itemDuration) {\n      order = count + Math.ceil((time - startTime) * timeScale / item.sampleDuration)\n      startTime = startTime + Math.ceil((time - startTime) * timeScale / item.sampleDuration) * item.sampleDuration / timeScale\n      return false\n    } else {\n      startTime += itemDuration\n      count += item.sampleCount\n      return true\n    }\n  })\n  return {order, startTime}\n}\n\nutil.seekTrakDuration = function (trak, timeScale) {\n  let stts = util.findBox(trak, 'stts'); let duration = 0\n  stts.entry.forEach(item => {\n    duration += item.sampleCount * item.sampleDuration\n  })\n  return Number(duration / timeScale).toFixed(4)\n}\n\nexport default util\n","import EventEmitter from 'event-emitter'\nimport Merge from 'deepmerge'\nimport Parser from './parse'\nimport Buffer from './fmp4/buffer'\nimport FMP4 from './fmp4/mp4'\nimport Task from './media/task'\nimport util from './util'\nimport Errors from './error'\n\nclass MP4 {\n  /**\n     * [constructor 构造函数]\n     * @param {String} url                      [视频地址]\n     * @param {Number} [chunk_size=Math.pow(25, 4)]           [请求的数据块大小，对于长视频设置的较大些可以避免二次请求]\n     */\n  constructor (url, withCredentials, chunkSize = Math.pow(25, 4)) {\n    EventEmitter(this)\n    this.url = url\n    this.withCredentials = withCredentials\n    this.CHUNK_SIZE = chunkSize\n    this.init(url)\n    this.once('moovReady', this.moovParse.bind(this))\n    this.cache = new Buffer()\n    this.bufferCache = new Set()\n    this.timeRage = []\n    this.canDownload = true\n  }\n\n  /**\n     * [getData 根据字节区间下载二进制数据]\n     * @param  {Number} [start=0]  [起始字节]\n     * @param  {Number} [end=start + this.CHUNK_SIZE] [截止字节]\n     */\n  getData (start = 0, end = start + this.CHUNK_SIZE) {\n    let self = this\n    return new Promise((resolve, reject) => {\n      let task = new Task(this.url, [\n        start, end\n      ], this.withCredentials, resolve)\n      task.once('error', err => {\n        self.emit('error', err)\n      })\n    })\n  }\n\n  /**\n     * [moovParse 解析视频信息]\n     * @return {[type]} [description]\n     */\n  moovParse () {\n    let self = this\n    let moov = this.moovBox\n    let mvhd = util.findBox(moov, 'mvhd')\n    let traks = []\n    util.findBox(moov, 'trak', traks)\n    let videoTrak,\n      audioTrak\n    let videoCodec,\n      audioCodec\n    let videoTimeScale,\n      audioTimeScale\n    let sps,\n      pps,\n      profile,\n      width,\n      height\n    let channelCount,\n      sampleRate,\n      decoderConfig\n    traks.forEach(trak => {\n      let hdlr = util.findBox(trak, 'hdlr')\n      let mdhd = util.findBox(trak, 'mdhd')\n      if (!hdlr || !mdhd) {\n        self.emit('error', new Errors('parse', '', {line: 72, handle: '[MP4] moovParse', url: self.url}))\n        return\n      }\n      let stsd = util.findBox(trak, 'stsd')\n      let codecBox = stsd.subBox[0]\n      if (hdlr.handleType === 'vide') {\n        let avcC = util.findBox(trak, 'avcC')\n        let tkhd = util.findBox(trak, 'tkhd')\n        videoTrak = trak\n        videoTimeScale = mdhd.timescale\n        if (avcC) {\n          videoCodec = `${codecBox.type}.` + util.toHex(avcC.profile, avcC.profileCompatibility, avcC.AVCLevelIndication).join('')\n          sps = avcC.sequence && avcC.sequence.map((item) => Number(`0x${item}`))\n          pps = avcC.pps && avcC.pps.map((item) => Number(`0x${item}`))\n          profile = avcC.profile\n        } else {\n          videoCodec = `${codecBox.type}`\n        }\n        if (tkhd) {\n          width = tkhd.width\n          height = tkhd.height\n        }\n      }\n      if (hdlr.handleType === 'soun') {\n        audioTrak = trak\n        let esds = util.findBox(trak, 'esds')\n        let mp4a = util.findBox(trak, 'mp4a')\n        let ESDescriptor = util.findBox(trak, 5)\n        audioTimeScale = mdhd.timescale\n        if (esds) {\n          audioCodec = `${codecBox.type}.` + util.toHex(esds.subBox[0].subBox[0].typeID) + `.${esds.subBox[0].subBox[0].subBox[0].type}`\n        } else {\n          audioCodec = `${codecBox.type}`\n        }\n        if (ESDescriptor && ESDescriptor.EScode) {\n          decoderConfig = ESDescriptor.EScode.map((item) => Number(`0x${item}`))\n        }\n        if (mp4a) {\n          channelCount = mp4a.channelCount\n          sampleRate = mp4a.sampleRate\n        }\n      }\n    })\n    this.videoTrak = Merge({}, videoTrak)\n    this.audioTrak = Merge({}, audioTrak)\n    let mdat = this._boxes.find(item => item.type === 'mdat')\n    let videoDuration = util.seekTrakDuration(videoTrak, videoTimeScale)\n    let audioDuration = util.seekTrakDuration(audioTrak, audioTimeScale)\n    this.mdatStart = mdat.start\n    let vf = this.videoKeyFrames\n    let videoKeyFramesLength = vf.length - 1\n    vf.forEach((item, idx) => {\n      if (idx < videoKeyFramesLength) {\n        this.timeRage.push([\n          item.time.time / videoTimeScale,\n          vf[idx + 1].time.time / videoTimeScale\n        ])\n      } else {\n        this.timeRage.push([\n          item.time.time / videoTimeScale,\n          -1\n        ])\n      }\n    })\n    this.meta = {\n      videoCodec,\n      audioCodec,\n      createTime: mvhd.createTime,\n      modifyTime: mvhd.modifyTime,\n      duration: mvhd.duration / mvhd.timeScale,\n      timeScale: mvhd.timeScale,\n      videoDuration,\n      videoTimeScale,\n      audioDuration,\n      audioTimeScale,\n      endTime: Math.min(videoDuration, audioDuration),\n      sps,\n      pps,\n      width,\n      height,\n      profile,\n      pixelRatio: [\n        1, 1\n      ],\n      channelCount,\n      sampleRate,\n      audioConfig: decoderConfig\n    }\n  }\n\n  /**\n     * [init 实例的初始化，主要是获取视频的MOOV元信息]\n     */\n  init () {\n    let self = this\n    self.getData().then((res) => {\n      let parsed\n\n      let moovStart = 0\n\n      let moov\n\n      let boxes\n      try {\n        parsed = new Parser(res)\n      } catch (e) {\n        self.emit('error', e.type ? e : new Errors('parse', '', {line: 176, handle: '[MP4] init', msg: e.message}))\n        return false\n      }\n      self._boxes = boxes = parsed.boxes\n      boxes.every(item => {\n        moovStart += item.size\n        if (item.type === 'moov') {\n          moov = item\n          self.moovBox = moov\n          self.emit('moovReady', moov)\n          return false\n        } else {\n          return true\n        }\n      })\n      if (!moov) {\n        let nextBox = parsed.nextBox\n        if (nextBox) {\n          if (nextBox.type === 'moov') {\n            self.getData(moovStart, moovStart + nextBox.size + 28).then(res => {\n              let parsed = new Parser(res)\n              self._boxes = self._boxes.concat(parsed.boxes)\n              moov = parsed.boxes.filter(box => box.type === 'moov')\n              if (moov.length) {\n                self.moovBox = moov[0]\n                self.emit('moovReady', moov)\n              } else {\n                self.emit('error', new Errors('parse', '', {line: 203, handle: '[MP4] init', msg: 'not find moov box'}))\n              }\n            })\n          } else {\n            self.emit('error', new Errors('parse', '', {line: 207, handle: '[MP4] init', msg: 'not find moov box'}))\n          }\n        } else {\n          self.getData(moovStart, '').then(res => {\n            let parsed = new Parser(res)\n            if (parsed) {\n              self._boxes = self._boxes.concat(parsed.boxes)\n              parsed.boxes.every(item => {\n                if (item.type === 'moov') {\n                  moov = item\n                  self.moovBox = moov\n                  self.emit('moovReady', moov)\n                  return false\n                } else {\n                  return true\n                }\n              })\n            } else {\n              self.emit('error', new Errors('parse', '', {line: 225, handle: '[MP4] init', msg: 'not find moov box'}))\n            }\n          })\n        }\n      }\n    }).catch((e) => {\n      console.error(e.message);\n      self.emit('error', new Errors('network', '', {line: 231, handle: '[MP4] getData', msg: 'getData failed'}))\n    })\n  }\n\n  getSamplesByOrders (type = 'video', start, end) {\n    let trak = type === 'video'\n      ? this.videoTrak\n      : this.audioTrak\n    let stsc = util.findBox(trak, 'stsc') // chunk~samples\n    let stsz = util.findBox(trak, 'stsz') // sample-size\n    let stts = util.findBox(trak, 'stts') // sample-time\n    let stco = util.findBox(trak, 'stco') // chunk-offset\n    let ctts = util.findBox(trak, 'ctts') // offset-compositime\n    let mdatStart = this.mdatStart\n    let samples = []\n    end = end !== undefined\n      ? end\n      : stsz.entries.length\n    if (start instanceof Array) {\n      start.forEach((item, idx) => {\n        samples.push({\n          idx: item,\n          size: stsz.entries[item],\n          time: util.seekSampleTime(stts, ctts, item),\n          offset: util.seekSampleOffset(stsc, stco, stsz, item, mdatStart)\n        })\n      })\n    } else if (end !== 0) {\n      for (let i = start; i < end; i++) {\n        samples.push({\n          idx: i,\n          size: stsz.entries[i],\n          time: util.seekSampleTime(stts, ctts, i),\n          offset: util.seekSampleOffset(stsc, stco, stsz, i, mdatStart)\n        })\n      }\n    } else {\n      samples = {\n        idx: start,\n        size: stsz.entries[start],\n        time: util.seekSampleTime(stts, ctts, start),\n        offset: util.seekSampleOffset(stsc, stco, stsz, start, mdatStart)\n      }\n    }\n    return samples\n  }\n\n  get videoKeyFrames () {\n    if (this._videoFrames) {\n      return this._videoFrames\n    }\n    let videoTrak = this.videoTrak\n    let stss = util.findBox(videoTrak, 'stss')\n    let frames = this.getSamplesByOrders('video', stss.entries.map(item => item - 1))\n    this._videoFrames = frames\n    return frames\n  }\n\n  get audioKeyFrames () {\n    if (this._audioFrames) {\n      return this._audioFrames\n    }\n    let videoScale = util.findBox(this.videoTrak, 'mdhd').timescale\n    let audioScale = util.findBox(this.audioTrak, 'mdhd').timescale\n    let audioStts = util.findBox(this.audioTrak, 'stts').entry\n    let videoFrames = this.videoKeyFrames\n    let audioIndex = []\n    audioIndex = videoFrames.map(item => {\n      return util.seekOrderSampleByTime(audioStts, audioScale, item.time.time / videoScale)\n    })\n    this._audioFrames = audioIndex\n    return this._audioFrames\n  }\n\n  packMeta () {\n    if (!this.meta) {\n      return\n    }\n    let buffer = new Buffer()\n    buffer.write(FMP4.ftyp())\n    buffer.write(FMP4.moov(this.meta))\n    this.cache.write(buffer.buffer)\n    return buffer.buffer\n  }\n\n  seek (time) {\n    let timeStart = time * this.meta.videoTimeScale\n    let fragIndex\n\n    let videoFrames = this.videoKeyFrames\n\n    let audioFrames = this.audioKeyFrames\n    videoFrames.every((item, idx) => {\n      let nowTime = item.time.time\n\n      let nextTime = videoFrames[idx + 1]\n        ? videoFrames[idx + 1].time.time\n        : Number.MAX_SAFE_INTEGER\n      if (nowTime <= timeStart && timeStart < nextTime) {\n        fragIndex = idx\n        return false\n      } else {\n        return true\n      }\n    })\n    audioFrames.every((item, idx) => {\n      let nowTime = item.startTime\n\n      let nextTime = audioFrames[idx + 1]\n        ? audioFrames[idx + 1].startTime\n        : Number.MAX_SAFE_INTEGER\n      if (nowTime <= timeStart && timeStart < nextTime) {\n        fragIndex = Math.min(idx, fragIndex)\n        return false\n      } else {\n        return true\n      }\n    })\n    if (this.bufferCache.has(fragIndex)) {\n      return Promise.resolve(null)\n    } else {\n      return this.loadFragment(fragIndex)\n    }\n  }\n  loadFragment (fragIndex) {\n    let start,\n      end\n    let videoFrame = this.videoKeyFrames[fragIndex]\n    let audioFrame = this.getSamplesByOrders('audio', this.audioKeyFrames[fragIndex].order, 0)\n    start = Math.min(videoFrame.offset, audioFrame.offset)\n    if (fragIndex < this.videoKeyFrames.length - 1) {\n      let videoNextFrame = this.videoKeyFrames[fragIndex + 1]\n      let audioNextFrame = this.getSamplesByOrders('audio', this.audioKeyFrames[fragIndex + 1].order, 0)\n      end = Math.max(videoNextFrame.offset, audioNextFrame.offset)\n    }\n    let self = this\n    if (window.isNaN(start) || (end !== undefined && window.isNaN(end))) {\n      self.emit('error', new Errors('parse', '', { line: 366, handle: '[MP4] loadFragment', url: self.url }))\n      return false\n    }\n    if (this.bufferCache.has(fragIndex)) {\n      return Promise.resolve(null)\n    } else {\n      return this.getData(\n        start + self.mdatStart, end\n          ? self.mdatStart + end\n          : '').then((dat) => {\n        return self.createFragment(new Uint8Array(dat), start, fragIndex)\n      })\n    }\n  }\n  addFragment (data) {\n    let buffer = new Buffer()\n    buffer.write(FMP4.moof(data))\n    buffer.write(FMP4.mdat(data))\n    this.cache.write(buffer.buffer)\n    return buffer.buffer\n  }\n  createFragment (mdatData, start, fragIndex) {\n    let self = this\n    let resBuffers = []\n    this.bufferCache.add(fragIndex)\n    {\n      let framesIndex = self.videoKeyFrames.map((item) => item.idx)\n      let _samples = self.getSamplesByOrders('video', framesIndex[fragIndex], framesIndex[fragIndex + 1])\n      let samples = _samples.map((item, idx) => {\n        return {\n          size: item.size,\n          duration: item.time.duration,\n          offset: item.time.offset,\n          buffer: new Uint8Array(mdatData.slice(item.offset - start, item.offset - start + item.size)),\n          key: idx === 0\n        }\n      })\n      resBuffers.push(this.addFragment({id: 1, time: _samples[0].time.time, firstFlags: 0x2000000, flags: 0xf01, samples}))\n    }\n    let _samples = this.getSamplesByOrders(\n      'audio', this.audioKeyFrames[fragIndex].order, this.audioKeyFrames[fragIndex + 1]\n        ? this.audioKeyFrames[fragIndex + 1].order\n        : undefined)\n    let samples = _samples.map((item, idx) => {\n      return {\n        size: item.size,\n        duration: item.time.duration,\n        offset: item.time.offset,\n        buffer: new Uint8Array(mdatData.slice(item.offset - start, item.offset - start + item.size)),\n        key: idx === 0\n      }\n    })\n    resBuffers.push(this.addFragment({id: 2, time: _samples[0].time.time, firstFlags: 0x00, flags: 0x701, samples: samples}))\n\n    let bufferSize = 0\n    resBuffers.every(item => {\n      bufferSize += item.byteLength\n      return true\n    })\n    let buffer = new Uint8Array(bufferSize)\n\n    let offset = 0\n    resBuffers.every(item => {\n      buffer.set(item, offset)\n      offset += item.byteLength\n      return true\n    })\n    return Promise.resolve(buffer)\n  }\n\n  download () {\n    // new Download('fmp4.mp4', this.cache.buffer)\n  }\n\n  cut (start, end) {\n    let self = this\n    this.bufferCache.clear()\n    let timeStart = start * this.meta.videoTimeScale\n    let timeEnd = end * this.meta.videoTimeScale\n    let fragIndexStart\n    let fragIndexEnd\n\n    let videoFrames = this.videoKeyFrames\n    let audioFrames = this.audioKeyFrames\n    videoFrames.every((item, idx) => {\n      let nowTime = item.time.time\n\n      let nextTime = videoFrames[idx + 1]\n        ? videoFrames[idx + 1].time.time\n        : Number.MAX_SAFE_INTEGER\n      if (nowTime <= timeStart && timeStart < nextTime) {\n        fragIndexStart = idx\n        return true\n      } else if (nowTime <= timeEnd && timeEnd < nextTime) {\n        fragIndexEnd = idx\n        return false\n      } else {\n        return true\n      }\n    })\n    audioFrames.every((item, idx) => {\n      let nowTime = item.startTime\n\n      let nextTime = audioFrames[idx + 1]\n        ? audioFrames[idx + 1].startTime\n        : Number.MAX_SAFE_INTEGER\n      if (nowTime <= timeStart && timeStart < nextTime) {\n        fragIndexStart = Math.min(idx, fragIndexStart)\n        return true\n      } else if (nowTime <= timeEnd && timeEnd < nextTime) {\n        fragIndexEnd = Math.min(idx, fragIndexEnd)\n        return false\n      } else {\n        return true\n      }\n    })\n    if (!fragIndexEnd) {\n      fragIndexEnd = videoFrames.length\n    }\n    return self.loadFragmentForCut(fragIndexStart, fragIndexEnd)\n  }\n  loadFragmentForCut (fragIndexStart, fragIndexEnd) {\n    let start,\n      end\n    let videoStartFrame = this.videoKeyFrames[fragIndexStart]\n    let audioStartFrame = this.getSamplesByOrders('audio', this.audioKeyFrames[fragIndexStart].order, 0)\n    start = Math.min(videoStartFrame.offset, audioStartFrame.offset)\n    let videoEndFrame = this.videoKeyFrames[fragIndexEnd]\n    let audioEndFrame = this.getSamplesByOrders('audio', this.audioKeyFrames[fragIndexEnd].order, 0)\n    end = Math.max(videoEndFrame.offset, audioEndFrame.offset)\n    let self = this\n    if (window.isNaN(start) || (end !== undefined && window.isNaN(end))) {\n      self.emit('error', new Errors('parse', '', { line: 366, handle: '[MP4] loadFragment', url: self.url }))\n      return false\n    }\n    return this.getData(\n      start + self.mdatStart, end\n        ? self.mdatStart + end\n        : '').then((dat) => {\n      return self.createFragmentForCut(new Uint8Array(dat), start, fragIndexStart, end, fragIndexEnd)\n    })\n  }\n  createFragmentForCut (mdatData, start, fragIndexStart, end, fragIndexEnd) {\n    let self = this\n    let resBuffers = []\n    {\n      let framesIndex = self.videoKeyFrames.map((item) => item.idx)\n      let _samples = self.getSamplesByOrders('video', framesIndex[fragIndexStart], framesIndex[fragIndexEnd])\n      let samples = _samples.map((item, idx) => {\n        return {\n          size: item.size,\n          duration: item.time.duration,\n          offset: item.time.offset,\n          buffer: new Uint8Array(mdatData.slice(item.offset - start, item.offset - start + item.size)),\n          key: idx === 0\n        }\n      })\n      resBuffers.push(this.addFragment({id: 1, time: 0, firstFlags: 0x2000000, flags: 0xf01, samples}))\n    }\n    let _samples = this.getSamplesByOrders(\n      'audio', this.audioKeyFrames[fragIndexStart].order, this.audioKeyFrames[fragIndexEnd]\n        ? this.audioKeyFrames[fragIndexEnd].order\n        : undefined)\n    let samples = _samples.map((item, idx) => {\n      return {\n        size: item.size,\n        duration: item.time.duration,\n        offset: item.time.offset,\n        buffer: new Uint8Array(mdatData.slice(item.offset - start, item.offset - start + item.size)),\n        key: idx === 0\n      }\n    })\n    resBuffers.push(this.addFragment({id: 2, time: 0, firstFlags: 0x00, flags: 0x701, samples: samples}))\n\n    let bufferSize = 0\n    resBuffers.every(item => {\n      bufferSize += item.byteLength\n      return true\n    })\n    let buffer = new Uint8Array(bufferSize)\n\n    let offset = 0\n    resBuffers.every(item => {\n      buffer.set(item, offset)\n      offset += item.byteLength\n      return true\n    })\n    return Promise.resolve(buffer)\n  }\n}\n\nexport default MP4\n","import EventEmitter from 'event-emitter'\nimport Errors from '../error'\n\nclass MSE {\n  constructor (codecs = 'video/mp4; codecs=\"avc1.64001E, mp4a.40.5\"') {\n    let self = this\n    EventEmitter(this)\n    this.codecs = codecs\n    this.mediaSource = new window.MediaSource()\n    this.url = window.URL.createObjectURL(this.mediaSource)\n    this.queue = []\n    this.updating = false\n    this.mediaSource.addEventListener('sourceopen', function () {\n      self.sourceBuffer = self.mediaSource.addSourceBuffer(self.codecs)\n      self.sourceBuffer.addEventListener('error', function (e) {\n        self.emit('error', new Errors('mse', '', {line: 16, handle: '[MSE] constructor sourceopen', msg: e.message}))\n      })\n      self.sourceBuffer.addEventListener('updateend', function (e) {\n        self.emit('updateend')\n        let buffer = self.queue.shift()\n        if (buffer && self.sourceBuffer && !self.sourceBuffer.updating && self.state === 'open') {\n          self.sourceBuffer.appendBuffer(buffer)\n        }\n      })\n      self.emit('sourceopen')\n    })\n    this.mediaSource.addEventListener('sourceclose', function () {\n      self.emit('sourceclose')\n    })\n  }\n\n  get state () {\n    return this.mediaSource.readyState\n  }\n\n  get duration () {\n    return this.mediaSource.duration\n  }\n\n  set duration (value) {\n    this.mediaSource.duration = value\n  }\n\n  appendBuffer (buffer) {\n    let sourceBuffer = this.sourceBuffer\n    if (sourceBuffer && !sourceBuffer.updating && this.state === 'open') {\n      sourceBuffer.appendBuffer(buffer)\n      return true\n    } else {\n      this.queue.push(buffer)\n      return false\n    }\n  }\n\n  removeBuffer (start, end) {\n    this.sourceBuffer.remove(start, end)\n  }\n\n  endOfStream () {\n    if (this.state === 'open') {\n      this.mediaSource.endOfStream()\n    }\n  }\n\n  static isSupported (codecs) {\n    return window.MediaSource && window.MediaSource.isTypeSupported(codecs)\n  }\n}\n\nexport default MSE\n","// import 'core-js/modules/es7.string.pad-start';\nimport Player from 'xgplayer';\nimport MP4 from './mp4';\nimport MSE from './media/mse';\nimport Task from './media/task';\nimport Buffer from './fmp4/buffer';\n\nconst {BasePlugin, Events} = Player;\n\nexport default class Mp4Player extends BasePlugin {\n  static get pluginName () {\n    return 'Mp4Player'\n  }\n\n  constructor (options) {\n    super(options);\n\n    this.loadData = this.loadData.bind(this);\n    this.destroy = this.destroy.bind(this)\n    this.replay = this.replay.bind(this)\n    this.onTimeUpdate = this.onTimeUpdate.bind(this)\n    this.onSeeking = this.onSeeking.bind(this)\n    this.initEvents();\n  }\n\n  beforePlayerInit () {\n    return this.initMp4().then(() => {\n      try {\n        BasePlugin.defineGetterOrSetter(this.player, {\n          '__url': {\n            get: () => {\n              return this.mse.url;\n            }\n          }\n        });\n      } catch (e) {\n        // NOOP\n      }\n    });\n\n  }\n\n  initEvents () {\n    const {player} = this;\n    player.once('canplay', () => {\n      // safari decoder time offset\n      if (BasePlugin.Sniffer.browser === 'safari' && player.buffered.length) {\n        let start = player.buffered.start(0);\n        player.currentTime = start + 0.1;\n      }\n    });\n\n    player.once(Events.DESTROY, this.destroy);\n    player.on(Events.TIME_UPDATE, this.onTimeUpdate);\n    player.on(Events.SEEKING, this.onSeeking);\n    player.on(Events.WAITING, this.onWaiting);\n    player.on(Events.REPLAY, this.replay);\n\n    this.progressTimer = setInterval(() => {\n      this.onTimeUpdate()\n    }, 300)\n  }\n\n  initMp4 () {\n    const {player} = this;\n    const mp4 = new MP4(player.config.url, player.config.withCredentials);\n    return new Promise((resolve, reject) => {\n      mp4.once('moovReady', () => {\n        const mse = new MSE();\n        mse.on('sourceopen', () => {\n          mse.appendBuffer(mp4.packMeta());\n          mse.once('updateend', this.loadData);\n        });\n\n        this.mse = mse;\n        this.mp4 = mp4;\n        resolve(mp4);\n      });\n\n      mp4.on('error', (e) => {\n        reject(e);\n      });\n    });\n  }\n\n  cut (start = 0, end) {\n    const {player} = this;\n    let segment = new Buffer();\n    let mp4 = new MP4(player.config.url, player.config.withCredentials);\n    return new Promise((resolve, reject) => {\n      mp4.once('moovReady', () => {\n        if (!end || end <= start) {\n          end = start + 15;\n        }\n        if (end > mp4.meta.duration) {\n          start = mp4.meta.duration - (end - start);\n          end = mp4.meta.duration;\n        }\n        mp4.cut(start, end).then(buffer => {\n          if (buffer) {\n            let meta = BasePlugin.Util.deepCopy({\n              duration: end - start,\n              audioDuration: end - start,\n              endTime: end - start\n            }, mp4.meta);\n            meta.duration = end - start;\n            meta.videoDuration = end - start;\n            meta.audioDuration = end - start;\n            meta.endTime = end - start;\n            segment.write(mp4.packMeta(meta), buffer);\n            resolve(new Blob([segment.buffer], {type: 'video/mp4; codecs=\"avc1.64001E, mp4a.40.5\"'}));\n          }\n        });\n      });\n      mp4.on('error', (e) => {\n        reject(e);\n      });\n    });\n  };\n\n  loadData (i = 0, time = this.player.currentTime) {\n    const {player} = this;\n    if (player.timer) {\n      clearTimeout(player.timer);\n    }\n    time = Math.max(time, player.currentTime);\n    player.timer = setTimeout(() => {\n      this.mp4.seek(time + i * 0.1).then(buffer => {\n        if (buffer) {\n          const {mse} = this;\n          mse.updating = true;\n          mse.appendBuffer(buffer);\n          mse.once('updateend', () => {\n            mse.updating = false;\n          });\n        }\n      }, () => {\n        if (i < 10) {\n          setTimeout(() => {\n            this.loadData(i + 1);\n          }, 2000);\n        }\n      });\n    }, 50);\n  }\n\n  switchURL (url) {\n    const {player} = this;\n    let mp5 = new MP4(url, player.config.withCredentials);\n    let mp4 = this.mp4;\n    mp5.on('moovReady', () => {\n      let curTime = player.currentTime;\n      const timeRange = mp4.timeRage;\n      let start = timeRange.find(item => item[0] - curTime > 2)[0];\n      let end = player.getBufferedRange()[1];\n      if (end - start > 0 && BasePlugin.Sniffer.browser !== 'safari') {\n        this.mse.removeBuffer(start, end);\n      }\n      if (!BasePlugin.util.hasClass(player.root, 'xgplayer-ended')) {\n        player.emit(Events.URL_CHANGE, url);\n      }\n      this.mp4 = mp5;\n      this.mse.appendBuffer(mp5.packMeta());\n    });\n    mp5.on('error', err => {\n      this.errorHandle(player, err);\n    });\n  };\n\n  playNext (url) {\n    const { player } = this\n    let mp5 = new MP4(url, player.config.withCredentials);\n    let mp4 = this.mp4;\n    mp5.on('moovReady', () => {\n      let range = [0, 0];\n      let buffered = player.video.buffered;\n      let currentTime = player.video.currentTime;\n      let max = 0;\n      if (buffered) {\n        for (let i = 0, len = buffered.length; i < len; i++) {\n          range[0] = buffered.start(i);\n          range[1] = buffered.end(i);\n          if (range[0] <= currentTime && range[1] <= currentTime) {\n            max = range[1] > max ? range[1] : max;\n            player.mse.removeBuffer(range[0], range[1]);\n          }\n        }\n      }\n      this.mp4 = mp5;\n      this.mse.appendBuffer(mp5.packMeta());\n      let flag = true;\n      player.on('timeupdate', function () {\n        if (flag && mp4.meta.endTime - player.currentTime < 2) {\n          let range = player.getBufferedRange();\n          if (player.currentTime - range[1] < 0.1) {\n            flag = false;\n            player.currentTime = 0;\n            buffered = player.video.buffered;\n            if (buffered) {\n              for (let i = 0, len = buffered.length; i < len; i++) {\n                range[0] = buffered.start(i);\n                range[1] = buffered.end(i);\n                if (range[0] >= max) {\n                  player.mse.removeBuffer(range[0], range[1]);\n                }\n              }\n            }\n          }\n        }\n      });\n    });\n    mp5.on('error', err => {\n      this.errorHandle(err);\n    });\n  }\n\n  replay () {\n    const { player } = this;\n    Task.clear();\n    this.mp4.bufferCache.clear();\n    player.hasStart = false;\n    player.start()\n\n    this.once(Events.COMPLETE, () => {\n      player.play()\n    })\n  }\n\n  onTimeUpdate () {\n    const { player } = this;\n    let mse = this.mse;\n    let mp4 = this.mp4;\n    if (mse && !mse.updating && mp4.canDownload) {\n      let timeRage = mp4.timeRage;\n      let range = player.getBufferedRange();\n      let cacheMaxTime = player.currentTime + (this.playerConfig.preloadTime || 30);\n      if (range[1] - cacheMaxTime > 0) {\n        return;\n      }\n      timeRage.every((item, idx) => {\n        let start = item[0];\n        let end = item[1] !== -1 ? item[1] : player.duration;\n        let center = (start + end) / 2;\n        if (range[1] === 0) {\n          return false;\n        } else {\n          if (center > range[1] && !mp4.bufferCache.has(idx)) {\n            this.loadData(0, center);\n          } else {\n            return true;\n          }\n        }\n      });\n      this.isEnded(player, mp4);// hack for older webkit\n    }\n  }\n\n  onWaiting () {\n    const { player } = this;\n    let mp4 = this.mp4;\n    if (!mp4 || !mp4.meta) {\n      return;\n    }\n    let range = player.getBufferedRange();\n    let duration = mp4.meta.videoDuration;\n    if (duration - player.currentTime < 0.5 && duration - range[1] < 0.5) {\n      this.mse.endOfStream();\n    } else {\n      this.loadData(0, range[1] + 1);\n      this.waiterTimer = setTimeout(function () {\n        let buffered = player.buffered;\n        let start;\n        for (let i = 0, len = buffered.length; i < len; i++) {\n          start = buffered.start(i);\n          if (start >= player.currentTime) {\n            player.currentTime = start;\n            break;\n          }\n        }\n      }, 1500);\n    }\n  }\n\n  onSeeking () {\n    const { player } = this;\n    let buffered = player.buffered;\n    let hasBuffered = false;\n\n    let curTime = player.video.currentTime;\n    Task.clear();\n    if (buffered.length) {\n      for (let i = 0, len = buffered.length; i < len; i++) {\n        if (curTime >= buffered.start(i) && curTime <= buffered.end(i)) {\n          hasBuffered = true;\n          break;\n        }\n      }\n      if (!hasBuffered) {\n        this.loadData(0, curTime);\n      }\n    } else {\n      this.loadData(0, player.currentTime);\n    }\n  }\n\n  errorHandle (err) {\n    const {player} = this;\n    err.url = player.src;\n    if (err.errd && typeof err.errd === 'object') {\n      if (this.mp4) {\n        err.errd.url = this.mp4.url;\n        err.url = this.mp4.url;\n        this.mp4.canDownload = false;\n      }\n    }\n    Task.clear();\n    if (this.mp4 && this.mp4.bufferCache) {\n      this.mp4.bufferCache.clear();\n    }\n\n    clearInterval(this.mp4ProgressTimer);\n  }\n\n  isEnded () {\n    const { player, mp4, mse } = this;\n    if (mp4.meta.endTime - player.currentTime < 2) {\n      let range = player.getBufferedRange();\n      if (player.currentTime - range[1] < 0.1) {\n        mse.endOfStream();\n      }\n    }\n  };\n\n  destroy () {\n    Task.clear()\n    if (this.player.timer) {\n      clearTimeout(this.player.timer)\n    }\n    if (this.progressTimer) {\n      clearInterval(this.progressTimer)\n    }\n  }\n}\n"],"names":["isNonNullObject","value","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","$$typeof","REACT_ELEMENT_TYPE","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","options","clone","isMergeableObject","deepmerge","defaultArrayMerge","target","source","concat","map","element","mergeObject","destination","keys","forEach","key","arrayMerge","sourceIsArray","possibleTypes","object","function","undefined","isValue","hasOwnProperty","isObject","constructor","error","length","apply","isPrototype","classRe","functionToString","Function","isFunction","test","require$$0","e","require$$1","TypeError","max","Math","dest","src","i","assign","arguments","obj","foo","bar","trzy","create","process","opts1","result","str","indexOf","String","searchString","this","contains","module","dscr","c","w","desc","configurable","enumerable","writable","normalizeOpts","gs","get","set","isPlainFunction","fn","on","once","off","emit","methods","descriptors","base","defineProperty","defineProperties","descriptor","type","listener","data","callable","__ee__","push","self","__eeOnceListener__","listeners","candidate","splice","l","args","slice","d","exports","o","Symbol","for","all","array","Error","reduce","prev","next","deepmerge_1","_Errors","vid","errd","url","version","Player","Errors","Stream","buffer","ArrayBuffer","line","handle","msg","dataview","DataView","position","count","loop","floor","last","readByte","size","sign","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","Box","headSize","subBox","start","stream","readUint32","fromCharCode","readUint8","readUint64","uuid","end","byteLength","parser","containerBox","find","item","containerParser","readHeader","readBody","box","avc1","skip","dataReferenceIndex","readUint16","width","height","horizresolution","vertresolution","frameCount","depth","avcC","configVersion","profile","profileCompatibility","AVCLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","sequenceLength","sequence","Number","ppsCount","ppsLength","pps","dataviewLength","btrt","bufferSizeDB","maxBitrate","avgBitrate","co64","flag","entries","ctts","entryCount","entry","dref","read","elst","entry_count","segment_duration","media_time","readInt32","media_rate_integer","readInt16","media_rate_fraction","esds","MP4ESDescrTag","ftyp","major_brand","minor_version","compatibleBrands","len","compatible_brands","hdlr","handleType","name","join","iods","content","mdat","UTC","time","Date","setFullYear","setMonth","setDate","setHours","setMinutes","setSeconds","setTime","getTime","toLocaleString","mdhd","modify","createTime","modifyTime","timescale","duration","language","mp4a","channelCount","sampleSize","sampleRate","MP4DecConfigDescrTag","extend","typeID","streamUint","bufferSize","maximum","average","MP4DecSpecificDescrTag","dataSize","EScode","padStart","esID","priority","SLConfigDescriptor","mvhd","timeScale","rate","volume","matrix","nextTrackID","pasp","SL","smhd","balance","readInt8","stco","stsc","preEntry","chunk_count","first_chunk","first_sample","samples_per_chunk","pre","stsd","stss","stsz","stts","tkhd","trackID","reserverd","layer","alternate_group","udta","location","vmhd","graphicsmode","opcolor","ResultConstructor","totalLength","_len","arrays","_key","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","err","return","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","_concat2","__esModule","default","_concat","Parse","boxes","nextBox","Uint8Array","bufferLength","Buffer","Concat","console","UINT32_MAX","pow","FMP4","charCodeAt","writeUint32","write","trak1","videoTrak","trak2","audioTrak","mvex","upperWordDuration","lowerWordDuration","bytes","videoDuration","videoTimeScale","mdia","sps","pixelRatio","audioDuration","audioTimeScale","audioConfig","id","mediaTime","minf","extension","dinf","stbl","samplerate","config","configlen","hSpacing","vSpacing","avcc","mehd","trex","mfhd","traf","tfhd","tfdt","sdtp","trun","upper","lower","sdtpLength","ceil","sampleCount","samples","flags","idx","Task","range","withCredentials","callback","xhr","window","XMLHttpRequest","responseType","open","setRequestHeader","onload","status","response","remove","onerror","message","onabort","queue","update","abort","filter","_this","Queue","sended","wait","limit","run","readyState","send","cancel","util","findBox","root","pad","charstr","maxlen","chars","r","substring","toHex","hex","sum","rst","stscOffset","sample_order","chunk_index","samples_offset","chunk_start","chunk_offset","chunk_offset_sample","last_chunk","pop","seekSampleOffset","order","mdatStart","chunkOffset","seekSampleTime","startTime","every","sampleDuration","ct","seekOrderSampleByTime","itemDuration","seekTrakDuration","trak","toFixed","MP4","chunkSize","CHUNK_SIZE","init","moovParse","bind","cache","bufferCache","Set","timeRage","canDownload","Promise","resolve","reject","moov","moovBox","traks","videoCodec","audioCodec","decoderConfig","codecBox","ESDescriptor","Merge","_boxes","vf","videoKeyFrames","videoKeyFramesLength","meta","min","getData","then","parsed","moovStart","Parser","catch","timeStart","fragIndex","videoFrames","audioFrames","audioKeyFrames","nowTime","nextTime","MAX_SAFE_INTEGER","has","loadFragment","videoFrame","audioFrame","getSamplesByOrders","videoNextFrame","audioNextFrame","isNaN","dat","createFragment","moof","mdatData","resBuffers","add","framesIndex","_samples","addFragment","firstFlags","clear","timeEnd","fragIndexStart","fragIndexEnd","loadFragmentForCut","videoStartFrame","audioStartFrame","videoEndFrame","audioEndFrame","createFragmentForCut","_videoFrames","frames","_audioFrames","videoScale","audioScale","audioStts","audioIndex","MSE","codecs","mediaSource","MediaSource","URL","createObjectURL","updating","addEventListener","sourceBuffer","addSourceBuffer","shift","state","appendBuffer","endOfStream","isTypeSupported","BasePlugin","Events","loadData","destroy","replay","onTimeUpdate","onSeeking","initEvents","initMp4","defineGetterOrSetter","_this2","player","mse","Sniffer","browser","buffered","currentTime","DESTROY","TIME_UPDATE","SEEKING","WAITING","onWaiting","REPLAY","progressTimer","setInterval","mp4","packMeta","_this4","segment","cut","Util","deepCopy","endTime","Blob","timer","setTimeout","seek","_this5","mp5","curTime","getBufferedRange","removeBuffer","hasClass","URL_CHANGE","errorHandle","video","hasStart","COMPLETE","play","cacheMaxTime","playerConfig","preloadTime","center","isEnded","waiterTimer","hasBuffered","babelHelpers.typeof","mp4ProgressTimer"],"mappings":"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"}