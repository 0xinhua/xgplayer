{"version":3,"file":"index.min.js","sources":["../../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../xgplayer-polyfills/babel/external-helpers.js","../../xgplayer-utils/es/models/media-info.js","../../xgplayer-utils/es/context.js","../../xgplayer-utils/es/constants/events.js","../../xgplayer-utils/es/env/sniffer.js","../../xgplayer-utils/es/env/isle.js","../../xgplayer-utils/es/env/utf8.js","../../xgplayer-utils/es/models/media-segment-list.js","../../xgplayer-utils/es/models/media-sample.js","../../xgplayer-utils/es/models/media-segment.js","../../xgplayer-utils/es/models/track-meta.js","../../xgplayer-utils/es/models/track-sample.js","../../xgplayer-utils/es/mse/index.js","../../xgplayer-utils/es/write/stream.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/index.js","../../xgplayer-utils/es/write/buffer.js","../../xgplayer-utils/es/crypto/index.js","../../xgplayer-utils/es/index.js","../../xgplayer-buffer/es/track.js","../../xgplayer-buffer/es/buffer.js","../../xgplayer-buffer/es/presouce.js","../../xgplayer-buffer/es/index.js","../../xgplayer-loader/es/fetch-loader.js","../../xgplayer-loader/es/index.js","../../xgplayer-codec/es/h264/nalunit/golomb.js","../../xgplayer-codec/es/h264/nalunit/sps.js","../../xgplayer-codec/es/h264/nalunit/index.js","../../xgplayer-codec/es/aac/aac-helper.js","../../xgplayer-codec/es/compatibility.js","../../xgplayer-codec/es/index.js","../../xgplayer-remux/src/mp4/fmp4.js","../../xgplayer-remux/src/mp4/index.js","../../xgplayer-demux/es/hls/demuxer/m3u8parser.js","../../xgplayer-demux/es/hls/demuxer/ts.js","../../xgplayer-demux/es/hls/playlist.js","../../xgplayer-demux/es/flv/amf-parser.js","../../xgplayer-demux/es/flv/index.js","../../xgplayer-demux/es/index.js","../src/hls-live.js","../src/index.js"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","(function (global) {\n  var babelHelpers = global.babelHelpers = {};\n  babelHelpers.typeof = function (obj) {\n    return typeof obj;\n  }\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  babelHelpers.possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n})(typeof global === \"undefined\" ? self : global);\n","var isObjectFilled = function isObjectFilled(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nvar MediaInfo = function () {\n  function MediaInfo() {\n    babelHelpers.classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n\n    this.hasVideo = null;\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n    };\n\n    this.hasAudio = null;\n\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    };\n  }\n\n  babelHelpers.createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this);\n    }\n  }], [{\n    key: \"isBaseInfoReady\",\n    value: function isBaseInfoReady(mediaInfo) {\n      return isObjectFilled(mediaInfo);\n    }\n  }, {\n    key: \"isVideoReady\",\n    value: function isVideoReady(mediaInfo) {\n      if (!mediaInfo.hasVideo) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }, {\n    key: \"isAudioReady\",\n    value: function isAudioReady(mediaInfo) {\n      if (!mediaInfo.hasAudio) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }]);\n  return MediaInfo;\n}();\n\nexport default MediaInfo;","import MediaInfo from './models/media-info';\nimport { EventEmitter } from 'events';\n\nvar DIRECT_EMIT_FLAG = '__TO__';\n\nvar Context = function () {\n  function Context() {\n    var allowedEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    babelHelpers.classCallCheck(this, Context);\n\n    this._emitter = new EventEmitter();\n    if (!this._emitter.off) {\n      this._emitter.off = this._emitter.removeListener;\n    }\n    this._instanceMap = {}; // 所有的解码流程实例\n    this._clsMap = {}; // 构造函数的map\n    this._inited = false;\n    this.mediaInfo = new MediaInfo();\n    this.allowedEvents = allowedEvents;\n    this._hooks = {}; // 注册在事件前/后的钩子，例如 before('DEMUX_COMPLETE')\n    this._emitCounter = {};\n  }\n\n  /**\n   * 从上下文中获取解码流程实例，如果没有实例，构造一个\n   * @param tag\n   * @param args\n   * @returns {*}\n   */\n\n\n  babelHelpers.createClass(Context, [{\n    key: 'getInstance',\n    value: function getInstance(tag) {\n      var instance = this._instanceMap[tag];\n      if (instance) {\n        return instance;\n      } else {\n        // throw new Error(`${tag}实例尚未初始化`)\n        return null;\n      }\n    }\n\n    /**\n     * 初始化具体实例\n     * @param tag\n     * @param args\n     */\n\n  }, {\n    key: 'initInstance',\n    value: function initInstance(tag) {\n      if (this._clsMap[tag]) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var newInstance = new (Function.prototype.bind.apply(this._clsMap[tag], [null].concat(args)))();\n        this._instanceMap[tag] = newInstance;\n        if (newInstance.init) {\n          newInstance.init(); // TODO: lifecircle\n        }\n        return newInstance;\n      } else {\n        throw new Error(tag + '\\u672A\\u5728context\\u4E2D\\u6CE8\\u518C');\n      }\n    }\n\n    /**\n     * 避免大量的initInstance调用，初始化所有的组件\n     * @param config\n     */\n\n  }, {\n    key: 'init',\n    value: function init(config) {\n      if (this._inited) {\n        return;\n      }\n      for (var tag in this._clsMap) {\n        // if not inited, init an instance\n        if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n          this.initInstance(tag, config);\n        }\n      }\n      this._inited = true;\n    }\n\n    /**\n     * 注册一个上下文流程，提供安全的事件发送机制\n     * @param tag\n     * @param cls\n     */\n\n  }, {\n    key: 'registry',\n    value: function registry(tag, cls) {\n      var _this2 = this;\n\n      var emitter = this._emitter;\n      var checkMessageName = this._isMessageNameValid.bind(this);\n      var self = this;\n      var enhanced = function (_cls) {\n        babelHelpers.inherits(enhanced, _cls);\n\n        function enhanced(a, b, c) {\n          babelHelpers.classCallCheck(this, enhanced);\n\n          var _this = babelHelpers.possibleConstructorReturn(this, (enhanced.__proto__ || Object.getPrototypeOf(enhanced)).call(this, a, b, c));\n\n          _this.listeners = {};\n          _this.onceListeners = {};\n          _this.TAG = tag;\n          _this._context = self;\n          return _this;\n        }\n\n        babelHelpers.createClass(enhanced, [{\n          key: 'on',\n          value: function on(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.listeners[messageName]) {\n              this.listeners[messageName].push(callback);\n            } else {\n              this.listeners[messageName] = [callback];\n            }\n\n            emitter.on('' + messageName + DIRECT_EMIT_FLAG + tag, callback); // 建立定向通信监听\n            return emitter.on(messageName, callback);\n          }\n\n          /**\n           * 在某个事件触发前执行\n           * @param messageName\n           * @param callback\n           */\n\n        }, {\n          key: 'before',\n          value: function before(messageName, callback) {\n            checkMessageName(messageName);\n            if (self._hooks[messageName]) {\n              self._hooks[messageName].push(callback);\n            } else {\n              self._hooks[messageName] = [callback];\n            }\n          }\n        }, {\n          key: 'once',\n          value: function once(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.onceListeners[messageName]) {\n              this.onceListeners[messageName].push(callback);\n            } else {\n              this.onceListeners[messageName] = [callback];\n            }\n\n            emitter.once('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n            return emitter.once(messageName, callback);\n          }\n        }, {\n          key: 'emit',\n          value: function emit(messageName) {\n            checkMessageName(messageName);\n            if (self._emitCounter[messageName]) {\n              self._emitCounter[messageName] += 1;\n              if (self._emitCounter[messageName] % 1000 === 0) {\n                var a = 'con';\n                var b = 'sole';\n                if (window.console) {\n                  window[a + b].warn('invoke: ', messageName);\n                  window.localStorage.setItem('xgplayer_invoke_' + messageName, self._emitCounter[messageName]);\n                }\n              }\n            } else {\n              self._emitCounter[messageName] = 1;\n            }\n\n            var beforeList = self._hooks ? self._hooks[messageName] : null;\n\n            if (beforeList) {\n              for (var i = 0, len = beforeList.length; i < len; i++) {\n                var callback = beforeList[i];\n                callback();\n              }\n            }\n\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            return emitter.emit.apply(emitter, [messageName].concat(args));\n          }\n\n          /**\n           * 定向发送给某个组件单例的消息\n           * @param messageName\n           * @param args\n           */\n\n        }, {\n          key: 'emitTo',\n          value: function emitTo(tag, messageName) {\n            checkMessageName(messageName);\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n              args[_key3 - 2] = arguments[_key3];\n            }\n\n            return emitter.emit.apply(emitter, ['' + messageName + DIRECT_EMIT_FLAG + tag].concat(args));\n          }\n        }, {\n          key: 'off',\n          value: function off(messageName, callback) {\n            checkMessageName(messageName);\n            return emitter.off(messageName, callback);\n          }\n        }, {\n          key: 'removeListeners',\n          value: function removeListeners() {\n            var hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners);\n\n            for (var messageName in this.listeners) {\n              if (hasOwn(messageName)) {\n                var callbacks = this.listeners[messageName] || [];\n                for (var i = 0; i < callbacks.length; i++) {\n                  var callback = callbacks[i];\n                  emitter.off(messageName, callback);\n                  emitter.off('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n                }\n              }\n            }\n\n            for (var _messageName in this.onceListeners) {\n              if (hasOwn(_messageName)) {\n                var _callbacks = this.onceListeners[_messageName] || [];\n                for (var _i = 0; _i < _callbacks.length; _i++) {\n                  var _callback = _callbacks[_i];\n                  emitter.off(_messageName, _callback);\n                  emitter.off('' + _messageName + DIRECT_EMIT_FLAG + tag, _callback);\n                }\n              }\n            }\n          }\n\n          /**\n           * 在组件销毁时，默认将它注册的事件全部卸载，确保不会造成内存泄漏\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            // step1 unlisten events\n            this.removeListeners();\n            this.listeners = {};\n\n            // step2 release from context\n            delete self._instanceMap[tag];\n            if (babelHelpers.get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this)) {\n              return babelHelpers.get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this).call(this);\n            }\n          }\n        }]);\n        return enhanced;\n      }(cls);\n      this._clsMap[tag] = enhanced;\n\n      /**\n       * get instance immediately\n       * e.g const instance = context.registry(tag, Cls)(config)\n       * */\n      return function () {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return _this2.initInstance.apply(_this2, [tag].concat(args));\n      };\n    }\n\n    /**\n     * 对存在的实例进行\n     */\n\n  }, {\n    key: 'destroyInstances',\n    value: function destroyInstances() {\n      var _this3 = this;\n\n      Object.keys(this._instanceMap).forEach(function (tag) {\n        if (_this3._instanceMap[tag].destroy) {\n          _this3._instanceMap[tag].destroy();\n        }\n      });\n    }\n\n    /**\n     * 编解码流程无需关注事件的解绑\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._emitter = null;\n      this.allowedEvents = [];\n      this._clsMap = null;\n      this._context = null;\n      this._hooks = null;\n      this._emitCounter = {};\n      this.destroyInstances();\n    }\n\n    /**\n     * 对信道进行收拢\n     * @param messageName\n     * @private\n     */\n\n  }, {\n    key: '_isMessageNameValid',\n    value: function _isMessageNameValid(messageName) {\n      if (!this.allowedEvents.indexOf(messageName) < 0) {\n        throw new Error('unregistered message name: ' + messageName);\n      }\n    }\n  }]);\n  return Context;\n}();\n\nexport default Context;","var LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n\n  // hls专有events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYTO_EVENTS: CRYTO_EVENTS\n};","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport default sniffer;","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nexport default le;","var UTF8 = function () {\n  function UTF8() {\n    babelHelpers.classCallCheck(this, UTF8);\n  }\n\n  babelHelpers.createClass(UTF8, null, [{\n    key: 'decode',\n    value: function decode(uint8array) {\n      var out = [];\n      var input = uint8array;\n      var i = 0;\n      var length = uint8array.length;\n\n      while (i < length) {\n        if (input[i] < 0x80) {\n          out.push(String.fromCharCode(input[i]));\n          ++i;\n          continue;\n        } else if (input[i] < 0xC0) {\n          // fallthrough\n        } else if (input[i] < 0xE0) {\n          if (UTF8._checkContinuation(input, i, 1)) {\n            var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n            if (ucs4 >= 0x80) {\n              out.push(String.fromCharCode(ucs4 & 0xFFFF));\n              i += 2;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF0) {\n          if (UTF8._checkContinuation(input, i, 2)) {\n            var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n            if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n              out.push(String.fromCharCode(_ucs & 0xFFFF));\n              i += 3;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF8) {\n          if (UTF8._checkContinuation(input, i, 3)) {\n            var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n            if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n              _ucs2 -= 0x10000;\n              out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n              out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n              i += 4;\n              continue;\n            }\n          }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n      }\n\n      return out.join('');\n    }\n  }, {\n    key: '_checkContinuation',\n    value: function _checkContinuation(uint8array, start, checkLength) {\n      var array = uint8array;\n      if (start + checkLength < array.length) {\n        while (checkLength--) {\n          if ((array[++start] & 0xC0) !== 0x80) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n  return UTF8;\n}();\n\nexport default UTF8;","var MediaSegmentList = function () {\n    function MediaSegmentList(type) {\n        babelHelpers.classCallCheck(this, MediaSegmentList);\n\n        this._type = type;\n        this._list = [];\n        this._lastAppendLocation = -1; // cached last insert location\n    }\n\n    babelHelpers.createClass(MediaSegmentList, [{\n        key: \"isEmpty\",\n        value: function isEmpty() {\n            return this._list.length === 0;\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            this._list = [];\n            this._lastAppendLocation = -1;\n        }\n    }, {\n        key: \"_searchNearestSegmentBefore\",\n        value: function _searchNearestSegmentBefore(beginDts) {\n            var list = this._list;\n            if (list.length === 0) {\n                return -2;\n            }\n            var last = list.length - 1;\n            var mid = 0;\n            var lbound = 0;\n            var ubound = last;\n\n            var idx = 0;\n\n            if (beginDts < list[0].originDts) {\n                idx = -1;\n                return idx;\n            }\n\n            while (lbound <= ubound) {\n                mid = lbound + Math.floor((ubound - lbound) / 2);\n                if (mid === last || beginDts > list[mid].lastSample.originDts && beginDts < list[mid + 1].originDts) {\n                    idx = mid;\n                    break;\n                } else if (list[mid].originDts < beginDts) {\n                    lbound = mid + 1;\n                } else {\n                    ubound = mid - 1;\n                }\n            }\n            return idx;\n        }\n    }, {\n        key: \"_searchNearestSegmentAfter\",\n        value: function _searchNearestSegmentAfter(beginDts) {\n            return this._searchNearestSegmentBefore(beginDts) + 1;\n        }\n    }, {\n        key: \"append\",\n        value: function append(segment) {\n            var list = this._list;\n            var lastAppendIdx = this._lastAppendLocation;\n            var insertIdx = 0;\n\n            if (lastAppendIdx !== -1 && lastAppendIdx < list.length && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && segment.originStartDts < list[lastAppendIdx + 1].originStartDts)) {\n                insertIdx = lastAppendIdx + 1; // use cached location idx\n            } else {\n                if (list.length > 0) {\n                    insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n                }\n            }\n\n            this._lastAppendLocation = insertIdx;\n            this._list.splice(insertIdx, 0, segment);\n        }\n    }, {\n        key: \"getLastSegmentBefore\",\n        value: function getLastSegmentBefore(beginDts) {\n            var idx = this._searchNearestSegmentBefore(beginDts);\n            if (idx >= 0) {\n                return this._list[idx];\n            } else {\n                // -1\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastSampleBefore\",\n        value: function getLastSampleBefore(beginDts) {\n            var segment = this.getLastSegmentBefore(beginDts);\n            if (segment !== null) {\n                return segment.lastSample;\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastRAPBefore\",\n        value: function getLastRAPBefore(beginDts) {\n            var segmentIdx = this._searchNearestSegmentBefore(beginDts);\n            var randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n                segmentIdx--;\n                randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            }\n            if (randomAccessPoints.length > 0) {\n                return randomAccessPoints[randomAccessPoints.length - 1];\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"type\",\n        get: function get() {\n            return this._type;\n        }\n    }, {\n        key: \"length\",\n        get: function get() {\n            return this._list.length;\n        }\n    }]);\n    return MediaSegmentList;\n}();\n\nexport default MediaSegmentList;","var MediaSample = function () {\n  function MediaSample(info) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, MediaSample);\n\n    var _default = MediaSample.getDefaultInf();\n\n    if (!info || Object.prototype.toString.call(info) !== '[object Object]') {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    Object.entries(sample).forEach(function (_ref) {\n      var _ref2 = babelHelpers.slicedToArray(_ref, 2),\n          k = _ref2[0],\n          v = _ref2[1];\n\n      _this[k] = v;\n    });\n  }\n\n  babelHelpers.createClass(MediaSample, null, [{\n    key: 'getDefaultInf',\n    value: function getDefaultInf() {\n      return {\n        dts: null,\n        pts: null,\n        duration: null,\n        position: null,\n        isRAP: false, // is Random access point\n        originDts: null\n      };\n    }\n  }]);\n  return MediaSample;\n}();\n\nexport default MediaSample;","var MediaSegment = function () {\n    function MediaSegment() {\n        babelHelpers.classCallCheck(this, MediaSegment);\n\n        this.startDts = -1;\n        this.endDts = -1;\n        this.startPts = -1;\n        this.endPts = -1;\n        this.originStartDts = -1;\n        this.originEndDts = -1;\n        this.randomAccessPoints = [];\n        this.firstSample = null;\n        this.lastSample = null;\n    }\n\n    babelHelpers.createClass(MediaSegment, [{\n        key: \"addRAP\",\n        value: function addRAP(sample) {\n            sample.isRAP = true;\n            this.randomAccessPoints.push(sample);\n        }\n    }]);\n    return MediaSegment;\n}();\n\nexport default MediaSegment;","export var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    babelHelpers.classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  babelHelpers.createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    babelHelpers.classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  babelHelpers.createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n  return VideoTrackMeta;\n}();","export var AudioTrackSample = function () {\n  function AudioTrackSample(info) {\n    babelHelpers.classCallCheck(this, AudioTrackSample);\n\n    var _default = AudioTrackSample.getDefault();\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  babelHelpers.createClass(AudioTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n  return AudioTrackSample;\n}();\n\nexport var VideoTrackSample = function () {\n  function VideoTrackSample(info) {\n    babelHelpers.classCallCheck(this, VideoTrackSample);\n\n    var _default = VideoTrackSample.getDefault();\n\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  babelHelpers.createClass(VideoTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        isKeyframe: false, // is Random access point\n        originDts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n  return VideoTrackSample;\n}();","var MSE = function () {\n  function MSE(configs, context) {\n    babelHelpers.classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n  }\n\n  babelHelpers.createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this.container.src = URL.createObjectURL(this.mediaSource);\n      this.url = this.container.src;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx) {\n      this._context = newCtx;\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit('SOURCE_UPDATE_END');\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (this.mediaSource.readyState !== 'open') {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track) {\n          var dur = type === 'audio' ? 21 : 40;\n          if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n          if (sources[type].data.length >= this.preloadTime / dur) {\n            add = true;\n          }\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 0) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n          var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n          this.sourceBuffers[_type] = sourceBuffer;\n          sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (sources) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var type = Object.keys(this.sourceBuffers)[i];\n          var sourceBuffer = this.sourceBuffers[type];\n          var source = sources.sources[type];\n          if (source && !source.inited) {\n            // console.log('append initial segment')\n            try {\n              sourceBuffer.appendBuffer(source.init.buffer.buffer);\n              source.inited = true;\n            } catch (e) {\n              // DO NOTHING\n            }\n          } else if (source) {\n            var data = source.data.shift();\n            if (data) {\n              try {\n                sourceBuffer.appendBuffer(data.buffer.buffer);\n              } catch (e) {\n                source.data.unshift(data);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      var _mediaSource = this.mediaSource,\n          readyState = _mediaSource.readyState,\n          activeSourceBuffers = _mediaSource.activeSourceBuffers;\n\n      if (readyState === 'open' && activeSourceBuffers.length === 0) {\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          // log\n        }\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        if (!buffer.updating) {\n\n          // console.log('remove', start, end)\n          buffer.remove(start, end);\n        }\n      }\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      return this.removeBuffers().then(function () {\n        for (var i = 0; i < Object.keys(_this2.sourceBuffers).length; i++) {\n          var _buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n          _this2.mediaSource.removeSourceBuffer(_buffer);\n          delete _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        }\n\n        _this2.container.removeEventListener('timeupdate', _this2.onTimeUpdate);\n        _this2.container.removeEventListener('waiting', _this2.onWaiting);\n        _this2.mediaSource.removeEventListener('sourceopen', _this2.onSourceOpen);\n\n        _this2.endOfStream();\n        window.URL.revokeObjectURL(_this2.url);\n\n        _this2.url = null;\n        _this2.configs = {};\n        _this2.container = null;\n        _this2.mediaSource = null;\n        _this2.sourceBuffers = {};\n        _this2.preloadTime = 1;\n      });\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      var buffered = buffer.buffered;\n      var bEnd = 0.1;\n      for (var i = 0, len = buffered.length; i < len; i++) {\n        bEnd = buffered.end(i);\n      }\n      try {\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n  return MSE;\n}();\n\nexport default MSE;","var Stream = function () {\n  function Stream(buffer) {\n    babelHelpers.classCallCheck(this, Stream);\n\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.dataview = new DataView(buffer);\n      this.dataview.position = 0;\n    } else {\n      throw new Error('data is invalid');\n    }\n  }\n\n  babelHelpers.createClass(Stream, [{\n    key: 'back',\n    value: function back(count) {\n      this.position -= count;\n    }\n  }, {\n    key: 'skip',\n    value: function skip(count) {\n      var loop = Math.floor(count / 4);\n      var last = count % 4;\n      for (var i = 0; i < loop; i++) {\n        Stream.readByte(this.dataview, 4);\n      }\n      if (last > 0) {\n        Stream.readByte(this.dataview, last);\n      }\n    }\n\n    /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n\n  }, {\n    key: 'readUint8',\n    value: function readUint8() {\n      return Stream.readByte(this.dataview, 1);\n    }\n  }, {\n    key: 'readUint16',\n    value: function readUint16() {\n      return Stream.readByte(this.dataview, 2);\n    }\n  }, {\n    key: 'readUint24',\n    value: function readUint24() {\n      return Stream.readByte(this.dataview, 3);\n    }\n  }, {\n    key: 'readUint32',\n    value: function readUint32() {\n      return Stream.readByte(this.dataview, 4);\n    }\n  }, {\n    key: 'readUint64',\n    value: function readUint64() {\n      return Stream.readByte(this.dataview, 8);\n    }\n  }, {\n    key: 'readInt8',\n    value: function readInt8() {\n      return Stream.readByte(this.dataview, 1, true);\n    }\n  }, {\n    key: 'readInt16',\n    value: function readInt16() {\n      return Stream.readByte(this.dataview, 2, true);\n    }\n  }, {\n    key: 'readInt32',\n    value: function readInt32() {\n      return Stream.readByte(this.dataview, 4, true);\n    }\n  }, {\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >>> 24 & 0xff, value >>> 16 & 0xff, value >>> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.buffer.byteLength;\n    }\n  }, {\n    key: 'position',\n    set: function set(value) {\n      this.dataview.position = value;\n    },\n    get: function get() {\n      return this.dataview.position;\n    }\n  }], [{\n    key: 'readByte',\n    value: function readByte(buffer, size, sign) {\n      var res = void 0;\n      switch (size) {\n        case 1:\n          if (sign) {\n            res = buffer.getInt8(buffer.position);\n          } else {\n            res = buffer.getUint8(buffer.position);\n          }\n          break;\n        case 2:\n          if (sign) {\n            res = buffer.getInt16(buffer.position);\n          } else {\n            res = buffer.getUint16(buffer.position);\n          }\n          break;\n        case 3:\n          if (sign) {\n            throw new Error('not supported for readByte 3');\n          } else {\n            res = buffer.getUint8(buffer.position) << 16;\n            res |= buffer.getUint8(buffer.position + 1) << 8;\n            res |= buffer.getUint8(buffer.position + 2);\n          }\n          break;\n        case 4:\n          if (sign) {\n            res = buffer.getInt32(buffer.position);\n          } else {\n            res = buffer.getUint32(buffer.position);\n          }\n          break;\n        case 8:\n          if (sign) {\n            throw new Error('not supported for readBody 8');\n          } else {\n            res = buffer.getUint32(buffer.position) << 32;\n            res |= buffer.getUint32(buffer.position + 4);\n          }\n          break;\n        default:\n          res = '';\n      }\n      buffer.position += size;\n      return res;\n    }\n  }]);\n  return Stream;\n}();\n\nexport default Stream;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    babelHelpers.classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  babelHelpers.createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n  return Buffer;\n}();\n\nexport default Buffer;","import EVENTS from '../constants/events';\nvar CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\n\nvar Crypto = function () {\n    function Crypto(config) {\n        babelHelpers.classCallCheck(this, Crypto);\n\n        this.inputBuffer = config.inputbuffer;\n        this.outputBuffer = config.outputbuffer;\n        this.key = config.key;\n        this.iv = config.iv;\n        this.method = config.method;\n\n        this.crypto = window.crypto || window.msCrypto;\n    }\n\n    babelHelpers.createClass(Crypto, [{\n        key: 'init',\n        value: function init() {\n            this.on(CRYTO_EVENTS.START_DECRYPT, this.decript.bind(this));\n        }\n    }, {\n        key: 'decript',\n        value: function decript() {\n            var _this = this;\n\n            if (!this.aeskey) {\n                var sbkey = this.crypto.subtle.importKey('raw', this.key.buffer, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n                sbkey.then(function (key) {\n                    _this.aeskey = key;\n                    _this.decriptData();\n                });\n            } else {\n                this.decriptData();\n            }\n        }\n    }, {\n        key: 'decriptData',\n        value: function decriptData() {\n            var _this2 = this;\n\n            var inputbuffer = this._context.getInstance(this.inputBuffer);\n            var outputbuffer = this._context.getInstance(this.outputBuffer);\n            var data = inputbuffer.shift();\n            if (data) {\n                this.crypto.subtle.decrypt({ name: 'AES-CBC', iv: this.iv.buffer }, this.aeskey, data).then(function (res) {\n                    outputbuffer.push(new Uint8Array(res));\n                    _this2.emit(CRYTO_EVENTS.DECRYPTED);\n                    _this2.decriptData(data);\n                });\n            }\n        }\n    }]);\n    return Crypto;\n}();\n\nexport default Crypto;","import _Context from './context';\n\n// Modules from constants\nimport _EVENTS from './constants/events';\nimport { CONTEXT_COMOMANDS } from './constants/worker-commands';\n\n// Modules from env\nimport _sniffer from './env/sniffer';\nimport _isLe from './env/isle';\nimport _UTF8 from './env/utf8';\n\n// Models\nimport _MediaInfo from './models/media-info';\nimport _MediaSample from './models/media-sample';\nimport _MediaSegment from './models/media-segment';\nimport _MediaSegmentList from './models/media-segment-list';\nimport { AudioTrackMeta as _AudioTrackMeta, VideoTrackMeta as _VideoTrackMeta } from './models/track-meta';\n\nimport { AudioTrackSample as _AudioTrackSample, VideoTrackSample as _VideoTrackSample } from './models/track-sample';\n\n// Modules from mse\nimport _Mse from './mse/index';\n\n// Modules from write\nimport _Stream from './write/stream';\nimport _Buffer from './write/buffer';\n\n// Crypto\nimport _Crypto from './crypto';\n\nexport var Context = _Context;\nexport var EVENTS = _EVENTS;\nexport var WORKER_COMMANDS = {\n  CONTEXT_COMOMANDS: CONTEXT_COMOMANDS\n};\nexport var sniffer = _sniffer;\nexport var isLe = _isLe;\nexport var UTF8 = _UTF8;\nexport var MediaInfo = _MediaInfo;\nexport var MediaSample = _MediaSample;\nexport var MediaSegment = _MediaSegment;\nexport var MediaSegmentList = _MediaSegmentList;\nexport var AudioTrackMeta = _AudioTrackMeta;\nexport var VideoTrackMeta = _VideoTrackMeta;\nexport var AudioTrackSample = _AudioTrackSample;\nexport var VideoTrackSample = _VideoTrackSample;\nexport var Mse = _Mse;\nexport var Stream = _Stream;\nexport var Buffer = _Buffer;\nexport var Crypto = _Crypto;","var Track = function () {\n  /**\n   * The constructor.\n   */\n  function Track() {\n    babelHelpers.classCallCheck(this, Track);\n\n    this.id = -1;\n    this.sequenceNumber = 0;\n    this.samples = [];\n    this.droppedSamples = [];\n    this.length = 0;\n  }\n\n  /**\n   * Reset the track.\n   */\n\n\n  babelHelpers.createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n    /**\n     * destroy the track.\n     */\n\n  }, {\n    key: 'distroy',\n    value: function distroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  babelHelpers.inherits(AudioTrack, _Track);\n\n  /**\n   * The constructor for audio track.\n   */\n  function AudioTrack() {\n    babelHelpers.classCallCheck(this, AudioTrack);\n\n    var _this = babelHelpers.possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  babelHelpers.inherits(VideoTrack, _Track2);\n\n  /**\n   * The constructor for video track.\n   */\n  function VideoTrack() {\n    babelHelpers.classCallCheck(this, VideoTrack);\n\n    var _this2 = babelHelpers.possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    _this2.type = 'video';\n    _this2.dropped = 0;\n    return _this2;\n  }\n  /**\n   * reset the video track.\n   */\n\n\n  babelHelpers.createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    babelHelpers.classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  babelHelpers.createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n  return Tracks;\n}();","export var XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    babelHelpers.classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n\n\n  babelHelpers.createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n  return XgBuffer;\n}();\n\nexport var RemuxBuffer = function () {\n  function RemuxBuffer() {\n    babelHelpers.classCallCheck(this, RemuxBuffer);\n\n    this.video = [];\n    this.audio = [];\n  }\n\n  babelHelpers.createClass(RemuxBuffer, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.video = [];\n      this.audio = [];\n    }\n  }]);\n  return RemuxBuffer;\n}();","var Source = function Source() {\n  babelHelpers.classCallCheck(this, Source);\n\n  this.mimetype = '';\n  this.init = null;\n  this.data = [];\n};\n\nvar PreSource = function () {\n  function PreSource() {\n    babelHelpers.classCallCheck(this, PreSource);\n\n    this.sources = {};\n  }\n\n  babelHelpers.createClass(PreSource, [{\n    key: 'getSource',\n    value: function getSource(source) {\n      return this.sources[source];\n    }\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new Source();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.sources = {};\n    }\n  }]);\n  return PreSource;\n}();\n\nexport default PreSource;","import _Track, { Tracks as _Tracks, AudioTrack as _AudioTrack, VideoTrack as _VideoTrack } from './track';\nimport { XgBuffer as _XgBuffer, RemuxBuffer as _RemuxBuffer } from './buffer';\nimport _PreSource from './presouce';\n\nexport var Track = _Track;\nexport var Tracks = _Tracks;\nexport var AudioTrack = _AudioTrack;\nexport var VideoTrack = _VideoTrack;\nexport var XgBuffer = _XgBuffer;\nexport var RemuxBuffer = _RemuxBuffer;\nexport var PreSource = _PreSource;","import { EVENTS } from 'xgplayer-utils';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    babelHelpers.classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  babelHelpers.createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'load',\n    value: function load(url, opts) {\n      var _this = this;\n      this.url = url;\n\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n      _this.loading = true;\n      return fetch(this.url, params).then(function (response) {\n        if (response.ok) {\n          _this.status = response.status;\n          return _this._onFetchResponse(response);\n        }\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, new Error('invalid response.'));\n      }).catch(function (error) {\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, error);\n        throw new Error(error.message);\n      });\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      var _this = this;\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n      this._reader && this._reader.read().then(function (val) {\n        if (_this._canceled || _this._destroyed) {\n          if (_this._reader) {\n            try {\n              _this._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this.loading = false;\n          _this.status = 0;\n          _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          return;\n        }\n\n        buffer.push(val.value);\n        _this.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        return _this._onReader(reader, taskno);\n      }).catch(function (error) {\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, error);\n      });\n    }\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // 添加自定义头\n      };if (babelHelpers.typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (babelHelpers.typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials 在默认情况下不被使用。\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // 防止failed: 200错误被打印到控制台上\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      this._canceled = true;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      this.cancel();\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n  return FetchLoader;\n}();\n\nexport default FetchLoader;","import _FetchLoader from './fetch-loader';\n\nexport var FetchLoader = _FetchLoader;","var Golomb = function () {\n  function Golomb(uint8array) {\n    babelHelpers.classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  babelHelpers.createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO 异常处理\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }]);\n  return Golomb;\n}();\n\nexport default Golomb;","/* eslint-disable camelcase  */\n/* eslint-disable one-var  */\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    babelHelpers.classCallCheck(this, SPSParser);\n  }\n\n  babelHelpers.createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1,\n          par_height = 1;\n      var fps = 0,\n          fps_fixed = true,\n          fps_num = 0,\n          fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0,\n          crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var last_scale = 8,\n          next_scale = 8;\n      var delta_scale = 0;\n      for (var i = 0; i < count; i++) {\n        if (next_scale !== 0) {\n          delta_scale = gb.readSEG();\n          next_scale = (last_scale + delta_scale + 256) % 256;\n        }\n        last_scale = next_scale === 0 ? last_scale : next_scale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n      return meta;\n    }\n  }]);\n  return SPSParser;\n}();\n\nexport default SPSParser;","import SpsParser from './sps';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    babelHelpers.classCallCheck(this, Nalunit);\n  }\n\n  babelHelpers.createClass(Nalunit, null, [{\n    key: 'getNalunits',\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32();\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = buffer.buffer.slice(buffer.position, buffer.position + length);\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = buffer.length;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225;\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n  return Nalunit;\n}();\n\nexport default Nalunit;","var AAC = function () {\n  function AAC() {\n    babelHelpers.classCallCheck(this, AAC);\n  }\n\n  babelHelpers.createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n  return AAC;\n}();\n\nexport default AAC;","import { EVENTS } from 'xgplayer-utils';\nimport AAC from './aac/aac-helper';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS,\n    LOADER_EVENTS = EVENTS.LOADER_EVENTS;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    babelHelpers.classCallCheck(this, Compatibility);\n\n    this.nextAudioDts = 0; // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0; // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined; // 上一段音频数据的长度\n    this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0; // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0; // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // 补充音频帧（）\n    this.filledVideoSamples = []; // 补充视频帧（）\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    this._videoLargeGap = 0;\n    this._audioLargeGap = 0;\n  }\n\n  babelHelpers.createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // 估算下一段音频数据的dts\n      this.nextVideoDts = null; // 估算下一段视频数据的dts\n\n      this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n      this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n      this.lastVideoDts = undefined; // 上一段音频数据的长度\n      this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n      // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n      // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // 补充音频帧（）\n      this.filledVideoSamples = []; // 补充视频帧（）\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n      if (this._firstAudioSample) {\n        this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples);\n      }\n\n      var _Compatibility$detact = Compatibility.detactChangeStream(this.videoTrack.samples),\n          videoChanged = _Compatibility$detact.changed,\n          videoChangedIdx = _Compatibility$detact.changedIdx;\n\n      if (videoChanged && !isFirstAudioSamples) {\n        this.fixChangeStreamVideo(videoChangedIdx);\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detact2 = Compatibility.detactChangeStream(this.audioTrack.samples),\n          audioChanged = _Compatibility$detact2.changed,\n          audioChangedIdx = _Compatibility$detact2.changedIdx;\n\n      if (audioChanged) {\n        this.fixChangeStreamAudio(audioChangedIdx);\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      // console.log('next video', this.nextVideoDts)\n\n      for (var i = 0, len = videoSamples.length; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      if (meta.frameRate && meta.frameRate.fixed === false) {\n        return;\n      }\n\n      if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n        return;\n      }\n\n      // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n      var firstSample = videoSamples[0];\n\n      // step0.修复hls流出现巨大gap，需要强制重定位的问题\n      if (this._videoLargeGap > 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      if (firstSample.dts !== this._firstVideoSample.dts && streamChangeStart) {\n        if (streamChangeStart) {\n          this.nextVideoDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n\n        this._videoLargeGap = this.nextVideoDts - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. 修复与audio首帧差距太大的问题\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i = 0; _i < fillCount; _i++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // 视频头部帧缺失需要复制第一帧\n            // 重新计算sample的dts和pts\n            clonedFirstSample.dts = videoFirstDts - (_i + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (gap < -2 * meta.refSampleDuration) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      this.videoLastSample = curLastSample;\n\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      // console.log('next audio', this.nextAudioDts)\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n      // 对audioSamples按照dts做排序\n      // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n      if (this._audioLargeGap > 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n\n      if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n        if (streamChangeStart) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n      // step0. 首帧与video首帧间距大的问题\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n        if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < silentSampleCount; _i2++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i2 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. 处理samples段之间的丢帧情况\n        // 当发现duration差距大于1帧时进行补帧\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          meta.refSampleDurationFixed = undefined;\n        }\n\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n            // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n            meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap;\n          } else {\n            var silentFrameCount = Math.floor(gap / meta.refSampleDuration);\n\n            for (var _i3 = 0; _i3 < silentFrameCount; _i3++) {\n              var computed = firstDts - (_i3 + 1) * meta.refSampleDuration;\n              var _silentSample = Object.assign({}, audioSamples[0], {\n                dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n              });\n\n              this.filledAudioSamples.push({\n                dts: _silentSample.dts,\n                size: _silentSample.data.byteLength\n              });\n              this.audioTrack.samples.unshift(_silentSample);\n            }\n          }\n        } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n          // 当差距比较小的时候将音频帧重定位\n          // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n          audioSamples[0].dts = this.nextAudioDts;\n          audioSamples[0].pts = this.nextAudioDts;\n        } else if (gap < 0) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n        }\n      }\n      var lastOriginDts = audioSamples[audioSamples.length - 1].originDts;\n      var lastDts = audioSamples[audioSamples.length - 1].dts;\n      var lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration;\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration;\n      this.lastAudioDts = lastDts;\n\n      audioSamples[audioSamples.length - 1].duration = lastSampleDuration;\n\n      // step3. 修复samples段内部的dts异常问题\n      for (var _i4 = 0, _len = audioSamples.length; _i4 < _len; _i4++) {\n        var current = audioSamples[_i4];\n        var next = audioSamples[_i4 + 1];\n\n        if (!next) {\n          break;\n        }\n\n        var duration = next.dts - current.dts;\n        audioSamples[_i4].duration = duration;\n        /*\n        if (duration > (2 * meta.refSampleDuration)) {\n          // 两帧之间间隔太大，需要补空白帧\n          /**\n          let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n          let frameIdx = 0\n           while (frameIdx < silentFrameCount) {\n            const silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n              filtered: 0,\n              isSilent: true\n            }\n             audioSamples.splice(i, 0, silentSample)\n             this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n             frameIdx++\n            i++ // 不对静音帧做比较\n          }\n        } */\n      }\n\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * meta.refSampleDuration;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixVideo(false);\n      }\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var changeSample = secondPartSamples[0];\n      var firstPartDuration = changeSample.dts - firstSample.dts;\n      var streamChangeStart = firstSample.options && firstSample.options.start + firstPartDuration ? firstSample.options.start : null;\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * meta.refSampleDuration;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixAudio(false);\n      }\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var changeSample = secondPartSamples[0];\n      var firstPartDuration = changeSample.dts - firstSample.dts;\n      var streamChangeStart = firstSample.options && firstSample.options.start + firstPartDuration ? firstSample.options.start : null;\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // 获取video和audio的首帧数据\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // 寻找dts最小的帧作为首个音频帧\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * 在没有refSampleDuration的问题流中，\n     */\n\n  }, {\n    key: 'fixRefSampleDuration',\n    value: function fixRefSampleDuration(meta, samples) {\n      var isVideo = meta.type === 'video';\n      var allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount;\n      var firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts;\n      var filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length;\n\n      if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          meta.refSampleDuration = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // 将refSampleDuration重置为计算后的平均值\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n\n          meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n        }\n      }\n    }\n\n    /**\n     * 记录截止目前一共播放了多少帧\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * 去除不合法的帧（倒退、重复帧）\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var _firstVideoSample = this._firstVideoSample,\n          _firstAudioSample = this._firstAudioSample;\n\n\n      if (_firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample) {\n          if (sample === _firstAudioSample) {\n            return true;\n          }\n\n          if (sample.duration !== undefined && sample.duration <= 0) {\n            return false;\n          }\n          return sample.dts > _firstAudioSample.dts;\n        });\n      }\n\n      if (_firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample) {\n          if (sample === _firstVideoSample) {\n            return true;\n          }\n\n          if (sample.duration !== undefined && sample.duration <= 0) {\n            return false;\n          }\n\n          return sample.dts > _firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n\n    /**\n     * 寻找dts最小的sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectLargeGap',\n    value: function detectLargeGap(nextDts, firstSample) {\n      if (nextDts === null) {\n        return;\n      }\n      var curDts = firstSample.dts || 0;\n      var cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000; // fix hls流出现大量流dts间距问题\n      var cond2 = firstSample.options && firstSample.options.discontinue;\n\n      return cond1 || cond2;\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * 中途换流\n     */\n\n  }, {\n    key: 'detactChangeStream',\n    value: function detactChangeStream(samples) {\n      var changed = false;\n      var changedIdx = -1;\n      for (var i = 0, len = samples.length; i < len; i++) {\n        if (samples[i].options && samples[i].options.meta) {\n          changed = true;\n          changedIdx = i;\n          break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdx: changedIdx\n      };\n    }\n  }]);\n  return Compatibility;\n}();\n\nexport default Compatibility;","import _Nalunit from './h264/nalunit';\nimport _SpsParser from './h264/nalunit/sps';\nimport _Compatibility from './compatibility';\n\nexport var Nalunit = _Nalunit;\nexport var SpsParser = _SpsParser;\nexport var Compatibility = _Compatibility;","import { Buffer } from 'xgplayer-utils';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\nclass Fmp4 {\n  static size (value) {\n    return Buffer.writeUint32(value)\n  }\n  static initBox (size, name, ...content) {\n    const buffer = new Buffer()\n    buffer.write(Fmp4.size(size), Fmp4.type(name), ...content)\n    return buffer.buffer\n  }\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n  static ftyp () {\n    return Fmp4.initBox(24, 'ftyp', new Uint8Array([\n      0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n    ]))\n  }\n  static moov ({ type, meta }) {\n    let size = 8\n    let mvhd = Fmp4.mvhd(meta.duration, meta.timescale)\n    let trak\n\n    if (type === 'video') {\n      trak = Fmp4.videoTrak(meta)\n    } else {\n      trak = Fmp4.audioTrak(meta)\n    }\n\n    let mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n    [mvhd, trak, mvex].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moov', mvhd, trak, mvex)\n  }\n  static mvhd (duration, timescale = 1000) {\n    // duration *= timescale;\n    let bytes = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      (timescale >>> 24) & 0xFF,\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      (duration >>> 24) & 0xFF,\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n    ])\n    return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes))\n  }\n  static videoTrak (data) {\n    let size = 8\n\n    let tkhd = Fmp4.tkhd({\n      id: 1,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: data.presentWidth,\n      height: data.presentHeight,\n      type: 'video'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'video',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      avcc: data.avcc,\n      parRatio: data.parRatio,\n      width: data.presentWidth,\n      height: data.presentHeight\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static audioTrak (data) {\n    let size = 8\n    let tkhd = Fmp4.tkhd({\n      id: 2,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: 0,\n      height: 0,\n      type: 'audio'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'audio',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      channelCount: data.channelCount,\n      samplerate: data.sampleRate,\n      config: data.config\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static tkhd (data) {\n    let id = data.id\n    let duration = data.duration\n    let width = data.width\n    let height = data.height\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      (id >>> 24) & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      (id >>> 16) & 0xFF,\n      (id >>> 8) & 0xFF,\n      (id) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      (duration >>> 24) & 0xFF, // duration: 4 bytes track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      (width >>> 8) & 0xFF, // //宽度\n      (width) & 0xFF,\n      0x00, 0x00,\n      (height >>> 8) & 0xFF, // 高度\n      (height) & 0xFF,\n      0x00, 0x00\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'tkhd', content)\n  }\n  static edts (data) {\n    let buffer = new Buffer()\n    let duration = data.duration\n    let mediaTime = data.mediaTime\n    buffer.write(Fmp4.size(36), Fmp4.type('edts'))\n    // elst\n    buffer.write(Fmp4.size(28), Fmp4.type('elst'))\n    buffer.write(new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, // entry count\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      (mediaTime >> 24) & 0xff, (mediaTime >> 16) & 0xff, (mediaTime >> 8) & 0xff, mediaTime & 0xff,\n      0x00, 0x00, 0x00, 0x01 // media rate\n    ]))\n    return buffer.buffer\n  }\n  static mdia (data) {\n    let size = 8\n    let mdhd = Fmp4.mdhd(data.timescale, data.duration)\n    let hdlr = Fmp4.hdlr(data.type)\n    let minf = Fmp4.minf(data);\n    [mdhd, hdlr, minf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf)\n  }\n  static mdhd (timescale = 1000, duration) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      (timescale >>> 24) & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n      (duration >>> 24) & 0xFF, // duration: 4 bytes  track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n    ])\n    return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content)\n  }\n  static hdlr (type) {\n    let value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]\n    if (type === 'audio') {\n      value.splice(8, 4, ...[0x73, 0x6f, 0x75, 0x6e])\n      value.splice(24, 13, ...[0x53, 0x6f, 0x75, 0x6e,\n        0x64, 0x48, 0x61, 0x6e,\n        0x64, 0x6c, 0x65, 0x72, 0x00])\n    }\n    return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value))\n  }\n  static minf (data) {\n    let size = 8\n    let vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd()\n    let dinf = Fmp4.dinf()\n    let stbl = Fmp4.stbl(data);\n    [vmhd, dinf, stbl].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl)\n  }\n  static vmhd () {\n    return Fmp4.initBox(20, 'vmhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]))\n  }\n  static smhd () {\n    return Fmp4.initBox(16, 'smhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]))\n  }\n  static dinf () {\n    let buffer = new Buffer()\n    let dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]\n    buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref))\n    return buffer.buffer\n  }\n  static stbl (data) {\n    let size = 8\n    let stsd = Fmp4.stsd(data)\n    let stts = Fmp4.stts()\n    let stsc = Fmp4.stsc()\n    let stsz = Fmp4.stsz()\n    let stco = Fmp4.stco();\n    [stsd, stts, stsc, stsz, stco].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco)\n  }\n  static stsd (data) {\n    let content\n    if (data.type === 'audio') {\n      // if (!data.isAAC && data.codec === 'mp4') {\n      //     content = FMP4.mp3(data);\n      // } else {\n      //\n      // }\n      // 支持mp4a\n      content = Fmp4.mp4a(data)\n    } else {\n      content = Fmp4.avc1(data)\n    }\n    return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content)\n  }\n  static mp4a (data) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (data.samplerate >> 8) & 0xff,\n      data.samplerate & 0xff, //\n      0x00, 0x00\n    ])\n    let esds = Fmp4.esds(data.config)\n    return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds)\n  }\n  static esds (config = [43, 146, 8, 0]) {\n    const configlen = config.length\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n    ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]))\n    buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content)\n    return buffer.buffer\n  }\n  static avc1 (data) {\n    let buffer = new Buffer()\n    let size = 40// 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n    // let sps = data.sps\n    // let pps = data.pps\n    let width = data.width\n    let height = data.height\n    let hSpacing = data.parRatio.height\n    let vSpacing = data.parRatio.width\n    // let avccBuffer = new Buffer()\n    // avccBuffer.write(new Uint8Array([\n    //   0x01, // version\n    //   sps[1], // profile\n    //   sps[2], // profile compatible\n    //   sps[3], // level\n    //   0xfc | 3,\n    //   0xE0 | 1 // 目前只处理一个sps\n    // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n    // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n    let avcc = data.avcc\n    let avc1 = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1\n    let btrt = new Uint8Array([\n      0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n    ])\n    let pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n\n    buffer.write(\n      Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1,\n      Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc,\n      Fmp4.size(20), Fmp4.type('btrt'), btrt,\n      Fmp4.size(16), Fmp4.type('pasp'), pasp\n    )\n    return buffer.buffer\n  }\n  static stts () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stts', content)\n  }\n  static stsc () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stsc', content)\n  }\n  static stco () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stco', content)\n  }\n  static stsz () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n    ])\n    return Fmp4.initBox(20, 'stsz', content)\n  }\n  static mvex (duration, timescale = 1000, trackID) {\n    let buffer = new Buffer()\n    let mehd = Buffer.writeUint32(duration)\n    buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID))\n    return buffer.buffer\n  }\n  static trex (id) {\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'trex', content)\n  }\n  static moof (data) {\n    let size = 8\n    let mfhd = Fmp4.mfhd()\n    let traf = Fmp4.traf(data);\n    [mfhd, traf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moof', mfhd, traf)\n  }\n  static mfhd () {\n    let content = Buffer.writeUint32(Fmp4.sequence)\n    Fmp4.sequence += 1\n    return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content)\n  }\n  static traf (data) {\n    let size = 8\n    let tfhd = Fmp4.tfhd(data.id)\n    let tfdt = Fmp4.tfdt(data.time)\n    let sdtp = Fmp4.sdtp(data)\n    let trun = Fmp4.trun(data, sdtp.byteLength);\n\n    [tfhd, tfdt, trun, sdtp].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp)\n  }\n  static tfhd (id) {\n    let content = Buffer.writeUint32(id)\n    return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content)\n  }\n  static tfdt (time) {\n    // let upper = Math.floor(time / (UINT32_MAX + 1)),\n    //     lower = Math.floor(time % (UINT32_MAX + 1));\n    return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time))\n  }\n  static trun (data, sdtpLength) {\n    // let id = data.id;\n    // let ceil = id === 1 ? 16 : 12;\n    let buffer = new Buffer()\n    let sampleCount = Buffer.writeUint32(data.samples.length)\n    // mdat-header 8\n    // moof-header 8\n    // mfhd 16\n    // traf-header 8\n    // thhd 16\n    // tfdt 20\n    // trun-header 12\n    // sampleCount 4\n    // data-offset 4\n    // samples.length\n    let offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength)\n    buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset)\n\n    // let size = buffer.buffer.byteLength\n    // let writeOffset = 0\n    // data.samples.forEach(() => {\n    //   size += 16\n    // })\n    //\n    // let trunBox = new Uint8Array(size)\n\n    // trunBox.set(buffer.buffer, 0)\n\n    data.samples.forEach((item) => {\n      const flags = item.flags\n      // console.log(item.type, item.dts, item.duration)\n\n      buffer.write(new Uint8Array([\n        (item.duration >>> 24) & 0xFF, // sample_duration\n        (item.duration >>> 16) & 0xFF,\n        (item.duration >>> 8) & 0xFF,\n        (item.duration) & 0xFF,\n        (item.size >>> 24) & 0xFF, // sample_size\n        (item.size >>> 16) & 0xFF,\n        (item.size >>> 8) & 0xFF,\n        (item.size) & 0xFF,\n        (flags.isLeading << 2) | flags.dependsOn, // sample_flags\n        (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | flags.isNonSync,\n        0x00, 0x00, // sample_degradation_priority\n        (item.cts >>> 24) & 0xFF, // sample_composition_time_offset\n        (item.cts >>> 16) & 0xFF,\n        (item.cts >>> 8) & 0xFF,\n        (item.cts) & 0xFF\n      ]))\n      // writeOffset += 16\n      // buffer.write(Buffer.writeUint32(0));\n    })\n    return buffer.buffer\n  }\n  static sdtp (data) {\n    let buffer = new Buffer()\n    buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0))\n    data.samples.forEach(item => {\n      const flags = item.flags\n      const num = (flags.isLeading << 6) | // is_leading: 2 (bit)\n        (flags.dependsOn << 4) | // sample_depends_on\n        (flags.isDependedOn << 2) | // sample_is_depended_on\n        (flags.hasRedundancy)// sample_has_redundancy\n\n      buffer.write(new Uint8Array([num]))\n    })\n    return buffer.buffer\n  }\n  static mdat (data) {\n    let buffer = new Buffer()\n    let size = 8\n    data.samples.forEach(item => {\n      size += item.size\n    })\n    buffer.write(Fmp4.size(size), Fmp4.type('mdat'))\n    let mdatBox = new Uint8Array(size)\n    let offset = 0\n    mdatBox.set(buffer.buffer, offset)\n    offset += 8\n    data.samples.forEach(item => {\n      item.buffer.forEach((unit) => {\n        mdatBox.set(unit, offset)\n        offset += unit.byteLength\n        // buffer.write(unit.data);\n      })\n    })\n    return mdatBox\n  }\n}\nFmp4.type = (name) => {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)])\n}\nFmp4.sequence = 1\n\nexport default Fmp4\n","import {\n  EVENTS,\n  sniffer,\n  MediaSegmentList,\n  Buffer\n} from 'xgplayer-utils';\nimport Fmp4 from './fmp4'\n\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS\n\nexport default class Mp4Remuxer {\n  constructor (curTime = 0) {\n    this._dtsBase = curTime * 1000\n    this._isDtsBaseInited = false\n    this._videoSegmentList = new MediaSegmentList('video')\n    this._audioSegmentList = new MediaSegmentList('audio')\n    const {browser} = sniffer\n    this._fillSilenceFrame = browser === 'ie'\n\n    this.isFirstVideo = true\n    this.isFirstAudio = true\n\n    this.videoAllDuration = 0\n    this.audioAllDuration = 0\n  }\n\n  init () {\n    this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this))\n    this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this))\n    this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this))\n  }\n\n  destroy () {\n    this._dtsBase = -1\n    this._dtsBaseInited = false\n    this._videoSegmentList.clear()\n    this._audioSegmentList.clear()\n    this._videoSegmentList = null\n    this._audioSegmentList = null\n  }\n\n  remux () {\n    const { audioTrack, videoTrack } = this._context.getInstance('TRACKS')\n    !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack)\n\n    this._remuxVideo(videoTrack)\n    this._remuxAudio(audioTrack)\n  }\n\n  resetDtsBase () {\n    // for hls 中途切换 meta后seek\n    this._dtsBase = 0\n    this._dtsBaseInited = false\n  }\n\n  seek () {\n    this._videoSegmentList.clear()\n    this._audioSegmentList.clear()\n  }\n\n  onMetaDataReady (type) {\n    let track\n\n    if (type === 'audio') {\n      const { audioTrack } = this._context.getInstance('TRACKS')\n      track = audioTrack;\n    } else {\n      const { videoTrack } = this._context.getInstance('TRACKS')\n      track = videoTrack;\n    }\n\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.mimetype = track.meta.codec;\n    source.init = this.remuxInitSegment(type, track.meta);\n    // source.inited = false;\n\n    // this.resetDtsBase()\n    this.emit(REMUX_EVENTS.INIT_SEGMENT, type)\n  }\n\n  remuxInitSegment (type, meta) {\n    let initSegment = new Buffer()\n    let ftyp = Fmp4.ftyp()\n    let moov = Fmp4.moov({ type, meta: meta })\n\n    initSegment.write(ftyp, moov)\n    return initSegment;\n  }\n\n  calcDtsBase (audioTrack, videoTrack) {\n    if (!audioTrack && videoTrack.samples.length) {\n      return videoTrack.samples[0].dts\n    }\n\n    if (!audioTrack.samples.length && !videoTrack.samples.length) {\n      return;\n    }\n\n    let audioBase = Infinity\n    let videoBase = Infinity\n\n    if (audioTrack.samples && audioTrack.samples.length) {\n      audioBase = audioTrack.samples[0].dts\n    }\n    if (videoTrack.samples && videoTrack.samples.length) {\n      videoBase = videoTrack.samples[0].dts\n    }\n\n    this._dtsBase = Math.min(audioBase, videoBase) - this._dtsBase; // 兼容播放器切换清晰度\n    this._isDtsBaseInited = true\n  }\n\n  _remuxVideo (videoTrack) {\n    const track = videoTrack || {}\n\n    if (!videoTrack.samples || !videoTrack.samples.length) {\n      return\n    }\n\n    let {samples} = track\n    let firstDts = -1\n\n    let initSegment = null\n    const mp4Samples = []\n    const mdatBox = {\n      samples: []\n    }\n\n    let maxLoop = 10000\n    while (samples.length && maxLoop-- > 0) {\n      // console.log('mark2')\n      const avcSample = samples.shift()\n\n      const { isKeyframe, options } = avcSample\n      if (!this.isFirstVideo && options && options.meta) {\n        initSegment = this.remuxInitSegment('video', options.meta)\n        options.meta = null\n        samples.unshift(avcSample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = avcSample.dts - this._dtsBase\n\n      if (firstDts === -1) {\n        firstDts = dts\n      }\n\n      let cts\n      let pts\n      if (avcSample.pts !== undefined) {\n        pts = avcSample.pts - this._dtsBase\n        cts = pts - dts\n      }\n      if (avcSample.cts !== undefined) {\n        pts = avcSample.cts + dts\n        cts = avcSample.cts\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n      mdatBox.samples.push(mdatSample)\n      mdatSample.buffer.push(avcSample.data)\n      mdatSample.size += avcSample.data.byteLength\n\n      let sampleDuration = 0\n      if (avcSample.duration) {\n        sampleDuration = avcSample.duration;\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // lastest sample, use second last duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference duration\n          sampleDuration = this.videoMeta.refSampleDuration\n        }\n      }\n      this.videoAllDuration += sampleDuration\n      // console.log(`video dts ${dts}`, `pts ${pts}`, isKeyframe, `duration ${sampleDuration}`)\n      if (sampleDuration >= 0) {\n        mp4Samples.push({\n          dts,\n          cts,\n          pts,\n          data: avcSample.data,\n          size: avcSample.data.byteLength,\n          isKeyframe,\n          duration: sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: isKeyframe ? 2 : 1,\n            isDependedOn: isKeyframe ? 1 : 0,\n            hasRedundancy: 0,\n            isNonSync: isKeyframe ? 0 : 1\n          },\n          originDts: dts,\n          type: 'video'\n        })\n      }\n\n      if (isKeyframe) {\n        this.emit(REMUX_EVENTS.RANDOM_ACCESS_POINT, pts)\n      }\n    }\n\n    let moofMdat = new Buffer()\n    if (mp4Samples.length) {\n      const moof = Fmp4.moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = Fmp4.mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('video', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('video', initSegment)\n\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxVideo(track)\n      }\n    }\n\n    this.isFirstVideo = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video')\n\n    track.samples = []\n    track.length = 0\n  }\n\n  _remuxAudio (track) {\n    const {samples} = (track || {})\n    let firstDts = -1\n    let mp4Samples = []\n\n    let initSegment = null\n    const mdatBox = {\n      samples: []\n    }\n    if (!samples || !samples.length) {\n      return\n    }\n\n    let maxLoop = 10000\n    let isFirstDtsInited = false\n    while (samples.length && maxLoop-- > 0) {\n      // console.log('mark3')\n      let sample = samples.shift()\n      const { data, options } = sample\n      if (!this.isFirstAudio && options && options.meta) {\n        initSegment = this.remuxInitSegment('audio', options.meta)\n        options.meta = null;\n        samples.unshift(sample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = sample.dts - this._dtsBase\n      const originDts = dts\n      if (!isFirstDtsInited) {\n        firstDts = dts\n        isFirstDtsInited = true\n      }\n\n      let sampleDuration = 0\n      if (sample.duration) {\n        sampleDuration = sample.duration;\n      } else if (this.audioMeta.refSampleDurationFixed) {\n        sampleDuration = this.audioMeta.refSampleDurationFixed\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase;\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // use second last sample duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference sample duration\n          sampleDuration = this.audioMeta.refSampleDuration\n        }\n      }\n\n      // console.log(`audio dts ${dts}`, `pts ${dts}`, `duration ${sampleDuration}`)\n      this.audioAllDuration += sampleDuration\n      const mp4Sample = {\n        dts,\n        pts: dts,\n        cts: 0,\n        size: data.byteLength,\n        duration: sample.duration ? sample.duration : sampleDuration,\n        flags: {\n          isLeading: 0,\n          dependsOn: 2,\n          isDependedOn: 1,\n          hasRedundancy: 0,\n          isNonSync: 0\n        },\n        isKeyframe: true,\n        originDts,\n        type: 'audio'\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n      mdatSample.buffer.push(data)\n      mdatSample.size += data.byteLength\n\n      mdatBox.samples.push(mdatSample)\n      if (sampleDuration >= 0) {\n        mp4Samples.push(mp4Sample)\n      }\n    }\n\n    const moofMdat = new Buffer()\n\n    if (mp4Samples.length) {\n      const moof = Fmp4.moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = Fmp4.mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('audio', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('audio', initSegment)\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxAudio(track)\n      }\n    }\n\n    this.isFirstAudio = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat)\n\n    track.samples = []\n    track.length = 0\n  }\n\n  writeToSource (type, buffer) {\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.data.push(buffer)\n  }\n\n  initSilentAudio (dts, duration) {\n    const unit = Mp4Remuxer.getSilentFrame(this._audioMeta.channelCount)\n    return {\n      dts,\n      pts: dts,\n      cts: 0,\n      duration,\n      unit,\n      size: unit.byteLength,\n      originDts: dts,\n      type: 'video'\n    }\n  }\n\n  get videoMeta () {\n    return this._context.getInstance('TRACKS').videoTrack.meta\n  }\n  get audioMeta () {\n    return this._context.getInstance('TRACKS').audioTrack.meta\n  }\n\n  static getSilentFrame (channelCount) {\n    if (channelCount === 1) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n    } else if (channelCount === 2) {\n      return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80])\n    } else if (channelCount === 3) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e])\n    } else if (channelCount === 4) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38])\n    } else if (channelCount === 5) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38])\n    } else if (channelCount === 6) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0])\n    }\n    return null\n  }\n\n  destroy () {\n    this._player = null;\n  }\n}\n","/**\n * Reference: https://tools.ietf.org/html/rfc8216#section-4.3\n */\nvar M3U8Parser = function () {\n  function M3U8Parser() {\n    babelHelpers.classCallCheck(this, M3U8Parser);\n  }\n\n  babelHelpers.createClass(M3U8Parser, null, [{\n    key: 'parse',\n    value: function parse(text) {\n      var baseurl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      var ret = {\n        duration: 0\n      };\n      if (!text || !text.split) {\n        return;\n      }\n      var refs = text.split(/\\r|\\n/);\n      refs = refs.filter(function (ref) {\n        return ref;\n      });\n      var ref = refs.shift();\n      if (!ref.match('#EXTM3U')) {\n        throw new Error('Invalid m3u8 file: not \"#EXTM3U\"');\n        return null;\n      }\n      ref = refs.shift();\n      var nextDiscontinue = false;\n      while (ref) {\n        var refm = ref.match(/#(.[A-Z|-]*):(.*)/);\n        var refd = ref.match(/#(.[A-Z|-]*)/);\n        if (refd && refm && refm.length > 2) {\n          switch (refm[1]) {\n            case 'EXT-X-VERSION':\n              ret.version = parseInt(refm[2]);\n              break;\n            case 'EXT-X-MEDIA-SEQUENCE':\n              ret.sequence = parseInt(refm[2]);\n              break;\n            case 'EXT-X-TARGETDURATION':\n              ret.targetduration = parseFloat(refm[2]);\n              break;\n            case 'EXTINF':\n              M3U8Parser.parseFrag(refm, refs, ret, baseurl, nextDiscontinue);\n              nextDiscontinue = false;\n              break;\n            case 'EXT-X-KEY':\n              M3U8Parser.parseDecrypt(refm[2], ret);\n              break;\n            default:\n              break;\n          }\n        }if (refd && refd.length > 1) {\n          switch (refd[1]) {\n            case 'EXT-X-DISCONTINUITY':\n              nextDiscontinue = true;\n              break;\n            default:\n              break;\n          }\n        }\n        ref = refs.shift();\n      }\n      return ret;\n    }\n  }, {\n    key: 'parseFrag',\n    value: function parseFrag(refm, refs, ret, baseurl, discontinue) {\n      if (!ret.frags) {\n        ret.frags = [];\n      }\n\n      var freg = {\n        start: ret.duration,\n        duration: parseFloat(refm[2]) * 1000\n      };\n\n      ret.duration += freg.duration;\n      var nextline = refs.shift();\n      if (nextline.match(/#(.*):(.*)/)) {\n        nextline = refs.shift();\n      }\n      if (nextline.length > 0 && nextline.charAt(0) === '/' && baseurl.match(/.*\\/\\/.*\\.\\w+/g)) {\n        baseurl = baseurl.match(/.*\\/\\/.*\\.\\w+/g)[0];\n      }\n      if (nextline.match(/.*:\\/\\/.*/)) {\n        freg.url = nextline;\n      } else {\n        freg.url = baseurl + nextline;\n      }\n      freg.discontinue = discontinue;\n      ret.frags.push(freg);\n    }\n  }, {\n    key: 'parseURL',\n    value: function parseURL(url) {\n      var baseurl = '';\n      var urls = url.match(/(.*\\/).*\\.m3u8/);\n      if (urls && urls.length > 0) {\n        for (var i = 0; i < urls.length; i++) {\n          if (urls[i].match(/.*\\/$/g) && urls[i].length > baseurl.length) {\n            baseurl = urls[i];\n          }\n        }\n      }\n      return baseurl;\n    }\n  }, {\n    key: 'parseDecrypt',\n    value: function parseDecrypt(refm, ret) {\n      ret.encrypt = {};\n      var refs = refm.split(',');\n      for (var i in refs) {\n        var cmd = refs[i];\n        if (cmd.match(/METHOD=(.*)/)) {\n          ret.encrypt.method = cmd.match(/METHOD=(.*)/)[1];\n        }\n        if (cmd.match(/URI=\"(.*)\"/)) {\n          ret.encrypt.uri = cmd.match(/URI=\"(.*)\"/)[1];\n        }\n\n        if (cmd.match(/IV=0x(.*)/)) {\n          var iv = cmd.match(/IV=0x(.*)/)[1];\n          var length = Math.ceil(iv.length / 2);\n          ret.encrypt.ivb = new Uint8Array(length);\n          for (var _i = length - 1; _i >= 0; _i--) {\n            var im = parseInt(iv.substr(_i * 2, 2), 16);\n            ret.encrypt.ivb[_i] = im;\n          }\n          ret.encrypt.iv = iv;\n        }\n      };\n    }\n  }]);\n  return M3U8Parser;\n}();\n\nexport default M3U8Parser;","import { Nalunit } from 'xgplayer-codec';\nimport { AudioTrack, VideoTrack } from 'xgplayer-buffer';\nimport { AudioTrackMeta, VideoTrackMeta, AudioTrackSample, VideoTrackSample, EVENTS, Stream } from 'xgplayer-utils';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar StreamType = {\n  0x01: ['video', 'MPEG-1'],\n  0x02: ['video', 'MPEG-2'],\n  0x1b: ['video', 'AVC.H264'],\n  0xea: ['video', 'VC-1'],\n  0x03: ['audio', 'MPEG-1'],\n  0x04: ['audio', 'MPEG-2'],\n  0x0f: ['audio', 'MPEG-2.AAC'],\n  0x11: ['audio', 'MPEG-4.AAC'],\n  0x80: ['audio', 'LPCM'],\n  0x81: ['audio', 'AC3'],\n  0x06: ['audio', 'AC3'],\n  0x82: ['audio', 'DTS'],\n  0x83: ['audio', 'Dolby TrueHD'],\n  0x84: ['audio', 'AC3-Plus'],\n  0x85: ['audio', 'DTS-HD'],\n  0x86: ['audio', 'DTS-MA'],\n  0xa1: ['audio', 'AC3-Plus-SEC'],\n  0xa2: ['audio', 'DTS-HD-SEC']\n};\n\nvar TsDemuxer = function () {\n  function TsDemuxer(configs) {\n    babelHelpers.classCallCheck(this, TsDemuxer);\n\n    this.configs = Object.assign({}, configs);\n    this.demuxing = false;\n    this.pat = [];\n    this.pmt = [];\n    this._hasVideoMeta = false;\n    this._hasAudioMeta = false;\n  }\n\n  babelHelpers.createClass(TsDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.demux.bind(this));\n    }\n  }, {\n    key: 'demux',\n    value: function demux(frag) {\n      if (this.demuxing) {\n        return;\n      }\n\n      var buffer = this.inputBuffer;\n      var frags = { pat: [], pmt: [] };\n      var peses = {};\n\n      // Read TS segment\n      while (buffer.length >= 188) {\n        if (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('Untrust sync code: ' + buffer.array[0][buffer.offset] + ', try to recover;'), false);\n        }\n        while (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          buffer.shift(1);\n        }\n        var buf = buffer.shift(188);\n        // console.log(buf);\n        var tsStream = new Stream(buf.buffer);\n        var ts = {};\n        TsDemuxer.read(tsStream, ts, frags);\n        if (ts.pes) {\n          if (!peses[ts.header.pid]) {\n            peses[ts.header.pid] = [];\n          }\n          peses[ts.header.pid].push(ts.pes);\n          ts.pes.ES.buffer = [ts.pes.ES.buffer];\n        } else if (peses[ts.header.pid]) {\n          peses[ts.header.pid][peses[ts.header.pid].length - 1].ES.buffer.push(ts.payload.stream);\n        }\n      }\n\n      var AudioOptions = frag;\n      var VideoOptions = frag;\n\n      // Get Frames data\n      for (var i = 0; i < Object.keys(peses).length; i++) {\n        var epeses = peses[Object.keys(peses)[i]];\n        for (var j = 0; j < epeses.length; j++) {\n          epeses[j].id = Object.keys(peses)[i];\n          epeses[j].ES.buffer = TsDemuxer.Merge(epeses[j].ES.buffer);\n          if (epeses[j].type === 'audio') {\n            this.pushAudioSample(epeses[j], AudioOptions);\n            AudioOptions = {};\n          } else if (epeses[j].type === 'video') {\n            this.pushVideoSample(epeses[j], VideoOptions);\n            VideoOptions = {};\n          }\n        }\n      }\n\n      if (this._hasAudioMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'audio');\n      }\n      if (this._hasVideoMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'video');\n      }\n    }\n  }, {\n    key: 'pushAudioSample',\n    value: function pushAudioSample(pes, options) {\n      var track = void 0;\n      if (!this._tracks.audioTrack) {\n        this._tracks.audioTrack = new AudioTrack();\n        track = this._tracks.audioTrack;\n      } else {\n        track = this._tracks.audioTrack;\n      }\n      var meta = new AudioTrackMeta({\n        audioSampleRate: pes.ES.frequence,\n        sampleRate: pes.ES.frequence,\n        channelCount: pes.ES.channel,\n        codec: 'mp4a.40.' + pes.ES.audioObjectType,\n        config: pes.ES.audioConfig,\n        id: 2,\n        sampleRateIndex: pes.ES.frequencyIndex\n      });\n      meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n\n      var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n\n      if (!this._hasAudioMeta || !metaEqual) {\n        track.meta = meta;\n        this._hasAudioMeta = true;\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n      }\n\n      var data = new Uint8Array(pes.ES.buffer.buffer.slice(pes.ES.buffer.position, pes.ES.buffer.length));\n      var dts = parseInt(pes.pts / 90);\n      var pts = parseInt(pes.pts / 90);\n      var sample = new AudioTrackSample({ dts: dts, pts: pts, data: data, options: options });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'pushVideoSample',\n    value: function pushVideoSample(pes, options) {\n      var nals = Nalunit.getNalunits(pes.ES.buffer);\n      var track = void 0;\n      var meta = new VideoTrackMeta();\n      if (!this._tracks.videoTrack) {\n        this._tracks.videoTrack = new VideoTrack();\n        track = this._tracks.videoTrack;\n      } else {\n        track = this._tracks.videoTrack;\n      }\n      var sampleLength = 0;\n      var sps = false;\n      var pps = false;\n      for (var i = 0; i < nals.length; i++) {\n        var nal = nals[i];\n        if (nal.sps) {\n          sps = nal;\n          track.sps = nal.body;\n          meta.chromaFormat = sps.sps.chroma_format;\n          meta.codec = 'avc1.';\n          for (var j = 1; j < 4; j++) {\n            var h = sps.body[j].toString(16);\n            if (h.length < 2) {\n              h = '0' + h;\n            }\n            meta.codec += h;\n          }\n          meta.codecHeight = sps.sps.codec_size.height;\n          meta.codecWidth = sps.sps.codec_size.width;\n          meta.frameRate = sps.sps.frame_rate;\n          meta.id = 1;\n          meta.level = sps.sps.level_string;\n          meta.presentHeight = sps.sps.present_size.height;\n          meta.presentWidth = sps.sps.present_size.width;\n          meta.profile = sps.sps.profile_string;\n          meta.refSampleDuration = Math.floor(meta.timescale * (sps.sps.frame_rate.fps_den / sps.sps.frame_rate.fps_num));\n          meta.sarRatio = sps.sps.sar_ratio ? sps.sps.sar_ratio : sps.sps.par_ratio;\n        } else if (nal.pps) {\n          track.pps = nal.body;\n          pps = nal;\n        } else if (nal.type < 9) {\n          sampleLength += 4 + nal.body.byteLength;\n        }\n      }\n\n      if (sps && pps) {\n        meta.avcc = Nalunit.getAvcc(sps.body, pps.body);\n        var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n        if (!this._hasVideoMeta || !metaEqual) {\n          if (options) {\n            options.meta = Object.assign({}, meta);\n          } else {\n            options = {\n              meta: Object.assign({}, meta)\n            };\n          }\n          track.meta = meta;\n          this._hasVideoMeta = true;\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n        }\n      }\n\n      var data = new Uint8Array(sampleLength);\n      var offset = 0;\n      var isKeyframe = false;\n      for (var _i = 0; _i < nals.length; _i++) {\n        var _nal = nals[_i];\n        if (_nal.type && _nal.type >= 9) {\n          continue;\n        }\n        var length = _nal.body.byteLength;\n        if (_nal.idr) {\n          isKeyframe = true;\n        }\n        if (!_nal.pps && !_nal.sps) {\n          data.set(new Uint8Array([length >>> 24 & 0xff, length >>> 16 & 0xff, length >>> 8 & 0xff, length & 0xff]), offset);\n          offset += 4;\n          data.set(_nal.body, offset);\n          offset += length;\n        }\n      }\n      var sample = new VideoTrackSample({\n        dts: parseInt(pes.dts / 90),\n        pts: parseInt(pes.pts / 90),\n        cts: (pes.pts - pes.dts) / 90,\n        originDts: pes.dts,\n        isKeyframe: isKeyframe,\n        data: data,\n        options: options\n      });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'destory',\n    value: function destory() {\n      this.off(DEMUX_EVENTS.DEMUX_START, this.demux);\n      this.configs = {};\n      this.demuxing = false;\n      this.pat = [];\n      this.pmt = [];\n      this._hasVideoMeta = false;\n      this._hasAudioMeta = false;\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get() {\n      return this._context.getInstance(this.configs.inputbuffer);\n    }\n  }, {\n    key: '_tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }], [{\n    key: 'compaireArray',\n    value: function compaireArray(a, b, type) {\n      var al = 0;\n      var bl = 0;\n      if (type === 'Uint8Array') {\n        al = a.byteLength;\n        bl = b.byteLength;\n      } else if (type === 'Array') {\n        al = a.length;\n        bl = b.length;\n      }\n      if (al !== bl) {\n        return false;\n      }\n\n      for (var i = 0; i < al; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compaireMeta',\n    value: function compaireMeta(a, b, ignoreDuration) {\n      if (!a || !b) {\n        return false;\n      }\n\n      for (var i = 0, k = Object.keys(a).length; i < k; i++) {\n        var itema = a[Object.keys(a)[i]];\n        var itemb = b[Object.keys(a)[i]];\n        if ((typeof itema === 'undefined' ? 'undefined' : babelHelpers.typeof(itema)) !== 'object') {\n          if (ignoreDuration && Object.keys(a)[i] !== 'duration' && Object.keys(a)[i] !== 'refSampleDuration' && Object.keys(a)[i] !== 'refSampleDurationFixed' && itema !== itemb) {\n            return false;\n          }\n        } else if (itema.byteLength !== undefined) {\n          if (itemb.byteLength === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Uint8Array')) {\n            return false;\n          }\n        } else if (itema.length !== undefined) {\n          if (itemb.length === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Array')) {\n            return false;\n          }\n        } else {\n          if (!TsDemuxer.compaireMeta(itema, itemb)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'Merge',\n    value: function Merge(buffers) {\n      var data = void 0;\n      var length = 0;\n      var offset = 0;\n      for (var i = 0; i < buffers.length; i++) {\n        length += buffers[i].length - buffers[i].position;\n      }\n\n      data = new Uint8Array(length);\n      for (var _i2 = 0; _i2 < buffers.length; _i2++) {\n        var buffer = buffers[_i2];\n        data.set(new Uint8Array(buffer.buffer, buffer.position), offset);\n        offset += buffer.length - buffer.position;\n      }\n      return new Stream(data.buffer);\n    }\n  }, {\n    key: 'read',\n    value: function read(stream, ts, frags) {\n      TsDemuxer.readHeader(stream, ts);\n      TsDemuxer.readPayload(stream, ts, frags);\n      if (ts.header.packet === 'MEDIA' && ts.header.payload === 1 && !ts.unknownPIDs) {\n        ts.pes = TsDemuxer.PES(ts);\n      }\n    }\n  }, {\n    key: 'readPayload',\n    value: function readPayload(stream, ts, frags) {\n      var header = ts.header;\n      var pid = header.pid;\n      switch (pid) {\n        case 0:\n          TsDemuxer.PAT(stream, ts, frags);\n          break;\n        case 1:\n          TsDemuxer.CAT(stream, ts, frags);\n          break;\n        case 2:\n          TsDemuxer.TSDT(stream, ts, frags);\n          break;\n        case 0x1fff:\n          break;\n        default:\n          // TODO: some的写法不太好，得改\n          if (frags.pat.some(function (item) {\n            return item.pid === pid;\n          })) {\n            TsDemuxer.PMT(stream, ts, frags);\n          } else {\n            var sts = frags.pmt ? frags.pmt.filter(function (item) {\n              return item.pid === pid;\n            }) : [];\n            if (sts.length > 0) {\n              TsDemuxer.Media(stream, ts, StreamType[sts[0].streamType][0]);\n            } else {\n              ts.unknownPIDs = true;\n            };\n          }\n      }\n    }\n  }, {\n    key: 'readHeader',\n    value: function readHeader(stream, ts) {\n      var header = {};\n      header.sync = stream.readUint8();\n      var next = stream.readUint16();\n      header.error = next >>> 15;\n      header.payload = next >>> 14 & 1;\n      header.priority = next >>> 13 & 1;\n      header.pid = next & 0x1fff;\n\n      next = stream.readUint8();\n\n      header.scrambling = next >> 6 & 0x3; // 是否加密，00表示不加密\n\n      /**\n       * 00 ISO/IEC未来使用保留\n       * 01 没有调整字段，仅含有184B有效净荷\n       * 02 没有有效净荷，仅含有183B调整字段\n       * 03 0~182B调整字段后为有效净荷\n       */\n      header.adaptation = next >> 4 & 0x3;\n      header.continuity = next & 15;\n      header.packet = header.pid === 0 ? 'PAT' : 'MEDIA';\n      ts.header = header;\n    }\n  }, {\n    key: 'PAT',\n    value: function PAT(stream, ts, frags) {\n      var ret = {};\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tabelID = next;\n      next = stream.readUint16();\n      ret.error = next >>> 7;\n      ret.zero = next >>> 6 & 1;\n      ret.sectionLength = next & 0xfff;\n      ret.streamID = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (ret.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        var programNumber = stream.readUint16();\n        var pid = stream.readUint16() & 0x1fff;\n        list.push({\n          program: programNumber,\n          pid: pid,\n          type: programNumber === 0 ? 'network' : 'mapPID'\n        });\n      }\n      if (list.length > 0) {\n        frags.pat = frags.pat.concat(list);\n      }\n      ret.list = list;\n      ret.program = stream.readUint16();\n      ret.pid = stream.readUint16() & 0x1fff;\n      ts.payload = ret;\n      // TODO CRC\n    }\n  }, {\n    key: 'PMT',\n    value: function PMT(stream, ts, frags) {\n      var ret = {};\n      var header = ts.header;\n      header.packet = 'PMT';\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tableID = next;\n      next = stream.readUint16();\n      ret.sectionLength = next & 0xfff;\n      ret.program = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.order = stream.readUint8();\n      ret.lastOrder = stream.readUint8();\n      ret.PCR_PID = stream.readUint16() & 0x1fff;\n      ret.programLength = stream.readUint16() & 0xfff;\n      var N = (ret.sectionLength - 13) / 5;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({\n          streamType: stream.readUint8(),\n          pid: stream.readUint16() & 0x1fff, // 0x07e5 视频，0x07e6\n          es: stream.readUint16() & 0xfff\n        });\n      }\n      ret.list = list;\n      if (!this.pmt) {\n        this.pmt = [];\n      }\n      frags.pmt = this.pmt.concat(list.map(function (item) {\n        return {\n          pid: item.pid,\n          es: item.es,\n          streamType: item.streamType,\n          program: ret.program\n        };\n      }));\n      ts.payload = ret;\n    }\n  }, {\n    key: 'Media',\n    value: function Media(stream, ts, type) {\n      var header = ts.header;\n      var payload = {};\n      header.type = type;\n      if (header.adaptation === 0x03) {\n        payload.adaptationLength = stream.readUint8();\n        if (payload.adaptationLength > 0) {\n          var next = stream.readUint8();\n          payload.discontinue = next >>> 7;\n          payload.access = next >>> 6 & 0x01;\n          payload.priority = next >>> 5 & 0x01;\n          payload.PCR = next >>> 4 & 0x01;\n          payload.OPCR = next >>> 3 & 0x01;\n          payload.splicePoint = next >>> 2 & 0x01;\n          payload.transportPrivate = next >>> 1 & 0x01;\n          payload.adaptationField = next & 0x01;\n          var _start = stream.position;\n          if (payload.PCR === 1) {\n            payload.programClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.programClockBase |= next >>> 15;\n            payload.programClockExtension = next & 0x1ff;\n          }\n          if (payload.OPCR === 1) {\n            payload.originProgramClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.originProgramClockBase += next >>> 15;\n            payload.originProgramClockExtension = next & 0x1ff;\n          }\n          if (payload.splicePoint === 1) {\n            payload.spliceCountdown = stream.readUint8();\n          }\n          if (payload.transportPrivate === 1) {\n            var length = stream.readUint8();\n            var transportPrivateData = [];\n            for (var i = 0; i < length; i++) {\n              transportPrivateData.push(stream.readUint8());\n            }\n          }\n          if (payload.adaptationField === 1) {\n            var _length = stream.readUint8();\n            var _next = stream.readUint8();\n            var start = stream.position;\n            var ltw = _next >>> 7;\n            var piecewise = _next >>> 6 & 0x1;\n            var seamless = _next >>> 5 & 0x1;\n            if (ltw === 1) {\n              _next = stream.readUint16();\n              payload.ltwValid = _next >>> 15;\n              payload.ltwOffset = _next & 0xefff;\n            }\n            if (piecewise === 1) {\n              _next = stream.readUint24();\n              payload.piecewiseRate = _next & 0x3fffff;\n            }\n            if (seamless === 1) {\n              _next = stream.readInt8();\n              payload.spliceType = _next >>> 4;\n              payload.dtsNextAU1 = _next >>> 1 & 0x7;\n              payload.marker1 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU2 = _next >>> 1;\n              payload.marker2 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU3 = _next;\n            }\n            stream.skip(_length - 1 - (stream.position - start));\n          }\n          var lastStuffing = payload.adaptationLength - 1 - (stream.position - _start);\n          stream.skip(lastStuffing);\n        }\n      }\n      payload.stream = new Stream(stream.buffer.slice(stream.position));\n      ts.payload = payload;\n    }\n  }, {\n    key: 'PES',\n    value: function PES(ts) {\n      var ret = {};\n      var buffer = ts.payload.stream;\n\n      var next = buffer.readUint24();\n      if (next !== 1) {\n        ret.ES = {};\n        ret.ES.buffer = buffer;\n      } else {\n        var streamID = buffer.readUint8();\n        if (streamID >= 0xe0 && streamID <= 0xef) {\n          ret.type = 'video';\n        }\n        if (streamID >= 0xc0 && streamID <= 0xdf) {\n          ret.type = 'audio';\n        }\n        var packetLength = buffer.readUint16();\n        ret.packetLength = packetLength;\n        if (ret.type === 'video' || ret.type === 'audio') {\n          var _next2 = buffer.readUint8();\n          var first = _next2 >>> 6;\n          if (first !== 0x02) {\n            throw new Error('error when parse pes header');\n          }\n          _next2 = buffer.readUint8();\n          ret.ptsDTSFlag = _next2 >>> 6;\n          ret.escrFlag = _next2 >>> 5 & 0x01;\n          ret.esRateFlag = _next2 >>> 4 & 0x01;\n          ret.dsmFlag = _next2 >>> 3 & 0x01;\n          ret.additionalFlag = _next2 >>> 2 & 0x01;\n          ret.crcFlag = _next2 >>> 1 & 0x01;\n          ret.extensionFlag = _next2 & 0x01;\n          ret.pesHeaderLength = buffer.readUint8();\n          var N1 = ret.pesHeaderLength;\n\n          if (ret.ptsDTSFlag === 2) {\n            var pts = [];\n            _next2 = buffer.readUint8();\n            pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            ret.pts = pts[0] << 30 | pts[1] << 15 | pts[2];\n            N1 -= 5;\n            // 视频如果没有dts用pts\n            if (ret.type === 'video') {\n              ret.dts = ret.pts;\n            }\n          }\n          if (ret.ptsDTSFlag === 3) {\n            var _pts = [];\n            _next2 = buffer.readUint8();\n            _pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            ret.pts = _pts[0] << 30 | _pts[1] << 15 | _pts[2];\n            var dts = [];\n            _next2 = buffer.readUint8();\n            dts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            ret.dts = dts[0] << 30 | dts[1] << 15 | dts[2];\n            N1 -= 10;\n          }\n          if (ret.escrFlag === 1) {\n            var escr = [];\n            var ex = [];\n            _next2 = buffer.readUint8();\n            escr.push(_next2 >>> 3 & 0x07);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            ex.push(_next2 & 0x03);\n            _next2 = buffer.readUint8();\n            ex.push(_next2 >>> 1);\n            ret.escr = (escr[0] << 30 | escr[1] << 28 | escr[2] << 15 | escr[3] << 13 | escr[4]) * 300 + (ex[0] << 7 | ex[1]);\n            N1 -= 6;\n          }\n          if (ret.esRateFlag === 1) {\n            _next2 = buffer.readUint24();\n            ret.esRate = _next2 >>> 1 & 0x3fffff;\n            N1 -= 3;\n          }\n          if (ret.dsmFlag === 1) {\n            throw new Error('not support DSM_trick_mode');\n          }\n          if (ret.additionalFlag === 1) {\n            _next2 = buffer.readUint8();\n            ret.additionalCopyInfo = _next2 & 0x7f;\n            N1 -= 1;\n          }\n          if (ret.crcFlag === 1) {\n            ret.pesCRC = buffer.readUint16();\n            N1 -= 2;\n          }\n          if (ret.extensionFlag === 1) {\n            throw new Error('not support extension');\n          }\n          if (N1 > 0) {\n            buffer.skip(N1);\n          }\n          ret.ES = TsDemuxer.ES(buffer, ret.type);\n        } else {\n          throw new Error('format is not supported');\n        }\n      }\n      return ret;\n    }\n  }, {\n    key: 'ES',\n    value: function ES(buffer, type) {\n      var next = void 0;\n      var ret = {};\n      if (type === 'video') {\n        next = buffer.readUint32();\n        if (next !== 1) {\n          buffer.back(4);\n          next = buffer.readUint24();\n          if (next !== 1) {\n            throw new Error('h264 nal header parse failed');\n          }\n        }\n        buffer.skip(2); // 09 F0\n        // TODO readnalu\n        ret.buffer = buffer;\n      } else if (type === 'audio') {\n        next = buffer.readUint16();\n        // adts的同步字节，12位\n        if (next >>> 4 !== 0xfff) {\n          throw new Error('aac ES parse Error');\n        }\n        var fq = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n        ret.id = (next >>> 3 & 0x01) === 0 ? 'MPEG-4' : 'MPEG-2';\n        ret.layer = next >>> 1 & 0x03;\n        ret.absent = next & 0x01;\n        next = buffer.readUint16();\n        ret.audioObjectType = (next >>> 14 & 0x03) + 1;\n        ret.profile = ret.audioObjectType - 1;\n        ret.frequencyIndex = next >>> 10 & 0x0f;\n        ret.frequence = fq[ret.frequencyIndex];\n        ret.channel = next >>> 6 & 0x07;\n        ret.frameLength = (next & 0x03) << 11 | buffer.readUint16() >>> 5;\n        TsDemuxer.getAudioConfig(ret);\n        buffer.skip(1);\n        ret.buffer = buffer;\n      } else {\n        throw new Error('ES ' + type + ' is not supported');\n      }\n\n      return ret;\n    }\n  }, {\n    key: 'TSDT',\n    value: function TSDT(stream, ts, frags) {\n      // TODO\n      ts.payload = {};\n    }\n  }, {\n    key: 'CAT',\n    value: function CAT(stream, ts, frags) {\n      var ret = {};\n      ret.tableID = stream.readUint8();\n      var next = stream.readUint16();\n      ret.sectionIndicator = next >>> 7;\n      ret.sectionLength = next & 0x0fff;\n      stream.skip(2);\n      next = stream.readUint8();\n      ret.version = next >>> 3;\n      ret.currentNextIndicator = next & 0x01;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (this.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({});\n      }\n      ret.crc32 = stream.readUint32();\n      ts.payload = ret;\n    }\n  }, {\n    key: 'getAudioConfig',\n    value: function getAudioConfig(ret) {\n      var userAgent = navigator.userAgent.toLowerCase();\n      var config = void 0;\n      var extensionSampleIndex = void 0;\n      if (/firefox/i.test(userAgent)) {\n        if (ret.frequencyIndex >= 6) {\n          ret.audioObjectType = 5;\n          config = new Array(4);\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          ret.audioObjectType = 2;\n          config = new Array(2);\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        ret.audioObjectType = 2;\n        config = new Array(2);\n        extensionSampleIndex = ret.frequencyIndex;\n      } else {\n        ret.audioObjectType = 5;\n        config = new Array(4);\n        if (ret.frequencyIndex >= 6) {\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          if (ret.channel === 1) {\n            ret.audioObjectType = 2;\n            config = new Array(2);\n          }\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      }\n\n      config[0] = ret.audioObjectType << 3;\n      config[0] |= (ret.frequencyIndex & 0x0e) >> 1;\n      config[1] = (ret.frequencyIndex & 0x01) << 7;\n      config[1] |= ret.channel << 3;\n      if (ret.audioObjectType === 5) {\n        config[1] |= (extensionSampleIndex & 0x0e) >> 1;\n        config[2] = (extensionSampleIndex & 0x01) << 7;\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.audioConfig = config;\n    }\n  }]);\n  return TsDemuxer;\n}();\n\nexport default TsDemuxer;","var Playlist = function () {\n  function Playlist(configs) {\n    babelHelpers.classCallCheck(this, Playlist);\n\n    this._baseURL = '';\n    this._list = {};\n    this._ts = {};\n    this.version = 0;\n    this.sequence = -1;\n    this.targetduration = 0;\n    this.duration = 0;\n    this.fragLength = 0;\n    this._lastget = undefined;\n    this._audoclear = configs.autoclear || false;\n  }\n\n  babelHelpers.createClass(Playlist, [{\n    key: 'push',\n    value: function push(ts, duration, discontinue) {\n      if (!this._ts[ts]) {\n        this._ts[ts] = { duration: duration,\n          downloaded: false,\n          downloading: false,\n          start: this.duration,\n          discontinue: discontinue ? true : false\n        };\n        this._list[this.duration] = ts;\n        this.duration += duration;\n        this.fragLength += 1;\n      }\n    }\n  }, {\n    key: 'deleteFrag',\n    value: function deleteFrag(url) {\n      if (this._ts[url]) {\n        if (this._ts[url].start > this._lastget.time) {\n          this._lastget = {\n            duration: this._ts[url].duration,\n            time: this._ts[url].start,\n            downloaded: false,\n            downloading: false,\n            url: url\n          };\n        }\n        delete this._list[this._ts[url].start];\n        delete this._ts[url];\n        this.fragLength -= 1;\n      }\n    }\n  }, {\n    key: 'pushM3U8',\n    value: function pushM3U8(data, deletepre) {\n      // 常规信息替换\n      if (!data) {\n        throw new Error('No m3u8 data received.');\n        return;\n      }\n      this.version = data.version;\n      this.targetduration = data.targetduration;\n      if (data.encrypt && !this.encrypt) {\n        this.encrypt = data.encrypt;\n      }\n      // 新分片信息\n      if (data.sequence > this.sequence) {\n        this.sequence = data.sequence;\n        var newfraglist = [];\n        for (var i = 0; i < data.frags.length; i++) {\n          var frag = data.frags[i];\n          if (!this._ts[frag.url]) {\n            newfraglist.push(frag.url);\n            this.push(frag.url, frag.duration, frag.discontinue);\n          }\n        }\n\n        if (newfraglist.length < 1) {\n          throw new Error('Can not read ts file list.');\n        }\n\n        if (deletepre) {\n          var tslist = this.getTsList();\n          for (var _i = 0; _i < tslist.length; _i++) {\n            if (newfraglist.indexOf(tslist[_i]) < 0) {\n              this.deleteFrag(tslist[_i]);\n            }\n          }\n        }\n      } else {\n        throw new Error('Old m3u8 file received, ' + data.sequence);\n      }\n    }\n  }, {\n    key: 'getTsList',\n    value: function getTsList() {\n      return Object.keys(this._ts);\n    }\n  }, {\n    key: 'downloaded',\n    value: function downloaded(tsname, isloaded) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloaded = isloaded;\n      }\n    }\n  }, {\n    key: 'downloading',\n    value: function downloading(tsname, loading) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloading = loading;\n      }\n    }\n  }, {\n    key: 'getTsByName',\n    value: function getTsByName(name) {\n      return this._ts[name];\n    }\n  }, {\n    key: 'getTs',\n    value: function getTs(time) {\n      var timelist = Object.keys(this._list);\n      var ts = void 0;\n\n      if (time === undefined) {\n        if (this._lastget) {\n          time = this._lastget.time + this._lastget.duration;\n        } else {\n          time = 0;\n        }\n      }\n\n      if (timelist.length < 1 || time >= this.duration) {\n        return undefined;\n      }\n      timelist.sort(function (a, b) {\n        return parseFloat(a) - parseFloat(b);\n      });\n      for (var i = 0; i < timelist.length; i++) {\n        if (time >= parseInt(timelist[i])) {\n          var url = this._list[timelist[i]];\n          var downloaded = this._ts[url].downloaded;\n          var downloading = this._ts[url].downloading;\n          ts = { url: url, downloaded: downloaded, downloading: downloading, time: parseInt(timelist[i]), duration: parseInt(this._ts[url].duration) };\n          if (this.autoclear) {\n            delete this._ts[this._lastget.url];\n            delete this._list[this._lastget.time];\n          }\n          this._lastget = ts;\n        } else {\n          break;\n        }\n      }\n      return ts;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n    }\n  }, {\n    key: 'clearDownloaded',\n    value: function clearDownloaded() {\n      for (var i = 0, l = Object.keys(this._ts).length; i < l; i++) {\n        var ts = this._ts[Object.keys(this._ts)[i]];\n        ts.downloaded = false;\n        ts.downloading = false;\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n      this.fragLength = 0;\n      this._lastget = undefined;\n      this._audoclear = false;\n    }\n  }, {\n    key: 'list',\n    get: function get() {\n      return this._list;\n    }\n  }, {\n    key: 'baseURL',\n    set: function set(baseURL) {\n      if (this.baseURL !== baseURL) {\n        this.clear();\n        this._baseURL = baseURL;\n      }\n    },\n    get: function get() {\n      return this._baseURL;\n    }\n  }]);\n  return Playlist;\n}();\n\nexport default Playlist;","import { isLe, UTF8 } from 'xgplayer-utils';\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta信息解析\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    babelHelpers.classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  babelHelpers.createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * 解析meta中的变量\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n  return AMFParser;\n}();\n\nexport default AMFParser;","import { EVENTS, AudioTrackMeta, VideoTrackMeta } from 'xgplayer-utils';\nimport { SpsParser } from 'xgplayer-codec';\nimport { VideoTrack, AudioTrack } from 'xgplayer-buffer';\n\nimport AMFParser from './amf-parser';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    babelHelpers.classCallCheck(this, FlvDemuxer);\n\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n  }\n\n  babelHelpers.createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this));\n    }\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'doParseFlv',\n    value: function doParseFlv() {\n      if (!this._firstFragmentLoaded) {\n        if (this.loaderBuffer.length < 13) {\n          return;\n        }\n        var header = this.loaderBuffer.shift(13);\n        this.parseFlvHeader(header);\n        this.doParseFlv(); // 递归调用，继续解析flv流\n      } else {\n        if (this.loaderBuffer.length < 11) {\n          return;\n        }\n        var chunk = void 0;\n\n        var loopMax = 10000; // 防止死循环产生\n        do {\n          // console.log('mark4')\n          chunk = this._parseFlvTag();\n        } while (chunk && loopMax-- > 0);\n\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'));\n        this.doParseFlv();\n      } else {\n        this._firstFragmentLoaded = true;\n        // const playType = FlvDemuxer.getPlayType(header[4])\n\n        this.initVideoTrack();\n        this.initAudioTrack();\n      }\n      this.doParseFlv();\n    }\n\n    /**\n     * init default video track configs\n     */\n\n  }, {\n    key: 'initVideoTrack',\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8、9、18\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag() {\n      if (this.loaderBuffer.length < 11) {\n        return null;\n      }\n      var chunk = this._parseFlvTagHeader();\n      if (chunk) {\n        this._processChunk(chunk);\n      }\n      return chunk;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader() {\n      var offset = 0;\n      var chunk = {};\n\n      var tagType = this.loaderBuffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      chunk.filtered = (tagType & 32) >>> 5;\n      chunk.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      chunk.datasize = this.loaderBuffer.toInt(offset, 3);\n      offset += 3;\n\n      if (chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18 || this.loaderBuffer.toInt(8, 3) !== 0) {\n        if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n          this.loaderBuffer.shift(1);\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false);\n        return null;\n      }\n\n      if (this.loaderBuffer.length < chunk.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      this.loaderBuffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = this.loaderBuffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      chunk.dts = timestamp;\n\n      // streamId\n      this.loaderBuffer.shift(3);\n      return chunk;\n    }\n  }, {\n    key: '_processChunk',\n    value: function _processChunk(chunk) {\n      switch (chunk.tagType) {\n        case 18:\n          this._parseScriptData(chunk);\n          break;\n        case 8:\n          this._parseAACData(chunk);\n          break;\n        case 9:\n          this._parseHevcData(chunk);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          this.loaderBuffer.shift(3);\n          break;\n        default:\n          this.loaderBuffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(chunk) {\n      var audioTrack = this.tracks.audioTrack;\n      var videoTrack = this.tracks.videoTrack;\n\n      var data = this.loaderBuffer.shift(chunk.datasize);\n\n      var info = new AMFParser().resolve(data, data.length);\n\n      var onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined;\n\n      // fill mediaInfo\n      this._context.mediaInfo.duration = onMetaData.duration;\n      this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n\n      var validate = this._datasizeValidator(chunk.datasize);\n      if (validate) {\n        this.emit(DEMUX_EVENTS.MEDIA_INFO);\n        this._hasScript = true;\n      }\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 6) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n  }, {\n    key: '_parseAACData',\n    value: function _parseAACData(chunk) {\n      var track = this.tracks.audioTrack;\n      if (!track) {\n        return;\n      }\n\n      var meta = track.meta;\n\n      if (!meta) {\n        track.meta = new AudioTrackMeta();\n        meta = track.meta;\n      }\n\n      var info = this.loaderBuffer.shift(1)[0];\n\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      track.format = format;\n\n      if (format !== 10) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid audio format: ' + format));\n      }\n\n      if (format === 10 && !this._hasAudioSequence) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      delete chunk.tagType;\n      var validate = this._datasizeValidator(chunk.datasize);\n\n      if (chunk.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(chunk.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this._context.mediaInfo.duration * meta.timescale;\n        meta.config = aacHeader.config;\n\n        var audioMedia = this._context.mediaInfo.audio;\n\n        // fill audio media info\n        audioMedia.codec = aacHeader.codec;\n        audioMedia.channelCount = aacHeader.channelCount;\n        audioMedia.sampleRate = audioSampleRate;\n        audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex;\n\n        if (!this._hasAudioSequence) {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n        } else {\n          this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n          // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        }\n        this._hasAudioSequence = true;\n\n        this._metaChange = true;\n      } else {\n        if (this._metaChange) {\n          chunk.options = {\n            meta: track.meta\n          };\n          this._metaChange = false;\n        }\n\n        chunk.data = chunk.data.slice(1, chunk.data.length);\n        track.samples.push(chunk);\n      }\n      if (!validate) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false);\n        // this.logger.warn(this.TAG, error.message)\n      }\n    }\n\n    /**\n     * parse hevc/avc video data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseHevcData',\n    value: function _parseHevcData(chunk) {\n      // header\n      var info = this.loaderBuffer.shift(1)[0];\n      chunk.frameType = (info & 0xf0) >>> 4;\n      chunk.isKeyframe = chunk.frameType === 1;\n      // let tempCodecID = this.tracks.videoTrack.codecID\n      var codecID = info & 0x0f;\n      this.tracks.videoTrack.codecID = codecID;\n\n      // hevc和avc的header解析方式一样\n      chunk.avcPacketType = this.loaderBuffer.shift(1)[0];\n      chunk.cts = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 12) {\n        var data = this.loaderBuffer.shift(chunk.datasize - 5);\n        chunk.data = data;\n\n        if (Number.parseInt(chunk.avcPacketType) !== 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          }\n          var nalu = {};\n          var r = 0;\n          nalu.cts = chunk.cts;\n          nalu.dts = chunk.dts;\n          while (chunk.data.length > r) {\n            var sizes = chunk.data.slice(Number.parseInt(r), 4 + r);\n            nalu.size = sizes[3];\n            nalu.size += sizes[2] * 256;\n            nalu.size += sizes[1] * 256 * 256;\n            nalu.size += sizes[0] * 256 * 256 * 256;\n            r += 4;\n            nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r);\n            r += nalu.size;\n            this.tracks.videoTrack.samples.push(nalu);\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          } else {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        }\n      } else if (codecID === 7) {\n        var _data = this.loaderBuffer.shift(chunk.datasize - 5);\n        if (_data[4] === 0 && _data[5] === 0 && _data[6] === 0 && _data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + _data[i];\n          }\n          avcclength -= 4;\n          _data = _data.slice(4, _data.length);\n          _data[3] = avcclength % 256;\n          avcclength = (avcclength - _data[3]) / 256;\n          _data[2] = avcclength % 256;\n          avcclength = (avcclength - _data[2]) / 256;\n          _data[1] = avcclength % 256;\n          _data[0] = (avcclength - _data[1]) / 256;\n        }\n\n        chunk.data = _data;\n        // If it is AVC sequece Header.\n        if (chunk.avcPacketType === 0) {\n          this._avcSequenceHeaderParser(chunk.data);\n          var validate = this._datasizeValidator(chunk.datasize);\n          if (validate) {\n            if (!this._hasVideoSequence) {\n              this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n            } else {\n              this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n              // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n            }\n            this._hasVideoSequence = true;\n          }\n          this._metaChange = true;\n        } else {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n            return;\n          }\n          if (this._metaChange) {\n            chunk.options = {\n              meta: Object.assign({}, this.tracks.videoTrack.meta)\n            };\n            this._metaChange = false;\n          }\n          this.tracks.videoTrack.samples.push(chunk);\n          // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n        }\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('video codeid is ' + codecID), false);\n        chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n        }\n        this.tracks.videoTrack.samples.push(chunk);\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n      delete chunk.tagType;\n    }\n\n    /**\n     * parse avc metadata\n     * @param data\n     * @private\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var track = this.tracks.videoTrack;\n\n      if (!track) {\n        return;\n      }\n\n      var offset = 0;\n\n      if (!track.meta) {\n        track.meta = new VideoTrackMeta();\n      }\n      var meta = track.meta;\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        this.tracks.videoTrack.meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i = 0; _i < numOfPps; _i++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        this.tracks.videoTrack.meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      // fill video media info\n      var videoMedia = this._context.mediaInfo.video;\n\n      videoMedia.codec = meta.codec;\n      videoMedia.profile = meta.profile;\n      videoMedia.level = meta.level;\n      videoMedia.chromaFormat = meta.chromaFormat;\n      videoMedia.frameRate = meta.frameRate;\n      videoMedia.parRatio = meta.parRatio;\n      videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth;\n      videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight;\n\n      meta.duration = this._context.mediaInfo.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      track.meta = meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize) {\n      var datasizeConfirm = this.loaderBuffer.toInt(0, 4);\n      this.loaderBuffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'isFlvFile',\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;","import _M3U8Parser from './hls/demuxer/m3u8parser';\nimport _TsDemuxer from './hls/demuxer/ts';\nimport _Playlist from './hls/playlist';\nimport _FlvDemuxer from './flv/index';\n\nexport var M3U8Parser = _M3U8Parser;\nexport var TsDemuxer = _TsDemuxer;\nexport var Playlist = _Playlist;\nexport var FlvDemuxer = _FlvDemuxer;","import { EVENTS, Mse, Crypto} from 'xgplayer-utils';\nimport { XgBuffer, PreSource, Tracks } from 'xgplayer-buffer';\nimport { FetchLoader } from 'xgplayer-loader';\nimport { Compatibility } from 'xgplayer-codec';\nimport Mp4Remuxer from 'xgplayer-remux/src/mp4/index';\n\nimport {Playlist, M3U8Parser, TsDemuxer} from 'xgplayer-demux';\n\nconst LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nconst DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nconst HLS_EVENTS = EVENTS.HLS_EVENTS;\nconst CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\nconst HLS_ERROR = 'HLS_ERROR';\nclass HlsLiveController {\n  constructor (configs) {\n    this.configs = Object.assign({}, configs);\n    this.url = '';\n    this.baseurl = '';\n    this.sequence = 0;\n    this._playlist = null;\n    this.retrytimes = this.configs.retrytimes || 3;\n    this.preloadTime = this.configs.preloadTime;\n    this.container = this.configs.container;\n    this._m3u8lasttime = 0;\n    this._timmer = setInterval(this._checkStatus.bind(this), 50);\n    this._lastCheck = 0;\n    this._player = this.configs.player;\n    this.m3u8Text = null\n  }\n\n  init () {\n    // 初始化Buffer （M3U8/TS/Playlist);\n    this._context.registry('M3U8_BUFFER', XgBuffer);\n    this._context.registry('TS_BUFFER', XgBuffer);\n    this._context.registry('TRACKS', Tracks);\n\n    this._playlist = this._context.registry('PLAYLIST', Playlist)({autoclear: true});\n    this._context.registry('PRE_SOURCE_BUFFER', PreSource);\n\n    this._context.registry('COMPATIBILITY', Compatibility);\n\n    // 初始化M3U8Loader;\n    this._m3u8loader = this._context.registry('M3U8_LOADER', FetchLoader)({ buffer: 'M3U8_BUFFER', readtype: 1 });\n    this._tsloader = this._context.registry('TS_LOADER', FetchLoader)({ buffer: 'TS_BUFFER', readtype: 3 });\n\n    // 初始化TS Demuxer\n    this._context.registry('TS_DEMUXER', TsDemuxer)({ inputbuffer: 'TS_BUFFER' });\n\n    // 初始化MP4 Remuxer\n    this._context.registry('MP4_REMUXER', Mp4Remuxer);\n\n    // 初始化MSE\n    this.mse = this._context.registry('MSE', Mse)({container: this.container});\n    this.initEvents();\n  }\n\n  initEvents () {\n    this.on(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete.bind(this));\n\n    this.on(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers.bind(this.mse));\n\n    this.on(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend.bind(this.mse));\n\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed.bind(this));\n\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete.bind(this));\n\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._onLoadError.bind(this));\n\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._onDemuxError.bind(this));\n\n    this.on(REMUX_EVENTS.REMUX_ERROR, this._onRemuxError.bind(this));\n  }\n\n  _onError(type, mod, err, fatal) {\n    let error = {\n      errorType: type,\n      errorDetails: `[${mod}]: ${err.message}`,\n      errorFatal: fatal\n    }\n    this._player.emit(HLS_ERROR, error);\n  }\n\n  _onDemuxComplete () {\n    this.emit(REMUX_EVENTS.REMUX_MEDIA)\n  }\n  _onMetadataParsed (type) {\n    this.emit(REMUX_EVENTS.REMUX_METADATA, type)\n  }\n\n  _onLoadError (loader, error) {\n    if (!this._tsloader.loading && !this._m3u8loader.loading && this.retrytimes > 1) {\n      this.retrytimes--;\n      this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, false);\n    } else if (this.retrytimes <= 1) {\n      this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, true);\n      this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n      this.mse.endOfStream();\n    }\n  }\n\n  _onDemuxError (mod, error, fatal) {\n    if(fatal === undefined) {\n      fatal = true;\n    }\n    this._onError(LOADER_EVENTS.LOADER_ERROR, mod, error, fatal);\n  }\n\n  _onRemuxError (mod, error, fatal) {\n    if(fatal === undefined) {\n      fatal = true;\n    }\n    this._onError(REMUX_EVENTS.REMUX_ERROR, mod, error, fatal);\n  }\n\n  _onLoadComplete (buffer) {\n    if (buffer.TAG === 'M3U8_BUFFER') {\n      let mdata;\n      try {\n        this.m3u8Text = buffer.shift();\n        mdata = M3U8Parser.parse(this.m3u8Text, this.baseurl);\n      } catch (error) {\n        this._onError('M3U8_PARSER_ERROR', 'M3U8_PARSER', error, false);\n      }\n\n      if(!mdata) {\n        if (this.retrytimes > 0) {\n          this.retrytimes--;\n          this._preload();\n        } else {\n          this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n          this.mse.endOfStream();\n        }\n        return;\n      }\n\n      try {\n        this._playlist.pushM3U8(mdata, true);\n      } catch (error) {\n        this._onError('M3U8_PARSER_ERROR', 'PLAYLIST', error, false);\n      }\n\n      if (this._playlist.encrypt && this._playlist.encrypt.uri && !this._playlist.encrypt.key) {\n        this._context.registry('DECRYPT_BUFFER', XgBuffer)();\n        this._context.registry('KEY_BUFFER', XgBuffer)();\n        this._tsloader.buffer = 'DECRYPT_BUFFER';\n        this._keyLoader = this._context.registry('KEY_LOADER', FetchLoader)({buffer:'KEY_BUFFER',readtype: 3});\n        this.emitTo('KEY_LOADER', LOADER_EVENTS.LADER_START, this._playlist.encrypt.uri);\n      } else {\n        this._m3u8Loaded(mdata);\n      }\n    } else if (buffer.TAG === 'TS_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.downloaded(this._tsloader.url, true);\n      this.emit(DEMUX_EVENTS.DEMUX_START);\n    }  else if (buffer.TAG === 'DECRYPT_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.downloaded(this._tsloader.url, true);\n      this.emitTo('CRYPTO', CRYTO_EVENTS.START_DECRYPT);\n    } else if (buffer.TAG == 'KEY_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.encrypt.key = buffer.shift();\n      this._crypto = this._context.registry('CRYPTO', Crypto)({\n        key: this._playlist.encrypt.key,\n        iv: this._playlist.encrypt.ivb,\n        method: this._playlist.encrypt.method,\n        inputbuffer:'DECRYPT_BUFFER',\n        outputbuffer:'TS_BUFFER'\n      });\n      this._crypto.on(CRYTO_EVENTS.DECRYPTED, this._onDcripted.bind(this));\n    }\n  }\n\n  _onDcripted() {\n    this.emit(DEMUX_EVENTS.DEMUX_START);\n  }\n\n  _m3u8Loaded(mdata) {\n    if (!this.preloadTime) {\n      this.preloadTime = this._playlist.targetduration ? this._playlist.targetduration : 5;\n    }\n    if (this._playlist.fragLength > 0 && this._playlist.sequence < mdata.sequence) {\n      this.retrytimes = this.configs.retrytimes || 3;\n    } else {\n      if (this.retrytimes > 0) {\n        this.retrytimes--;\n        this._preload();\n      } else {\n        this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n        this.mse.endOfStream();\n      }\n    }\n  }\n  _checkStatus () {\n    if (this.retrytimes < 1 && (new Date().getTime() - this._lastCheck < 10000)) {\n      return;\n    }\n    this._lastCheck = new Date().getTime();\n    if (this.container.buffered.length < 1) {\n      this._preload()\n    } else {\n      // Check for load.\n      let currentTime = this.container.currentTime;\n      let bufferstart = this.container.buffered.start(this.container.buffered.length - 1);\n      if (this.container.readyState <= 2) {\n        if (currentTime < bufferstart) {\n          this.container.currentTime = bufferstart;\n          currentTime = bufferstart;\n        } else {\n          this._preload();\n        }\n      }\n      let bufferend = this.container.buffered.end(this.container.buffered.length - 1);\n      if (currentTime < bufferend - (this.preloadTime * 2)) {\n        this.container.currentTime = bufferend - (this.preloadTime * 2);\n      }\n      if (bufferend > this.preloadTime * 2) {\n        this.mse.remove(bufferend - (this.preloadTime * 2));\n      }\n      if (currentTime > bufferend - this.preloadTime) {\n        this._preload();\n      }\n    }\n  }\n\n  _preload () {\n    if (this._tsloader.loading || this._m3u8loader.loading) {\n      return;\n    }\n    let frag = this._playlist.getTs();\n\n    if (frag && !frag.downloaded && !frag.downloading) {\n      this._playlist.downloading(frag.url, true);\n      this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, frag.url)\n    } else {\n      let preloadTime = this.preloadTime ? this.preloadTime : 0;\n      let current = new Date().getTime();\n      if ((!frag || frag.downloaded) &&\n        (current - this._m3u8lasttime) / 1000 > preloadTime) {\n        this._m3u8lasttime = current\n        this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, this.url);\n      }\n    }\n  }\n\n  load (url) {\n    this.baseurl = M3U8Parser.parseURL(url);\n    this.url = url;\n    this._preload();\n  }\n\n  destroy () {\n    clearInterval(this._timmer);\n    this.off(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete);\n    this.off(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers);\n    this.off(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend);\n    // this.off(REMUX_EVENTS.REMUX_ERROR);\n    this.off(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed);\n    this.off(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete);\n\n    this.mse = null\n    this.m3u8Text = null\n  }\n}\nexport default HlsLiveController;\n","import 'xgplayer-polyfills/babel/external-helpers';\nimport Player from 'xgplayer'\nimport { Context, EVENTS } from 'xgplayer-utils';\nimport HlsLiveController from './hls-live';\nconst HlsAllowedEvents = EVENTS.HlsAllowedEvents;\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nexport default class HlsLivePlayer extends Player {\n  constructor (options) {\n    super(options)\n    this.hlsOps = {};\n    this.util = Player.util;\n    this.util.deepCopy(this.hlsOps, options);\n    this._context = new Context(HlsAllowedEvents);\n    this._hasStarted = false;\n  }\n\n  _initEvents () {\n    this.__core__.once(REMUX_EVENTS.INIT_SEGMENT, () => {\n      const mse = this._context.getInstance('MSE');\n      if (!this._hasStarted) {\n        const live = this.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live');\n        this.util.addClass(this.root, 'xgplayer-is-live');\n        this.controls.appendChild(live);\n      }\n      this._hasStarted = true;\n      super.start(mse.url);\n    });\n\n    this.once('canplay', () => {\n      this.video.play()\n    });\n  }\n\n  _initSrcChangeHandler () {\n    let _this = this;\n    Object.defineProperty(this, 'src', {\n      get () {\n        return _this.currentSrc\n      },\n      set (url) {\n        _this.config.url = url\n        if (!_this.paused) {\n          _this.pause()\n          _this.once('pause', () => {\n            _this.start(url)\n          })\n          _this.once('canplay', () => {\n            _this.play()\n          })\n        } else {\n          _this.start(url)\n        }\n        _this.once('canplay', () => {\n          _this.currentTime = 0\n        })\n      },\n      configurable: true\n    })\n  }\n\n  start (url = this.config.url) {\n    if (!url) {\n      return;\n    }\n    this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({player:this, container: this.video});\n    this._context.init();\n    this.url = url;\n    this.__core__.load(url);\n    this._initEvents();\n    this._initSrcChangeHandler();\n  }\n\n  play () {\n    if (this._hasStarted) {\n      this._context.destroy();\n      this._context = new Context(HlsAllowedEvents);\n      this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({container: this.video});\n      this._context.init();\n      this._initEvents();\n      this.__core__.load(this.url);\n    }\n    super.play();\n  }\n\n  destroy () {\n    this._context.destroy();\n    super.destroy();\n  }\n}\n"],"names":["EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","TypeError","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","emitWarning","e","console","warn","log","_onceWrap","g","removeListener","fired","arguments","listenerCount","evlistener","spliceOne","list","index","k","n","pop","arr","copy","Array","unwrapListeners","ret","global","babelHelpers","typeof","obj","classCallCheck","instance","Constructor","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","prototype","inherits","subClass","superClass","Object","create","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","isObjectFilled","hasOwnProperty","MediaInfo","mimeType","duration","hasVideo","video","hasAudio","audio","isBaseInfoReady","isVideoReady","isAudioReady","mediaInfo","usingDomains","domain","active","Domain","getPrototypeOf","setMaxListeners","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","position","originalListener","removeAllListeners","keys","eventNames","Reflect","ownKeys","Context","allowedEvents","_emitter","off","_instanceMap","_clsMap","_inited","_hooks","_emitCounter","tag","_len","_key","newInstance","Function","bind","concat","config","initInstance","cls","_this2","checkMessageName","_isMessageNameValid","enhanced","_cls","a","b","c","_this","onceListeners","TAG","_context","messageName","callback","window","localStorage","setItem","beforeList","_len2","_key2","_len3","_key3","hasOwn","callbacks","_messageName","_callbacks","_i","_callback","removeListeners","get","_len4","_key4","_this3","forEach","destroy","destroyInstances","indexOf","LOADER_EVENTS","DEMUX_EVENTS","REMUX_EVENTS","MSE_EVENTS","HLS_EVENTS","CRYTO_EVENTS","ALLEVENTS","assign","FlvAllowedEvents","HlsAllowedEvents","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","sniffer","r","os","isPc","isTablet","ua","navigator","userAgent","toLowerCase","reg","filter","test","isWindowsPhone","isSymbian","isAndroid","isFireFox","isPhone","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs","_ucs2","join","start","checkLength","array","MediaSegmentList","MediaSample","info","_default","getDefaultInf","toString","sample","entries","_ref","_ref2","slicedToArray","v","MediaSegment","startDts","endDts","startPts","endPts","originStartDts","originEndDts","randomAccessPoints","firstSample","lastSample","isRAP","_type","_list","_lastAppendLocation","beginDts","last","mid","lbound","ubound","idx","originDts","Math","floor","_searchNearestSegmentBefore","segment","lastAppendIdx","insertIdx","splice","getLastSegmentBefore","segmentIdx","AudioTrackMeta","meta","VideoTrackMeta","Uint8Array","sps","pps","AudioTrackSample","getDefault","VideoTrackSample","MSE","configs","container","mediaSource","sourceBuffers","preloadTime","onSourceOpen","onTimeUpdate","onUpdateEnd","onWaiting","MediaSource","addEventListener","src","URL","createObjectURL","url","newCtx","addSourceBuffers","doAppend","readyState","sources","getInstance","tracks","track","add","audioTrack","videoTrack","dur","refSampleDuration","data","_k","source","mime","mimetype","sourceBuffer","addSourceBuffer","inited","appendBuffer","buffer","shift","_mediaSource","activeSourceBuffers","endOfStream","end","updating","remove","taskList","removeEventListener","task","Promise","resolve","doCleanBuffer","retryTime","clean","clearBuffer","all","removeBuffers","then","_buffer","removeSourceBuffer","revokeObjectURL","buffered","bEnd","Stream","dataview","loop","readByte","value","byteLength","size","sign","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","exports","ResultConstructor","totalLength","arrays","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","result","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","set","_concat2","__esModule","default","_concat","module","Buffer","item","Concat","padStart4Hex","hexNum","padStart","temp","num","parseInt","EVENTS","Crypto","inputBuffer","inputbuffer","outputBuffer","outputbuffer","iv","method","crypto","msCrypto","START_DECRYPT","decript","aeskey","decriptData","subtle","importKey","decrypt","DECRYPTED","_Context","_EVENTS","_sniffer","isLe","_isLe","_UTF8","_MediaSegmentList","_AudioTrackMeta","_VideoTrackMeta","_AudioTrackSample","_VideoTrackSample","Mse","_Mse","_Stream","_Buffer","_Crypto","Track","id","sequenceNumber","samples","droppedSamples","reset","AudioTrack","_Track","VideoTrack","_Track2","dropped","Tracks","XgBuffer","historyLen","_shiftBuffer","_ret","slice","_ret2","tmpoff","tmp","templength","clear","retInt","Source","RemuxBuffer","_Tracks","_AudioTrack","_VideoTrack","_XgBuffer","PreSource","FetchLoader","status","_reader","_canceled","_destroyed","readtype","_loaderTaskNo","LADER_START","load","opts","params","getParams","loading","fetch","response","ok","_onFetchResponse","LOADER_ERROR","catch","message","taskno","json","LOADER_COMPLETE","text","arrayBuffer","_onReader","body","getReader","reader","cancel","read","val","LOADER_DATALOADED","options","headers","Headers","configHeaders","append","optHeaders","cors","mode","withCredentials","credentials","Golomb","_bufferIndex","_totalBytes","_totalBits","_currentWord","_currentWordBitsLeft","bufferBytesLeft","bytesRead","min","word","subarray","bits","valu","_fillCurrentWord","readBits","zeroCount","_skipLeadingZero","leadingZeros","readUEG","SPSParser","srcLength","dst","dstIdx","rbsp","_ebsp2rbsp","gb","profileIdc","levelIdc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","par_width","par_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","par_w_table","par_h_table","num_units_in_tick","time_scale","parScale","crop_unit_x","crop_unit_y","codec_width","codec_height","present_width","ceil","getChromaFormatString","last_scale","next_scale","toFixed","chroma","spsConfig","codec_size","codecWidth","width","codecHeight","height","presentWidth","present_size","presentHeight","profile","level","bitDepth","chromaFormat","parRatio","par_ratio","frameRate","frame_rate","fpsDen","fpsNum","timescale","Nalunit","getAnnexbNals","getAvccNals","nals","getHeaderPositionAnnexB","pos","header","headerLength","skip","unit","analyseNal","ndr","idr","SpsParser","parseSPS","AAC","codec","channelCount","Compatibility","nextAudioDts","nextVideoDts","lastAudioSamplesLen","lastVideoSamplesLen","lastVideoDts","lastAudioDts","allAudioSamplesCount","allVideoSamplesCount","_firstAudioSample","_firstVideoSample","filledAudioSamples","filledVideoSamples","videoLastSample","audioLastSample","_videoLargeGap","_audioLargeGap","before","REMUX_MEDIA","doFix","_getFirstSample","getFirstSample","isFirstAudioSamples","isFirstVideoSamples","recordSamplesCount","fixRefSampleDuration","_Compatibility$detact","detactChangeStream","videoChanged","changed","videoChangedIdx","changedIdx","fixChangeStreamVideo","doFixVideo","_Compatibility$detact2","audioChanged","audioChangedIdx","fixChangeStreamAudio","doFixAudio","removeInvalidSamples","first","streamChangeStart","_videoTrack","videoSamples","dts","fixed","doFixLargeGap","videoFirstDts","gap","fillCount","clonedFirstSample","pts","cts","curLastSample","_audioTrack","audioSamples","samplesLen","silentFrame","getSilentFrame","_firstSample","detectLargeGap","videoFirstPts","_gap","silentSampleCount","_i2","silentSample","firstDts","absGap","abs","refSampleDurationFixed","silentFrameCount","_i3","computed","_silentSample","lastOriginDts","lastDts","lastSampleDuration","_i4","current","sortAudioSamples","changeIdx","_videoTrack2","prevDts","getStreamChangeStart","curDts","isContinue","firstPartSamples","secondPartSamples","firstPartDuration","_audioTrack2","findFirstVideoSample","findFirstAudioSample","isVideo","allSamplesCount","filledSamplesCount","Number","durationAvg","dtsBase","Infinity","remuxer","_dtsBase","sort","sorted","isKeyframe","nextDts","cond1","cond2","discontinue","_Nalunit","_SpsParser","_Compatibility","Fmp4","writeUint32","content","write","version","flag","initBox","mvhd","trak","videoTrak","audioTrak","mvex","bytes","tkhd","mdia","avcc","sampleRate","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","dref","stsd","stts","stsc","stsz","stco","mp4a","avc1","samplerate","esds","configlen","hSpacing","vSpacing","btrt","pasp","trackID","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","time","sdtp","trun","sdtpLength","sampleCount","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","mdatBox","charCodeAt","Mp4Remuxer","curTime","_isDtsBaseInited","_videoSegmentList","_audioSegmentList","browser","_fillSilenceFrame","isFirstVideo","isFirstAudio","videoAllDuration","audioAllDuration","remux","REMUX_METADATA","onMetaDataReady","DETECT_CHANGE_STREAM","resetDtsBase","_dtsBaseInited","calcDtsBase","_remuxVideo","_remuxAudio","presourcebuffer","getSource","createSource","remuxInitSegment","INIT_SEGMENT","initSegment","ftyp","moov","audioBase","videoBase","mp4Samples","maxLoop","avcSample","mdatSample","sampleDuration","videoMeta","RANDOM_ACCESS_POINT","moofMdat","moof","mdat","writeToSource","MEDIA_SEGMENT","isFirstDtsInited","audioMeta","mp4Sample","_audioMeta","_player","M3U8Parser","baseurl","split","refs","ref","match","nextDiscontinue","refm","refd","targetduration","parseFloat","parseFrag","parseDecrypt","frags","freg","nextline","charAt","urls","encrypt","cmd","uri","ivb","im","substr","StreamType","TsDemuxer","demuxing","pat","pmt","_hasVideoMeta","_hasAudioMeta","DEMUX_START","demux","frag","peses","DEMUX_ERROR","tsStream","ts","pes","pid","ES","payload","stream","AudioOptions","VideoOptions","epeses","j","Merge","pushAudioSample","pushVideoSample","DEMUX_COMPLETE","_tracks","frequence","channel","audioObjectType","audioConfig","frequencyIndex","audioSampleRate","metaEqual","compaireMeta","METADATA_PARSED","getNalunits","sampleLength","nal","h","sarRatio","sar_ratio","getAvcc","_nal","al","bl","ignoreDuration","itema","itemb","compaireArray","buffers","readHeader","readPayload","packet","unknownPIDs","PES","PAT","CAT","TSDT","some","PMT","sts","Media","streamType","sync","readUint8","readUint16","priority","scrambling","adaptation","continuity","tabelID","zero","sectionLength","streamID","sectionNumber","lastSectionNumber","N","programNumber","program","tableID","order","lastOrder","PCR_PID","programLength","map","es","adaptationLength","access","PCR","OPCR","splicePoint","transportPrivate","adaptationField","_start","programClockBase","readUint32","programClockExtension","originProgramClockBase","originProgramClockExtension","spliceCountdown","transportPrivateData","_length","_next","piecewise","seamless","ltwValid","ltwOffset","readUint24","piecewiseRate","readInt8","spliceType","dtsNextAU1","marker1","dtsNextAU2","marker2","dtsNextAU3","lastStuffing","packetLength","_next2","ptsDTSFlag","escrFlag","esRateFlag","dsmFlag","additionalFlag","crcFlag","extensionFlag","pesHeaderLength","N1","_pts","escr","ex","esRate","additionalCopyInfo","pesCRC","back","fq","layer","absent","frameLength","getAudioConfig","sectionIndicator","currentNextIndicator","crc32","extensionSampleIndex","Playlist","_baseURL","_ts","fragLength","_lastget","_audoclear","autoclear","deletepre","newfraglist","tslist","getTsList","deleteFrag","tsname","isloaded","downloaded","downloading","timelist","l","baseURL","DATA_TYPES","AMFParser","readOffset","metaData","parseValue","bodySize","resetStatus","strLen","str","decode","dv","getFloat64","Date","parseString","isObjEnd","NUMBER","BOOLEAN","STRING","OBJECT","MIX_ARRAY","OBJECT_END","STRICT_ARRAY","DATE","LONE_STRING","dataView","objEndSize","amfObj","parseObject","isObjectEnd","_objEndSize","amfVar","arrLength","script","date","parseDate","longStr","parseLongString","FlvDemuxer","_firstFragmentLoaded","_trackNum","_hasScript","doParseFlv","loaderBuffer","chunk","loopMax","_parseFlvTag","parseFlvHeader","isFlvFile","initVideoTrack","initAudioTrack","_parseFlvTagHeader","_processChunk","tagType","toInt","filtered","datasize","timestamp","timestampExt","_parseScriptData","_parseAACData","_parseHevcData","onMetaData","hsaAudio","_datasizeValidator","MEDIA_INFO","hasSpecificConfig","audiosamplerate","audiochannels","sampleRateIndex","_meta","framerate","objectType","_switchAudioSampleRate","dependsOnCoreCoder","extensionFlagIndex","extensionSamplingIndex","samplingIndex","format","_hasAudioSequence","_switchAudioSamplingFrequency","frameLenth","audioSampleRateIndex","validate","aacHeader","_aacSequenceHeaderParser","audioMedia","AUDIO_METADATA_CHANGE","_metaChange","frameType","codecID","avcPacketType","nalu","sizes","_data","avcclength","_avcSequenceHeaderParser","_hasVideoSequence","VIDEO_METADATA_CHANGE","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","nalUnitLength","numOfSps","codecString","_j","numOfPps","_size","_j2","toVideoMeta","videoMedia","samplingFrequencyIndex","datasizeConfirm","streamFlag","_M3U8Parser","_TsDemuxer","_Playlist","HlsLiveController","_playlist","retrytimes","_m3u8lasttime","_timmer","setInterval","_checkStatus","_lastCheck","player","m3u8Text","registry","_m3u8loader","_tsloader","mse","initEvents","_onLoadComplete","_onMetadataParsed","_onDemuxComplete","_onLoadError","_onDemuxError","REMUX_ERROR","_onRemuxError","mod","fatal","loader","_onError","RETRY_TIME_EXCEEDED","mdata","parse","_preload","pushM3U8","_keyLoader","emitTo","_m3u8Loaded","_crypto","_onDcripted","getTime","currentTime","bufferstart","bufferend","getTs","parseURL","hlsOps","util","Player","deepCopy","_hasStarted","__core__","live","createDom","addClass","root","controls","appendChild","play","currentSrc","paused","pause","_initEvents","_initSrcChangeHandler"],"mappings":"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"}