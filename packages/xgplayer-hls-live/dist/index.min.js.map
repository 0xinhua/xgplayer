{"version":3,"file":"index.min.js","sources":["../../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../xgplayer-polyfills/babel/external-helpers.js","../../xgplayer-utils/es/models/media-info.js","../../xgplayer-utils/es/context.js","../../xgplayer-utils/es/constants/events.js","../../xgplayer-utils/es/env/sniffer.js","../../xgplayer-utils/es/env/isle.js","../../xgplayer-utils/es/env/utf8.js","../../xgplayer-utils/es/models/media-segment-list.js","../../xgplayer-utils/es/models/media-sample.js","../../xgplayer-utils/es/models/media-segment.js","../../xgplayer-utils/es/models/track-meta.js","../../xgplayer-utils/es/models/track-sample.js","../../xgplayer-utils/es/mse/index.js","../../xgplayer-utils/es/write/stream.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/index.js","../../xgplayer-utils/es/write/buffer.js","../../xgplayer-utils/es/crypto/index.js","../../xgplayer-utils/es/index.js","../../xgplayer-buffer/es/track.js","../../xgplayer-buffer/es/buffer.js","../../xgplayer-buffer/es/presouce.js","../../xgplayer-buffer/es/index.js","../../xgplayer-loader/es/fetch-loader.js","../../xgplayer-loader/es/index.js","../../xgplayer-codec/es/h264/nalunit/golomb.js","../../xgplayer-codec/es/h264/nalunit/sps.js","../../xgplayer-codec/es/h264/nalunit/index.js","../../xgplayer-codec/es/aac/aac-helper.js","../../xgplayer-codec/es/compatibility.js","../../xgplayer-codec/es/index.js","../../xgplayer-remux/src/mp4/fmp4.js","../../xgplayer-remux/src/mp4/index.js","../../xgplayer-demux/es/hls/demuxer/m3u8parser.js","../../xgplayer-demux/es/hls/demuxer/ts.js","../../xgplayer-demux/es/hls/playlist.js","../../xgplayer-demux/es/flv/amf-parser.js","../../xgplayer-demux/es/flv/index.js","../../xgplayer-demux/es/index.js","../src/hls-live.js","../src/index.js"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","(function (global) {\n  var babelHelpers = global.babelHelpers = {};\n  babelHelpers.typeof = function (obj) {\n    return typeof obj;\n  }\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  babelHelpers.possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n})(typeof global === \"undefined\" ? self : global);\n","var isObjectFilled = function isObjectFilled(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nvar MediaInfo = function () {\n  function MediaInfo() {\n    babelHelpers.classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n\n    this.hasVideo = null;\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n    };\n\n    this.hasAudio = null;\n\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    };\n  }\n\n  babelHelpers.createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this);\n    }\n  }], [{\n    key: \"isBaseInfoReady\",\n    value: function isBaseInfoReady(mediaInfo) {\n      return isObjectFilled(mediaInfo);\n    }\n  }, {\n    key: \"isVideoReady\",\n    value: function isVideoReady(mediaInfo) {\n      if (!mediaInfo.hasVideo) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }, {\n    key: \"isAudioReady\",\n    value: function isAudioReady(mediaInfo) {\n      if (!mediaInfo.hasAudio) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }]);\n  return MediaInfo;\n}();\n\nexport default MediaInfo;","import MediaInfo from './models/media-info';\nimport { EventEmitter } from 'events';\n\nvar DIRECT_EMIT_FLAG = '__TO__';\n\nvar Context = function () {\n  function Context() {\n    var allowedEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    babelHelpers.classCallCheck(this, Context);\n\n    this._emitter = new EventEmitter();\n    if (!this._emitter.off) {\n      this._emitter.off = this._emitter.removeListener;\n    }\n    this._instanceMap = {}; // 所有的解码流程实例\n    this._clsMap = {}; // 构造函数的map\n    this._inited = false;\n    this.mediaInfo = new MediaInfo();\n    this.allowedEvents = allowedEvents;\n    this._hooks = {}; // 注册在事件前/后的钩子，例如 before('DEMUX_COMPLETE')\n  }\n\n  /**\n   * 从上下文中获取解码流程实例，如果没有实例，构造一个\n   * @param tag\n   * @param args\n   * @returns {*}\n   */\n\n\n  babelHelpers.createClass(Context, [{\n    key: 'getInstance',\n    value: function getInstance(tag) {\n      var instance = this._instanceMap[tag];\n      if (instance) {\n        return instance;\n      } else {\n        // throw new Error(`${tag}实例尚未初始化`)\n        return null;\n      }\n    }\n\n    /**\n     * 初始化具体实例\n     * @param tag\n     * @param args\n     */\n\n  }, {\n    key: 'initInstance',\n    value: function initInstance(tag) {\n      if (this._clsMap[tag]) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var newInstance = new (Function.prototype.bind.apply(this._clsMap[tag], [null].concat(args)))();\n        this._instanceMap[tag] = newInstance;\n        if (newInstance.init) {\n          newInstance.init(); // TODO: lifecircle\n        }\n        return newInstance;\n      } else {\n        throw new Error(tag + '\\u672A\\u5728context\\u4E2D\\u6CE8\\u518C');\n      }\n    }\n\n    /**\n     * 避免大量的initInstance调用，初始化所有的组件\n     * @param config\n     */\n\n  }, {\n    key: 'init',\n    value: function init(config) {\n      if (this._inited) {\n        return;\n      }\n      for (var tag in this._clsMap) {\n        // if not inited, init an instance\n        if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n          this.initInstance(tag, config);\n        }\n      }\n      this._inited = true;\n    }\n\n    /**\n     * 注册一个上下文流程，提供安全的事件发送机制\n     * @param tag\n     * @param cls\n     */\n\n  }, {\n    key: 'registry',\n    value: function registry(tag, cls) {\n      var _this2 = this;\n\n      var emitter = this._emitter;\n      var checkMessageName = this._isMessageNameValid.bind(this);\n      var self = this;\n      var enhanced = function (_cls) {\n        babelHelpers.inherits(enhanced, _cls);\n\n        function enhanced(a, b, c) {\n          babelHelpers.classCallCheck(this, enhanced);\n\n          var _this = babelHelpers.possibleConstructorReturn(this, (enhanced.__proto__ || Object.getPrototypeOf(enhanced)).call(this, a, b, c));\n\n          _this.listeners = {};\n          _this.onceListeners = {};\n          _this.TAG = tag;\n          _this._context = self;\n          return _this;\n        }\n\n        babelHelpers.createClass(enhanced, [{\n          key: 'on',\n          value: function on(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.listeners[messageName]) {\n              this.listeners[messageName].push(callback);\n            } else {\n              this.listeners[messageName] = [callback];\n            }\n\n            emitter.on('' + messageName + DIRECT_EMIT_FLAG + tag, callback); // 建立定向通信监听\n            return emitter.on(messageName, callback);\n          }\n\n          /**\n           * 在某个事件触发前执行\n           * @param messageName\n           * @param callback\n           */\n\n        }, {\n          key: 'before',\n          value: function before(messageName, callback) {\n            checkMessageName(messageName);\n            if (self._hooks[messageName]) {\n              self._hooks[messageName].push(callback);\n            } else {\n              self._hooks[messageName] = [callback];\n            }\n          }\n        }, {\n          key: 'once',\n          value: function once(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.onceListeners[messageName]) {\n              this.onceListeners[messageName].push(callback);\n            } else {\n              this.onceListeners[messageName] = [callback];\n            }\n\n            emitter.once('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n            return emitter.once(messageName, callback);\n          }\n        }, {\n          key: 'emit',\n          value: function emit(messageName) {\n            checkMessageName(messageName);\n            // console.log('emit ', messageName);\n\n            var beforeList = self._hooks ? self._hooks[messageName] : null;\n\n            if (beforeList) {\n              for (var i = 0, len = beforeList.length; i < len; i++) {\n                var callback = beforeList[i];\n                callback();\n              }\n            }\n\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            return emitter.emit.apply(emitter, [messageName].concat(args));\n          }\n\n          /**\n           * 定向发送给某个组件单例的消息\n           * @param messageName\n           * @param args\n           */\n\n        }, {\n          key: 'emitTo',\n          value: function emitTo(tag, messageName) {\n            checkMessageName(messageName);\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n              args[_key3 - 2] = arguments[_key3];\n            }\n\n            return emitter.emit.apply(emitter, ['' + messageName + DIRECT_EMIT_FLAG + tag].concat(args));\n          }\n        }, {\n          key: 'off',\n          value: function off(messageName, callback) {\n            checkMessageName(messageName);\n            return emitter.off(messageName, callback);\n          }\n        }, {\n          key: 'removeListeners',\n          value: function removeListeners() {\n            var hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners);\n\n            for (var messageName in this.listeners) {\n              if (hasOwn(messageName)) {\n                var callbacks = this.listeners[messageName] || [];\n                for (var i = 0; i < callbacks.length; i++) {\n                  var callback = callbacks[i];\n                  emitter.off(messageName, callback);\n                  emitter.off('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n                }\n              }\n            }\n\n            for (var _messageName in this.onceListeners) {\n              if (hasOwn(_messageName)) {\n                var _callbacks = this.onceListeners[_messageName] || [];\n                for (var _i = 0; _i < _callbacks.length; _i++) {\n                  var _callback = _callbacks[_i];\n                  emitter.off(_messageName, _callback);\n                  emitter.off('' + _messageName + DIRECT_EMIT_FLAG + tag, _callback);\n                }\n              }\n            }\n          }\n\n          /**\n           * 在组件销毁时，默认将它注册的事件全部卸载，确保不会造成内存泄漏\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            // step1 unlisten events\n            this.removeListeners();\n            this.listeners = {};\n\n            // step2 release from context\n            delete self._instanceMap[tag];\n            if (babelHelpers.get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this)) {\n              return babelHelpers.get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this).call(this);\n            }\n          }\n        }]);\n        return enhanced;\n      }(cls);\n      this._clsMap[tag] = enhanced;\n\n      /**\n       * get instance immediately\n       * e.g const instance = context.registry(tag, Cls)(config)\n       * */\n      return function () {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return _this2.initInstance.apply(_this2, [tag].concat(args));\n      };\n    }\n\n    /**\n     * 对存在的实例进行\n     */\n\n  }, {\n    key: 'destroyInstances',\n    value: function destroyInstances() {\n      var _this3 = this;\n\n      Object.keys(this._instanceMap).forEach(function (tag) {\n        if (_this3._instanceMap[tag].destroy) {\n          _this3._instanceMap[tag].destroy();\n        }\n      });\n    }\n\n    /**\n     * 编解码流程无需关注事件的解绑\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._emitter = null;\n      this.allowedEvents = [];\n      this._clsMap = null;\n      this._context = null;\n      this._hooks = null;\n      this.destroyInstances();\n    }\n\n    /**\n     * 对信道进行收拢\n     * @param messageName\n     * @private\n     */\n\n  }, {\n    key: '_isMessageNameValid',\n    value: function _isMessageNameValid(messageName) {\n      if (!this.allowedEvents.indexOf(messageName) < 0) {\n        throw new Error('unregistered message name: ' + messageName);\n      }\n    }\n  }]);\n  return Context;\n}();\n\nexport default Context;","var LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  DETECT_CHANGE_STREAM_DISCONTINUE: 'DETECT_CHANGE_STREAM_DISCONTINUE',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n\n  // hls专有events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYTO_EVENTS: CRYTO_EVENTS\n};","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport default sniffer;","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nexport default le;","var UTF8 = function () {\n  function UTF8() {\n    babelHelpers.classCallCheck(this, UTF8);\n  }\n\n  babelHelpers.createClass(UTF8, null, [{\n    key: 'decode',\n    value: function decode(uint8array) {\n      var out = [];\n      var input = uint8array;\n      var i = 0;\n      var length = uint8array.length;\n\n      while (i < length) {\n        if (input[i] < 0x80) {\n          out.push(String.fromCharCode(input[i]));\n          ++i;\n          continue;\n        } else if (input[i] < 0xC0) {\n          // fallthrough\n        } else if (input[i] < 0xE0) {\n          if (UTF8._checkContinuation(input, i, 1)) {\n            var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n            if (ucs4 >= 0x80) {\n              out.push(String.fromCharCode(ucs4 & 0xFFFF));\n              i += 2;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF0) {\n          if (UTF8._checkContinuation(input, i, 2)) {\n            var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n            if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n              out.push(String.fromCharCode(_ucs & 0xFFFF));\n              i += 3;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF8) {\n          if (UTF8._checkContinuation(input, i, 3)) {\n            var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n            if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n              _ucs2 -= 0x10000;\n              out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n              out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n              i += 4;\n              continue;\n            }\n          }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n      }\n\n      return out.join('');\n    }\n  }, {\n    key: '_checkContinuation',\n    value: function _checkContinuation(uint8array, start, checkLength) {\n      var array = uint8array;\n      if (start + checkLength < array.length) {\n        while (checkLength--) {\n          if ((array[++start] & 0xC0) !== 0x80) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n  return UTF8;\n}();\n\nexport default UTF8;","var MediaSegmentList = function () {\n    function MediaSegmentList(type) {\n        babelHelpers.classCallCheck(this, MediaSegmentList);\n\n        this._type = type;\n        this._list = [];\n        this._lastAppendLocation = -1; // cached last insert location\n    }\n\n    babelHelpers.createClass(MediaSegmentList, [{\n        key: \"isEmpty\",\n        value: function isEmpty() {\n            return this._list.length === 0;\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            this._list = [];\n            this._lastAppendLocation = -1;\n        }\n    }, {\n        key: \"_searchNearestSegmentBefore\",\n        value: function _searchNearestSegmentBefore(beginDts) {\n            var list = this._list;\n            if (list.length === 0) {\n                return -2;\n            }\n            var last = list.length - 1;\n            var mid = 0;\n            var lbound = 0;\n            var ubound = last;\n\n            var idx = 0;\n\n            if (beginDts < list[0].originDts) {\n                idx = -1;\n                return idx;\n            }\n\n            while (lbound <= ubound) {\n                mid = lbound + Math.floor((ubound - lbound) / 2);\n                if (mid === last || beginDts > list[mid].lastSample.originDts && beginDts < list[mid + 1].originDts) {\n                    idx = mid;\n                    break;\n                } else if (list[mid].originDts < beginDts) {\n                    lbound = mid + 1;\n                } else {\n                    ubound = mid - 1;\n                }\n            }\n            return idx;\n        }\n    }, {\n        key: \"_searchNearestSegmentAfter\",\n        value: function _searchNearestSegmentAfter(beginDts) {\n            return this._searchNearestSegmentBefore(beginDts) + 1;\n        }\n    }, {\n        key: \"append\",\n        value: function append(segment) {\n            var list = this._list;\n            var lastAppendIdx = this._lastAppendLocation;\n            var insertIdx = 0;\n\n            if (lastAppendIdx !== -1 && lastAppendIdx < list.length && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && segment.originStartDts < list[lastAppendIdx + 1].originStartDts)) {\n                insertIdx = lastAppendIdx + 1; // use cached location idx\n            } else {\n                if (list.length > 0) {\n                    insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n                }\n            }\n\n            this._lastAppendLocation = insertIdx;\n            this._list.splice(insertIdx, 0, segment);\n        }\n    }, {\n        key: \"getLastSegmentBefore\",\n        value: function getLastSegmentBefore(beginDts) {\n            var idx = this._searchNearestSegmentBefore(beginDts);\n            if (idx >= 0) {\n                return this._list[idx];\n            } else {\n                // -1\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastSampleBefore\",\n        value: function getLastSampleBefore(beginDts) {\n            var segment = this.getLastSegmentBefore(beginDts);\n            if (segment !== null) {\n                return segment.lastSample;\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastRAPBefore\",\n        value: function getLastRAPBefore(beginDts) {\n            var segmentIdx = this._searchNearestSegmentBefore(beginDts);\n            var randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n                segmentIdx--;\n                randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            }\n            if (randomAccessPoints.length > 0) {\n                return randomAccessPoints[randomAccessPoints.length - 1];\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"type\",\n        get: function get() {\n            return this._type;\n        }\n    }, {\n        key: \"length\",\n        get: function get() {\n            return this._list.length;\n        }\n    }]);\n    return MediaSegmentList;\n}();\n\nexport default MediaSegmentList;","var MediaSample = function () {\n  function MediaSample(info) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, MediaSample);\n\n    var _default = MediaSample.getDefaultInf();\n\n    if (!info || Object.prototype.toString.call(info) !== '[object Object]') {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    Object.entries(sample).forEach(function (_ref) {\n      var _ref2 = babelHelpers.slicedToArray(_ref, 2),\n          k = _ref2[0],\n          v = _ref2[1];\n\n      _this[k] = v;\n    });\n  }\n\n  babelHelpers.createClass(MediaSample, null, [{\n    key: 'getDefaultInf',\n    value: function getDefaultInf() {\n      return {\n        dts: null,\n        pts: null,\n        duration: null,\n        position: null,\n        isRAP: false, // is Random access point\n        originDts: null\n      };\n    }\n  }]);\n  return MediaSample;\n}();\n\nexport default MediaSample;","var MediaSegment = function () {\n    function MediaSegment() {\n        babelHelpers.classCallCheck(this, MediaSegment);\n\n        this.startDts = -1;\n        this.endDts = -1;\n        this.startPts = -1;\n        this.endPts = -1;\n        this.originStartDts = -1;\n        this.originEndDts = -1;\n        this.randomAccessPoints = [];\n        this.firstSample = null;\n        this.lastSample = null;\n    }\n\n    babelHelpers.createClass(MediaSegment, [{\n        key: \"addRAP\",\n        value: function addRAP(sample) {\n            sample.isRAP = true;\n            this.randomAccessPoints.push(sample);\n        }\n    }]);\n    return MediaSegment;\n}();\n\nexport default MediaSegment;","export var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    babelHelpers.classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  babelHelpers.createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    babelHelpers.classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  babelHelpers.createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n  return VideoTrackMeta;\n}();","export var AudioTrackSample = function () {\n  function AudioTrackSample(info) {\n    babelHelpers.classCallCheck(this, AudioTrackSample);\n\n    var _default = AudioTrackSample.getDefault();\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  babelHelpers.createClass(AudioTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n  return AudioTrackSample;\n}();\n\nexport var VideoTrackSample = function () {\n  function VideoTrackSample(info) {\n    babelHelpers.classCallCheck(this, VideoTrackSample);\n\n    var _default = VideoTrackSample.getDefault();\n\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  babelHelpers.createClass(VideoTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        isKeyframe: false, // is Random access point\n        originDts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n  return VideoTrackSample;\n}();","var MSE = function () {\n  function MSE(configs, context) {\n    babelHelpers.classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n  }\n\n  babelHelpers.createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this.container.src = URL.createObjectURL(this.mediaSource);\n      this.url = this.container.src;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx) {\n      this._context = newCtx;\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit('SOURCE_UPDATE_END');\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (this.mediaSource.readyState !== 'open') {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track) {\n          var dur = type === 'audio' ? 21 : 40;\n          if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n          if (sources[type].data.length >= this.preloadTime / dur) {\n            add = true;\n          }\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 0) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n          var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n          this.sourceBuffers[_type] = sourceBuffer;\n          sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (sources) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var type = Object.keys(this.sourceBuffers)[i];\n          var sourceBuffer = this.sourceBuffers[type];\n          var source = sources.sources[type];\n          if (source && !source.inited) {\n            // console.log('append initial segment')\n            try {\n              sourceBuffer.appendBuffer(source.init.buffer.buffer);\n              source.inited = true;\n            } catch (e) {\n              // DO NOTHING\n            }\n          } else if (source) {\n            var data = source.data.shift();\n            if (data) {\n              try {\n                sourceBuffer.appendBuffer(data.buffer.buffer);\n              } catch (e) {\n                source.data.unshift(data);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      var _mediaSource = this.mediaSource,\n          readyState = _mediaSource.readyState,\n          activeSourceBuffers = _mediaSource.activeSourceBuffers;\n\n      if (readyState === 'open' && activeSourceBuffers.length === 0) {\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          // log\n        }\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        if (!buffer.updating) {\n\n          // console.log('remove', start, end)\n          buffer.remove(start, end);\n        }\n      }\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      return this.removeBuffers().then(function () {\n        for (var i = 0; i < Object.keys(_this2.sourceBuffers).length; i++) {\n          var _buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n          _this2.mediaSource.removeSourceBuffer(_buffer);\n          delete _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        }\n\n        _this2.container.removeEventListener('timeupdate', _this2.onTimeUpdate);\n        _this2.container.removeEventListener('waiting', _this2.onWaiting);\n        _this2.mediaSource.removeEventListener('sourceopen', _this2.onSourceOpen);\n\n        _this2.endOfStream();\n        window.URL.revokeObjectURL(_this2.url);\n\n        _this2.url = null;\n        _this2.configs = {};\n        _this2.container = null;\n        _this2.mediaSource = null;\n        _this2.sourceBuffers = {};\n        _this2.preloadTime = 1;\n      });\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      var buffered = buffer.buffered;\n      var bEnd = 0.1;\n      for (var i = 0, len = buffered.length; i < len; i++) {\n        bEnd = buffered.end(i);\n      }\n      try {\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n  return MSE;\n}();\n\nexport default MSE;","var Stream = function () {\n  function Stream(buffer) {\n    babelHelpers.classCallCheck(this, Stream);\n\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.dataview = new DataView(buffer);\n      this.dataview.position = 0;\n    } else {\n      throw new Error('data is invalid');\n    }\n  }\n\n  babelHelpers.createClass(Stream, [{\n    key: 'back',\n    value: function back(count) {\n      this.position -= count;\n    }\n  }, {\n    key: 'skip',\n    value: function skip(count) {\n      var loop = Math.floor(count / 4);\n      var last = count % 4;\n      for (var i = 0; i < loop; i++) {\n        Stream.readByte(this.dataview, 4);\n      }\n      if (last > 0) {\n        Stream.readByte(this.dataview, last);\n      }\n    }\n\n    /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n\n  }, {\n    key: 'readUint8',\n    value: function readUint8() {\n      return Stream.readByte(this.dataview, 1);\n    }\n  }, {\n    key: 'readUint16',\n    value: function readUint16() {\n      return Stream.readByte(this.dataview, 2);\n    }\n  }, {\n    key: 'readUint24',\n    value: function readUint24() {\n      return Stream.readByte(this.dataview, 3);\n    }\n  }, {\n    key: 'readUint32',\n    value: function readUint32() {\n      return Stream.readByte(this.dataview, 4);\n    }\n  }, {\n    key: 'readUint64',\n    value: function readUint64() {\n      return Stream.readByte(this.dataview, 8);\n    }\n  }, {\n    key: 'readInt8',\n    value: function readInt8() {\n      return Stream.readByte(this.dataview, 1, true);\n    }\n  }, {\n    key: 'readInt16',\n    value: function readInt16() {\n      return Stream.readByte(this.dataview, 2, true);\n    }\n  }, {\n    key: 'readInt32',\n    value: function readInt32() {\n      return Stream.readByte(this.dataview, 4, true);\n    }\n  }, {\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >>> 24 & 0xff, value >>> 16 & 0xff, value >>> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.buffer.byteLength;\n    }\n  }, {\n    key: 'position',\n    set: function set(value) {\n      this.dataview.position = value;\n    },\n    get: function get() {\n      return this.dataview.position;\n    }\n  }], [{\n    key: 'readByte',\n    value: function readByte(buffer, size, sign) {\n      var res = void 0;\n      switch (size) {\n        case 1:\n          if (sign) {\n            res = buffer.getInt8(buffer.position);\n          } else {\n            res = buffer.getUint8(buffer.position);\n          }\n          break;\n        case 2:\n          if (sign) {\n            res = buffer.getInt16(buffer.position);\n          } else {\n            res = buffer.getUint16(buffer.position);\n          }\n          break;\n        case 3:\n          if (sign) {\n            throw new Error('not supported for readByte 3');\n          } else {\n            res = buffer.getUint8(buffer.position) << 16;\n            res |= buffer.getUint8(buffer.position + 1) << 8;\n            res |= buffer.getUint8(buffer.position + 2);\n          }\n          break;\n        case 4:\n          if (sign) {\n            res = buffer.getInt32(buffer.position);\n          } else {\n            res = buffer.getUint32(buffer.position);\n          }\n          break;\n        case 8:\n          if (sign) {\n            throw new Error('not supported for readBody 8');\n          } else {\n            res = buffer.getUint32(buffer.position) << 32;\n            res |= buffer.getUint32(buffer.position + 4);\n          }\n          break;\n        default:\n          res = '';\n      }\n      buffer.position += size;\n      return res;\n    }\n  }]);\n  return Stream;\n}();\n\nexport default Stream;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    babelHelpers.classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  babelHelpers.createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n  return Buffer;\n}();\n\nexport default Buffer;","import EVENTS from '../constants/events';\nvar CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\n\nvar Crypto = function () {\n    function Crypto(config) {\n        babelHelpers.classCallCheck(this, Crypto);\n\n        this.inputBuffer = config.inputbuffer;\n        this.outputBuffer = config.outputbuffer;\n        this.key = config.key;\n        this.iv = config.iv;\n        this.method = config.method;\n\n        this.crypto = window.crypto || window.msCrypto;\n    }\n\n    babelHelpers.createClass(Crypto, [{\n        key: 'init',\n        value: function init() {\n            this.on(CRYTO_EVENTS.START_DECRYPT, this.decript.bind(this));\n        }\n    }, {\n        key: 'decript',\n        value: function decript() {\n            var _this = this;\n\n            if (!this.aeskey) {\n                var sbkey = this.crypto.subtle.importKey('raw', this.key.buffer, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n                sbkey.then(function (key) {\n                    _this.aeskey = key;\n                    _this.decriptData();\n                });\n            } else {\n                this.decriptData();\n            }\n        }\n    }, {\n        key: 'decriptData',\n        value: function decriptData() {\n            var _this2 = this;\n\n            var inputbuffer = this._context.getInstance(this.inputBuffer);\n            var outputbuffer = this._context.getInstance(this.outputBuffer);\n            var data = inputbuffer.shift();\n            if (data) {\n                this.crypto.subtle.decrypt({ name: 'AES-CBC', iv: this.iv.buffer }, this.aeskey, data).then(function (res) {\n                    outputbuffer.push(new Uint8Array(res));\n                    _this2.emit(CRYTO_EVENTS.DECRYPTED);\n                    _this2.decriptData(data);\n                });\n            }\n        }\n    }]);\n    return Crypto;\n}();\n\nexport default Crypto;","import _Context from './context';\n\n// Modules from constants\nimport _EVENTS from './constants/events';\nimport { CONTEXT_COMOMANDS } from './constants/worker-commands';\n\n// Modules from env\nimport _sniffer from './env/sniffer';\nimport _isLe from './env/isle';\nimport _UTF8 from './env/utf8';\n\n// Models\nimport _MediaInfo from './models/media-info';\nimport _MediaSample from './models/media-sample';\nimport _MediaSegment from './models/media-segment';\nimport _MediaSegmentList from './models/media-segment-list';\nimport { AudioTrackMeta as _AudioTrackMeta, VideoTrackMeta as _VideoTrackMeta } from './models/track-meta';\n\nimport { AudioTrackSample as _AudioTrackSample, VideoTrackSample as _VideoTrackSample } from './models/track-sample';\n\n// Modules from mse\nimport _Mse from './mse/index';\n\n// Modules from write\nimport _Stream from './write/stream';\nimport _Buffer from './write/buffer';\n\n// Crypto\nimport _Crypto from './crypto';\n\nexport var Context = _Context;\nexport var EVENTS = _EVENTS;\nexport var WORKER_COMMANDS = {\n  CONTEXT_COMOMANDS: CONTEXT_COMOMANDS\n};\nexport var sniffer = _sniffer;\nexport var isLe = _isLe;\nexport var UTF8 = _UTF8;\nexport var MediaInfo = _MediaInfo;\nexport var MediaSample = _MediaSample;\nexport var MediaSegment = _MediaSegment;\nexport var MediaSegmentList = _MediaSegmentList;\nexport var AudioTrackMeta = _AudioTrackMeta;\nexport var VideoTrackMeta = _VideoTrackMeta;\nexport var AudioTrackSample = _AudioTrackSample;\nexport var VideoTrackSample = _VideoTrackSample;\nexport var Mse = _Mse;\nexport var Stream = _Stream;\nexport var Buffer = _Buffer;\nexport var Crypto = _Crypto;","var Track = function () {\n  /**\n   * The constructor.\n   */\n  function Track() {\n    babelHelpers.classCallCheck(this, Track);\n\n    this.id = -1;\n    this.sequenceNumber = 0;\n    this.samples = [];\n    this.droppedSamples = [];\n    this.length = 0;\n  }\n\n  /**\n   * Reset the track.\n   */\n\n\n  babelHelpers.createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n    /**\n     * destroy the track.\n     */\n\n  }, {\n    key: 'distroy',\n    value: function distroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  babelHelpers.inherits(AudioTrack, _Track);\n\n  /**\n   * The constructor for audio track.\n   */\n  function AudioTrack() {\n    babelHelpers.classCallCheck(this, AudioTrack);\n\n    var _this = babelHelpers.possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  babelHelpers.inherits(VideoTrack, _Track2);\n\n  /**\n   * The constructor for video track.\n   */\n  function VideoTrack() {\n    babelHelpers.classCallCheck(this, VideoTrack);\n\n    var _this2 = babelHelpers.possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    _this2.type = 'video';\n    _this2.dropped = 0;\n    return _this2;\n  }\n  /**\n   * reset the video track.\n   */\n\n\n  babelHelpers.createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    babelHelpers.classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  babelHelpers.createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n  return Tracks;\n}();","export var XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    babelHelpers.classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n\n\n  babelHelpers.createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n  return XgBuffer;\n}();\n\nexport var RemuxBuffer = function () {\n  function RemuxBuffer() {\n    babelHelpers.classCallCheck(this, RemuxBuffer);\n\n    this.video = [];\n    this.audio = [];\n  }\n\n  babelHelpers.createClass(RemuxBuffer, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.video = [];\n      this.audio = [];\n    }\n  }]);\n  return RemuxBuffer;\n}();","var Source = function Source() {\n  babelHelpers.classCallCheck(this, Source);\n\n  this.mimetype = '';\n  this.init = null;\n  this.data = [];\n};\n\nvar PreSource = function () {\n  function PreSource() {\n    babelHelpers.classCallCheck(this, PreSource);\n\n    this.sources = {};\n  }\n\n  babelHelpers.createClass(PreSource, [{\n    key: 'getSource',\n    value: function getSource(source) {\n      return this.sources[source];\n    }\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new Source();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.sources = {};\n    }\n  }]);\n  return PreSource;\n}();\n\nexport default PreSource;","import _Track, { Tracks as _Tracks, AudioTrack as _AudioTrack, VideoTrack as _VideoTrack } from './track';\nimport { XgBuffer as _XgBuffer, RemuxBuffer as _RemuxBuffer } from './buffer';\nimport _PreSource from './presouce';\n\nexport var Track = _Track;\nexport var Tracks = _Tracks;\nexport var AudioTrack = _AudioTrack;\nexport var VideoTrack = _VideoTrack;\nexport var XgBuffer = _XgBuffer;\nexport var RemuxBuffer = _RemuxBuffer;\nexport var PreSource = _PreSource;","import { EVENTS } from 'xgplayer-utils';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    babelHelpers.classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  babelHelpers.createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'load',\n    value: function load(url, opts) {\n      var _this = this;\n      this.url = url;\n\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n      _this.loading = true;\n      return fetch(this.url, params).then(function (response) {\n        if (response.ok) {\n          _this.status = response.status;\n          return _this._onFetchResponse(response);\n        }\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, new Error('invalid response.'));\n      }).catch(function (error) {\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, error);\n        throw new Error(error.message);\n      });\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      var _this = this;\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n      this._reader && this._reader.read().then(function (val) {\n        if (_this._canceled || _this._destroyed) {\n          if (_this._reader) {\n            try {\n              _this._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this.loading = false;\n          _this.status = 0;\n          _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          return;\n        }\n\n        buffer.push(val.value);\n        _this.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        return _this._onReader(reader, taskno);\n      }).catch(function (error) {\n        _this.loading = false;\n        _this.emit(LOADER_EVENTS.LOADER_ERROR, _this.TAG, error);\n      });\n    }\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // 添加自定义头\n      };if (babelHelpers.typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (babelHelpers.typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials 在默认情况下不被使用。\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // 防止failed: 200错误被打印到控制台上\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      this._canceled = true;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      this.cancel();\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n  return FetchLoader;\n}();\n\nexport default FetchLoader;","import _FetchLoader from './fetch-loader';\n\nexport var FetchLoader = _FetchLoader;","var Golomb = function () {\n  function Golomb(uint8array) {\n    babelHelpers.classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  babelHelpers.createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO 异常处理\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }]);\n  return Golomb;\n}();\n\nexport default Golomb;","/* eslint-disable camelcase  */\n/* eslint-disable one-var  */\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    babelHelpers.classCallCheck(this, SPSParser);\n  }\n\n  babelHelpers.createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1,\n          par_height = 1;\n      var fps = 0,\n          fps_fixed = true,\n          fps_num = 0,\n          fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0,\n          crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var last_scale = 8,\n          next_scale = 8;\n      var delta_scale = 0;\n      for (var i = 0; i < count; i++) {\n        if (next_scale !== 0) {\n          delta_scale = gb.readSEG();\n          next_scale = (last_scale + delta_scale + 256) % 256;\n        }\n        last_scale = next_scale === 0 ? last_scale : next_scale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n      return meta;\n    }\n  }]);\n  return SPSParser;\n}();\n\nexport default SPSParser;","import SpsParser from './sps';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    babelHelpers.classCallCheck(this, Nalunit);\n  }\n\n  babelHelpers.createClass(Nalunit, null, [{\n    key: 'getNalunits',\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32();\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = buffer.buffer.slice(buffer.position, buffer.position + length);\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = buffer.length;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225;\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n  return Nalunit;\n}();\n\nexport default Nalunit;","var AAC = function () {\n  function AAC() {\n    babelHelpers.classCallCheck(this, AAC);\n  }\n\n  babelHelpers.createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n  return AAC;\n}();\n\nexport default AAC;","import { EVENTS } from 'xgplayer-utils';\nimport AAC from './aac/aac-helper';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS,\n    LOADER_EVENTS = EVENTS.LOADER_EVENTS;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    babelHelpers.classCallCheck(this, Compatibility);\n\n    this.nextAudioDts = 0; // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0; // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined; // 上一段音频数据的长度\n    this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0; // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0; // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // 补充音频帧（）\n    this.filledVideoSamples = []; // 补充视频帧（）\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    this._videoLargeGap = 0;\n    this._audioLargeGap = 0;\n  }\n\n  babelHelpers.createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // 估算下一段音频数据的dts\n      this.nextVideoDts = null; // 估算下一段视频数据的dts\n\n      this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n      this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n      this.lastVideoDts = undefined; // 上一段音频数据的长度\n      this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n      // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n      // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // 补充音频帧（）\n      this.filledVideoSamples = []; // 补充视频帧（）\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n      if (this._firstAudioSample) {\n        this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples);\n      }\n\n      var _Compatibility$detact = Compatibility.detactChangeStream(this.videoTrack.samples),\n          videoChanged = _Compatibility$detact.changed,\n          videoChangedIdx = _Compatibility$detact.changedIdx;\n\n      if (videoChanged && !isFirstAudioSamples) {\n        this.fixChangeStreamVideo(videoChangedIdx);\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detact2 = Compatibility.detactChangeStream(this.audioTrack.samples),\n          audioChanged = _Compatibility$detact2.changed,\n          audioChangedIdx = _Compatibility$detact2.changedIdx;\n\n      if (audioChanged) {\n        this.fixChangeStreamAudio(audioChangedIdx);\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      // console.log('next video', this.nextVideoDts)\n\n      for (var i = 0, len = videoSamples.length; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      if (meta.frameRate && meta.frameRate.fixed === false) {\n        return;\n      }\n\n      if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n        return;\n      }\n\n      // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n      var firstSample = videoSamples[0];\n\n      // step0.修复hls流出现巨大gap，需要强制重定位的问题\n      if (this._videoLargeGap !== 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      if (firstSample.dts !== this._firstVideoSample.dts && (streamChangeStart || this.videoLastSample && Compatibility.detectLargeGap(this.videoLastSample.dts, firstSample))) {\n        if (streamChangeStart) {\n          this.nextVideoDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        } else {\n          this.nextVideoDts = this.videoLastSample.dts;\n        }\n\n        this._videoLargeGap = this.nextVideoDts - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. 修复与audio首帧差距太大的问题\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i = 0; _i < fillCount; _i++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // 视频头部帧缺失需要复制第一帧\n            // 重新计算sample的dts和pts\n            clonedFirstSample.dts = videoFirstDts - (_i + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (gap < -2 * meta.refSampleDuration) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      this.videoLastSample = curLastSample;\n\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      // console.log('next audio', this.nextAudioDts)\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n      // 对audioSamples按照dts做排序\n      // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n      if (this._audioLargeGap !== 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n\n      if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n        if (streamChangeStart) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n      // step0. 首帧与video首帧间距大的问题\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n        if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < silentSampleCount; _i2++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i2 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. 处理samples段之间的丢帧情况\n        // 当发现duration差距大于1帧时进行补帧\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          meta.refSampleDurationFixed = undefined;\n        }\n\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n            // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n            meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap;\n          } else {\n            var silentFrameCount = Math.floor(gap / meta.refSampleDuration);\n\n            for (var _i3 = 0; _i3 < silentFrameCount; _i3++) {\n              var computed = firstDts - (_i3 + 1) * meta.refSampleDuration;\n              var _silentSample = Object.assign({}, audioSamples[0], {\n                dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n              });\n\n              this.filledAudioSamples.push({\n                dts: _silentSample.dts,\n                size: _silentSample.data.byteLength\n              });\n              this.audioTrack.samples.unshift(_silentSample);\n            }\n          }\n        } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n          // 当差距比较小的时候将音频帧重定位\n          // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n          audioSamples[0].dts = this.nextAudioDts;\n          audioSamples[0].pts = this.nextAudioDts;\n        } else if (gap < 0) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n        }\n      }\n      var lastOriginDts = audioSamples[audioSamples.length - 1].originDts;\n      var lastDts = audioSamples[audioSamples.length - 1].dts;\n      var lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration;\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration;\n      this.lastAudioDts = lastDts;\n\n      audioSamples[audioSamples.length - 1].duration = lastSampleDuration;\n\n      // step3. 修复samples段内部的dts异常问题\n      for (var _i4 = 0, _len = audioSamples.length; _i4 < _len; _i4++) {\n        var current = audioSamples[_i4];\n        var next = audioSamples[_i4 + 1];\n\n        if (!next) {\n          break;\n        }\n\n        var duration = next.dts - current.dts;\n        audioSamples[_i4].duration = duration;\n        /*\n        if (duration > (2 * meta.refSampleDuration)) {\n          // 两帧之间间隔太大，需要补空白帧\n          /**\n          let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n          let frameIdx = 0\n           while (frameIdx < silentFrameCount) {\n            const silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n              filtered: 0,\n              isSilent: true\n            }\n             audioSamples.splice(i, 0, silentSample)\n             this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n             frameIdx++\n            i++ // 不对静音帧做比较\n          }\n        } */\n      }\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var prevDts = changeIdx === 0 ? this.videoLastSample ? this.videoLastSample.dts : this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * meta.refSampleDuration;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixVideo(false);\n      }\n\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n\n      if (this.videoLastSample) {\n        streamChangeStart = this.videoLastSample.dts + meta.refSampleDuration;\n      } else {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start + this.dtsBase : null;\n      }\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * meta.refSampleDuration;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixAudio(false);\n      }\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n      if (this.nextAudioDts) {\n        streamChangeStart = this.nextAudioDts;\n      } else {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start + this.dtsBase : null;\n      }\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // 获取video和audio的首帧数据\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // 寻找dts最小的帧作为首个音频帧\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * 在没有refSampleDuration的问题流中，\n     */\n\n  }, {\n    key: 'fixRefSampleDuration',\n    value: function fixRefSampleDuration(meta, samples) {\n      var isVideo = meta.type === 'video';\n      var allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount;\n      var firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts;\n      var filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length;\n\n      if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          meta.refSampleDuration = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // 将refSampleDuration重置为计算后的平均值\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n          if (durationAvg > 0 && durationAvg < 1000) {\n            meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n          }\n        }\n      }\n    }\n\n    /**\n     * 记录截止目前一共播放了多少帧\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * 去除不合法的帧（倒退、重复帧）\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var _firstVideoSample = this._firstVideoSample,\n          _firstAudioSample = this._firstAudioSample;\n\n\n      if (_firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample, index) {\n          if (sample === _firstAudioSample) {\n            return true;\n          }\n          return sample.dts > _firstAudioSample.dts;\n        });\n      }\n\n      if (_firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample, index) {\n          if (sample === _firstVideoSample) {\n            return true;\n          }\n          return sample.dts > _firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n\n    /**\n     * 寻找dts最小的sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectLargeGap',\n    value: function detectLargeGap(nextDts, firstSample) {\n      if (nextDts === null) {\n        return;\n      }\n      var curDts = firstSample.dts || 0;\n      var cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000; // fix hls流出现大量流dts间距问题\n      var cond2 = firstSample.options && firstSample.options.discontinue;\n\n      return cond1 || cond2;\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * 中途换流\n     */\n\n  }, {\n    key: 'detactChangeStream',\n    value: function detactChangeStream(samples) {\n      var changed = false;\n      var changedIdx = -1;\n      for (var i = 0, len = samples.length; i < len; i++) {\n        if (samples[i].options && samples[i].options.meta) {\n          changed = true;\n          changedIdx = i;\n          break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdx: changedIdx\n      };\n    }\n  }]);\n  return Compatibility;\n}();\n\nexport default Compatibility;","import _Nalunit from './h264/nalunit';\nimport _SpsParser from './h264/nalunit/sps';\nimport _Compatibility from './compatibility';\n\nexport var Nalunit = _Nalunit;\nexport var SpsParser = _SpsParser;\nexport var Compatibility = _Compatibility;","import { Buffer } from 'xgplayer-utils';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\nclass Fmp4 {\n  static size (value) {\n    return Buffer.writeUint32(value)\n  }\n  static initBox (size, name, ...content) {\n    const buffer = new Buffer()\n    buffer.write(Fmp4.size(size), Fmp4.type(name), ...content)\n    return buffer.buffer\n  }\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n  static ftyp () {\n    return Fmp4.initBox(24, 'ftyp', new Uint8Array([\n      0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n    ]))\n  }\n  static moov ({ type, meta }) {\n    let size = 8\n    let mvhd = Fmp4.mvhd(meta.duration, meta.timescale)\n    let trak\n\n    if (type === 'video') {\n      trak = Fmp4.videoTrak(meta)\n    } else {\n      trak = Fmp4.audioTrak(meta)\n    }\n\n    let mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n    [mvhd, trak, mvex].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moov', mvhd, trak, mvex)\n  }\n  static mvhd (duration, timescale = 1000) {\n    // duration *= timescale;\n    let bytes = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      (timescale >>> 24) & 0xFF,\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      (duration >>> 24) & 0xFF,\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n    ])\n    return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes))\n  }\n  static videoTrak (data) {\n    let size = 8\n\n    let tkhd = Fmp4.tkhd({\n      id: 1,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: data.presentWidth,\n      height: data.presentHeight,\n      type: 'video'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'video',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      avcc: data.avcc,\n      parRatio: data.parRatio,\n      width: data.presentWidth,\n      height: data.presentHeight\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static audioTrak (data) {\n    let size = 8\n    let tkhd = Fmp4.tkhd({\n      id: 2,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: 0,\n      height: 0,\n      type: 'audio'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'audio',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      channelCount: data.channelCount,\n      samplerate: data.sampleRate,\n      config: data.config\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static tkhd (data) {\n    let id = data.id\n    let duration = data.duration\n    let width = data.width\n    let height = data.height\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      (id >>> 24) & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      (id >>> 16) & 0xFF,\n      (id >>> 8) & 0xFF,\n      (id) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      (duration >>> 24) & 0xFF, // duration: 4 bytes track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      (width >>> 8) & 0xFF, // //宽度\n      (width) & 0xFF,\n      0x00, 0x00,\n      (height >>> 8) & 0xFF, // 高度\n      (height) & 0xFF,\n      0x00, 0x00\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'tkhd', content)\n  }\n  static edts (data) {\n    let buffer = new Buffer()\n    let duration = data.duration\n    let mediaTime = data.mediaTime\n    buffer.write(Fmp4.size(36), Fmp4.type('edts'))\n    // elst\n    buffer.write(Fmp4.size(28), Fmp4.type('elst'))\n    buffer.write(new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, // entry count\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      (mediaTime >> 24) & 0xff, (mediaTime >> 16) & 0xff, (mediaTime >> 8) & 0xff, mediaTime & 0xff,\n      0x00, 0x00, 0x00, 0x01 // media rate\n    ]))\n    return buffer.buffer\n  }\n  static mdia (data) {\n    let size = 8\n    let mdhd = Fmp4.mdhd(data.timescale, data.duration)\n    let hdlr = Fmp4.hdlr(data.type)\n    let minf = Fmp4.minf(data);\n    [mdhd, hdlr, minf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf)\n  }\n  static mdhd (timescale = 1000, duration) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      (timescale >>> 24) & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n      (duration >>> 24) & 0xFF, // duration: 4 bytes  track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n    ])\n    return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content)\n  }\n  static hdlr (type) {\n    let value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]\n    if (type === 'audio') {\n      value.splice(8, 4, ...[0x73, 0x6f, 0x75, 0x6e])\n      value.splice(24, 13, ...[0x53, 0x6f, 0x75, 0x6e,\n        0x64, 0x48, 0x61, 0x6e,\n        0x64, 0x6c, 0x65, 0x72, 0x00])\n    }\n    return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value))\n  }\n  static minf (data) {\n    let size = 8\n    let vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd()\n    let dinf = Fmp4.dinf()\n    let stbl = Fmp4.stbl(data);\n    [vmhd, dinf, stbl].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl)\n  }\n  static vmhd () {\n    return Fmp4.initBox(20, 'vmhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]))\n  }\n  static smhd () {\n    return Fmp4.initBox(16, 'smhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]))\n  }\n  static dinf () {\n    let buffer = new Buffer()\n    let dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]\n    buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref))\n    return buffer.buffer\n  }\n  static stbl (data) {\n    let size = 8\n    let stsd = Fmp4.stsd(data)\n    let stts = Fmp4.stts()\n    let stsc = Fmp4.stsc()\n    let stsz = Fmp4.stsz()\n    let stco = Fmp4.stco();\n    [stsd, stts, stsc, stsz, stco].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco)\n  }\n  static stsd (data) {\n    let content\n    if (data.type === 'audio') {\n      // if (!data.isAAC && data.codec === 'mp4') {\n      //     content = FMP4.mp3(data);\n      // } else {\n      //\n      // }\n      // 支持mp4a\n      content = Fmp4.mp4a(data)\n    } else {\n      content = Fmp4.avc1(data)\n    }\n    return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content)\n  }\n  static mp4a (data) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (data.samplerate >> 8) & 0xff,\n      data.samplerate & 0xff, //\n      0x00, 0x00\n    ])\n    let esds = Fmp4.esds(data.config)\n    return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds)\n  }\n  static esds (config = [43, 146, 8, 0]) {\n    const configlen = config.length\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n    ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]))\n    buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content)\n    return buffer.buffer\n  }\n  static avc1 (data) {\n    let buffer = new Buffer()\n    let size = 40// 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n    // let sps = data.sps\n    // let pps = data.pps\n    let width = data.width\n    let height = data.height\n    let hSpacing = data.parRatio.height\n    let vSpacing = data.parRatio.width\n    // let avccBuffer = new Buffer()\n    // avccBuffer.write(new Uint8Array([\n    //   0x01, // version\n    //   sps[1], // profile\n    //   sps[2], // profile compatible\n    //   sps[3], // level\n    //   0xfc | 3,\n    //   0xE0 | 1 // 目前只处理一个sps\n    // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n    // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n    let avcc = data.avcc\n    let avc1 = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1\n    let btrt = new Uint8Array([\n      0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n    ])\n    let pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n\n    buffer.write(\n      Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1,\n      Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc,\n      Fmp4.size(20), Fmp4.type('btrt'), btrt,\n      Fmp4.size(16), Fmp4.type('pasp'), pasp\n    )\n    return buffer.buffer\n  }\n  static stts () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stts', content)\n  }\n  static stsc () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stsc', content)\n  }\n  static stco () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stco', content)\n  }\n  static stsz () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n    ])\n    return Fmp4.initBox(20, 'stsz', content)\n  }\n  static mvex (duration, timescale = 1000, trackID) {\n    let buffer = new Buffer()\n    let mehd = Buffer.writeUint32(duration)\n    buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID))\n    return buffer.buffer\n  }\n  static trex (id) {\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'trex', content)\n  }\n  static moof (data) {\n    let size = 8\n    let mfhd = Fmp4.mfhd()\n    let traf = Fmp4.traf(data);\n    [mfhd, traf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moof', mfhd, traf)\n  }\n  static mfhd () {\n    let content = Buffer.writeUint32(Fmp4.sequence)\n    Fmp4.sequence += 1\n    return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content)\n  }\n  static traf (data) {\n    let size = 8\n    let tfhd = Fmp4.tfhd(data.id)\n    let tfdt = Fmp4.tfdt(data.time)\n    let sdtp = Fmp4.sdtp(data)\n    let trun = Fmp4.trun(data, sdtp.byteLength);\n\n    [tfhd, tfdt, trun, sdtp].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp)\n  }\n  static tfhd (id) {\n    let content = Buffer.writeUint32(id)\n    return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content)\n  }\n  static tfdt (time) {\n    // let upper = Math.floor(time / (UINT32_MAX + 1)),\n    //     lower = Math.floor(time % (UINT32_MAX + 1));\n    return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time))\n  }\n  static trun (data, sdtpLength) {\n    // let id = data.id;\n    // let ceil = id === 1 ? 16 : 12;\n    let buffer = new Buffer()\n    let sampleCount = Buffer.writeUint32(data.samples.length)\n    // mdat-header 8\n    // moof-header 8\n    // mfhd 16\n    // traf-header 8\n    // thhd 16\n    // tfdt 20\n    // trun-header 12\n    // sampleCount 4\n    // data-offset 4\n    // samples.length\n    let offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength)\n    buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset)\n\n    // let size = buffer.buffer.byteLength\n    // let writeOffset = 0\n    // data.samples.forEach(() => {\n    //   size += 16\n    // })\n    //\n    // let trunBox = new Uint8Array(size)\n\n    // trunBox.set(buffer.buffer, 0)\n\n    data.samples.forEach((item) => {\n      const flags = item.flags\n      // console.log(item.type, item.dts, item.duration)\n\n      buffer.write(new Uint8Array([\n        (item.duration >>> 24) & 0xFF, // sample_duration\n        (item.duration >>> 16) & 0xFF,\n        (item.duration >>> 8) & 0xFF,\n        (item.duration) & 0xFF,\n        (item.size >>> 24) & 0xFF, // sample_size\n        (item.size >>> 16) & 0xFF,\n        (item.size >>> 8) & 0xFF,\n        (item.size) & 0xFF,\n        (flags.isLeading << 2) | flags.dependsOn, // sample_flags\n        (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | flags.isNonSync,\n        0x00, 0x00, // sample_degradation_priority\n        (item.cts >>> 24) & 0xFF, // sample_composition_time_offset\n        (item.cts >>> 16) & 0xFF,\n        (item.cts >>> 8) & 0xFF,\n        (item.cts) & 0xFF\n      ]))\n      // writeOffset += 16\n      // buffer.write(Buffer.writeUint32(0));\n    })\n    return buffer.buffer\n  }\n  static sdtp (data) {\n    let buffer = new Buffer()\n    buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0))\n    data.samples.forEach(item => {\n      const flags = item.flags\n      const num = (flags.isLeading << 6) | // is_leading: 2 (bit)\n        (flags.dependsOn << 4) | // sample_depends_on\n        (flags.isDependedOn << 2) | // sample_is_depended_on\n        (flags.hasRedundancy)// sample_has_redundancy\n\n      buffer.write(new Uint8Array([num]))\n    })\n    return buffer.buffer\n  }\n  static mdat (data) {\n    let buffer = new Buffer()\n    let size = 8\n    data.samples.forEach(item => {\n      size += item.size\n    })\n    buffer.write(Fmp4.size(size), Fmp4.type('mdat'))\n    let mdatBox = new Uint8Array(size)\n    let offset = 0\n    mdatBox.set(buffer.buffer, offset)\n    offset += 8\n    data.samples.forEach(item => {\n      item.buffer.forEach((unit) => {\n        mdatBox.set(unit, offset)\n        offset += unit.byteLength\n        // buffer.write(unit.data);\n      })\n    })\n    return mdatBox\n  }\n}\nFmp4.type = (name) => {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)])\n}\nFmp4.sequence = 1\n\nexport default Fmp4\n","import {\n  EVENTS,\n  sniffer,\n  MediaSegmentList,\n  Buffer\n} from 'xgplayer-utils';\nimport Fmp4 from './fmp4'\n\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS\n\nexport default class Mp4Remuxer {\n  constructor (curTime = 0) {\n    this._dtsBase = curTime * 1000\n    this._isDtsBaseInited = false\n    this._videoSegmentList = new MediaSegmentList('video')\n    this._audioSegmentList = new MediaSegmentList('audio')\n    const {browser} = sniffer\n    this._fillSilenceFrame = browser === 'ie'\n\n    this.isFirstVideo = true\n    this.isFirstAudio = true\n\n    this.videoAllDuration = 0\n    this.audioAllDuration = 0\n  }\n\n  init () {\n    this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this))\n    this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this))\n    this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this))\n  }\n\n  destroy () {\n    this._dtsBase = -1\n    this._dtsBaseInited = false\n    this._videoSegmentList.clear()\n    this._audioSegmentList.clear()\n    this._videoSegmentList = null\n    this._audioSegmentList = null\n  }\n\n  remux () {\n    const { audioTrack, videoTrack } = this._context.getInstance('TRACKS')\n    !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack)\n\n    this._remuxVideo(videoTrack)\n    this._remuxAudio(audioTrack)\n  }\n\n  resetDtsBase () {\n    // for hls 中途切换 meta后seek\n    this._dtsBase = 0\n    this._dtsBaseInited = false\n  }\n\n  seek () {\n    this._videoSegmentList.clear()\n    this._audioSegmentList.clear()\n  }\n\n  onMetaDataReady (type) {\n    let track\n\n    if (type === 'audio') {\n      const { audioTrack } = this._context.getInstance('TRACKS')\n      track = audioTrack;\n    } else {\n      const { videoTrack } = this._context.getInstance('TRACKS')\n      track = videoTrack;\n    }\n\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.mimetype = track.meta.codec;\n    source.init = this.remuxInitSegment(type, track.meta);\n    // source.inited = false;\n\n    // this.resetDtsBase()\n    this.emit(REMUX_EVENTS.INIT_SEGMENT, type)\n  }\n\n  remuxInitSegment (type, meta) {\n    let initSegment = new Buffer()\n    let ftyp = Fmp4.ftyp()\n    let moov = Fmp4.moov({ type, meta: meta })\n\n    initSegment.write(ftyp, moov)\n    return initSegment;\n  }\n\n  calcDtsBase (audioTrack, videoTrack) {\n    if (!audioTrack && videoTrack.samples.length) {\n      return videoTrack.samples[0].dts\n    }\n\n    if (!audioTrack.samples.length && !videoTrack.samples.length) {\n      return;\n    }\n\n    let audioBase = Infinity\n    let videoBase = Infinity\n\n    if (audioTrack.samples && audioTrack.samples.length) {\n      audioBase = audioTrack.samples[0].dts\n    }\n    if (videoTrack.samples && videoTrack.samples.length) {\n      videoBase = videoTrack.samples[0].dts\n    }\n\n    this._dtsBase = Math.min(audioBase, videoBase) - this._dtsBase; // 兼容播放器切换清晰度\n    this._isDtsBaseInited = true\n  }\n\n  _remuxVideo (videoTrack) {\n    const track = videoTrack || {}\n\n    if (!videoTrack.samples || !videoTrack.samples.length) {\n      return\n    }\n\n    let {samples} = track\n    let firstDts = -1\n\n    let initSegment = null\n    const mp4Samples = []\n    const mdatBox = {\n      samples: []\n    }\n\n    let maxLoop = 10000\n    while (samples.length && maxLoop-- > 0) {\n      // console.log('mark2')\n      const avcSample = samples.shift()\n\n      const { isKeyframe, options } = avcSample\n      if (!this.isFirstVideo && options && options.meta) {\n        initSegment = this.remuxInitSegment('video', options.meta)\n        options.meta = null\n        samples.unshift(avcSample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = avcSample.dts - this._dtsBase\n\n      if (firstDts === -1) {\n        firstDts = dts\n      }\n\n      let cts\n      let pts\n      if (avcSample.pts !== undefined) {\n        pts = avcSample.pts - this._dtsBase\n        cts = pts - dts\n      }\n      if (avcSample.cts !== undefined) {\n        pts = avcSample.cts + dts\n        cts = avcSample.cts\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n      mdatBox.samples.push(mdatSample)\n      mdatSample.buffer.push(avcSample.data)\n      mdatSample.size += avcSample.data.byteLength\n\n      let sampleDuration = 0\n      if (avcSample.duration) {\n        sampleDuration = avcSample.duration;\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // lastest sample, use second last duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference duration\n          sampleDuration = this.videoMeta.refSampleDuration\n        }\n      }\n      this.videoAllDuration += sampleDuration\n      // console.log(`video dts ${dts}`, `pts ${pts}`, isKeyframe, `duration ${sampleDuration}`)\n      if (sampleDuration >= 0) {\n        mp4Samples.push({\n          dts,\n          cts,\n          pts,\n          data: avcSample.data,\n          size: avcSample.data.byteLength,\n          isKeyframe,\n          duration: sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: isKeyframe ? 2 : 1,\n            isDependedOn: isKeyframe ? 1 : 0,\n            hasRedundancy: 0,\n            isNonSync: isKeyframe ? 0 : 1\n          },\n          originDts: dts,\n          type: 'video'\n        })\n      }\n\n      if (isKeyframe) {\n        this.emit(REMUX_EVENTS.RANDOM_ACCESS_POINT, pts)\n      }\n    }\n\n    let moofMdat = new Buffer()\n    if (mp4Samples.length) {\n      const moof = Fmp4.moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = Fmp4.mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('video', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('video', initSegment)\n\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxVideo(track)\n      }\n    }\n\n    this.isFirstVideo = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video')\n\n    track.samples = []\n    track.length = 0\n  }\n\n  _remuxAudio (track) {\n    const {samples} = (track || {})\n    let firstDts = -1\n    let mp4Samples = []\n\n    let initSegment = null\n    const mdatBox = {\n      samples: []\n    }\n    if (!samples || !samples.length) {\n      return\n    }\n\n    let maxLoop = 10000\n    let isFirstDtsInited = false\n    while (samples.length && maxLoop-- > 0) {\n      // console.log('mark3')\n      let sample = samples.shift()\n      const { data, options } = sample\n      if (!this.isFirstAudio && options && options.meta) {\n        initSegment = this.remuxInitSegment('audio', options.meta)\n        options.meta = null;\n        samples.unshift(sample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = sample.dts - this._dtsBase\n      const originDts = dts\n      if (!isFirstDtsInited) {\n        firstDts = dts\n        isFirstDtsInited = true\n      }\n\n      let sampleDuration = 0\n      if (sample.duration) {\n        sampleDuration = sample.duration;\n      } else if (this.audioMeta.refSampleDurationFixed) {\n        sampleDuration = this.audioMeta.refSampleDurationFixed\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase;\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // use second last sample duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference sample duration\n          sampleDuration = this.audioMeta.refSampleDuration\n        }\n      }\n\n      // console.log(`audio dts ${dts}`, `pts ${dts}`, `duration ${sampleDuration}`)\n      this.audioAllDuration += sampleDuration\n      const mp4Sample = {\n        dts,\n        pts: dts,\n        cts: 0,\n        size: data.byteLength,\n        duration: sample.duration ? sample.duration : sampleDuration,\n        flags: {\n          isLeading: 0,\n          dependsOn: 2,\n          isDependedOn: 1,\n          hasRedundancy: 0,\n          isNonSync: 0\n        },\n        isKeyframe: true,\n        originDts,\n        type: 'audio'\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n      mdatSample.buffer.push(data)\n      mdatSample.size += data.byteLength\n\n      mdatBox.samples.push(mdatSample)\n      if (sampleDuration >= 0) {\n        mp4Samples.push(mp4Sample)\n      }\n    }\n\n    const moofMdat = new Buffer()\n\n    if (mp4Samples.length) {\n      const moof = Fmp4.moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = Fmp4.mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('audio', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('audio', initSegment)\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxAudio(track)\n      }\n    }\n\n    this.isFirstAudio = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat)\n\n    track.samples = []\n    track.length = 0\n  }\n\n  writeToSource (type, buffer) {\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.data.push(buffer)\n  }\n\n  initSilentAudio (dts, duration) {\n    const unit = Mp4Remuxer.getSilentFrame(this._audioMeta.channelCount)\n    return {\n      dts,\n      pts: dts,\n      cts: 0,\n      duration,\n      unit,\n      size: unit.byteLength,\n      originDts: dts,\n      type: 'video'\n    }\n  }\n\n  get videoMeta () {\n    return this._context.getInstance('TRACKS').videoTrack.meta\n  }\n  get audioMeta () {\n    return this._context.getInstance('TRACKS').audioTrack.meta\n  }\n\n  static getSilentFrame (channelCount) {\n    if (channelCount === 1) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n    } else if (channelCount === 2) {\n      return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80])\n    } else if (channelCount === 3) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e])\n    } else if (channelCount === 4) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38])\n    } else if (channelCount === 5) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38])\n    } else if (channelCount === 6) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0])\n    }\n    return null\n  }\n\n  destroy () {\n    this._player = null;\n  }\n}\n","/**\n * Reference: https://tools.ietf.org/html/rfc8216#section-4.3\n */\nvar M3U8Parser = function () {\n  function M3U8Parser() {\n    babelHelpers.classCallCheck(this, M3U8Parser);\n  }\n\n  babelHelpers.createClass(M3U8Parser, null, [{\n    key: 'parse',\n    value: function parse(text) {\n      var baseurl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      var ret = {\n        duration: 0\n      };\n      if (!text || !text.split) {\n        return;\n      }\n      var refs = text.split(/\\r|\\n/);\n      refs = refs.filter(function (ref) {\n        return ref;\n      });\n      var ref = refs.shift();\n      if (!ref.match('#EXTM3U')) {\n        throw new Error('Invalid m3u8 file: not \"#EXTM3U\"');\n        return null;\n      }\n      ref = refs.shift();\n      var nextDiscontinue = false;\n      while (ref) {\n        var refm = ref.match(/#(.[A-Z|-]*):(.*)/);\n        var refd = ref.match(/#(.[A-Z|-]*)/);\n        if (refd && refm && refm.length > 2) {\n          switch (refm[1]) {\n            case 'EXT-X-VERSION':\n              ret.version = parseInt(refm[2]);\n              break;\n            case 'EXT-X-MEDIA-SEQUENCE':\n              ret.sequence = parseInt(refm[2]);\n              break;\n            case 'EXT-X-TARGETDURATION':\n              ret.targetduration = parseFloat(refm[2]);\n              break;\n            case 'EXTINF':\n              M3U8Parser.parseFrag(refm, refs, ret, baseurl, nextDiscontinue);\n              nextDiscontinue = false;\n              break;\n            case 'EXT-X-KEY':\n              M3U8Parser.parseDecrypt(refm[2], ret);\n              break;\n            default:\n              break;\n          }\n        }if (refd && refd.length > 1) {\n          switch (refd[1]) {\n            case 'EXT-X-DISCONTINUITY':\n              nextDiscontinue = true;\n              break;\n            default:\n              break;\n          }\n        }\n        ref = refs.shift();\n      }\n      return ret;\n    }\n  }, {\n    key: 'parseFrag',\n    value: function parseFrag(refm, refs, ret, baseurl, discontinue) {\n      if (!ret.frags) {\n        ret.frags = [];\n      }\n\n      var freg = {\n        start: ret.duration,\n        duration: parseFloat(refm[2]) * 1000\n      };\n\n      ret.duration += freg.duration;\n      var nextline = refs.shift();\n      if (nextline.match(/#(.*):(.*)/)) {\n        nextline = refs.shift();\n      }\n      if (nextline.length > 0 && nextline.charAt(0) === '/' && baseurl.match(/.*\\/\\/.*\\.\\w+/g)) {\n        baseurl = baseurl.match(/.*\\/\\/.*\\.\\w+/g)[0];\n      }\n      if (nextline.match(/.*:\\/\\/.*/)) {\n        freg.url = nextline;\n      } else {\n        freg.url = baseurl + nextline;\n      }\n      freg.discontinue = discontinue;\n      ret.frags.push(freg);\n    }\n  }, {\n    key: 'parseURL',\n    value: function parseURL(url) {\n      var baseurl = '';\n      var urls = url.match(/(.*\\/).*\\.m3u8/);\n      if (urls && urls.length > 0) {\n        for (var i = 0; i < urls.length; i++) {\n          if (urls[i].match(/.*\\/$/g) && urls[i].length > baseurl.length) {\n            baseurl = urls[i];\n          }\n        }\n      }\n      return baseurl;\n    }\n  }, {\n    key: 'parseDecrypt',\n    value: function parseDecrypt(refm, ret) {\n      ret.encrypt = {};\n      var refs = refm.split(',');\n      for (var i in refs) {\n        var cmd = refs[i];\n        if (cmd.match(/METHOD=(.*)/)) {\n          ret.encrypt.method = cmd.match(/METHOD=(.*)/)[1];\n        }\n        if (cmd.match(/URI=\"(.*)\"/)) {\n          ret.encrypt.uri = cmd.match(/URI=\"(.*)\"/)[1];\n        }\n\n        if (cmd.match(/IV=0x(.*)/)) {\n          var iv = cmd.match(/IV=0x(.*)/)[1];\n          var length = Math.ceil(iv.length / 2);\n          ret.encrypt.ivb = new Uint8Array(length);\n          for (var _i = length - 1; _i >= 0; _i--) {\n            var im = parseInt(iv.substr(_i * 2, 2), 16);\n            ret.encrypt.ivb[_i] = im;\n          }\n          ret.encrypt.iv = iv;\n        }\n      };\n    }\n  }]);\n  return M3U8Parser;\n}();\n\nexport default M3U8Parser;","import { Nalunit } from 'xgplayer-codec';\nimport { AudioTrack, VideoTrack } from 'xgplayer-buffer';\nimport { AudioTrackMeta, VideoTrackMeta, AudioTrackSample, VideoTrackSample, EVENTS, Stream } from 'xgplayer-utils';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar StreamType = {\n  0x01: ['video', 'MPEG-1'],\n  0x02: ['video', 'MPEG-2'],\n  0x1b: ['video', 'AVC.H264'],\n  0xea: ['video', 'VC-1'],\n  0x03: ['audio', 'MPEG-1'],\n  0x04: ['audio', 'MPEG-2'],\n  0x0f: ['audio', 'MPEG-2.AAC'],\n  0x11: ['audio', 'MPEG-4.AAC'],\n  0x80: ['audio', 'LPCM'],\n  0x81: ['audio', 'AC3'],\n  0x06: ['audio', 'AC3'],\n  0x82: ['audio', 'DTS'],\n  0x83: ['audio', 'Dolby TrueHD'],\n  0x84: ['audio', 'AC3-Plus'],\n  0x85: ['audio', 'DTS-HD'],\n  0x86: ['audio', 'DTS-MA'],\n  0xa1: ['audio', 'AC3-Plus-SEC'],\n  0xa2: ['audio', 'DTS-HD-SEC']\n};\n\nvar TsDemuxer = function () {\n  function TsDemuxer(configs) {\n    babelHelpers.classCallCheck(this, TsDemuxer);\n\n    this.configs = Object.assign({}, configs);\n    this.demuxing = false;\n    this.pat = [];\n    this.pmt = [];\n    this._hasVideoMeta = false;\n    this._hasAudioMeta = false;\n  }\n\n  babelHelpers.createClass(TsDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.demux.bind(this));\n    }\n  }, {\n    key: 'demux',\n    value: function demux(frag) {\n      if (this.demuxing) {\n        return;\n      }\n\n      var buffer = this.inputBuffer;\n      var frags = { pat: [], pmt: [] };\n      var peses = {};\n\n      // Read TS segment\n      while (buffer.length >= 188) {\n        if (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('Untrust sync code: ' + buffer.array[0][buffer.offset] + ', try to recover;'), false);\n        }\n        while (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          buffer.shift(1);\n        }\n        var buf = buffer.shift(188);\n        // console.log(buf);\n        var tsStream = new Stream(buf.buffer);\n        var ts = {};\n        TsDemuxer.read(tsStream, ts, frags);\n        if (ts.pes) {\n          if (!peses[ts.header.pid]) {\n            peses[ts.header.pid] = [];\n          }\n          peses[ts.header.pid].push(ts.pes);\n          ts.pes.ES.buffer = [ts.pes.ES.buffer];\n        } else if (peses[ts.header.pid]) {\n          peses[ts.header.pid][peses[ts.header.pid].length - 1].ES.buffer.push(ts.payload.stream);\n        }\n      }\n\n      var AudioOptions = frag;\n      var VideoOptions = frag;\n\n      // Get Frames data\n      for (var i = 0; i < Object.keys(peses).length; i++) {\n        var epeses = peses[Object.keys(peses)[i]];\n        for (var j = 0; j < epeses.length; j++) {\n          epeses[j].id = Object.keys(peses)[i];\n          epeses[j].ES.buffer = TsDemuxer.Merge(epeses[j].ES.buffer);\n          if (epeses[j].type === 'audio') {\n            this.pushAudioSample(epeses[j], AudioOptions);\n            AudioOptions = {};\n          } else if (epeses[j].type === 'video') {\n            this.pushVideoSample(epeses[j], VideoOptions);\n            VideoOptions = {};\n          }\n        }\n      }\n\n      if (this._hasAudioMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'audio');\n      }\n      if (this._hasVideoMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'video');\n      }\n    }\n  }, {\n    key: 'pushAudioSample',\n    value: function pushAudioSample(pes, options) {\n      var track = void 0;\n      if (!this._tracks.audioTrack) {\n        this._tracks.audioTrack = new AudioTrack();\n        track = this._tracks.audioTrack;\n      } else {\n        track = this._tracks.audioTrack;\n      }\n      var meta = new AudioTrackMeta({\n        audioSampleRate: pes.ES.frequence,\n        sampleRate: pes.ES.frequence,\n        channelCount: pes.ES.channel,\n        codec: 'mp4a.40.' + pes.ES.audioObjectType,\n        config: pes.ES.audioConfig,\n        id: 2,\n        sampleRateIndex: pes.ES.frequencyIndex\n      });\n      meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n\n      var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n\n      if (!this._hasAudioMeta || !metaEqual) {\n        track.meta = meta;\n        this._hasAudioMeta = true;\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n      }\n\n      var data = new Uint8Array(pes.ES.buffer.buffer.slice(pes.ES.buffer.position, pes.ES.buffer.length));\n      var dts = parseInt(pes.pts / 90);\n      var pts = parseInt(pes.pts / 90);\n      var sample = new AudioTrackSample({ dts: dts, pts: pts, data: data, options: options });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'pushVideoSample',\n    value: function pushVideoSample(pes, options) {\n      var nals = Nalunit.getNalunits(pes.ES.buffer);\n      var track = void 0;\n      var meta = new VideoTrackMeta();\n      if (!this._tracks.videoTrack) {\n        this._tracks.videoTrack = new VideoTrack();\n        track = this._tracks.videoTrack;\n      } else {\n        track = this._tracks.videoTrack;\n      }\n      var sampleLength = 0;\n      var sps = false;\n      var pps = false;\n      for (var i = 0; i < nals.length; i++) {\n        var nal = nals[i];\n        if (nal.sps) {\n          sps = nal;\n          track.sps = nal.body;\n          meta.chromaFormat = sps.sps.chroma_format;\n          meta.codec = 'avc1.';\n          for (var j = 1; j < 4; j++) {\n            var h = sps.body[j].toString(16);\n            if (h.length < 2) {\n              h = '0' + h;\n            }\n            meta.codec += h;\n          }\n          meta.codecHeight = sps.sps.codec_size.height;\n          meta.codecWidth = sps.sps.codec_size.width;\n          meta.frameRate = sps.sps.frame_rate;\n          meta.id = 1;\n          meta.level = sps.sps.level_string;\n          meta.presentHeight = sps.sps.present_size.height;\n          meta.presentWidth = sps.sps.present_size.width;\n          meta.profile = sps.sps.profile_string;\n          meta.refSampleDuration = Math.floor(meta.timescale * (sps.sps.frame_rate.fps_den / sps.sps.frame_rate.fps_num));\n          meta.sarRatio = sps.sps.sar_ratio ? sps.sps.sar_ratio : sps.sps.par_ratio;\n        } else if (nal.pps) {\n          track.pps = nal.body;\n          pps = nal;\n        } else if (nal.type < 9) {\n          sampleLength += 4 + nal.body.byteLength;\n        }\n      }\n\n      if (sps && pps) {\n        meta.avcc = Nalunit.getAvcc(sps.body, pps.body);\n        var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n        if (!this._hasVideoMeta || !metaEqual) {\n          if (options) {\n            options.meta = Object.assign({}, meta);\n          } else {\n            options = {\n              meta: Object.assign({}, meta)\n            };\n          }\n          track.meta = meta;\n          this._hasVideoMeta = true;\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n        }\n      }\n\n      var data = new Uint8Array(sampleLength);\n      var offset = 0;\n      var isKeyframe = false;\n      for (var _i = 0; _i < nals.length; _i++) {\n        var _nal = nals[_i];\n        if (_nal.type && _nal.type >= 9) {\n          continue;\n        }\n        var length = _nal.body.byteLength;\n        if (_nal.idr) {\n          isKeyframe = true;\n        }\n        if (!_nal.pps && !_nal.sps) {\n          data.set(new Uint8Array([length >>> 24 & 0xff, length >>> 16 & 0xff, length >>> 8 & 0xff, length & 0xff]), offset);\n          offset += 4;\n          data.set(_nal.body, offset);\n          offset += length;\n        }\n      }\n      var sample = new VideoTrackSample({\n        dts: parseInt(pes.dts / 90),\n        pts: parseInt(pes.pts / 90),\n        cts: (pes.pts - pes.dts) / 90,\n        originDts: pes.dts,\n        isKeyframe: isKeyframe,\n        data: data,\n        options: options\n      });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'destory',\n    value: function destory() {\n      this.off(DEMUX_EVENTS.DEMUX_START, this.demux);\n      this.configs = {};\n      this.demuxing = false;\n      this.pat = [];\n      this.pmt = [];\n      this._hasVideoMeta = false;\n      this._hasAudioMeta = false;\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get() {\n      return this._context.getInstance(this.configs.inputbuffer);\n    }\n  }, {\n    key: '_tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }], [{\n    key: 'compaireArray',\n    value: function compaireArray(a, b, type) {\n      var al = 0;\n      var bl = 0;\n      if (type === 'Uint8Array') {\n        al = a.byteLength;\n        bl = b.byteLength;\n      } else if (type === 'Array') {\n        al = a.length;\n        bl = b.length;\n      }\n      if (al !== bl) {\n        return false;\n      }\n\n      for (var i = 0; i < al; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compaireMeta',\n    value: function compaireMeta(a, b, ignoreDuration) {\n      if (!a || !b) {\n        return false;\n      }\n\n      for (var i = 0, k = Object.keys(a).length; i < k; i++) {\n        var itema = a[Object.keys(a)[i]];\n        var itemb = b[Object.keys(a)[i]];\n        if ((typeof itema === 'undefined' ? 'undefined' : babelHelpers.typeof(itema)) !== 'object') {\n          if (ignoreDuration && Object.keys(a)[i] !== 'duration' && Object.keys(a)[i] !== 'refSampleDuration' && Object.keys(a)[i] !== 'refSampleDurationFixed' && itema !== itemb) {\n            return false;\n          }\n        } else if (itema.byteLength !== undefined) {\n          if (itemb.byteLength === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Uint8Array')) {\n            return false;\n          }\n        } else if (itema.length !== undefined) {\n          if (itemb.length === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Array')) {\n            return false;\n          }\n        } else {\n          if (!TsDemuxer.compaireMeta(itema, itemb)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'Merge',\n    value: function Merge(buffers) {\n      var data = void 0;\n      var length = 0;\n      var offset = 0;\n      for (var i = 0; i < buffers.length; i++) {\n        length += buffers[i].length - buffers[i].position;\n      }\n\n      data = new Uint8Array(length);\n      for (var _i2 = 0; _i2 < buffers.length; _i2++) {\n        var buffer = buffers[_i2];\n        data.set(new Uint8Array(buffer.buffer, buffer.position), offset);\n        offset += buffer.length - buffer.position;\n      }\n      return new Stream(data.buffer);\n    }\n  }, {\n    key: 'read',\n    value: function read(stream, ts, frags) {\n      TsDemuxer.readHeader(stream, ts);\n      TsDemuxer.readPayload(stream, ts, frags);\n      if (ts.header.packet === 'MEDIA' && ts.header.payload === 1 && !ts.unknownPIDs) {\n        ts.pes = TsDemuxer.PES(ts);\n      }\n    }\n  }, {\n    key: 'readPayload',\n    value: function readPayload(stream, ts, frags) {\n      var header = ts.header;\n      var pid = header.pid;\n      switch (pid) {\n        case 0:\n          TsDemuxer.PAT(stream, ts, frags);\n          break;\n        case 1:\n          TsDemuxer.CAT(stream, ts, frags);\n          break;\n        case 2:\n          TsDemuxer.TSDT(stream, ts, frags);\n          break;\n        case 0x1fff:\n          break;\n        default:\n          // TODO: some的写法不太好，得改\n          if (frags.pat.some(function (item) {\n            return item.pid === pid;\n          })) {\n            TsDemuxer.PMT(stream, ts, frags);\n          } else {\n            var sts = frags.pmt ? frags.pmt.filter(function (item) {\n              return item.pid === pid;\n            }) : [];\n            if (sts.length > 0) {\n              TsDemuxer.Media(stream, ts, StreamType[sts[0].streamType][0]);\n            } else {\n              ts.unknownPIDs = true;\n            };\n          }\n      }\n    }\n  }, {\n    key: 'readHeader',\n    value: function readHeader(stream, ts) {\n      var header = {};\n      header.sync = stream.readUint8();\n      var next = stream.readUint16();\n      header.error = next >>> 15;\n      header.payload = next >>> 14 & 1;\n      header.priority = next >>> 13 & 1;\n      header.pid = next & 0x1fff;\n\n      next = stream.readUint8();\n\n      header.scrambling = next >> 6 & 0x3; // 是否加密，00表示不加密\n\n      /**\n       * 00 ISO/IEC未来使用保留\n       * 01 没有调整字段，仅含有184B有效净荷\n       * 02 没有有效净荷，仅含有183B调整字段\n       * 03 0~182B调整字段后为有效净荷\n       */\n      header.adaptation = next >> 4 & 0x3;\n      header.continuity = next & 15;\n      header.packet = header.pid === 0 ? 'PAT' : 'MEDIA';\n      ts.header = header;\n    }\n  }, {\n    key: 'PAT',\n    value: function PAT(stream, ts, frags) {\n      var ret = {};\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tabelID = next;\n      next = stream.readUint16();\n      ret.error = next >>> 7;\n      ret.zero = next >>> 6 & 1;\n      ret.sectionLength = next & 0xfff;\n      ret.streamID = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (ret.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        var programNumber = stream.readUint16();\n        var pid = stream.readUint16() & 0x1fff;\n        list.push({\n          program: programNumber,\n          pid: pid,\n          type: programNumber === 0 ? 'network' : 'mapPID'\n        });\n      }\n      if (list.length > 0) {\n        frags.pat = frags.pat.concat(list);\n      }\n      ret.list = list;\n      ret.program = stream.readUint16();\n      ret.pid = stream.readUint16() & 0x1fff;\n      ts.payload = ret;\n      // TODO CRC\n    }\n  }, {\n    key: 'PMT',\n    value: function PMT(stream, ts, frags) {\n      var ret = {};\n      var header = ts.header;\n      header.packet = 'PMT';\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tableID = next;\n      next = stream.readUint16();\n      ret.sectionLength = next & 0xfff;\n      ret.program = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.order = stream.readUint8();\n      ret.lastOrder = stream.readUint8();\n      ret.PCR_PID = stream.readUint16() & 0x1fff;\n      ret.programLength = stream.readUint16() & 0xfff;\n      var N = (ret.sectionLength - 13) / 5;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({\n          streamType: stream.readUint8(),\n          pid: stream.readUint16() & 0x1fff, // 0x07e5 视频，0x07e6\n          es: stream.readUint16() & 0xfff\n        });\n      }\n      ret.list = list;\n      if (!this.pmt) {\n        this.pmt = [];\n      }\n      frags.pmt = this.pmt.concat(list.map(function (item) {\n        return {\n          pid: item.pid,\n          es: item.es,\n          streamType: item.streamType,\n          program: ret.program\n        };\n      }));\n      ts.payload = ret;\n    }\n  }, {\n    key: 'Media',\n    value: function Media(stream, ts, type) {\n      var header = ts.header;\n      var payload = {};\n      header.type = type;\n      if (header.adaptation === 0x03) {\n        payload.adaptationLength = stream.readUint8();\n        if (payload.adaptationLength > 0) {\n          var next = stream.readUint8();\n          payload.discontinue = next >>> 7;\n          payload.access = next >>> 6 & 0x01;\n          payload.priority = next >>> 5 & 0x01;\n          payload.PCR = next >>> 4 & 0x01;\n          payload.OPCR = next >>> 3 & 0x01;\n          payload.splicePoint = next >>> 2 & 0x01;\n          payload.transportPrivate = next >>> 1 & 0x01;\n          payload.adaptationField = next & 0x01;\n          var _start = stream.position;\n          if (payload.PCR === 1) {\n            payload.programClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.programClockBase |= next >>> 15;\n            payload.programClockExtension = next & 0x1ff;\n          }\n          if (payload.OPCR === 1) {\n            payload.originProgramClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.originProgramClockBase += next >>> 15;\n            payload.originProgramClockExtension = next & 0x1ff;\n          }\n          if (payload.splicePoint === 1) {\n            payload.spliceCountdown = stream.readUint8();\n          }\n          if (payload.transportPrivate === 1) {\n            var length = stream.readUint8();\n            var transportPrivateData = [];\n            for (var i = 0; i < length; i++) {\n              transportPrivateData.push(stream.readUint8());\n            }\n          }\n          if (payload.adaptationField === 1) {\n            var _length = stream.readUint8();\n            var _next = stream.readUint8();\n            var start = stream.position;\n            var ltw = _next >>> 7;\n            var piecewise = _next >>> 6 & 0x1;\n            var seamless = _next >>> 5 & 0x1;\n            if (ltw === 1) {\n              _next = stream.readUint16();\n              payload.ltwValid = _next >>> 15;\n              payload.ltwOffset = _next & 0xefff;\n            }\n            if (piecewise === 1) {\n              _next = stream.readUint24();\n              payload.piecewiseRate = _next & 0x3fffff;\n            }\n            if (seamless === 1) {\n              _next = stream.readInt8();\n              payload.spliceType = _next >>> 4;\n              payload.dtsNextAU1 = _next >>> 1 & 0x7;\n              payload.marker1 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU2 = _next >>> 1;\n              payload.marker2 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU3 = _next;\n            }\n            stream.skip(_length - 1 - (stream.position - start));\n          }\n          var lastStuffing = payload.adaptationLength - 1 - (stream.position - _start);\n          stream.skip(lastStuffing);\n        }\n      }\n      payload.stream = new Stream(stream.buffer.slice(stream.position));\n      ts.payload = payload;\n    }\n  }, {\n    key: 'PES',\n    value: function PES(ts) {\n      var ret = {};\n      var buffer = ts.payload.stream;\n\n      var next = buffer.readUint24();\n      if (next !== 1) {\n        ret.ES = {};\n        ret.ES.buffer = buffer;\n      } else {\n        var streamID = buffer.readUint8();\n        if (streamID >= 0xe0 && streamID <= 0xef) {\n          ret.type = 'video';\n        }\n        if (streamID >= 0xc0 && streamID <= 0xdf) {\n          ret.type = 'audio';\n        }\n        var packetLength = buffer.readUint16();\n        ret.packetLength = packetLength;\n        if (ret.type === 'video' || ret.type === 'audio') {\n          var _next2 = buffer.readUint8();\n          var first = _next2 >>> 6;\n          if (first !== 0x02) {\n            throw new Error('error when parse pes header');\n          }\n          _next2 = buffer.readUint8();\n          ret.ptsDTSFlag = _next2 >>> 6;\n          ret.escrFlag = _next2 >>> 5 & 0x01;\n          ret.esRateFlag = _next2 >>> 4 & 0x01;\n          ret.dsmFlag = _next2 >>> 3 & 0x01;\n          ret.additionalFlag = _next2 >>> 2 & 0x01;\n          ret.crcFlag = _next2 >>> 1 & 0x01;\n          ret.extensionFlag = _next2 & 0x01;\n          ret.pesHeaderLength = buffer.readUint8();\n          var N1 = ret.pesHeaderLength;\n\n          if (ret.ptsDTSFlag === 2) {\n            var pts = [];\n            _next2 = buffer.readUint8();\n            pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            ret.pts = pts[0] << 30 | pts[1] << 15 | pts[2];\n            N1 -= 5;\n            // 视频如果没有dts用pts\n            if (ret.type === 'video') {\n              ret.dts = ret.pts;\n            }\n          }\n          if (ret.ptsDTSFlag === 3) {\n            var _pts = [];\n            _next2 = buffer.readUint8();\n            _pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            ret.pts = _pts[0] << 30 | _pts[1] << 15 | _pts[2];\n            var dts = [];\n            _next2 = buffer.readUint8();\n            dts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            ret.dts = dts[0] << 30 | dts[1] << 15 | dts[2];\n            N1 -= 10;\n          }\n          if (ret.escrFlag === 1) {\n            var escr = [];\n            var ex = [];\n            _next2 = buffer.readUint8();\n            escr.push(_next2 >>> 3 & 0x07);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            ex.push(_next2 & 0x03);\n            _next2 = buffer.readUint8();\n            ex.push(_next2 >>> 1);\n            ret.escr = (escr[0] << 30 | escr[1] << 28 | escr[2] << 15 | escr[3] << 13 | escr[4]) * 300 + (ex[0] << 7 | ex[1]);\n            N1 -= 6;\n          }\n          if (ret.esRateFlag === 1) {\n            _next2 = buffer.readUint24();\n            ret.esRate = _next2 >>> 1 & 0x3fffff;\n            N1 -= 3;\n          }\n          if (ret.dsmFlag === 1) {\n            throw new Error('not support DSM_trick_mode');\n          }\n          if (ret.additionalFlag === 1) {\n            _next2 = buffer.readUint8();\n            ret.additionalCopyInfo = _next2 & 0x7f;\n            N1 -= 1;\n          }\n          if (ret.crcFlag === 1) {\n            ret.pesCRC = buffer.readUint16();\n            N1 -= 2;\n          }\n          if (ret.extensionFlag === 1) {\n            throw new Error('not support extension');\n          }\n          if (N1 > 0) {\n            buffer.skip(N1);\n          }\n          ret.ES = TsDemuxer.ES(buffer, ret.type);\n        } else {\n          throw new Error('format is not supported');\n        }\n      }\n      return ret;\n    }\n  }, {\n    key: 'ES',\n    value: function ES(buffer, type) {\n      var next = void 0;\n      var ret = {};\n      if (type === 'video') {\n        next = buffer.readUint32();\n        if (next !== 1) {\n          buffer.back(4);\n          next = buffer.readUint24();\n          if (next !== 1) {\n            throw new Error('h264 nal header parse failed');\n          }\n        }\n        buffer.skip(2); // 09 F0\n        // TODO readnalu\n        ret.buffer = buffer;\n      } else if (type === 'audio') {\n        next = buffer.readUint16();\n        // adts的同步字节，12位\n        if (next >>> 4 !== 0xfff) {\n          throw new Error('aac ES parse Error');\n        }\n        var fq = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n        ret.id = (next >>> 3 & 0x01) === 0 ? 'MPEG-4' : 'MPEG-2';\n        ret.layer = next >>> 1 & 0x03;\n        ret.absent = next & 0x01;\n        next = buffer.readUint16();\n        ret.audioObjectType = (next >>> 14 & 0x03) + 1;\n        ret.profile = ret.audioObjectType - 1;\n        ret.frequencyIndex = next >>> 10 & 0x0f;\n        ret.frequence = fq[ret.frequencyIndex];\n        ret.channel = next >>> 6 & 0x07;\n        ret.frameLength = (next & 0x03) << 11 | buffer.readUint16() >>> 5;\n        TsDemuxer.getAudioConfig(ret);\n        buffer.skip(1);\n        ret.buffer = buffer;\n      } else {\n        throw new Error('ES ' + type + ' is not supported');\n      }\n\n      return ret;\n    }\n  }, {\n    key: 'TSDT',\n    value: function TSDT(stream, ts, frags) {\n      // TODO\n      ts.payload = {};\n    }\n  }, {\n    key: 'CAT',\n    value: function CAT(stream, ts, frags) {\n      var ret = {};\n      ret.tableID = stream.readUint8();\n      var next = stream.readUint16();\n      ret.sectionIndicator = next >>> 7;\n      ret.sectionLength = next & 0x0fff;\n      stream.skip(2);\n      next = stream.readUint8();\n      ret.version = next >>> 3;\n      ret.currentNextIndicator = next & 0x01;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (this.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({});\n      }\n      ret.crc32 = stream.readUint32();\n      ts.payload = ret;\n    }\n  }, {\n    key: 'getAudioConfig',\n    value: function getAudioConfig(ret) {\n      var userAgent = navigator.userAgent.toLowerCase();\n      var config = void 0;\n      var extensionSampleIndex = void 0;\n      if (/firefox/i.test(userAgent)) {\n        if (ret.frequencyIndex >= 6) {\n          ret.audioObjectType = 5;\n          config = new Array(4);\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          ret.audioObjectType = 2;\n          config = new Array(2);\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        ret.audioObjectType = 2;\n        config = new Array(2);\n        extensionSampleIndex = ret.frequencyIndex;\n      } else {\n        ret.audioObjectType = 5;\n        config = new Array(4);\n        if (ret.frequencyIndex >= 6) {\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          if (ret.channel === 1) {\n            ret.audioObjectType = 2;\n            config = new Array(2);\n          }\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      }\n\n      config[0] = ret.audioObjectType << 3;\n      config[0] |= (ret.frequencyIndex & 0x0e) >> 1;\n      config[1] = (ret.frequencyIndex & 0x01) << 7;\n      config[1] |= ret.channel << 3;\n      if (ret.audioObjectType === 5) {\n        config[1] |= (extensionSampleIndex & 0x0e) >> 1;\n        config[2] = (extensionSampleIndex & 0x01) << 7;\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.audioConfig = config;\n    }\n  }]);\n  return TsDemuxer;\n}();\n\nexport default TsDemuxer;","var Playlist = function () {\n  function Playlist(configs) {\n    babelHelpers.classCallCheck(this, Playlist);\n\n    this._baseURL = '';\n    this._list = {};\n    this._ts = {};\n    this.version = 0;\n    this.sequence = -1;\n    this.targetduration = 0;\n    this.duration = 0;\n    this.fragLength = 0;\n    this._lastget = undefined;\n    this._audoclear = configs.autoclear || false;\n  }\n\n  babelHelpers.createClass(Playlist, [{\n    key: 'push',\n    value: function push(ts, duration, discontinue) {\n      if (!this._ts[ts]) {\n        this._ts[ts] = { duration: duration,\n          downloaded: false,\n          downloading: false,\n          start: this.duration,\n          discontinue: discontinue ? true : false\n        };\n        this._list[this.duration] = ts;\n        this.duration += duration;\n        this.fragLength += 1;\n      }\n    }\n  }, {\n    key: 'deleteFrag',\n    value: function deleteFrag(url) {\n      if (this._ts[url]) {\n        if (this._ts[url].start > this._lastget.time) {\n          this._lastget = {\n            duration: this._ts[url].duration,\n            time: this._ts[url].start,\n            downloaded: false,\n            downloading: false,\n            url: url\n          };\n        }\n        delete this._list[this._ts[url].start];\n        delete this._ts[url];\n        this.fragLength -= 1;\n      }\n    }\n  }, {\n    key: 'pushM3U8',\n    value: function pushM3U8(data, deletepre) {\n      // 常规信息替换\n      if (!data) {\n        throw new Error('No m3u8 data received.');\n        return;\n      }\n      this.version = data.version;\n      this.targetduration = data.targetduration;\n      if (data.encrypt && !this.encrypt) {\n        this.encrypt = data.encrypt;\n      }\n      // 新分片信息\n      if (data.sequence > this.sequence) {\n        this.sequence = data.sequence;\n        var newfraglist = [];\n        for (var i = 0; i < data.frags.length; i++) {\n          var frag = data.frags[i];\n          if (!this._ts[frag.url]) {\n            newfraglist.push(frag.url);\n            this.push(frag.url, frag.duration, frag.discontinue);\n          }\n        }\n\n        if (newfraglist.length < 1) {\n          throw new Error('Can not read ts file list.');\n        }\n\n        if (deletepre) {\n          var tslist = this.getTsList();\n          for (var _i = 0; _i < tslist.length; _i++) {\n            if (newfraglist.indexOf(tslist[_i]) < 0) {\n              this.deleteFrag(tslist[_i]);\n            }\n          }\n        }\n      } else {\n        throw new Error('Old m3u8 file received, ' + data.sequence);\n      }\n    }\n  }, {\n    key: 'getTsList',\n    value: function getTsList() {\n      return Object.keys(this._ts);\n    }\n  }, {\n    key: 'downloaded',\n    value: function downloaded(tsname, isloaded) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloaded = isloaded;\n      }\n    }\n  }, {\n    key: 'downloading',\n    value: function downloading(tsname, loading) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloading = loading;\n      }\n    }\n  }, {\n    key: 'getTsByName',\n    value: function getTsByName(name) {\n      return this._ts[name];\n    }\n  }, {\n    key: 'getTs',\n    value: function getTs(time) {\n      var timelist = Object.keys(this._list);\n      var ts = void 0;\n\n      if (time === undefined) {\n        if (this._lastget) {\n          time = this._lastget.time + this._lastget.duration;\n        } else {\n          time = 0;\n        }\n      }\n\n      if (timelist.length < 1 || time >= this.duration) {\n        return undefined;\n      }\n      timelist.sort(function (a, b) {\n        return parseFloat(a) - parseFloat(b);\n      });\n      for (var i = 0; i < timelist.length; i++) {\n        if (time >= parseInt(timelist[i])) {\n          var url = this._list[timelist[i]];\n          var downloaded = this._ts[url].downloaded;\n          var downloading = this._ts[url].downloading;\n          ts = { url: url, downloaded: downloaded, downloading: downloading, time: parseInt(timelist[i]), duration: parseInt(this._ts[url].duration) };\n          if (this.autoclear) {\n            delete this._ts[this._lastget.url];\n            delete this._list[this._lastget.time];\n          }\n          this._lastget = ts;\n        } else {\n          break;\n        }\n      }\n      return ts;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n    }\n  }, {\n    key: 'clearDownloaded',\n    value: function clearDownloaded() {\n      for (var i = 0, l = Object.keys(this._ts).length; i < l; i++) {\n        var ts = this._ts[Object.keys(this._ts)[i]];\n        ts.downloaded = false;\n        ts.downloading = false;\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n      this.fragLength = 0;\n      this._lastget = undefined;\n      this._audoclear = false;\n    }\n  }, {\n    key: 'list',\n    get: function get() {\n      return this._list;\n    }\n  }, {\n    key: 'baseURL',\n    set: function set(baseURL) {\n      if (this.baseURL !== baseURL) {\n        this.clear();\n        this._baseURL = baseURL;\n      }\n    },\n    get: function get() {\n      return this._baseURL;\n    }\n  }]);\n  return Playlist;\n}();\n\nexport default Playlist;","import { isLe, UTF8 } from 'xgplayer-utils';\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta信息解析\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    babelHelpers.classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  babelHelpers.createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * 解析meta中的变量\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n  return AMFParser;\n}();\n\nexport default AMFParser;","import { EVENTS, AudioTrackMeta, VideoTrackMeta } from 'xgplayer-utils';\nimport { SpsParser } from 'xgplayer-codec';\nimport { VideoTrack, AudioTrack } from 'xgplayer-buffer';\n\nimport AMFParser from './amf-parser';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    babelHelpers.classCallCheck(this, FlvDemuxer);\n\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n  }\n\n  babelHelpers.createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this));\n    }\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'doParseFlv',\n    value: function doParseFlv() {\n      if (!this._firstFragmentLoaded) {\n        if (this.loaderBuffer.length < 13) {\n          return;\n        }\n        var header = this.loaderBuffer.shift(13);\n        this.parseFlvHeader(header);\n        this.doParseFlv(); // 递归调用，继续解析flv流\n      } else {\n        if (this.loaderBuffer.length < 11) {\n          return;\n        }\n        var chunk = void 0;\n\n        var loopMax = 10000; // 防止死循环产生\n        do {\n          // console.log('mark4')\n          chunk = this._parseFlvTag();\n        } while (chunk && loopMax-- > 0);\n\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'));\n        this.doParseFlv();\n      } else {\n        this._firstFragmentLoaded = true;\n        // const playType = FlvDemuxer.getPlayType(header[4])\n\n        this.initVideoTrack();\n        this.initAudioTrack();\n      }\n      this.doParseFlv();\n    }\n\n    /**\n     * init default video track configs\n     */\n\n  }, {\n    key: 'initVideoTrack',\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8、9、18\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag() {\n      if (this.loaderBuffer.length < 11) {\n        return null;\n      }\n      var chunk = this._parseFlvTagHeader();\n      if (chunk) {\n        this._processChunk(chunk);\n      }\n      return chunk;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader() {\n      var offset = 0;\n      var chunk = {};\n\n      var tagType = this.loaderBuffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      chunk.filtered = (tagType & 32) >>> 5;\n      chunk.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      chunk.datasize = this.loaderBuffer.toInt(offset, 3);\n      offset += 3;\n\n      if (chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18 || this.loaderBuffer.toInt(8, 3) !== 0) {\n        if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n          this.loaderBuffer.shift(1);\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false);\n        return null;\n      }\n\n      if (this.loaderBuffer.length < chunk.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      this.loaderBuffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = this.loaderBuffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      chunk.dts = timestamp;\n\n      // streamId\n      this.loaderBuffer.shift(3);\n      return chunk;\n    }\n  }, {\n    key: '_processChunk',\n    value: function _processChunk(chunk) {\n      switch (chunk.tagType) {\n        case 18:\n          this._parseScriptData(chunk);\n          break;\n        case 8:\n          this._parseAACData(chunk);\n          break;\n        case 9:\n          this._parseHevcData(chunk);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          this.loaderBuffer.shift(3);\n          break;\n        default:\n          this.loaderBuffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(chunk) {\n      var audioTrack = this.tracks.audioTrack;\n      var videoTrack = this.tracks.videoTrack;\n\n      var data = this.loaderBuffer.shift(chunk.datasize);\n\n      var info = new AMFParser().resolve(data, data.length);\n\n      var onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined;\n\n      // fill mediaInfo\n      this._context.mediaInfo.duration = onMetaData.duration;\n      this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n\n      var validate = this._datasizeValidator(chunk.datasize);\n      if (validate) {\n        this.emit(DEMUX_EVENTS.MEDIA_INFO);\n        this._hasScript = true;\n      }\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 6) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n  }, {\n    key: '_parseAACData',\n    value: function _parseAACData(chunk) {\n      var track = this.tracks.audioTrack;\n      if (!track) {\n        return;\n      }\n\n      var meta = track.meta;\n\n      if (!meta) {\n        track.meta = new AudioTrackMeta();\n        meta = track.meta;\n      }\n\n      var info = this.loaderBuffer.shift(1)[0];\n\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      track.format = format;\n\n      if (format !== 10) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid audio format: ' + format));\n      }\n\n      if (format === 10 && !this._hasAudioSequence) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      delete chunk.tagType;\n      var validate = this._datasizeValidator(chunk.datasize);\n\n      if (chunk.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(chunk.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this._context.mediaInfo.duration * meta.timescale;\n        meta.config = aacHeader.config;\n\n        var audioMedia = this._context.mediaInfo.audio;\n\n        // fill audio media info\n        audioMedia.codec = aacHeader.codec;\n        audioMedia.channelCount = aacHeader.channelCount;\n        audioMedia.sampleRate = audioSampleRate;\n        audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex;\n\n        if (!this._hasAudioSequence) {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n        } else {\n          this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n          // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        }\n        this._hasAudioSequence = true;\n\n        this._metaChange = true;\n      } else {\n        if (this._metaChange) {\n          chunk.options = {\n            meta: track.meta\n          };\n          this._metaChange = false;\n        }\n\n        chunk.data = chunk.data.slice(1, chunk.data.length);\n        track.samples.push(chunk);\n      }\n      if (!validate) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false);\n        // this.logger.warn(this.TAG, error.message)\n      }\n    }\n\n    /**\n     * parse hevc/avc video data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseHevcData',\n    value: function _parseHevcData(chunk) {\n      // header\n      var info = this.loaderBuffer.shift(1)[0];\n      chunk.frameType = (info & 0xf0) >>> 4;\n      chunk.isKeyframe = chunk.frameType === 1;\n      // let tempCodecID = this.tracks.videoTrack.codecID\n      var codecID = info & 0x0f;\n      this.tracks.videoTrack.codecID = codecID;\n\n      // hevc和avc的header解析方式一样\n      chunk.avcPacketType = this.loaderBuffer.shift(1)[0];\n      chunk.cts = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 12) {\n        var data = this.loaderBuffer.shift(chunk.datasize - 5);\n        chunk.data = data;\n\n        if (Number.parseInt(chunk.avcPacketType) !== 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          }\n          var nalu = {};\n          var r = 0;\n          nalu.cts = chunk.cts;\n          nalu.dts = chunk.dts;\n          while (chunk.data.length > r) {\n            var sizes = chunk.data.slice(Number.parseInt(r), 4 + r);\n            nalu.size = sizes[3];\n            nalu.size += sizes[2] * 256;\n            nalu.size += sizes[1] * 256 * 256;\n            nalu.size += sizes[0] * 256 * 256 * 256;\n            r += 4;\n            nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r);\n            r += nalu.size;\n            this.tracks.videoTrack.samples.push(nalu);\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          } else {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        }\n      } else if (codecID === 7) {\n        var _data = this.loaderBuffer.shift(chunk.datasize - 5);\n        if (_data[4] === 0 && _data[5] === 0 && _data[6] === 0 && _data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + _data[i];\n          }\n          avcclength -= 4;\n          _data = _data.slice(4, _data.length);\n          _data[3] = avcclength % 256;\n          avcclength = (avcclength - _data[3]) / 256;\n          _data[2] = avcclength % 256;\n          avcclength = (avcclength - _data[2]) / 256;\n          _data[1] = avcclength % 256;\n          _data[0] = (avcclength - _data[1]) / 256;\n        }\n\n        chunk.data = _data;\n        // If it is AVC sequece Header.\n        if (chunk.avcPacketType === 0) {\n          this._avcSequenceHeaderParser(chunk.data);\n          var validate = this._datasizeValidator(chunk.datasize);\n          if (validate) {\n            if (!this._hasVideoSequence) {\n              this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n            } else {\n              this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n              // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n            }\n            this._hasVideoSequence = true;\n          }\n          this._metaChange = true;\n        } else {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n            return;\n          }\n          if (this._metaChange) {\n            chunk.options = {\n              meta: Object.assign({}, this.tracks.videoTrack.meta)\n            };\n            this._metaChange = false;\n          }\n          this.tracks.videoTrack.samples.push(chunk);\n          // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n        }\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('video codeid is ' + codecID), false);\n        chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n        }\n        this.tracks.videoTrack.samples.push(chunk);\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n      delete chunk.tagType;\n    }\n\n    /**\n     * parse avc metadata\n     * @param data\n     * @private\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var track = this.tracks.videoTrack;\n\n      if (!track) {\n        return;\n      }\n\n      var offset = 0;\n\n      if (!track.meta) {\n        track.meta = new VideoTrackMeta();\n      }\n      var meta = track.meta;\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        this.tracks.videoTrack.meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i = 0; _i < numOfPps; _i++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        this.tracks.videoTrack.meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      // fill video media info\n      var videoMedia = this._context.mediaInfo.video;\n\n      videoMedia.codec = meta.codec;\n      videoMedia.profile = meta.profile;\n      videoMedia.level = meta.level;\n      videoMedia.chromaFormat = meta.chromaFormat;\n      videoMedia.frameRate = meta.frameRate;\n      videoMedia.parRatio = meta.parRatio;\n      videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth;\n      videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight;\n\n      meta.duration = this._context.mediaInfo.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      track.meta = meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize) {\n      var datasizeConfirm = this.loaderBuffer.toInt(0, 4);\n      this.loaderBuffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'isFlvFile',\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;","import _M3U8Parser from './hls/demuxer/m3u8parser';\nimport _TsDemuxer from './hls/demuxer/ts';\nimport _Playlist from './hls/playlist';\nimport _FlvDemuxer from './flv/index';\n\nexport var M3U8Parser = _M3U8Parser;\nexport var TsDemuxer = _TsDemuxer;\nexport var Playlist = _Playlist;\nexport var FlvDemuxer = _FlvDemuxer;","import { EVENTS, Mse, Crypto} from 'xgplayer-utils';\nimport { XgBuffer, PreSource, Tracks } from 'xgplayer-buffer';\nimport { FetchLoader } from 'xgplayer-loader';\nimport { Compatibility } from 'xgplayer-codec';\nimport Mp4Remuxer from 'xgplayer-remux/src/mp4/index';\n\nimport {Playlist, M3U8Parser, TsDemuxer} from 'xgplayer-demux';\n\nconst LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nconst DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nconst HLS_EVENTS = EVENTS.HLS_EVENTS;\nconst CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\nconst HLS_ERROR = 'HLS_ERROR';\nclass HlsLiveController {\n  constructor (configs) {\n    this.configs = Object.assign({}, configs);\n    this.url = '';\n    this.baseurl = '';\n    this.sequence = 0;\n    this._playlist = null;\n    this.retrytimes = this.configs.retrytimes || 3;\n    this.preloadTime = this.configs.preloadTime;\n    this.container = this.configs.container;\n    this._m3u8lasttime = 0;\n    this._timmer = setInterval(this._checkStatus.bind(this), 50);\n    this._lastCheck = 0;\n    this._player = this.configs.player;\n    this.m3u8Text = null\n  }\n\n  init () {\n    // 初始化Buffer （M3U8/TS/Playlist);\n    this._context.registry('M3U8_BUFFER', XgBuffer);\n    this._context.registry('TS_BUFFER', XgBuffer);\n    this._context.registry('TRACKS', Tracks);\n\n    this._playlist = this._context.registry('PLAYLIST', Playlist)({autoclear: true});\n    this._context.registry('PRE_SOURCE_BUFFER', PreSource);\n\n    this._context.registry('COMPATIBILITY', Compatibility);\n\n    // 初始化M3U8Loader;\n    this._m3u8loader = this._context.registry('M3U8_LOADER', FetchLoader)({ buffer: 'M3U8_BUFFER', readtype: 1 });\n    this._tsloader = this._context.registry('TS_LOADER', FetchLoader)({ buffer: 'TS_BUFFER', readtype: 3 });\n\n    // 初始化TS Demuxer\n    this._context.registry('TS_DEMUXER', TsDemuxer)({ inputbuffer: 'TS_BUFFER' });\n\n    // 初始化MP4 Remuxer\n    this._context.registry('MP4_REMUXER', Mp4Remuxer);\n\n    // 初始化MSE\n    this.mse = this._context.registry('MSE', Mse)({container: this.container});\n    this.initEvents();\n  }\n\n  initEvents () {\n    this.on(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete.bind(this));\n\n    this.on(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers.bind(this.mse));\n\n    this.on(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend.bind(this.mse));\n\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed.bind(this));\n\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete.bind(this));\n\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._onLoadError.bind(this));\n\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._onDemuxError.bind(this));\n\n    this.on(REMUX_EVENTS.REMUX_ERROR, this._onRemuxError.bind(this));\n  }\n\n  _onError(type, mod, err, fatal) {\n    let error = {\n      errorType: type,\n      errorDetails: `[${mod}]: ${err.message}`,\n      errorFatal: fatal\n    }\n    this._player.emit(HLS_ERROR, error);\n  }\n\n  _onDemuxComplete () {\n    this.emit(REMUX_EVENTS.REMUX_MEDIA)\n  }\n  _onMetadataParsed (type) {\n    this.emit(REMUX_EVENTS.REMUX_METADATA, type)\n  }\n\n  _onLoadError (loader, error) {\n    if (!this._tsloader.loading && !this._m3u8loader.loading && this.retrytimes > 1) {\n      this.retrytimes--;\n      this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, false);\n    } else if (this.retrytimes <= 1) {\n      this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, true);\n      this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n      this.mse.endOfStream();\n    }\n  }\n\n  _onDemuxError (mod, error, fatal) {\n    if(fatal === undefined) {\n      fatal = true;\n    }\n    this._onError(LOADER_EVENTS.LOADER_ERROR, mod, error, fatal);\n  }\n\n  _onRemuxError (mod, error, fatal) {\n    if(fatal === undefined) {\n      fatal = true;\n    }\n    this._onError(REMUX_EVENTS.REMUX_ERROR, mod, error, fatal);\n  }\n\n  _onLoadComplete (buffer) {\n    if (buffer.TAG === 'M3U8_BUFFER') {\n      let mdata;\n      try {\n        this.m3u8Text = buffer.shift();\n        mdata = M3U8Parser.parse(this.m3u8Text, this.baseurl);\n      } catch (error) {\n        this._onError('M3U8_PARSER_ERROR', 'M3U8_PARSER', error, false);\n      }\n\n      if(!mdata) {\n        if (this.retrytimes > 0) {\n          this.retrytimes--;\n          this._preload();\n        } else {\n          this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n          this.mse.endOfStream();\n        }\n        return;\n      }\n\n      try {\n        this._playlist.pushM3U8(mdata, true);\n      } catch (error) {\n        this._onError('M3U8_PARSER_ERROR', 'PLAYLIST', error, false);\n      }\n\n      if (this._playlist.encrypt && this._playlist.encrypt.uri && !this._playlist.encrypt.key) {\n        this._context.registry('DECRYPT_BUFFER', XgBuffer)();\n        this._context.registry('KEY_BUFFER', XgBuffer)();\n        this._tsloader.buffer = 'DECRYPT_BUFFER';\n        this._keyLoader = this._context.registry('KEY_LOADER', FetchLoader)({buffer:'KEY_BUFFER',readtype: 3});\n        this.emitTo('KEY_LOADER', LOADER_EVENTS.LADER_START, this._playlist.encrypt.uri);\n      } else {\n        this._m3u8Loaded(mdata);\n      }\n    } else if (buffer.TAG === 'TS_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.downloaded(this._tsloader.url, true);\n      this.emit(DEMUX_EVENTS.DEMUX_START);\n    }  else if (buffer.TAG === 'DECRYPT_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.downloaded(this._tsloader.url, true);\n      this.emitTo('CRYPTO', CRYTO_EVENTS.START_DECRYPT);\n    } else if (buffer.TAG == 'KEY_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.encrypt.key = buffer.shift();\n      this._crypto = this._context.registry('CRYPTO', Crypto)({\n        key: this._playlist.encrypt.key,\n        iv: this._playlist.encrypt.ivb,\n        method: this._playlist.encrypt.method,\n        inputbuffer:'DECRYPT_BUFFER',\n        outputbuffer:'TS_BUFFER'\n      });\n      this._crypto.on(CRYTO_EVENTS.DECRYPTED, this._onDcripted.bind(this));\n    }\n  }\n\n  _onDcripted() {\n    this.emit(DEMUX_EVENTS.DEMUX_START);\n  }\n\n  _m3u8Loaded(mdata) {\n    if (!this.preloadTime) {\n      this.preloadTime = this._playlist.targetduration ? this._playlist.targetduration : 5;\n    }\n    if (this._playlist.fragLength > 0 && this._playlist.sequence < mdata.sequence) {\n      this.retrytimes = this.configs.retrytimes || 3;\n    } else {\n      if (this.retrytimes > 0) {\n        this.retrytimes--;\n        this._preload();\n      } else {\n        this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n        this.mse.endOfStream();\n      }\n    }\n  }\n  _checkStatus () {\n    if (this.retrytimes < 1 && (new Date().getTime() - this._lastCheck < 10000)) {\n      return;\n    }\n    this._lastCheck = new Date().getTime();\n    if (this.container.buffered.length < 1) {\n      this._preload()\n    } else {\n      // Check for load.\n      let currentTime = this.container.currentTime;\n      let bufferstart = this.container.buffered.start(this.container.buffered.length - 1);\n      if (this.container.readyState <= 2) {\n        if (currentTime < bufferstart) {\n          this.container.currentTime = bufferstart;\n          currentTime = bufferstart;\n        } else {\n          this._preload();\n        }\n      }\n      let bufferend = this.container.buffered.end(this.container.buffered.length - 1);\n      if (currentTime < bufferend - (this.preloadTime * 2)) {\n        this.container.currentTime = bufferend - (this.preloadTime * 2);\n      }\n      if (bufferend > this.preloadTime * 2) {\n        this.mse.remove(bufferend - (this.preloadTime * 2));\n      }\n      if (currentTime > bufferend - this.preloadTime) {\n        this._preload();\n      }\n    }\n  }\n\n  _preload () {\n    if (this._tsloader.loading || this._m3u8loader.loading) {\n      return;\n    }\n    let frag = this._playlist.getTs();\n\n    if (frag && !frag.downloaded && !frag.downloading) {\n      this._playlist.downloading(frag.url, true);\n      this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, frag.url)\n    } else {\n      let preloadTime = this.preloadTime ? this.preloadTime : 0;\n      let current = new Date().getTime();\n      if ((!frag || frag.downloaded) &&\n        (current - this._m3u8lasttime) / 1000 > preloadTime) {\n        this._m3u8lasttime = current\n        this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, this.url);\n      }\n    }\n  }\n\n  load (url) {\n    this.baseurl = M3U8Parser.parseURL(url);\n    this.url = url;\n    this._preload();\n  }\n\n  destroy () {\n    clearInterval(this._timmer);\n    this.off(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete);\n    this.off(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers);\n    this.off(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend);\n    // this.off(REMUX_EVENTS.REMUX_ERROR);\n    this.off(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed);\n    this.off(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete);\n\n    this.mse = null\n    this.m3u8Text = null\n  }\n}\nexport default HlsLiveController;\n","import 'xgplayer-polyfills/babel/external-helpers';\nimport Player from 'xgplayer'\nimport { Context, EVENTS } from 'xgplayer-utils';\nimport HlsLiveController from './hls-live';\nconst HlsAllowedEvents = EVENTS.HlsAllowedEvents;\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nexport default class HlsLivePlayer extends Player {\n  constructor (options) {\n    super(options)\n    this.hlsOps = {};\n    this.util = Player.util;\n    this.util.deepCopy(this.hlsOps, options);\n    this._context = new Context(HlsAllowedEvents);\n    this._hasStarted = false;\n  }\n\n  _initEvents () {\n    this.__core__.once(REMUX_EVENTS.INIT_SEGMENT, () => {\n      const mse = this._context.getInstance('MSE');\n      if (!this._hasStarted) {\n        const live = this.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live');\n        this.util.addClass(this.root, 'xgplayer-is-live');\n        this.controls.appendChild(live);\n      }\n      this._hasStarted = true;\n      super.start(mse.url);\n    });\n\n    this.once('canplay', () => {\n      this.video.play()\n    });\n  }\n\n  _initSrcChangeHandler () {\n    let _this = this;\n    Object.defineProperty(this, 'src', {\n      get () {\n        return _this.currentSrc\n      },\n      set (url) {\n        _this.config.url = url\n        if (!_this.paused) {\n          _this.pause()\n          _this.once('pause', () => {\n            _this.start(url)\n          })\n          _this.once('canplay', () => {\n            _this.play()\n          })\n        } else {\n          _this.start(url)\n        }\n        _this.once('canplay', () => {\n          _this.currentTime = 0\n        })\n      },\n      configurable: true\n    })\n  }\n\n  start (url = this.config.url) {\n    if (!url) {\n      return;\n    }\n    this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({player:this, container: this.video});\n    this._context.init();\n    this.url = url;\n    this.__core__.load(url);\n    this._initEvents();\n    this._initSrcChangeHandler();\n  }\n\n  play () {\n    if (this._hasStarted) {\n      this._context.destroy();\n      this._context = new Context(HlsAllowedEvents);\n      this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({container: this.video});\n      this._context.init();\n      this._initEvents();\n      this.__core__.load(this.url);\n    }\n    super.play();\n  }\n\n  destroy () {\n    this._context.destroy();\n    super.destroy();\n  }\n}\n"],"names":["EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","TypeError","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","emitWarning","e","console","warn","log","_onceWrap","g","removeListener","fired","arguments","listenerCount","evlistener","spliceOne","list","index","k","n","pop","arr","copy","Array","unwrapListeners","ret","global","babelHelpers","typeof","obj","classCallCheck","instance","Constructor","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","prototype","inherits","subClass","superClass","Object","create","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","isObjectFilled","hasOwnProperty","MediaInfo","mimeType","duration","hasVideo","video","hasAudio","audio","isBaseInfoReady","isVideoReady","isAudioReady","mediaInfo","usingDomains","domain","active","Domain","getPrototypeOf","setMaxListeners","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","position","originalListener","removeAllListeners","keys","eventNames","Reflect","ownKeys","Context","allowedEvents","_emitter","off","_instanceMap","_clsMap","_inited","_hooks","tag","_len","_key","newInstance","Function","bind","concat","config","initInstance","cls","_this2","checkMessageName","_isMessageNameValid","enhanced","_cls","a","b","c","_this","onceListeners","TAG","_context","messageName","callback","beforeList","_len2","_key2","_len3","_key3","hasOwn","callbacks","_messageName","_callbacks","_i","_callback","removeListeners","get","_len4","_key4","_this3","forEach","destroy","destroyInstances","indexOf","LOADER_EVENTS","DEMUX_EVENTS","REMUX_EVENTS","MSE_EVENTS","HLS_EVENTS","CRYTO_EVENTS","ALLEVENTS","assign","FlvAllowedEvents","HlsAllowedEvents","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","sniffer","r","os","isPc","isTablet","ua","navigator","userAgent","toLowerCase","reg","filter","test","isWindowsPhone","isSymbian","isAndroid","isFireFox","isPhone","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs","_ucs2","join","start","checkLength","array","MediaSegmentList","MediaSample","info","_default","getDefaultInf","toString","sample","entries","_ref","_ref2","slicedToArray","v","MediaSegment","startDts","endDts","startPts","endPts","originStartDts","originEndDts","randomAccessPoints","firstSample","lastSample","isRAP","_type","_list","_lastAppendLocation","beginDts","last","mid","lbound","ubound","idx","originDts","Math","floor","_searchNearestSegmentBefore","segment","lastAppendIdx","insertIdx","splice","getLastSegmentBefore","segmentIdx","AudioTrackMeta","meta","VideoTrackMeta","Uint8Array","sps","pps","AudioTrackSample","getDefault","VideoTrackSample","MSE","configs","container","mediaSource","sourceBuffers","preloadTime","onSourceOpen","onTimeUpdate","onUpdateEnd","onWaiting","MediaSource","addEventListener","src","URL","createObjectURL","url","newCtx","addSourceBuffers","doAppend","readyState","sources","getInstance","tracks","track","add","audioTrack","videoTrack","dur","refSampleDuration","data","_k","source","mime","mimetype","sourceBuffer","addSourceBuffer","inited","appendBuffer","buffer","shift","_mediaSource","activeSourceBuffers","endOfStream","end","updating","remove","taskList","removeEventListener","task","Promise","resolve","doCleanBuffer","retryTime","clean","clearBuffer","all","removeBuffers","then","_buffer","removeSourceBuffer","revokeObjectURL","buffered","bEnd","Stream","dataview","loop","readByte","value","byteLength","size","sign","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","exports","ResultConstructor","totalLength","arrays","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","result","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_arr","set","_concat2","__esModule","default","_concat","module","Buffer","item","Concat","padStart4Hex","hexNum","padStart","temp","num","parseInt","EVENTS","Crypto","inputBuffer","inputbuffer","outputBuffer","outputbuffer","iv","method","crypto","window","msCrypto","START_DECRYPT","decript","aeskey","decriptData","subtle","importKey","decrypt","DECRYPTED","_Context","_EVENTS","_sniffer","isLe","_isLe","_UTF8","_MediaSegmentList","_AudioTrackMeta","_VideoTrackMeta","_AudioTrackSample","_VideoTrackSample","Mse","_Mse","_Stream","_Buffer","_Crypto","Track","id","sequenceNumber","samples","droppedSamples","reset","AudioTrack","_Track","VideoTrack","_Track2","dropped","Tracks","XgBuffer","historyLen","_shiftBuffer","_ret","slice","_ret2","tmpoff","tmp","templength","clear","retInt","Source","RemuxBuffer","_Tracks","_AudioTrack","_VideoTrack","_XgBuffer","PreSource","FetchLoader","status","_reader","_canceled","_destroyed","readtype","_loaderTaskNo","LADER_START","load","opts","params","getParams","loading","fetch","response","ok","_onFetchResponse","LOADER_ERROR","catch","message","taskno","json","LOADER_COMPLETE","text","arrayBuffer","_onReader","body","getReader","reader","cancel","read","val","LOADER_DATALOADED","options","headers","Headers","configHeaders","append","optHeaders","cors","mode","withCredentials","credentials","Golomb","_bufferIndex","_totalBytes","_totalBits","_currentWord","_currentWordBitsLeft","bufferBytesLeft","bytesRead","min","word","subarray","bits","valu","_fillCurrentWord","readBits","zeroCount","_skipLeadingZero","leadingZeros","readUEG","SPSParser","srcLength","dst","dstIdx","rbsp","_ebsp2rbsp","gb","profileIdc","levelIdc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","par_width","par_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","par_w_table","par_h_table","num_units_in_tick","time_scale","parScale","crop_unit_x","crop_unit_y","codec_width","codec_height","present_width","ceil","getChromaFormatString","last_scale","next_scale","toFixed","chroma","spsConfig","codec_size","codecWidth","width","codecHeight","height","presentWidth","present_size","presentHeight","profile","level","bitDepth","chromaFormat","parRatio","par_ratio","frameRate","frame_rate","fpsDen","fpsNum","timescale","Nalunit","getAnnexbNals","getAvccNals","nals","getHeaderPositionAnnexB","pos","header","headerLength","skip","unit","analyseNal","ndr","idr","SpsParser","parseSPS","AAC","codec","channelCount","Compatibility","nextAudioDts","nextVideoDts","lastAudioSamplesLen","lastVideoSamplesLen","lastVideoDts","lastAudioDts","allAudioSamplesCount","allVideoSamplesCount","_firstAudioSample","_firstVideoSample","filledAudioSamples","filledVideoSamples","videoLastSample","audioLastSample","_videoLargeGap","_audioLargeGap","before","REMUX_MEDIA","doFix","_getFirstSample","getFirstSample","isFirstAudioSamples","isFirstVideoSamples","recordSamplesCount","fixRefSampleDuration","_Compatibility$detact","detactChangeStream","videoChanged","changed","videoChangedIdx","changedIdx","fixChangeStreamVideo","doFixVideo","_Compatibility$detact2","audioChanged","audioChangedIdx","fixChangeStreamAudio","doFixAudio","removeInvalidSamples","first","streamChangeStart","_videoTrack","videoSamples","dts","fixed","doFixLargeGap","detectLargeGap","videoFirstDts","gap","fillCount","clonedFirstSample","pts","cts","curLastSample","_audioTrack","audioSamples","samplesLen","silentFrame","getSilentFrame","_firstSample","videoFirstPts","_gap","silentSampleCount","_i2","silentSample","firstDts","absGap","abs","refSampleDurationFixed","silentFrameCount","_i3","computed","_silentSample","lastOriginDts","lastDts","lastSampleDuration","_i4","current","sortAudioSamples","changeIdx","_videoTrack2","prevDts","getStreamChangeStart","curDts","isContinue","DETECT_CHANGE_STREAM_DISCONTINUE","firstPartSamples","secondPartSamples","dtsBase","_audioTrack2","findFirstVideoSample","findFirstAudioSample","isVideo","allSamplesCount","filledSamplesCount","Number","durationAvg","Infinity","remuxer","_dtsBase","sort","sorted","isKeyframe","nextDts","cond1","cond2","discontinue","_Nalunit","_SpsParser","_Compatibility","Fmp4","writeUint32","content","write","version","flag","initBox","mvhd","trak","videoTrak","audioTrak","mvex","bytes","tkhd","mdia","avcc","sampleRate","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","dref","stsd","stts","stsc","stsz","stco","mp4a","avc1","samplerate","esds","configlen","hSpacing","vSpacing","btrt","pasp","trackID","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","time","sdtp","trun","sdtpLength","sampleCount","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","mdatBox","charCodeAt","Mp4Remuxer","curTime","_isDtsBaseInited","_videoSegmentList","_audioSegmentList","browser","_fillSilenceFrame","isFirstVideo","isFirstAudio","videoAllDuration","audioAllDuration","remux","REMUX_METADATA","onMetaDataReady","DETECT_CHANGE_STREAM","resetDtsBase","_dtsBaseInited","calcDtsBase","_remuxVideo","_remuxAudio","presourcebuffer","getSource","createSource","remuxInitSegment","INIT_SEGMENT","initSegment","ftyp","moov","audioBase","videoBase","mp4Samples","maxLoop","avcSample","mdatSample","sampleDuration","videoMeta","RANDOM_ACCESS_POINT","moofMdat","moof","mdat","writeToSource","MEDIA_SEGMENT","isFirstDtsInited","audioMeta","mp4Sample","_audioMeta","_player","M3U8Parser","baseurl","split","refs","ref","match","nextDiscontinue","refm","refd","targetduration","parseFloat","parseFrag","parseDecrypt","frags","freg","nextline","charAt","urls","encrypt","cmd","uri","ivb","im","substr","StreamType","TsDemuxer","demuxing","pat","pmt","_hasVideoMeta","_hasAudioMeta","DEMUX_START","demux","frag","peses","DEMUX_ERROR","tsStream","ts","pes","pid","ES","payload","stream","AudioOptions","VideoOptions","epeses","j","Merge","pushAudioSample","pushVideoSample","DEMUX_COMPLETE","_tracks","frequence","channel","audioObjectType","audioConfig","frequencyIndex","audioSampleRate","metaEqual","compaireMeta","METADATA_PARSED","getNalunits","sampleLength","nal","h","sarRatio","sar_ratio","getAvcc","_nal","al","bl","ignoreDuration","itema","itemb","compaireArray","buffers","readHeader","readPayload","packet","unknownPIDs","PES","PAT","CAT","TSDT","some","PMT","sts","Media","streamType","sync","readUint8","readUint16","priority","scrambling","adaptation","continuity","tabelID","zero","sectionLength","streamID","sectionNumber","lastSectionNumber","N","programNumber","program","tableID","order","lastOrder","PCR_PID","programLength","map","es","adaptationLength","access","PCR","OPCR","splicePoint","transportPrivate","adaptationField","_start","programClockBase","readUint32","programClockExtension","originProgramClockBase","originProgramClockExtension","spliceCountdown","transportPrivateData","_length","_next","piecewise","seamless","ltwValid","ltwOffset","readUint24","piecewiseRate","readInt8","spliceType","dtsNextAU1","marker1","dtsNextAU2","marker2","dtsNextAU3","lastStuffing","packetLength","_next2","ptsDTSFlag","escrFlag","esRateFlag","dsmFlag","additionalFlag","crcFlag","extensionFlag","pesHeaderLength","N1","_pts","escr","ex","esRate","additionalCopyInfo","pesCRC","back","fq","layer","absent","frameLength","getAudioConfig","sectionIndicator","currentNextIndicator","crc32","extensionSampleIndex","Playlist","_baseURL","_ts","fragLength","_lastget","_audoclear","autoclear","deletepre","newfraglist","tslist","getTsList","deleteFrag","tsname","isloaded","downloaded","downloading","timelist","l","baseURL","DATA_TYPES","AMFParser","readOffset","metaData","parseValue","bodySize","resetStatus","strLen","str","decode","dv","getFloat64","Date","parseString","isObjEnd","NUMBER","BOOLEAN","STRING","OBJECT","MIX_ARRAY","OBJECT_END","STRICT_ARRAY","DATE","LONE_STRING","dataView","objEndSize","amfObj","parseObject","isObjectEnd","_objEndSize","amfVar","arrLength","script","date","parseDate","longStr","parseLongString","FlvDemuxer","_firstFragmentLoaded","_trackNum","_hasScript","doParseFlv","loaderBuffer","chunk","loopMax","_parseFlvTag","parseFlvHeader","isFlvFile","initVideoTrack","initAudioTrack","_parseFlvTagHeader","_processChunk","tagType","toInt","filtered","datasize","timestamp","timestampExt","_parseScriptData","_parseAACData","_parseHevcData","onMetaData","hsaAudio","_datasizeValidator","MEDIA_INFO","hasSpecificConfig","audiosamplerate","audiochannels","sampleRateIndex","_meta","framerate","objectType","_switchAudioSampleRate","dependsOnCoreCoder","extensionFlagIndex","extensionSamplingIndex","samplingIndex","format","_hasAudioSequence","_switchAudioSamplingFrequency","frameLenth","audioSampleRateIndex","validate","aacHeader","_aacSequenceHeaderParser","audioMedia","AUDIO_METADATA_CHANGE","_metaChange","frameType","codecID","avcPacketType","nalu","sizes","_data","avcclength","_avcSequenceHeaderParser","_hasVideoSequence","VIDEO_METADATA_CHANGE","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","nalUnitLength","numOfSps","codecString","_j","numOfPps","_size","_j2","toVideoMeta","videoMedia","samplingFrequencyIndex","datasizeConfirm","streamFlag","_M3U8Parser","_TsDemuxer","_Playlist","HlsLiveController","_playlist","retrytimes","_m3u8lasttime","_timmer","setInterval","_checkStatus","_lastCheck","player","m3u8Text","registry","_m3u8loader","_tsloader","mse","initEvents","_onLoadComplete","_onMetadataParsed","_onDemuxComplete","_onLoadError","_onDemuxError","REMUX_ERROR","_onRemuxError","mod","fatal","loader","_onError","RETRY_TIME_EXCEEDED","mdata","parse","_preload","pushM3U8","_keyLoader","emitTo","_m3u8Loaded","_crypto","_onDcripted","getTime","currentTime","bufferstart","bufferend","getTs","parseURL","hlsOps","util","Player","deepCopy","_hasStarted","__core__","live","createDom","addClass","root","controls","appendChild","play","currentSrc","paused","pause","_initEvents","_initSrcChangeHandler"],"mappings":"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"}