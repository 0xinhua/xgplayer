{"version":3,"file":"index.min.js","sources":["../../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../xgplayer-polyfills/babel/external-helpers.js","../../xgplayer-utils/es/models/media-info.js","../../xgplayer-utils/es/context.js","../../xgplayer-utils/es/constants/events.js","../../xgplayer-utils/es/env/sniffer.js","../../xgplayer-utils/es/env/isle.js","../../xgplayer-utils/es/env/utf8.js","../../xgplayer-utils/es/models/media-segment-list.js","../../xgplayer-utils/es/models/media-sample.js","../../xgplayer-utils/es/models/media-segment.js","../../xgplayer-utils/es/models/track-meta.js","../../xgplayer-utils/es/models/track-sample.js","../../xgplayer-utils/es/mse/index.js","../../xgplayer-utils/es/write/stream.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/index.js","../../xgplayer-utils/es/write/buffer.js","../../xgplayer-utils/es/crypto/index.js","../../xgplayer-utils/es/index.js","../../xgplayer-buffer/es/track.js","../../xgplayer-buffer/es/buffer.js","../../xgplayer-buffer/es/presouce.js","../../xgplayer-buffer/es/index.js","../../xgplayer-loader/es/fetch-loader.js","../../xgplayer-loader/es/index.js","../../xgplayer-codec/es/h264/nalunit/golomb.js","../../xgplayer-codec/es/h264/nalunit/sps.js","../../xgplayer-codec/es/h264/nalunit/index.js","../../xgplayer-codec/es/aac/aac-helper.js","../../xgplayer-codec/es/compatibility.js","../../xgplayer-codec/es/index.js","../../xgplayer-remux/src/mp4/fmp4.js","../../xgplayer-remux/src/mp4/index.js","../../xgplayer-demux/es/hls/demuxer/m3u8parser.js","../../xgplayer-demux/es/hls/demuxer/ts.js","../../xgplayer-demux/es/hls/playlist.js","../../xgplayer-demux/es/flv/amf-parser.js","../../xgplayer-demux/es/flv/index.js","../../xgplayer-demux/es/index.js","../src/hls-live.js","../src/index.js"],"sourcesContent":["'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","(function (global) {\n  var _babelHelpers = global.babelHelpers = {};\n  _babelHelpers.typeof = function (obj) {\n    return typeof obj;\n  }\n\n  _babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  _babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  _babelHelpers.defineEnumerableProperties = function (obj, descs) {\n    for (var key in descs) {\n      var desc = descs[key];\n      desc.configurable = desc.enumerable = true;\n      if (\"value\" in desc) desc.writable = true;\n      Object.defineProperty(obj, key, desc);\n    }\n\n    return obj;\n  };\n\n  _babelHelpers.defaults = function (obj, defaults) {\n    var keys = Object.getOwnPropertyNames(defaults);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n      if (value && value.configurable && obj[key] === undefined) {\n        Object.defineProperty(obj, key, value);\n      }\n    }\n\n    return obj;\n  };\n\n  _babelHelpers.defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  _babelHelpers.extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  _babelHelpers.get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  _babelHelpers.inherits = function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  };\n\n  _babelHelpers.instanceof = function (left, right) {\n    if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n      return right[Symbol.hasInstance](left);\n    } else {\n      return left instanceof right;\n    }\n  };\n\n  _babelHelpers.interopRequireDefault = function (obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  };\n\n  _babelHelpers.interopRequireWildcard = function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n\n      newObj.default = obj;\n      return newObj;\n    }\n  };\n\n  _babelHelpers.newArrowCheck = function (innerThis, boundThis) {\n    if (innerThis !== boundThis) {\n      throw new TypeError(\"Cannot instantiate an arrow function\");\n    }\n  };\n\n  _babelHelpers.objectDestructuringEmpty = function (obj) {\n    if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n  };\n\n  _babelHelpers.objectWithoutProperties = function (obj, keys) {\n    var target = {};\n\n    for (var i in obj) {\n      if (keys.indexOf(i) >= 0) continue;\n      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n      target[i] = obj[i];\n    }\n\n    return target;\n  };\n\n  _babelHelpers.possibleConstructorReturn = function (self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  };\n\n  _babelHelpers.selfGlobal = typeof global === \"undefined\" ? self : global;\n\n  _babelHelpers.set = function set(object, property, value, receiver) {\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent !== null) {\n        set(parent, property, value, receiver);\n      }\n    } else if (\"value\" in desc && desc.writable) {\n      desc.value = value;\n    } else {\n      var setter = desc.set;\n\n      if (setter !== undefined) {\n        setter.call(receiver, value);\n      }\n    }\n\n    return value;\n  };\n\n  _babelHelpers.slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  _babelHelpers.slicedToArrayLoose = function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      var _arr = [];\n\n      for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n        _arr.push(_step.value);\n\n        if (i && _arr.length === i) break;\n      }\n\n      return _arr;\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n\n  _babelHelpers.taggedTemplateLiteral = function (strings, raw) {\n    return Object.freeze(Object.defineProperties(strings, {\n      raw: {\n        value: Object.freeze(raw)\n      }\n    }));\n  };\n\n  _babelHelpers.taggedTemplateLiteralLoose = function (strings, raw) {\n    strings.raw = raw;\n    return strings;\n  };\n\n  _babelHelpers.temporalRef = function (val, name, undef) {\n    if (val === undef) {\n      throw new ReferenceError(name + \" is not defined - temporal dead zone\");\n    } else {\n      return val;\n    }\n  };\n\n  _babelHelpers.temporalUndefined = {};\n\n  _babelHelpers.toArray = function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  };\n\n  _babelHelpers.toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n})(typeof global === \"undefined\" ? self : global);\n","var isObjectFilled = function isObjectFilled(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nvar MediaInfo = function () {\n  function MediaInfo() {\n    babelHelpers.classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n\n    this.hasVideo = null;\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n    };\n\n    this.hasAudio = null;\n\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    };\n  }\n\n  babelHelpers.createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this);\n    }\n  }], [{\n    key: \"isBaseInfoReady\",\n    value: function isBaseInfoReady(mediaInfo) {\n      return isObjectFilled(mediaInfo);\n    }\n  }, {\n    key: \"isVideoReady\",\n    value: function isVideoReady(mediaInfo) {\n      if (!mediaInfo.hasVideo) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }, {\n    key: \"isAudioReady\",\n    value: function isAudioReady(mediaInfo) {\n      if (!mediaInfo.hasAudio) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }]);\n  return MediaInfo;\n}();\n\nexport default MediaInfo;","import MediaInfo from './models/media-info';\nimport { EventEmitter } from 'events';\n\nvar DIRECT_EMIT_FLAG = '__TO__';\n\nvar Context = function () {\n  function Context() {\n    var allowedEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    babelHelpers.classCallCheck(this, Context);\n\n    this._emitter = new EventEmitter();\n    if (!this._emitter.off) {\n      this._emitter.off = this._emitter.removeListener;\n    }\n    this._instanceMap = {}; // 所有的解码流程实例\n    this._clsMap = {}; // 构造函数的map\n    this._inited = false;\n    this.mediaInfo = new MediaInfo();\n    this.allowedEvents = allowedEvents;\n    this._hooks = {}; // 注册在事件前/后的钩子，例如 before('DEMUX_COMPLETE')\n  }\n\n  /**\n   * 从上下文中获取解码流程实例，如果没有实例，构造一个\n   * @param tag\n   * @param args\n   * @returns {*}\n   */\n\n\n  babelHelpers.createClass(Context, [{\n    key: 'getInstance',\n    value: function getInstance(tag) {\n      var instance = this._instanceMap[tag];\n      if (instance) {\n        return instance;\n      } else {\n        // throw new Error(`${tag}实例尚未初始化`)\n        return null;\n      }\n    }\n\n    /**\n     * 初始化具体实例\n     * @param tag\n     * @param args\n     */\n\n  }, {\n    key: 'initInstance',\n    value: function initInstance(tag) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var a = args[0],\n          b = args[1],\n          c = args[2],\n          d = args[3];\n\n      if (this._clsMap[tag]) {\n        var newInstance = new this._clsMap[tag](a, b, c, d);\n        this._instanceMap[tag] = newInstance;\n        if (newInstance.init) {\n          newInstance.init(); // TODO: lifecircle\n        }\n        return newInstance;\n      } else {\n        throw new Error(tag + '\\u672A\\u5728context\\u4E2D\\u6CE8\\u518C');\n      }\n    }\n\n    /**\n     * 避免大量的initInstance调用，初始化所有的组件\n     * @param config\n     */\n\n  }, {\n    key: 'init',\n    value: function init(config) {\n      if (this._inited) {\n        return;\n      }\n      for (var tag in this._clsMap) {\n        // if not inited, init an instance\n        if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n          this.initInstance(tag, config);\n        }\n      }\n      this._inited = true;\n    }\n\n    /**\n     * 注册一个上下文流程，提供安全的事件发送机制\n     * @param tag\n     * @param cls\n     */\n\n  }, {\n    key: 'registry',\n    value: function registry(tag, cls) {\n      var _this2 = this;\n\n      var emitter = this._emitter;\n      var checkMessageName = this._isMessageNameValid.bind(this);\n      var self = this;\n      var enhanced = function (_cls) {\n        babelHelpers.inherits(enhanced, _cls);\n\n        function enhanced(a, b, c) {\n          babelHelpers.classCallCheck(this, enhanced);\n\n          var _this = babelHelpers.possibleConstructorReturn(this, (enhanced.__proto__ || Object.getPrototypeOf(enhanced)).call(this, a, b, c));\n\n          _this.listeners = {};\n          _this.onceListeners = {};\n          _this.TAG = tag;\n          _this._context = self;\n          return _this;\n        }\n\n        babelHelpers.createClass(enhanced, [{\n          key: 'on',\n          value: function on(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.listeners[messageName]) {\n              this.listeners[messageName].push(callback);\n            } else {\n              this.listeners[messageName] = [callback];\n            }\n\n            emitter.on('' + messageName + DIRECT_EMIT_FLAG + tag, callback); // 建立定向通信监听\n            return emitter.on(messageName, callback);\n          }\n\n          /**\n           * 在某个事件触发前执行\n           * @param messageName\n           * @param callback\n           */\n\n        }, {\n          key: 'before',\n          value: function before(messageName, callback) {\n            checkMessageName(messageName);\n            if (self._hooks[messageName]) {\n              self._hooks[messageName].push(callback);\n            } else {\n              self._hooks[messageName] = [callback];\n            }\n          }\n        }, {\n          key: 'once',\n          value: function once(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.onceListeners[messageName]) {\n              this.onceListeners[messageName].push(callback);\n            } else {\n              this.onceListeners[messageName] = [callback];\n            }\n\n            emitter.once('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n            return emitter.once(messageName, callback);\n          }\n        }, {\n          key: 'emit',\n          value: function emit(messageName) {\n            checkMessageName(messageName);\n            // console.log('emit ', messageName);\n\n            var beforeList = self._hooks ? self._hooks[messageName] : null;\n\n            if (beforeList) {\n              for (var i = 0, len = beforeList.length; i < len; i++) {\n                var callback = beforeList[i];\n                callback();\n              }\n            }\n\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            return emitter.emit.apply(emitter, [messageName].concat(args));\n          }\n\n          /**\n           * 定向发送给某个组件单例的消息\n           * @param messageName\n           * @param args\n           */\n\n        }, {\n          key: 'emitTo',\n          value: function emitTo(tag, messageName) {\n            checkMessageName(messageName);\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n              args[_key3 - 2] = arguments[_key3];\n            }\n\n            return emitter.emit.apply(emitter, ['' + messageName + DIRECT_EMIT_FLAG + tag].concat(args));\n          }\n        }, {\n          key: 'off',\n          value: function off(messageName, callback) {\n            checkMessageName(messageName);\n            return emitter.off(messageName, callback);\n          }\n        }, {\n          key: 'removeListeners',\n          value: function removeListeners() {\n            var hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners);\n\n            for (var messageName in this.listeners) {\n              if (hasOwn(messageName)) {\n                var callbacks = this.listeners[messageName] || [];\n                for (var i = 0; i < callbacks.length; i++) {\n                  var callback = callbacks[i];\n                  emitter.off(messageName, callback);\n                  emitter.off('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n                }\n              }\n            }\n\n            for (var _messageName in this.onceListeners) {\n              if (hasOwn(_messageName)) {\n                var _callbacks = this.onceListeners[_messageName] || [];\n                for (var _i = 0; _i < _callbacks.length; _i++) {\n                  var _callback = _callbacks[_i];\n                  emitter.off(_messageName, _callback);\n                  emitter.off('' + _messageName + DIRECT_EMIT_FLAG + tag, _callback);\n                }\n              }\n            }\n          }\n\n          /**\n           * 在组件销毁时，默认将它注册的事件全部卸载，确保不会造成内存泄漏\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            // step1 unlisten events\n            this.removeListeners();\n            this.listeners = {};\n\n            // step2 release from context\n            delete self._instanceMap[tag];\n            if (babelHelpers.get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this)) {\n              return babelHelpers.get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this).call(this);\n            }\n          }\n        }]);\n        return enhanced;\n      }(cls);\n      this._clsMap[tag] = enhanced;\n\n      /**\n       * get instance immediately\n       * e.g const instance = context.registry(tag, Cls)(config)\n       * */\n      return function () {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return _this2.initInstance.apply(_this2, [tag].concat(args));\n      };\n    }\n\n    /**\n     * 对存在的实例进行\n     */\n\n  }, {\n    key: 'destroyInstances',\n    value: function destroyInstances() {\n      var _this3 = this;\n\n      Object.keys(this._instanceMap).forEach(function (tag) {\n        if (_this3._instanceMap[tag].destroy) {\n          _this3._instanceMap[tag].destroy();\n        }\n      });\n    }\n\n    /**\n     * 编解码流程无需关注事件的解绑\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._emitter = null;\n      this.allowedEvents = [];\n      this._clsMap = null;\n      this._context = null;\n      this._hooks = null;\n      this.destroyInstances();\n    }\n\n    /**\n     * 对信道进行收拢\n     * @param messageName\n     * @private\n     */\n\n  }, {\n    key: '_isMessageNameValid',\n    value: function _isMessageNameValid(messageName) {\n      if (!this.allowedEvents.indexOf(messageName) < 0) {\n        throw new Error('unregistered message name: ' + messageName);\n      }\n    }\n  }]);\n  return Context;\n}();\n\nexport default Context;","var LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  DETECT_CHANGE_STREAM_DISCONTINUE: 'DETECT_CHANGE_STREAM_DISCONTINUE',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n\n  // hls专有events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYTO_EVENTS: CRYTO_EVENTS\n};","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport default sniffer;","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nexport default le;","var UTF8 = function () {\n  function UTF8() {\n    babelHelpers.classCallCheck(this, UTF8);\n  }\n\n  babelHelpers.createClass(UTF8, null, [{\n    key: 'decode',\n    value: function decode(uint8array) {\n      var out = [];\n      var input = uint8array;\n      var i = 0;\n      var length = uint8array.length;\n\n      while (i < length) {\n        if (input[i] < 0x80) {\n          out.push(String.fromCharCode(input[i]));\n          ++i;\n          continue;\n        } else if (input[i] < 0xC0) {\n          // fallthrough\n        } else if (input[i] < 0xE0) {\n          if (UTF8._checkContinuation(input, i, 1)) {\n            var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n            if (ucs4 >= 0x80) {\n              out.push(String.fromCharCode(ucs4 & 0xFFFF));\n              i += 2;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF0) {\n          if (UTF8._checkContinuation(input, i, 2)) {\n            var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n            if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n              out.push(String.fromCharCode(_ucs & 0xFFFF));\n              i += 3;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF8) {\n          if (UTF8._checkContinuation(input, i, 3)) {\n            var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n            if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n              _ucs2 -= 0x10000;\n              out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n              out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n              i += 4;\n              continue;\n            }\n          }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n      }\n\n      return out.join('');\n    }\n  }, {\n    key: '_checkContinuation',\n    value: function _checkContinuation(uint8array, start, checkLength) {\n      var array = uint8array;\n      if (start + checkLength < array.length) {\n        while (checkLength--) {\n          if ((array[++start] & 0xC0) !== 0x80) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n  return UTF8;\n}();\n\nexport default UTF8;","var MediaSegmentList = function () {\n    function MediaSegmentList(type) {\n        babelHelpers.classCallCheck(this, MediaSegmentList);\n\n        this._type = type;\n        this._list = [];\n        this._lastAppendLocation = -1; // cached last insert location\n    }\n\n    babelHelpers.createClass(MediaSegmentList, [{\n        key: \"isEmpty\",\n        value: function isEmpty() {\n            return this._list.length === 0;\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            this._list = [];\n            this._lastAppendLocation = -1;\n        }\n    }, {\n        key: \"_searchNearestSegmentBefore\",\n        value: function _searchNearestSegmentBefore(beginDts) {\n            var list = this._list;\n            if (list.length === 0) {\n                return -2;\n            }\n            var last = list.length - 1;\n            var mid = 0;\n            var lbound = 0;\n            var ubound = last;\n\n            var idx = 0;\n\n            if (beginDts < list[0].originDts) {\n                idx = -1;\n                return idx;\n            }\n\n            while (lbound <= ubound) {\n                mid = lbound + Math.floor((ubound - lbound) / 2);\n                if (mid === last || beginDts > list[mid].lastSample.originDts && beginDts < list[mid + 1].originDts) {\n                    idx = mid;\n                    break;\n                } else if (list[mid].originDts < beginDts) {\n                    lbound = mid + 1;\n                } else {\n                    ubound = mid - 1;\n                }\n            }\n            return idx;\n        }\n    }, {\n        key: \"_searchNearestSegmentAfter\",\n        value: function _searchNearestSegmentAfter(beginDts) {\n            return this._searchNearestSegmentBefore(beginDts) + 1;\n        }\n    }, {\n        key: \"append\",\n        value: function append(segment) {\n            var list = this._list;\n            var lastAppendIdx = this._lastAppendLocation;\n            var insertIdx = 0;\n\n            if (lastAppendIdx !== -1 && lastAppendIdx < list.length && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && segment.originStartDts < list[lastAppendIdx + 1].originStartDts)) {\n                insertIdx = lastAppendIdx + 1; // use cached location idx\n            } else {\n                if (list.length > 0) {\n                    insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n                }\n            }\n\n            this._lastAppendLocation = insertIdx;\n            this._list.splice(insertIdx, 0, segment);\n        }\n    }, {\n        key: \"getLastSegmentBefore\",\n        value: function getLastSegmentBefore(beginDts) {\n            var idx = this._searchNearestSegmentBefore(beginDts);\n            if (idx >= 0) {\n                return this._list[idx];\n            } else {\n                // -1\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastSampleBefore\",\n        value: function getLastSampleBefore(beginDts) {\n            var segment = this.getLastSegmentBefore(beginDts);\n            if (segment !== null) {\n                return segment.lastSample;\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastRAPBefore\",\n        value: function getLastRAPBefore(beginDts) {\n            var segmentIdx = this._searchNearestSegmentBefore(beginDts);\n            var randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n                segmentIdx--;\n                randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            }\n            if (randomAccessPoints.length > 0) {\n                return randomAccessPoints[randomAccessPoints.length - 1];\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"type\",\n        get: function get() {\n            return this._type;\n        }\n    }, {\n        key: \"length\",\n        get: function get() {\n            return this._list.length;\n        }\n    }]);\n    return MediaSegmentList;\n}();\n\nexport default MediaSegmentList;","var MediaSample = function () {\n  function MediaSample(info) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, MediaSample);\n\n    var _default = MediaSample.getDefaultInf();\n\n    if (!info || Object.prototype.toString.call(info) !== '[object Object]') {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    Object.entries(sample).forEach(function (_ref) {\n      var _ref2 = babelHelpers.slicedToArray(_ref, 2),\n          k = _ref2[0],\n          v = _ref2[1];\n\n      _this[k] = v;\n    });\n  }\n\n  babelHelpers.createClass(MediaSample, null, [{\n    key: 'getDefaultInf',\n    value: function getDefaultInf() {\n      return {\n        dts: null,\n        pts: null,\n        duration: null,\n        position: null,\n        isRAP: false, // is Random access point\n        originDts: null\n      };\n    }\n  }]);\n  return MediaSample;\n}();\n\nexport default MediaSample;","var MediaSegment = function () {\n    function MediaSegment() {\n        babelHelpers.classCallCheck(this, MediaSegment);\n\n        this.startDts = -1;\n        this.endDts = -1;\n        this.startPts = -1;\n        this.endPts = -1;\n        this.originStartDts = -1;\n        this.originEndDts = -1;\n        this.randomAccessPoints = [];\n        this.firstSample = null;\n        this.lastSample = null;\n    }\n\n    babelHelpers.createClass(MediaSegment, [{\n        key: \"addRAP\",\n        value: function addRAP(sample) {\n            sample.isRAP = true;\n            this.randomAccessPoints.push(sample);\n        }\n    }]);\n    return MediaSegment;\n}();\n\nexport default MediaSegment;","export var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    babelHelpers.classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  babelHelpers.createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    babelHelpers.classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  babelHelpers.createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n  return VideoTrackMeta;\n}();","export var AudioTrackSample = function () {\n  function AudioTrackSample(info) {\n    babelHelpers.classCallCheck(this, AudioTrackSample);\n\n    var _default = AudioTrackSample.getDefault();\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  babelHelpers.createClass(AudioTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n  return AudioTrackSample;\n}();\n\nexport var VideoTrackSample = function () {\n  function VideoTrackSample(info) {\n    babelHelpers.classCallCheck(this, VideoTrackSample);\n\n    var _default = VideoTrackSample.getDefault();\n\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  babelHelpers.createClass(VideoTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        isKeyframe: false, // is Random access point\n        originDts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n  return VideoTrackSample;\n}();","var MSE = function () {\n  function MSE(configs, context) {\n    babelHelpers.classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n  }\n\n  babelHelpers.createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this.container.src = URL.createObjectURL(this.mediaSource);\n      this.url = this.container.src;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx) {\n      this._context = newCtx;\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit('SOURCE_UPDATE_END');\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (this.mediaSource.readyState !== 'open') {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track) {\n          var dur = type === 'audio' ? 21 : 40;\n          if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n          if (sources[type].data.length >= this.preloadTime / dur) {\n            add = true;\n          }\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 0) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n          var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n          this.sourceBuffers[_type] = sourceBuffer;\n          sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (sources) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var type = Object.keys(this.sourceBuffers)[i];\n          var sourceBuffer = this.sourceBuffers[type];\n          var source = sources.sources[type];\n          if (source && !source.inited) {\n            // console.log('append initial segment')\n            try {\n              sourceBuffer.appendBuffer(source.init.buffer.buffer);\n              source.inited = true;\n            } catch (e) {\n              // DO NOTHING\n            }\n          } else if (source) {\n            var data = source.data.shift();\n            if (data) {\n              try {\n                sourceBuffer.appendBuffer(data.buffer.buffer);\n              } catch (e) {\n                source.data.unshift(data);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      var _mediaSource = this.mediaSource,\n          readyState = _mediaSource.readyState,\n          activeSourceBuffers = _mediaSource.activeSourceBuffers;\n\n      if (readyState === 'open' && activeSourceBuffers.length === 0) {\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          // log\n        }\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        if (!buffer.updating) {\n\n          // console.log('remove', start, end)\n          buffer.remove(start, end);\n        }\n      }\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      return this.removeBuffers().then(function () {\n        for (var i = 0; i < Object.keys(_this2.sourceBuffers).length; i++) {\n          var _buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n          _this2.mediaSource.removeSourceBuffer(_buffer);\n          delete _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        }\n\n        _this2.container.removeEventListener('timeupdate', _this2.onTimeUpdate);\n        _this2.container.removeEventListener('waiting', _this2.onWaiting);\n        _this2.mediaSource.removeEventListener('sourceopen', _this2.onSourceOpen);\n\n        _this2.endOfStream();\n        window.URL.revokeObjectURL(_this2.url);\n\n        _this2.url = null;\n        _this2.configs = {};\n        _this2.container = null;\n        _this2.mediaSource = null;\n        _this2.sourceBuffers = {};\n        _this2.preloadTime = 1;\n      });\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      var buffered = buffer.buffered;\n      var bEnd = 0.1;\n      for (var i = 0, len = buffered.length; i < len; i++) {\n        bEnd = buffered.end(i);\n      }\n      try {\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n  return MSE;\n}();\n\nexport default MSE;","var Stream = function () {\n  function Stream(buffer) {\n    babelHelpers.classCallCheck(this, Stream);\n\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.dataview = new DataView(buffer);\n      this.dataview.position = 0;\n    } else {\n      throw new Error('data is invalid');\n    }\n  }\n\n  babelHelpers.createClass(Stream, [{\n    key: 'back',\n    value: function back(count) {\n      this.position -= count;\n    }\n  }, {\n    key: 'skip',\n    value: function skip(count) {\n      var loop = Math.floor(count / 4);\n      var last = count % 4;\n      for (var i = 0; i < loop; i++) {\n        Stream.readByte(this.dataview, 4);\n      }\n      if (last > 0) {\n        Stream.readByte(this.dataview, last);\n      }\n    }\n\n    /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n\n  }, {\n    key: 'readUint8',\n    value: function readUint8() {\n      return Stream.readByte(this.dataview, 1);\n    }\n  }, {\n    key: 'readUint16',\n    value: function readUint16() {\n      return Stream.readByte(this.dataview, 2);\n    }\n  }, {\n    key: 'readUint24',\n    value: function readUint24() {\n      return Stream.readByte(this.dataview, 3);\n    }\n  }, {\n    key: 'readUint32',\n    value: function readUint32() {\n      return Stream.readByte(this.dataview, 4);\n    }\n  }, {\n    key: 'readUint64',\n    value: function readUint64() {\n      return Stream.readByte(this.dataview, 8);\n    }\n  }, {\n    key: 'readInt8',\n    value: function readInt8() {\n      return Stream.readByte(this.dataview, 1, true);\n    }\n  }, {\n    key: 'readInt16',\n    value: function readInt16() {\n      return Stream.readByte(this.dataview, 2, true);\n    }\n  }, {\n    key: 'readInt32',\n    value: function readInt32() {\n      return Stream.readByte(this.dataview, 4, true);\n    }\n  }, {\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >>> 24 & 0xff, value >>> 16 & 0xff, value >>> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.buffer.byteLength;\n    }\n  }, {\n    key: 'position',\n    set: function set(value) {\n      this.dataview.position = value;\n    },\n    get: function get() {\n      return this.dataview.position;\n    }\n  }], [{\n    key: 'readByte',\n    value: function readByte(buffer, size, sign) {\n      var res = void 0;\n      switch (size) {\n        case 1:\n          if (sign) {\n            res = buffer.getInt8(buffer.position);\n          } else {\n            res = buffer.getUint8(buffer.position);\n          }\n          break;\n        case 2:\n          if (sign) {\n            res = buffer.getInt16(buffer.position);\n          } else {\n            res = buffer.getUint16(buffer.position);\n          }\n          break;\n        case 3:\n          if (sign) {\n            throw new Error('not supported for readByte 3');\n          } else {\n            res = buffer.getUint8(buffer.position) << 16;\n            res |= buffer.getUint8(buffer.position + 1) << 8;\n            res |= buffer.getUint8(buffer.position + 2);\n          }\n          break;\n        case 4:\n          if (sign) {\n            res = buffer.getInt32(buffer.position);\n          } else {\n            res = buffer.getUint32(buffer.position);\n          }\n          break;\n        case 8:\n          if (sign) {\n            throw new Error('not supported for readBody 8');\n          } else {\n            res = buffer.getUint32(buffer.position) << 32;\n            res |= buffer.getUint32(buffer.position + 4);\n          }\n          break;\n        default:\n          res = '';\n      }\n      buffer.position += size;\n      return res;\n    }\n  }]);\n  return Stream;\n}();\n\nexport default Stream;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    babelHelpers.classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  babelHelpers.createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n  return Buffer;\n}();\n\nexport default Buffer;","import EVENTS from '../constants/events';\nvar CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\n\nvar Crypto = function () {\n    function Crypto(config) {\n        babelHelpers.classCallCheck(this, Crypto);\n\n        this.inputBuffer = config.inputbuffer;\n        this.outputBuffer = config.outputbuffer;\n        this.key = config.key;\n        this.iv = config.iv;\n        this.method = config.method;\n\n        this.crypto = window.crypto || window.msCrypto;\n    }\n\n    babelHelpers.createClass(Crypto, [{\n        key: 'init',\n        value: function init() {\n            this.on(CRYTO_EVENTS.START_DECRYPT, this.decript.bind(this));\n        }\n    }, {\n        key: 'decript',\n        value: function decript() {\n            var _this = this;\n\n            if (!this.aeskey) {\n                var sbkey = this.crypto.subtle.importKey('raw', this.key.buffer, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n                sbkey.then(function (key) {\n                    _this.aeskey = key;\n                    _this.decriptData();\n                });\n            } else {\n                this.decriptData();\n            }\n        }\n    }, {\n        key: 'decriptData',\n        value: function decriptData() {\n            var _this2 = this;\n\n            var inputbuffer = this._context.getInstance(this.inputBuffer);\n            var outputbuffer = this._context.getInstance(this.outputBuffer);\n            var data = inputbuffer.shift();\n            if (data) {\n                this.crypto.subtle.decrypt({ name: 'AES-CBC', iv: this.iv.buffer }, this.aeskey, data).then(function (res) {\n                    outputbuffer.push(new Uint8Array(res));\n                    _this2.emit(CRYTO_EVENTS.DECRYPTED);\n                    _this2.decriptData(data);\n                });\n            }\n        }\n    }]);\n    return Crypto;\n}();\n\nexport default Crypto;","import _Context from './context';\n\n// Modules from constants\nimport _EVENTS from './constants/events';\nimport { CONTEXT_COMOMANDS } from './constants/worker-commands';\n\n// Modules from env\nimport _sniffer from './env/sniffer';\nimport _isLe from './env/isle';\nimport _UTF8 from './env/utf8';\n\n// Models\nimport _MediaInfo from './models/media-info';\nimport _MediaSample from './models/media-sample';\nimport _MediaSegment from './models/media-segment';\nimport _MediaSegmentList from './models/media-segment-list';\nimport { AudioTrackMeta as _AudioTrackMeta, VideoTrackMeta as _VideoTrackMeta } from './models/track-meta';\n\nimport { AudioTrackSample as _AudioTrackSample, VideoTrackSample as _VideoTrackSample } from './models/track-sample';\n\n// Modules from mse\nimport _Mse from './mse/index';\n\n// Modules from write\nimport _Stream from './write/stream';\nimport _Buffer from './write/buffer';\n\n// Crypto\nimport _Crypto from './crypto';\n\nexport var Context = _Context;\nexport var EVENTS = _EVENTS;\nexport var WORKER_COMMANDS = {\n  CONTEXT_COMOMANDS: CONTEXT_COMOMANDS\n};\nexport var sniffer = _sniffer;\nexport var isLe = _isLe;\nexport var UTF8 = _UTF8;\nexport var MediaInfo = _MediaInfo;\nexport var MediaSample = _MediaSample;\nexport var MediaSegment = _MediaSegment;\nexport var MediaSegmentList = _MediaSegmentList;\nexport var AudioTrackMeta = _AudioTrackMeta;\nexport var VideoTrackMeta = _VideoTrackMeta;\nexport var AudioTrackSample = _AudioTrackSample;\nexport var VideoTrackSample = _VideoTrackSample;\nexport var Mse = _Mse;\nexport var Stream = _Stream;\nexport var Buffer = _Buffer;\nexport var Crypto = _Crypto;","var Track = function () {\n  /**\n   * The constructor.\n   */\n  function Track() {\n    babelHelpers.classCallCheck(this, Track);\n\n    this.id = -1;\n    this.sequenceNumber = 0;\n    this.samples = [];\n    this.droppedSamples = [];\n    this.length = 0;\n  }\n\n  /**\n   * Reset the track.\n   */\n\n\n  babelHelpers.createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n    /**\n     * destroy the track.\n     */\n\n  }, {\n    key: 'distroy',\n    value: function distroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  babelHelpers.inherits(AudioTrack, _Track);\n\n  /**\n   * The constructor for audio track.\n   */\n  function AudioTrack() {\n    babelHelpers.classCallCheck(this, AudioTrack);\n\n    var _this = babelHelpers.possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  babelHelpers.inherits(VideoTrack, _Track2);\n\n  /**\n   * The constructor for video track.\n   */\n  function VideoTrack() {\n    babelHelpers.classCallCheck(this, VideoTrack);\n\n    var _this2 = babelHelpers.possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    _this2.type = 'video';\n    _this2.dropped = 0;\n    return _this2;\n  }\n  /**\n   * reset the video track.\n   */\n\n\n  babelHelpers.createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    babelHelpers.classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  babelHelpers.createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n  return Tracks;\n}();","export var XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    babelHelpers.classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n\n\n  babelHelpers.createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n  return XgBuffer;\n}();\n\nexport var RemuxBuffer = function () {\n  function RemuxBuffer() {\n    babelHelpers.classCallCheck(this, RemuxBuffer);\n\n    this.video = [];\n    this.audio = [];\n  }\n\n  babelHelpers.createClass(RemuxBuffer, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.video = [];\n      this.audio = [];\n    }\n  }]);\n  return RemuxBuffer;\n}();","var Source = function Source() {\n  babelHelpers.classCallCheck(this, Source);\n\n  this.mimetype = '';\n  this.init = null;\n  this.data = [];\n};\n\nvar PreSource = function () {\n  function PreSource() {\n    babelHelpers.classCallCheck(this, PreSource);\n\n    this.sources = {};\n  }\n\n  babelHelpers.createClass(PreSource, [{\n    key: 'getSource',\n    value: function getSource(source) {\n      return this.sources[source];\n    }\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new Source();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.sources = {};\n    }\n  }]);\n  return PreSource;\n}();\n\nexport default PreSource;","import _Track, { Tracks as _Tracks, AudioTrack as _AudioTrack, VideoTrack as _VideoTrack } from './track';\nimport { XgBuffer as _XgBuffer, RemuxBuffer as _RemuxBuffer } from './buffer';\nimport _PreSource from './presouce';\n\nexport var Track = _Track;\nexport var Tracks = _Tracks;\nexport var AudioTrack = _AudioTrack;\nexport var VideoTrack = _VideoTrack;\nexport var XgBuffer = _XgBuffer;\nexport var RemuxBuffer = _RemuxBuffer;\nexport var PreSource = _PreSource;","import { EVENTS } from 'xgplayer-utils';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    babelHelpers.classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  babelHelpers.createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'load',\n    value: function load(url, opts) {\n      var _this2 = this;\n\n      this.url = url;\n\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n      this.loading = true;\n      return fetch(this.url, params).then(function (response) {\n        if (response.ok) {\n          _this2.status = response.status;\n          Promise.resolve().then(function () {\n            _this2._onFetchResponse(response);\n          });\n\n          return Promise.resolve(response);\n        }\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, new Error(response.status + ' (' + response.statusText + ')'));\n      }).catch(function (error) {\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var _this3 = this;\n\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n      this._reader && this._reader.read().then(function (val) {\n        if (_this3._canceled || _this3._destroyed) {\n          if (_this3._reader) {\n            try {\n              _this3._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this3.loading = false;\n          _this3.status = 0;\n          Promise.resolve().then(function () {\n            _this3.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          });\n          return;\n        }\n\n        buffer.push(val.value);\n        Promise.resolve().then(function () {\n          _this3.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        });\n        return _this3._onReader(reader, taskno);\n      }).catch(function (error) {\n        _this3.loading = false;\n        _this3.emit(LOADER_EVENTS.LOADER_ERROR, _this3.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // 添加自定义头\n      };if (babelHelpers.typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (babelHelpers.typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials 在默认情况下不被使用。\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // 防止failed: 200错误被打印到控制台上\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      this._canceled = true;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      this.cancel();\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n  return FetchLoader;\n}();\n\nexport default FetchLoader;","import _FetchLoader from './fetch-loader';\n\nexport var FetchLoader = _FetchLoader;","var Golomb = function () {\n  function Golomb(uint8array) {\n    babelHelpers.classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  babelHelpers.createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO 异常处理\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }]);\n  return Golomb;\n}();\n\nexport default Golomb;","/* eslint-disable camelcase  */\n/* eslint-disable one-var  */\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    babelHelpers.classCallCheck(this, SPSParser);\n  }\n\n  babelHelpers.createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1,\n          par_height = 1;\n      var fps = 0,\n          fps_fixed = true,\n          fps_num = 0,\n          fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0,\n          crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var last_scale = 8,\n          next_scale = 8;\n      var delta_scale = 0;\n      for (var i = 0; i < count; i++) {\n        if (next_scale !== 0) {\n          delta_scale = gb.readSEG();\n          next_scale = (last_scale + delta_scale + 256) % 256;\n        }\n        last_scale = next_scale === 0 ? last_scale : next_scale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n      return meta;\n    }\n  }]);\n  return SPSParser;\n}();\n\nexport default SPSParser;","import SpsParser from './sps';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    babelHelpers.classCallCheck(this, Nalunit);\n  }\n\n  babelHelpers.createClass(Nalunit, null, [{\n    key: 'getNalunits',\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32();\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = buffer.buffer.slice(buffer.position, buffer.position + length);\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = buffer.length;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225;\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n  return Nalunit;\n}();\n\nexport default Nalunit;","var AAC = function () {\n  function AAC() {\n    babelHelpers.classCallCheck(this, AAC);\n  }\n\n  babelHelpers.createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n  return AAC;\n}();\n\nexport default AAC;","import { EVENTS } from 'xgplayer-utils';\nimport AAC from './aac/aac-helper';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS,\n    LOADER_EVENTS = EVENTS.LOADER_EVENTS;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    babelHelpers.classCallCheck(this, Compatibility);\n\n    this.nextAudioDts = 0; // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0; // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined; // 上一段音频数据的长度\n    this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0; // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0; // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // 补充音频帧（）\n    this.filledVideoSamples = []; // 补充视频帧（）\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    this._videoLargeGap = 0;\n    this._audioLargeGap = 0;\n  }\n\n  babelHelpers.createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // 估算下一段音频数据的dts\n      this.nextVideoDts = null; // 估算下一段视频数据的dts\n\n      this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n      this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n      this.lastVideoDts = undefined; // 上一段音频数据的长度\n      this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n      // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n      // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // 补充音频帧（）\n      this.filledVideoSamples = []; // 补充视频帧（）\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n      if (this._firstAudioSample) {\n        this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples);\n      }\n\n      var _Compatibility$detact = Compatibility.detactChangeStream(this.videoTrack.samples),\n          videoChanged = _Compatibility$detact.changed,\n          videoChangedIdx = _Compatibility$detact.changedIdx;\n\n      if (videoChanged && !isFirstAudioSamples) {\n        this.fixChangeStreamVideo(videoChangedIdx);\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detact2 = Compatibility.detactChangeStream(this.audioTrack.samples),\n          audioChanged = _Compatibility$detact2.changed,\n          audioChangedIdx = _Compatibility$detact2.changedIdx;\n\n      if (audioChanged) {\n        this.fixChangeStreamAudio(audioChangedIdx);\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      // console.log('next video', this.nextVideoDts)\n\n      for (var i = 0, len = videoSamples.length; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      if (meta.frameRate && meta.frameRate.fixed === false) {\n        return;\n      }\n\n      if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n        return;\n      }\n\n      // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n      var firstSample = videoSamples[0];\n\n      // step0.修复hls流出现巨大gap，需要强制重定位的问题\n      if (this._videoLargeGap !== 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      if (firstSample.dts !== this._firstVideoSample.dts && (streamChangeStart || this.videoLastSample && Compatibility.detectLargeGap(this.videoLastSample.dts, firstSample))) {\n        if (streamChangeStart) {\n          this.nextVideoDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        } else {\n          this.nextVideoDts = this.videoLastSample.dts;\n        }\n\n        this._videoLargeGap = this.nextVideoDts - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. 修复与audio首帧差距太大的问题\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i = 0; _i < fillCount; _i++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // 视频头部帧缺失需要复制第一帧\n            // 重新计算sample的dts和pts\n            clonedFirstSample.dts = videoFirstDts - (_i + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (gap < -2 * meta.refSampleDuration) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      this.videoLastSample = curLastSample;\n\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      // console.log('next audio', this.nextAudioDts)\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n      // 对audioSamples按照dts做排序\n      // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n      if (this._audioLargeGap !== 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n\n      if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n        if (streamChangeStart) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n      // step0. 首帧与video首帧间距大的问题\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n        if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < silentSampleCount; _i2++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i2 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. 处理samples段之间的丢帧情况\n        // 当发现duration差距大于1帧时进行补帧\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          meta.refSampleDurationFixed = undefined;\n        }\n\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n            // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n            meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap;\n          } else {\n            var silentFrameCount = Math.floor(gap / meta.refSampleDuration);\n\n            for (var _i3 = 0; _i3 < silentFrameCount; _i3++) {\n              var computed = firstDts - (_i3 + 1) * meta.refSampleDuration;\n              var _silentSample = Object.assign({}, audioSamples[0], {\n                dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n              });\n\n              this.filledAudioSamples.push({\n                dts: _silentSample.dts,\n                size: _silentSample.data.byteLength\n              });\n              this.audioTrack.samples.unshift(_silentSample);\n            }\n          }\n        } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n          // 当差距比较小的时候将音频帧重定位\n          // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n          audioSamples[0].dts = this.nextAudioDts;\n          audioSamples[0].pts = this.nextAudioDts;\n        } else if (gap < 0) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n        }\n      }\n      var lastOriginDts = audioSamples[audioSamples.length - 1].originDts;\n      var lastDts = audioSamples[audioSamples.length - 1].dts;\n      var lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration;\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration;\n      this.lastAudioDts = lastDts;\n\n      audioSamples[audioSamples.length - 1].duration = lastSampleDuration;\n\n      // step3. 修复samples段内部的dts异常问题\n      for (var _i4 = 0, _len = audioSamples.length; _i4 < _len; _i4++) {\n        var current = audioSamples[_i4];\n        var next = audioSamples[_i4 + 1];\n\n        if (!next) {\n          break;\n        }\n\n        var duration = next.dts - current.dts;\n        audioSamples[_i4].duration = duration;\n        /*\n        if (duration > (2 * meta.refSampleDuration)) {\n          // 两帧之间间隔太大，需要补空白帧\n          /**\n          let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n          let frameIdx = 0\n           while (frameIdx < silentFrameCount) {\n            const silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n              filtered: 0,\n              isSilent: true\n            }\n             audioSamples.splice(i, 0, silentSample)\n             this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n             frameIdx++\n            i++ // 不对静音帧做比较\n          }\n        } */\n      }\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var prevDts = changeIdx === 0 ? this.videoLastSample ? this.videoLastSample.dts : this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixVideo(false);\n      }\n\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._videoLargeGap = 0;\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else if (this.videoLastSample) {\n        streamChangeStart = this.videoLastSample.dts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixAudio(false);\n      }\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._audioLargeGap = 0;\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else {\n        streamChangeStart = this.lastAudioDts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // 获取video和audio的首帧数据\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // 寻找dts最小的帧作为首个音频帧\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * 在没有refSampleDuration的问题流中，\n     */\n\n  }, {\n    key: 'fixRefSampleDuration',\n    value: function fixRefSampleDuration(meta, samples) {\n      var isVideo = meta.type === 'video';\n      var allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount;\n      var firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts;\n      var filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length;\n\n      if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          meta.refSampleDuration = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // 将refSampleDuration重置为计算后的平均值\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n          if (durationAvg > 0 && durationAvg < 1000) {\n            meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n          }\n        }\n      }\n    }\n\n    /**\n     * 记录截止目前一共播放了多少帧\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * 去除不合法的帧（倒退、重复帧）\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var _firstVideoSample = this._firstVideoSample,\n          _firstAudioSample = this._firstAudioSample;\n\n\n      if (_firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample, index) {\n          if (sample === _firstAudioSample) {\n            return true;\n          }\n          return sample.dts > _firstAudioSample.dts;\n        });\n      }\n\n      if (_firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample, index) {\n          if (sample === _firstVideoSample) {\n            return true;\n          }\n          return sample.dts > _firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n\n    /**\n     * 寻找dts最小的sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectLargeGap',\n    value: function detectLargeGap(nextDts, firstSample) {\n      if (nextDts === null) {\n        return;\n      }\n      var curDts = firstSample.dts || 0;\n      var cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000; // fix hls流出现大量流dts间距问题\n      var cond2 = firstSample.options && firstSample.options.discontinue;\n\n      return cond1 || cond2;\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * 中途换流\n     */\n\n  }, {\n    key: 'detactChangeStream',\n    value: function detactChangeStream(samples) {\n      var changed = false;\n      var changedIdx = -1;\n      for (var i = 0, len = samples.length; i < len; i++) {\n        if (samples[i].options && samples[i].options.meta) {\n          changed = true;\n          changedIdx = i;\n          break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdx: changedIdx\n      };\n    }\n  }]);\n  return Compatibility;\n}();\n\nexport default Compatibility;","import _Nalunit from './h264/nalunit';\nimport _SpsParser from './h264/nalunit/sps';\nimport _Compatibility from './compatibility';\n\nexport var Nalunit = _Nalunit;\nexport var SpsParser = _SpsParser;\nexport var Compatibility = _Compatibility;","import { Buffer } from 'xgplayer-utils';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\nclass Fmp4 {\n  static size (value) {\n    return Buffer.writeUint32(value)\n  }\n  static initBox (size, name, ...content) {\n    const buffer = new Buffer()\n    buffer.write(Fmp4.size(size), Fmp4.type(name), ...content)\n    return buffer.buffer\n  }\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n  static ftyp () {\n    return Fmp4.initBox(24, 'ftyp', new Uint8Array([\n      0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n    ]))\n  }\n  static moov ({ type, meta }) {\n    let size = 8\n    let mvhd = Fmp4.mvhd(meta.duration, meta.timescale)\n    let trak\n\n    if (type === 'video') {\n      trak = Fmp4.videoTrak(meta)\n    } else {\n      trak = Fmp4.audioTrak(meta)\n    }\n\n    let mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n    [mvhd, trak, mvex].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moov', mvhd, trak, mvex)\n  }\n  static mvhd (duration, timescale = 1000) {\n    // duration *= timescale;\n    let bytes = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      (timescale >>> 24) & 0xFF,\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      (duration >>> 24) & 0xFF,\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n    ])\n    return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes))\n  }\n  static videoTrak (data) {\n    let size = 8\n\n    let tkhd = Fmp4.tkhd({\n      id: 1,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: data.presentWidth,\n      height: data.presentHeight,\n      type: 'video'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'video',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      avcc: data.avcc,\n      parRatio: data.parRatio,\n      width: data.presentWidth,\n      height: data.presentHeight\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static audioTrak (data) {\n    let size = 8\n    let tkhd = Fmp4.tkhd({\n      id: 2,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: 0,\n      height: 0,\n      type: 'audio'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'audio',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      channelCount: data.channelCount,\n      samplerate: data.sampleRate,\n      config: data.config\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static tkhd (data) {\n    let id = data.id\n    let duration = data.duration\n    let width = data.width\n    let height = data.height\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      (id >>> 24) & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      (id >>> 16) & 0xFF,\n      (id >>> 8) & 0xFF,\n      (id) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      (duration >>> 24) & 0xFF, // duration: 4 bytes track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      (width >>> 8) & 0xFF, // //宽度\n      (width) & 0xFF,\n      0x00, 0x00,\n      (height >>> 8) & 0xFF, // 高度\n      (height) & 0xFF,\n      0x00, 0x00\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'tkhd', content)\n  }\n  static edts (data) {\n    let buffer = new Buffer()\n    let duration = data.duration\n    let mediaTime = data.mediaTime\n    buffer.write(Fmp4.size(36), Fmp4.type('edts'))\n    // elst\n    buffer.write(Fmp4.size(28), Fmp4.type('elst'))\n    buffer.write(new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, // entry count\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      (mediaTime >> 24) & 0xff, (mediaTime >> 16) & 0xff, (mediaTime >> 8) & 0xff, mediaTime & 0xff,\n      0x00, 0x00, 0x00, 0x01 // media rate\n    ]))\n    return buffer.buffer\n  }\n  static mdia (data) {\n    let size = 8\n    let mdhd = Fmp4.mdhd(data.timescale, data.duration)\n    let hdlr = Fmp4.hdlr(data.type)\n    let minf = Fmp4.minf(data);\n    [mdhd, hdlr, minf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf)\n  }\n  static mdhd (timescale = 1000, duration) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      (timescale >>> 24) & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n      (duration >>> 24) & 0xFF, // duration: 4 bytes  track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n    ])\n    return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content)\n  }\n  static hdlr (type) {\n    let value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]\n    if (type === 'audio') {\n      value.splice(8, 4, ...[0x73, 0x6f, 0x75, 0x6e])\n      value.splice(24, 13, ...[0x53, 0x6f, 0x75, 0x6e,\n        0x64, 0x48, 0x61, 0x6e,\n        0x64, 0x6c, 0x65, 0x72, 0x00])\n    }\n    return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value))\n  }\n  static minf (data) {\n    let size = 8\n    let vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd()\n    let dinf = Fmp4.dinf()\n    let stbl = Fmp4.stbl(data);\n    [vmhd, dinf, stbl].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl)\n  }\n  static vmhd () {\n    return Fmp4.initBox(20, 'vmhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]))\n  }\n  static smhd () {\n    return Fmp4.initBox(16, 'smhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]))\n  }\n  static dinf () {\n    let buffer = new Buffer()\n    let dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]\n    buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref))\n    return buffer.buffer\n  }\n  static stbl (data) {\n    let size = 8\n    let stsd = Fmp4.stsd(data)\n    let stts = Fmp4.stts()\n    let stsc = Fmp4.stsc()\n    let stsz = Fmp4.stsz()\n    let stco = Fmp4.stco();\n    [stsd, stts, stsc, stsz, stco].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco)\n  }\n  static stsd (data) {\n    let content\n    if (data.type === 'audio') {\n      // if (!data.isAAC && data.codec === 'mp4') {\n      //     content = FMP4.mp3(data);\n      // } else {\n      //\n      // }\n      // 支持mp4a\n      content = Fmp4.mp4a(data)\n    } else {\n      content = Fmp4.avc1(data)\n    }\n    return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content)\n  }\n  static mp4a (data) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (data.samplerate >> 8) & 0xff,\n      data.samplerate & 0xff, //\n      0x00, 0x00\n    ])\n    let esds = Fmp4.esds(data.config)\n    return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds)\n  }\n  static esds (config = [43, 146, 8, 0]) {\n    const configlen = config.length\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n    ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]))\n    buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content)\n    return buffer.buffer\n  }\n  static avc1 (data) {\n    let buffer = new Buffer()\n    let size = 40// 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n    // let sps = data.sps\n    // let pps = data.pps\n    let width = data.width\n    let height = data.height\n    let hSpacing = data.parRatio.height\n    let vSpacing = data.parRatio.width\n    // let avccBuffer = new Buffer()\n    // avccBuffer.write(new Uint8Array([\n    //   0x01, // version\n    //   sps[1], // profile\n    //   sps[2], // profile compatible\n    //   sps[3], // level\n    //   0xfc | 3,\n    //   0xE0 | 1 // 目前只处理一个sps\n    // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n    // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n    let avcc = data.avcc\n    let avc1 = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1\n    let btrt = new Uint8Array([\n      0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n    ])\n    let pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n\n    buffer.write(\n      Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1,\n      Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc,\n      Fmp4.size(20), Fmp4.type('btrt'), btrt,\n      Fmp4.size(16), Fmp4.type('pasp'), pasp\n    )\n    return buffer.buffer\n  }\n  static stts () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stts', content)\n  }\n  static stsc () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stsc', content)\n  }\n  static stco () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stco', content)\n  }\n  static stsz () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n    ])\n    return Fmp4.initBox(20, 'stsz', content)\n  }\n  static mvex (duration, timescale = 1000, trackID) {\n    let buffer = new Buffer()\n    let mehd = Buffer.writeUint32(duration)\n    buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID))\n    return buffer.buffer\n  }\n  static trex (id) {\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'trex', content)\n  }\n  static moof (data) {\n    let size = 8\n    let mfhd = Fmp4.mfhd()\n    let traf = Fmp4.traf(data);\n    [mfhd, traf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moof', mfhd, traf)\n  }\n  static mfhd () {\n    let content = Buffer.writeUint32(Fmp4.sequence)\n    Fmp4.sequence += 1\n    return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content)\n  }\n  static traf (data) {\n    let size = 8\n    let tfhd = Fmp4.tfhd(data.id)\n    let tfdt = Fmp4.tfdt(data.time)\n    let sdtp = Fmp4.sdtp(data)\n    let trun = Fmp4.trun(data, sdtp.byteLength);\n\n    [tfhd, tfdt, trun, sdtp].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp)\n  }\n  static tfhd (id) {\n    let content = Buffer.writeUint32(id)\n    return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content)\n  }\n  static tfdt (time) {\n    // let upper = Math.floor(time / (UINT32_MAX + 1)),\n    //     lower = Math.floor(time % (UINT32_MAX + 1));\n    return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time))\n  }\n  static trun (data, sdtpLength) {\n    // let id = data.id;\n    // let ceil = id === 1 ? 16 : 12;\n    let buffer = new Buffer()\n    let sampleCount = Buffer.writeUint32(data.samples.length)\n    // mdat-header 8\n    // moof-header 8\n    // mfhd 16\n    // traf-header 8\n    // thhd 16\n    // tfdt 20\n    // trun-header 12\n    // sampleCount 4\n    // data-offset 4\n    // samples.length\n    let offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength)\n    buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset)\n\n    // let size = buffer.buffer.byteLength\n    // let writeOffset = 0\n    // data.samples.forEach(() => {\n    //   size += 16\n    // })\n    //\n    // let trunBox = new Uint8Array(size)\n\n    // trunBox.set(buffer.buffer, 0)\n\n    data.samples.forEach((item) => {\n      const flags = item.flags\n      // console.log(item.type, item.dts, item.duration)\n\n      buffer.write(new Uint8Array([\n        (item.duration >>> 24) & 0xFF, // sample_duration\n        (item.duration >>> 16) & 0xFF,\n        (item.duration >>> 8) & 0xFF,\n        (item.duration) & 0xFF,\n        (item.size >>> 24) & 0xFF, // sample_size\n        (item.size >>> 16) & 0xFF,\n        (item.size >>> 8) & 0xFF,\n        (item.size) & 0xFF,\n        (flags.isLeading << 2) | flags.dependsOn, // sample_flags\n        (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | flags.isNonSync,\n        0x00, 0x00, // sample_degradation_priority\n        (item.cts >>> 24) & 0xFF, // sample_composition_time_offset\n        (item.cts >>> 16) & 0xFF,\n        (item.cts >>> 8) & 0xFF,\n        (item.cts) & 0xFF\n      ]))\n      // writeOffset += 16\n      // buffer.write(Buffer.writeUint32(0));\n    })\n    return buffer.buffer\n  }\n  static sdtp (data) {\n    let buffer = new Buffer()\n    buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0))\n    data.samples.forEach(item => {\n      const flags = item.flags\n      const num = (flags.isLeading << 6) | // is_leading: 2 (bit)\n        (flags.dependsOn << 4) | // sample_depends_on\n        (flags.isDependedOn << 2) | // sample_is_depended_on\n        (flags.hasRedundancy)// sample_has_redundancy\n\n      buffer.write(new Uint8Array([num]))\n    })\n    return buffer.buffer\n  }\n  static mdat (data) {\n    let buffer = new Buffer()\n    let size = 8\n    data.samples.forEach(item => {\n      size += item.size\n    })\n    buffer.write(Fmp4.size(size), Fmp4.type('mdat'))\n    let mdatBox = new Uint8Array(size)\n    let offset = 0\n    mdatBox.set(buffer.buffer, offset)\n    offset += 8\n    data.samples.forEach(item => {\n      item.buffer.forEach((unit) => {\n        mdatBox.set(unit, offset)\n        offset += unit.byteLength\n        // buffer.write(unit.data);\n      })\n    })\n    return mdatBox\n  }\n}\nFmp4.type = (name) => {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)])\n}\nFmp4.sequence = 1\n\nexport default Fmp4\n","import {\n  EVENTS,\n  sniffer,\n  MediaSegmentList,\n  Buffer\n} from 'xgplayer-utils';\nimport Fmp4 from './fmp4'\n\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS\n\nexport default class Mp4Remuxer {\n  constructor (curTime = 0) {\n    this._dtsBase = curTime * 1000\n    this._isDtsBaseInited = false\n    this._videoSegmentList = new MediaSegmentList('video')\n    this._audioSegmentList = new MediaSegmentList('audio')\n    const {browser} = sniffer\n    this._fillSilenceFrame = browser === 'ie'\n\n    this.isFirstVideo = true\n    this.isFirstAudio = true\n\n    this.videoAllDuration = 0\n    this.audioAllDuration = 0\n  }\n\n  init () {\n    this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this))\n    this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this))\n    this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this))\n  }\n\n  destroy () {\n    this._dtsBase = -1\n    this._dtsBaseInited = false\n    this._videoSegmentList.clear()\n    this._audioSegmentList.clear()\n    this._videoSegmentList = null\n    this._audioSegmentList = null\n  }\n\n  remux () {\n    const { audioTrack, videoTrack } = this._context.getInstance('TRACKS')\n    !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack)\n\n    this._remuxVideo(videoTrack)\n    this._remuxAudio(audioTrack)\n  }\n\n  resetDtsBase () {\n    // for hls 中途切换 meta后seek\n    this._dtsBase = 0\n    this._dtsBaseInited = false\n  }\n\n  seek () {\n    this._videoSegmentList.clear()\n    this._audioSegmentList.clear()\n  }\n\n  onMetaDataReady (type) {\n    let track\n\n    if (type === 'audio') {\n      const { audioTrack } = this._context.getInstance('TRACKS')\n      track = audioTrack;\n    } else {\n      const { videoTrack } = this._context.getInstance('TRACKS')\n      track = videoTrack;\n    }\n\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.mimetype = track.meta.codec;\n    source.init = this.remuxInitSegment(type, track.meta);\n    // source.inited = false;\n\n    // this.resetDtsBase()\n    this.emit(REMUX_EVENTS.INIT_SEGMENT, type)\n  }\n\n  remuxInitSegment (type, meta) {\n    let initSegment = new Buffer()\n    let ftyp = Fmp4.ftyp()\n    let moov = Fmp4.moov({ type, meta: meta })\n\n    initSegment.write(ftyp, moov)\n    return initSegment;\n  }\n\n  calcDtsBase (audioTrack, videoTrack) {\n    if (!audioTrack && videoTrack.samples.length) {\n      return videoTrack.samples[0].dts\n    }\n\n    if (!audioTrack.samples.length && !videoTrack.samples.length) {\n      return;\n    }\n\n    let audioBase = Infinity\n    let videoBase = Infinity\n\n    if (audioTrack.samples && audioTrack.samples.length) {\n      audioBase = audioTrack.samples[0].dts\n    }\n    if (videoTrack.samples && videoTrack.samples.length) {\n      videoBase = videoTrack.samples[0].dts\n    }\n\n    this._dtsBase = Math.min(audioBase, videoBase) - this._dtsBase; // 兼容播放器切换清晰度\n    this._isDtsBaseInited = true\n  }\n\n  _remuxVideo (videoTrack) {\n    const track = videoTrack || {}\n\n    if (!videoTrack.samples || !videoTrack.samples.length) {\n      return\n    }\n\n    let {samples} = track\n    let firstDts = -1\n\n    let initSegment = null\n    const mp4Samples = []\n    const mdatBox = {\n      samples: []\n    }\n\n    let maxLoop = 10000\n    while (samples.length && maxLoop-- > 0) {\n      // console.log('mark2')\n      const avcSample = samples.shift()\n\n      const { isKeyframe, options } = avcSample\n      if (!this.isFirstVideo && options && options.meta) {\n        initSegment = this.remuxInitSegment('video', options.meta)\n        options.meta = null\n        samples.unshift(avcSample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = avcSample.dts - this._dtsBase\n\n      if (firstDts === -1) {\n        firstDts = dts\n      }\n\n      let cts\n      let pts\n      if (avcSample.pts !== undefined) {\n        pts = avcSample.pts - this._dtsBase\n        cts = pts - dts\n      }\n      if (avcSample.cts !== undefined) {\n        pts = avcSample.cts + dts\n        cts = avcSample.cts\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n\n      let sampleDuration = 0\n      if (avcSample.duration) {\n        sampleDuration = avcSample.duration;\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // lastest sample, use second last duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference duration\n          sampleDuration = this.videoMeta.refSampleDuration\n        }\n      }\n      this.videoAllDuration += sampleDuration\n      // console.log(`video dts ${dts}`, `pts ${pts}`, isKeyframe, `duration ${sampleDuration}`)\n      if (sampleDuration >= 0) {\n        mdatBox.samples.push(mdatSample)\n        mdatSample.buffer.push(avcSample.data)\n        mdatSample.size += avcSample.data.byteLength\n\n        mp4Samples.push({\n          dts,\n          cts,\n          pts,\n          data: avcSample.data,\n          size: avcSample.data.byteLength,\n          isKeyframe,\n          duration: sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: isKeyframe ? 2 : 1,\n            isDependedOn: isKeyframe ? 1 : 0,\n            hasRedundancy: 0,\n            isNonSync: isKeyframe ? 0 : 1\n          },\n          originDts: dts,\n          type: 'video'\n        })\n      }\n\n      if (isKeyframe) {\n        this.emit(REMUX_EVENTS.RANDOM_ACCESS_POINT, pts)\n      }\n    }\n\n    let moofMdat = new Buffer()\n    if (mp4Samples.length) {\n      const moof = Fmp4.moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = Fmp4.mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('video', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('video', initSegment)\n\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxVideo(track)\n      }\n    }\n\n    this.isFirstVideo = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video')\n\n    track.samples = []\n    track.length = 0\n  }\n\n  _remuxAudio (track) {\n    const {samples} = (track || {})\n    let firstDts = -1\n    let mp4Samples = []\n\n    let initSegment = null\n    const mdatBox = {\n      samples: []\n    }\n    if (!samples || !samples.length) {\n      return\n    }\n\n    let maxLoop = 10000\n    let isFirstDtsInited = false\n    while (samples.length && maxLoop-- > 0) {\n      // console.log('mark3')\n      let sample = samples.shift()\n      const { data, options } = sample\n      if (!this.isFirstAudio && options && options.meta) {\n        initSegment = this.remuxInitSegment('audio', options.meta)\n        options.meta = null;\n        samples.unshift(sample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = sample.dts - this._dtsBase\n      const originDts = dts\n      if (!isFirstDtsInited) {\n        firstDts = dts\n        isFirstDtsInited = true\n      }\n\n      let sampleDuration = 0\n      if (sample.duration) {\n        sampleDuration = sample.duration;\n      } else if (this.audioMeta.refSampleDurationFixed) {\n        sampleDuration = this.audioMeta.refSampleDurationFixed\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase;\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // use second last sample duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference sample duration\n          sampleDuration = this.audioMeta.refSampleDuration\n        }\n      }\n\n      // console.log(`audio dts ${dts}`, `pts ${dts}`, `duration ${sampleDuration}`)\n      this.audioAllDuration += sampleDuration\n      const mp4Sample = {\n        dts,\n        pts: dts,\n        cts: 0,\n        size: data.byteLength,\n        duration: sample.duration ? sample.duration : sampleDuration,\n        flags: {\n          isLeading: 0,\n          dependsOn: 2,\n          isDependedOn: 1,\n          hasRedundancy: 0,\n          isNonSync: 0\n        },\n        isKeyframe: true,\n        originDts,\n        type: 'audio'\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n\n      if (sampleDuration >= 0) {\n        mdatSample.buffer.push(data)\n        mdatSample.size += data.byteLength\n\n        mdatBox.samples.push(mdatSample)\n        mp4Samples.push(mp4Sample)\n      }\n    }\n\n    const moofMdat = new Buffer()\n\n    if (mp4Samples.length) {\n      const moof = Fmp4.moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = Fmp4.mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('audio', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('audio', initSegment)\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxAudio(track)\n      }\n    }\n\n    this.isFirstAudio = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat)\n\n    track.samples = []\n    track.length = 0\n  }\n\n  writeToSource (type, buffer) {\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.data.push(buffer)\n  }\n\n  initSilentAudio (dts, duration) {\n    const unit = Mp4Remuxer.getSilentFrame(this._audioMeta.channelCount)\n    return {\n      dts,\n      pts: dts,\n      cts: 0,\n      duration,\n      unit,\n      size: unit.byteLength,\n      originDts: dts,\n      type: 'video'\n    }\n  }\n\n  get videoMeta () {\n    return this._context.getInstance('TRACKS').videoTrack.meta\n  }\n  get audioMeta () {\n    return this._context.getInstance('TRACKS').audioTrack.meta\n  }\n\n  static getSilentFrame (channelCount) {\n    if (channelCount === 1) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n    } else if (channelCount === 2) {\n      return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80])\n    } else if (channelCount === 3) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e])\n    } else if (channelCount === 4) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38])\n    } else if (channelCount === 5) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38])\n    } else if (channelCount === 6) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0])\n    }\n    return null\n  }\n\n  destroy () {\n    this._player = null;\n  }\n}\n","/**\n * Reference: https://tools.ietf.org/html/rfc8216#section-4.3\n */\nvar M3U8Parser = function () {\n  function M3U8Parser() {\n    babelHelpers.classCallCheck(this, M3U8Parser);\n  }\n\n  babelHelpers.createClass(M3U8Parser, null, [{\n    key: 'parse',\n    value: function parse(text) {\n      var baseurl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      var ret = {\n        duration: 0\n      };\n      if (!text || !text.split) {\n        return;\n      }\n      var refs = text.split(/\\r|\\n/);\n      refs = refs.filter(function (ref) {\n        return ref;\n      });\n      var ref = refs.shift();\n      if (!ref.match('#EXTM3U')) {\n        throw new Error('Invalid m3u8 file: not \"#EXTM3U\"');\n        return null;\n      }\n      ref = refs.shift();\n      var nextDiscontinue = false;\n      while (ref) {\n        var refm = ref.match(/#(.[A-Z|-]*):(.*)/);\n        var refd = ref.match(/#(.[A-Z|-]*)/);\n        if (refd && refm && refm.length > 2) {\n          switch (refm[1]) {\n            case 'EXT-X-VERSION':\n              ret.version = parseInt(refm[2]);\n              break;\n            case 'EXT-X-MEDIA-SEQUENCE':\n              ret.sequence = parseInt(refm[2]);\n              break;\n            case 'EXT-X-TARGETDURATION':\n              ret.targetduration = parseFloat(refm[2]);\n              break;\n            case 'EXTINF':\n              M3U8Parser.parseFrag(refm, refs, ret, baseurl, nextDiscontinue);\n              nextDiscontinue = false;\n              break;\n            case 'EXT-X-KEY':\n              M3U8Parser.parseDecrypt(refm[2], ret);\n              break;\n            default:\n              break;\n          }\n        }if (refd && refd.length > 1) {\n          switch (refd[1]) {\n            case 'EXT-X-DISCONTINUITY':\n              nextDiscontinue = true;\n              break;\n            default:\n              break;\n          }\n        }\n        ref = refs.shift();\n      }\n      return ret;\n    }\n  }, {\n    key: 'parseFrag',\n    value: function parseFrag(refm, refs, ret, baseurl, discontinue) {\n      if (!ret.frags) {\n        ret.frags = [];\n      }\n\n      var freg = {\n        start: ret.duration,\n        duration: parseFloat(refm[2]) * 1000\n      };\n\n      ret.duration += freg.duration;\n      var nextline = refs.shift();\n      if (nextline.match(/#(.*):(.*)/) || nextline.match(/^#/)) {\n        nextline = refs.shift();\n      }\n      if (nextline.length > 0 && nextline.charAt(0) === '/' && baseurl.match(/.*\\/\\/.*\\.\\w+/g)) {\n        baseurl = baseurl.match(/.*\\/\\/.*\\.\\w+/g)[0];\n      }\n      if (nextline.match(/.*:\\/\\/.*/)) {\n        freg.url = nextline;\n      } else {\n        freg.url = baseurl + nextline;\n      }\n      freg.discontinue = discontinue;\n      ret.frags.push(freg);\n    }\n  }, {\n    key: 'parseURL',\n    value: function parseURL(url) {\n      var baseurl = '';\n      var urls = url.match(/(.*\\/).*\\.m3u8/);\n      if (urls && urls.length > 0) {\n        for (var i = 0; i < urls.length; i++) {\n          if (urls[i].match(/.*\\/$/g) && urls[i].length > baseurl.length) {\n            baseurl = urls[i];\n          }\n        }\n      }\n      return baseurl;\n    }\n  }, {\n    key: 'parseDecrypt',\n    value: function parseDecrypt(refm, ret) {\n      ret.encrypt = {};\n      var refs = refm.split(',');\n      for (var i in refs) {\n        var cmd = refs[i];\n        if (cmd.match(/METHOD=(.*)/)) {\n          ret.encrypt.method = cmd.match(/METHOD=(.*)/)[1];\n        }\n        if (cmd.match(/URI=\"(.*)\"/)) {\n          ret.encrypt.uri = cmd.match(/URI=\"(.*)\"/)[1];\n        }\n\n        if (cmd.match(/IV=0x(.*)/)) {\n          var iv = cmd.match(/IV=0x(.*)/)[1];\n          var length = Math.ceil(iv.length / 2);\n          ret.encrypt.ivb = new Uint8Array(length);\n          for (var _i = length - 1; _i >= 0; _i--) {\n            var im = parseInt(iv.substr(_i * 2, 2), 16);\n            ret.encrypt.ivb[_i] = im;\n          }\n          ret.encrypt.iv = iv;\n        }\n      };\n    }\n  }]);\n  return M3U8Parser;\n}();\n\nexport default M3U8Parser;","import { Nalunit } from 'xgplayer-codec';\nimport { AudioTrack, VideoTrack } from 'xgplayer-buffer';\nimport { AudioTrackMeta, VideoTrackMeta, AudioTrackSample, VideoTrackSample, EVENTS, Stream } from 'xgplayer-utils';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar StreamType = {\n  0x01: ['video', 'MPEG-1'],\n  0x02: ['video', 'MPEG-2'],\n  0x1b: ['video', 'AVC.H264'],\n  0xea: ['video', 'VC-1'],\n  0x03: ['audio', 'MPEG-1'],\n  0x04: ['audio', 'MPEG-2'],\n  0x0f: ['audio', 'MPEG-2.AAC'],\n  0x11: ['audio', 'MPEG-4.AAC'],\n  0x80: ['audio', 'LPCM'],\n  0x81: ['audio', 'AC3'],\n  0x06: ['audio', 'AC3'],\n  0x82: ['audio', 'DTS'],\n  0x83: ['audio', 'Dolby TrueHD'],\n  0x84: ['audio', 'AC3-Plus'],\n  0x85: ['audio', 'DTS-HD'],\n  0x86: ['audio', 'DTS-MA'],\n  0xa1: ['audio', 'AC3-Plus-SEC'],\n  0xa2: ['audio', 'DTS-HD-SEC']\n};\n\nvar TsDemuxer = function () {\n  function TsDemuxer(configs) {\n    babelHelpers.classCallCheck(this, TsDemuxer);\n\n    this.configs = Object.assign({}, configs);\n    this.demuxing = false;\n    this.pat = [];\n    this.pmt = [];\n    this._hasVideoMeta = false;\n    this._hasAudioMeta = false;\n  }\n\n  babelHelpers.createClass(TsDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.demux.bind(this));\n    }\n  }, {\n    key: 'demux',\n    value: function demux(frag) {\n      if (this.demuxing) {\n        return;\n      }\n\n      var buffer = this.inputBuffer;\n      var frags = { pat: [], pmt: [] };\n      var peses = {};\n\n      // Read TS segment\n      while (buffer.length >= 188) {\n        if (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('Untrust sync code: ' + buffer.array[0][buffer.offset] + ', try to recover;'), false);\n        }\n        while (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          buffer.shift(1);\n        }\n        if (buffer.length < 188) {\n          continue;\n        }\n        var buf = buffer.shift(188);\n        // console.log(buf);\n        var tsStream = new Stream(buf.buffer);\n        var ts = {};\n        TsDemuxer.read(tsStream, ts, frags);\n        if (ts.pes) {\n          if (!peses[ts.header.pid]) {\n            peses[ts.header.pid] = [];\n          }\n          peses[ts.header.pid].push(ts.pes);\n          ts.pes.ES.buffer = [ts.pes.ES.buffer];\n        } else if (peses[ts.header.pid]) {\n          peses[ts.header.pid][peses[ts.header.pid].length - 1].ES.buffer.push(ts.payload.stream);\n        }\n      }\n\n      var AudioOptions = frag;\n      var VideoOptions = frag;\n\n      // Get Frames data\n      for (var i = 0; i < Object.keys(peses).length; i++) {\n        var epeses = peses[Object.keys(peses)[i]];\n        for (var j = 0; j < epeses.length; j++) {\n          epeses[j].id = Object.keys(peses)[i];\n          epeses[j].ES.buffer = TsDemuxer.Merge(epeses[j].ES.buffer);\n          if (epeses[j].type === 'audio') {\n            this.pushAudioSample(epeses[j], AudioOptions);\n            AudioOptions = {};\n          } else if (epeses[j].type === 'video') {\n            this.pushVideoSample(epeses[j], VideoOptions);\n            VideoOptions = {};\n          }\n        }\n      }\n\n      if (this._hasAudioMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'audio');\n      }\n      if (this._hasVideoMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'video');\n      }\n    }\n  }, {\n    key: 'pushAudioSample',\n    value: function pushAudioSample(pes, options) {\n      var track = void 0;\n      if (!this._tracks.audioTrack) {\n        this._tracks.audioTrack = new AudioTrack();\n        track = this._tracks.audioTrack;\n      } else {\n        track = this._tracks.audioTrack;\n      }\n      var meta = new AudioTrackMeta({\n        audioSampleRate: pes.ES.frequence,\n        sampleRate: pes.ES.frequence,\n        channelCount: pes.ES.channel,\n        codec: 'mp4a.40.' + pes.ES.audioObjectType,\n        config: pes.ES.audioConfig,\n        id: 2,\n        sampleRateIndex: pes.ES.frequencyIndex\n      });\n      meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n\n      var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n\n      if (!this._hasAudioMeta || !metaEqual) {\n        track.meta = meta;\n        this._hasAudioMeta = true;\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n      }\n\n      var data = new Uint8Array(pes.ES.buffer.buffer.slice(pes.ES.buffer.position, pes.ES.buffer.length));\n      var dts = parseInt(pes.pts / 90);\n      var pts = parseInt(pes.pts / 90);\n      var sample = new AudioTrackSample({ dts: dts, pts: pts, data: data, options: options });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'pushVideoSample',\n    value: function pushVideoSample(pes, options) {\n      var nals = Nalunit.getNalunits(pes.ES.buffer);\n      var track = void 0;\n      var meta = new VideoTrackMeta();\n      if (!this._tracks.videoTrack) {\n        this._tracks.videoTrack = new VideoTrack();\n        track = this._tracks.videoTrack;\n      } else {\n        track = this._tracks.videoTrack;\n      }\n      var sampleLength = 0;\n      var sps = false;\n      var pps = false;\n      for (var i = 0; i < nals.length; i++) {\n        var nal = nals[i];\n        if (nal.sps) {\n          sps = nal;\n          track.sps = nal.body;\n          meta.chromaFormat = sps.sps.chroma_format;\n          meta.codec = 'avc1.';\n          for (var j = 1; j < 4; j++) {\n            var h = sps.body[j].toString(16);\n            if (h.length < 2) {\n              h = '0' + h;\n            }\n            meta.codec += h;\n          }\n          meta.codecHeight = sps.sps.codec_size.height;\n          meta.codecWidth = sps.sps.codec_size.width;\n          meta.frameRate = sps.sps.frame_rate;\n          meta.id = 1;\n          meta.level = sps.sps.level_string;\n          meta.presentHeight = sps.sps.present_size.height;\n          meta.presentWidth = sps.sps.present_size.width;\n          meta.profile = sps.sps.profile_string;\n          meta.refSampleDuration = Math.floor(meta.timescale * (sps.sps.frame_rate.fps_den / sps.sps.frame_rate.fps_num));\n          meta.sarRatio = sps.sps.sar_ratio ? sps.sps.sar_ratio : sps.sps.par_ratio;\n        } else if (nal.pps) {\n          track.pps = nal.body;\n          pps = nal;\n        } else if (nal.type < 9) {\n          sampleLength += 4 + nal.body.byteLength;\n        }\n      }\n\n      if (sps && pps) {\n        meta.avcc = Nalunit.getAvcc(sps.body, pps.body);\n        var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n        if (!this._hasVideoMeta || !metaEqual) {\n          if (options) {\n            options.meta = Object.assign({}, meta);\n          } else {\n            options = {\n              meta: Object.assign({}, meta)\n            };\n          }\n          track.meta = meta;\n          this._hasVideoMeta = true;\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n        }\n      }\n\n      var data = new Uint8Array(sampleLength);\n      var offset = 0;\n      var isKeyframe = false;\n      for (var _i = 0; _i < nals.length; _i++) {\n        var _nal = nals[_i];\n        if (_nal.type && _nal.type >= 9) {\n          continue;\n        }\n        var length = _nal.body.byteLength;\n        if (_nal.idr) {\n          isKeyframe = true;\n        }\n        if (!_nal.pps && !_nal.sps) {\n          data.set(new Uint8Array([length >>> 24 & 0xff, length >>> 16 & 0xff, length >>> 8 & 0xff, length & 0xff]), offset);\n          offset += 4;\n          data.set(_nal.body, offset);\n          offset += length;\n        }\n      }\n      var sample = new VideoTrackSample({\n        dts: parseInt(pes.dts / 90),\n        pts: parseInt(pes.pts / 90),\n        cts: (pes.pts - pes.dts) / 90,\n        originDts: pes.dts,\n        isKeyframe: isKeyframe,\n        data: data,\n        options: options\n      });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'destory',\n    value: function destory() {\n      this.off(DEMUX_EVENTS.DEMUX_START, this.demux);\n      this.configs = {};\n      this.demuxing = false;\n      this.pat = [];\n      this.pmt = [];\n      this._hasVideoMeta = false;\n      this._hasAudioMeta = false;\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get() {\n      return this._context.getInstance(this.configs.inputbuffer);\n    }\n  }, {\n    key: '_tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }], [{\n    key: 'compaireArray',\n    value: function compaireArray(a, b, type) {\n      var al = 0;\n      var bl = 0;\n      if (type === 'Uint8Array') {\n        al = a.byteLength;\n        bl = b.byteLength;\n      } else if (type === 'Array') {\n        al = a.length;\n        bl = b.length;\n      }\n      if (al !== bl) {\n        return false;\n      }\n\n      for (var i = 0; i < al; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compaireMeta',\n    value: function compaireMeta(a, b, ignoreDuration) {\n      if (!a || !b) {\n        return false;\n      }\n\n      for (var i = 0, k = Object.keys(a).length; i < k; i++) {\n        var itema = a[Object.keys(a)[i]];\n        var itemb = b[Object.keys(a)[i]];\n        if ((typeof itema === 'undefined' ? 'undefined' : babelHelpers.typeof(itema)) !== 'object') {\n          if (ignoreDuration && Object.keys(a)[i] !== 'duration' && Object.keys(a)[i] !== 'refSampleDuration' && Object.keys(a)[i] !== 'refSampleDurationFixed' && itema !== itemb) {\n            return false;\n          }\n        } else if (itema.byteLength !== undefined) {\n          if (itemb.byteLength === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Uint8Array')) {\n            return false;\n          }\n        } else if (itema.length !== undefined) {\n          if (itemb.length === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Array')) {\n            return false;\n          }\n        } else {\n          if (!TsDemuxer.compaireMeta(itema, itemb)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'Merge',\n    value: function Merge(buffers) {\n      var data = void 0;\n      var length = 0;\n      var offset = 0;\n      for (var i = 0; i < buffers.length; i++) {\n        length += buffers[i].length - buffers[i].position;\n      }\n\n      data = new Uint8Array(length);\n      for (var _i2 = 0; _i2 < buffers.length; _i2++) {\n        var buffer = buffers[_i2];\n        data.set(new Uint8Array(buffer.buffer, buffer.position), offset);\n        offset += buffer.length - buffer.position;\n      }\n      return new Stream(data.buffer);\n    }\n  }, {\n    key: 'read',\n    value: function read(stream, ts, frags) {\n      TsDemuxer.readHeader(stream, ts);\n      TsDemuxer.readPayload(stream, ts, frags);\n      if (ts.header.packet === 'MEDIA' && ts.header.payload === 1 && !ts.unknownPIDs) {\n        ts.pes = TsDemuxer.PES(ts);\n      }\n    }\n  }, {\n    key: 'readPayload',\n    value: function readPayload(stream, ts, frags) {\n      var header = ts.header;\n      var pid = header.pid;\n      switch (pid) {\n        case 0:\n          TsDemuxer.PAT(stream, ts, frags);\n          break;\n        case 1:\n          TsDemuxer.CAT(stream, ts, frags);\n          break;\n        case 2:\n          TsDemuxer.TSDT(stream, ts, frags);\n          break;\n        case 0x1fff:\n          break;\n        default:\n          // TODO: some的写法不太好，得改\n          if (frags.pat.some(function (item) {\n            return item.pid === pid;\n          })) {\n            TsDemuxer.PMT(stream, ts, frags);\n          } else {\n            var sts = frags.pmt ? frags.pmt.filter(function (item) {\n              return item.pid === pid;\n            }) : [];\n            if (sts.length > 0) {\n              TsDemuxer.Media(stream, ts, StreamType[sts[0].streamType][0]);\n            } else {\n              ts.unknownPIDs = true;\n            };\n          }\n      }\n    }\n  }, {\n    key: 'readHeader',\n    value: function readHeader(stream, ts) {\n      var header = {};\n      header.sync = stream.readUint8();\n      var next = stream.readUint16();\n      header.error = next >>> 15;\n      header.payload = next >>> 14 & 1;\n      header.priority = next >>> 13 & 1;\n      header.pid = next & 0x1fff;\n\n      next = stream.readUint8();\n\n      header.scrambling = next >> 6 & 0x3; // 是否加密，00表示不加密\n\n      /**\n       * 00 ISO/IEC未来使用保留\n       * 01 没有调整字段，仅含有184B有效净荷\n       * 02 没有有效净荷，仅含有183B调整字段\n       * 03 0~182B调整字段后为有效净荷\n       */\n      header.adaptation = next >> 4 & 0x3;\n      header.continuity = next & 15;\n      header.packet = header.pid === 0 ? 'PAT' : 'MEDIA';\n      ts.header = header;\n    }\n  }, {\n    key: 'PAT',\n    value: function PAT(stream, ts, frags) {\n      var ret = {};\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tabelID = next;\n      next = stream.readUint16();\n      ret.error = next >>> 7;\n      ret.zero = next >>> 6 & 1;\n      ret.sectionLength = next & 0xfff;\n      ret.streamID = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (ret.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        var programNumber = stream.readUint16();\n        var pid = stream.readUint16() & 0x1fff;\n        list.push({\n          program: programNumber,\n          pid: pid,\n          type: programNumber === 0 ? 'network' : 'mapPID'\n        });\n      }\n      if (list.length > 0) {\n        frags.pat = frags.pat.concat(list);\n      }\n      ret.list = list;\n      ret.program = stream.readUint16();\n      ret.pid = stream.readUint16() & 0x1fff;\n      ts.payload = ret;\n      // TODO CRC\n    }\n  }, {\n    key: 'PMT',\n    value: function PMT(stream, ts, frags) {\n      var ret = {};\n      var header = ts.header;\n      header.packet = 'PMT';\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tableID = next;\n      next = stream.readUint16();\n      ret.sectionLength = next & 0xfff;\n      ret.program = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.order = stream.readUint8();\n      ret.lastOrder = stream.readUint8();\n      ret.PCR_PID = stream.readUint16() & 0x1fff;\n      ret.programLength = stream.readUint16() & 0xfff;\n      var N = (ret.sectionLength - 13) / 5;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({\n          streamType: stream.readUint8(),\n          pid: stream.readUint16() & 0x1fff, // 0x07e5 视频，0x07e6\n          es: stream.readUint16() & 0xfff\n        });\n      }\n      ret.list = list;\n      if (!this.pmt) {\n        this.pmt = [];\n      }\n      frags.pmt = this.pmt.concat(list.map(function (item) {\n        return {\n          pid: item.pid,\n          es: item.es,\n          streamType: item.streamType,\n          program: ret.program\n        };\n      }));\n      ts.payload = ret;\n    }\n  }, {\n    key: 'Media',\n    value: function Media(stream, ts, type) {\n      var header = ts.header;\n      var payload = {};\n      header.type = type;\n      if (header.adaptation === 0x03) {\n        payload.adaptationLength = stream.readUint8();\n        if (payload.adaptationLength > 0) {\n          var next = stream.readUint8();\n          payload.discontinue = next >>> 7;\n          payload.access = next >>> 6 & 0x01;\n          payload.priority = next >>> 5 & 0x01;\n          payload.PCR = next >>> 4 & 0x01;\n          payload.OPCR = next >>> 3 & 0x01;\n          payload.splicePoint = next >>> 2 & 0x01;\n          payload.transportPrivate = next >>> 1 & 0x01;\n          payload.adaptationField = next & 0x01;\n          var _start = stream.position;\n          if (payload.PCR === 1) {\n            payload.programClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.programClockBase |= next >>> 15;\n            payload.programClockExtension = next & 0x1ff;\n          }\n          if (payload.OPCR === 1) {\n            payload.originProgramClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.originProgramClockBase += next >>> 15;\n            payload.originProgramClockExtension = next & 0x1ff;\n          }\n          if (payload.splicePoint === 1) {\n            payload.spliceCountdown = stream.readUint8();\n          }\n          if (payload.transportPrivate === 1) {\n            var length = stream.readUint8();\n            var transportPrivateData = [];\n            for (var i = 0; i < length; i++) {\n              transportPrivateData.push(stream.readUint8());\n            }\n          }\n          if (payload.adaptationField === 1) {\n            var _length = stream.readUint8();\n            var _next = stream.readUint8();\n            var start = stream.position;\n            var ltw = _next >>> 7;\n            var piecewise = _next >>> 6 & 0x1;\n            var seamless = _next >>> 5 & 0x1;\n            if (ltw === 1) {\n              _next = stream.readUint16();\n              payload.ltwValid = _next >>> 15;\n              payload.ltwOffset = _next & 0xefff;\n            }\n            if (piecewise === 1) {\n              _next = stream.readUint24();\n              payload.piecewiseRate = _next & 0x3fffff;\n            }\n            if (seamless === 1) {\n              _next = stream.readInt8();\n              payload.spliceType = _next >>> 4;\n              payload.dtsNextAU1 = _next >>> 1 & 0x7;\n              payload.marker1 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU2 = _next >>> 1;\n              payload.marker2 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU3 = _next;\n            }\n            stream.skip(_length - 1 - (stream.position - start));\n          }\n          var lastStuffing = payload.adaptationLength - 1 - (stream.position - _start);\n          stream.skip(lastStuffing);\n        }\n      }\n      payload.stream = new Stream(stream.buffer.slice(stream.position));\n      ts.payload = payload;\n    }\n  }, {\n    key: 'PES',\n    value: function PES(ts) {\n      var ret = {};\n      var buffer = ts.payload.stream;\n\n      var next = buffer.readUint24();\n      if (next !== 1) {\n        ret.ES = {};\n        ret.ES.buffer = buffer;\n      } else {\n        var streamID = buffer.readUint8();\n        if (streamID >= 0xe0 && streamID <= 0xef) {\n          ret.type = 'video';\n        }\n        if (streamID >= 0xc0 && streamID <= 0xdf) {\n          ret.type = 'audio';\n        }\n        var packetLength = buffer.readUint16();\n        ret.packetLength = packetLength;\n        if (ret.type === 'video' || ret.type === 'audio') {\n          var _next2 = buffer.readUint8();\n          var first = _next2 >>> 6;\n          if (first !== 0x02) {\n            throw new Error('error when parse pes header');\n          }\n          _next2 = buffer.readUint8();\n          ret.ptsDTSFlag = _next2 >>> 6;\n          ret.escrFlag = _next2 >>> 5 & 0x01;\n          ret.esRateFlag = _next2 >>> 4 & 0x01;\n          ret.dsmFlag = _next2 >>> 3 & 0x01;\n          ret.additionalFlag = _next2 >>> 2 & 0x01;\n          ret.crcFlag = _next2 >>> 1 & 0x01;\n          ret.extensionFlag = _next2 & 0x01;\n          ret.pesHeaderLength = buffer.readUint8();\n          var N1 = ret.pesHeaderLength;\n\n          if (ret.ptsDTSFlag === 2) {\n            var pts = [];\n            _next2 = buffer.readUint8();\n            pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            ret.pts = pts[0] << 30 | pts[1] << 15 | pts[2];\n            N1 -= 5;\n            // 视频如果没有dts用pts\n            if (ret.type === 'video') {\n              ret.dts = ret.pts;\n            }\n          }\n          if (ret.ptsDTSFlag === 3) {\n            var _pts = [];\n            _next2 = buffer.readUint8();\n            _pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            ret.pts = _pts[0] << 30 | _pts[1] << 15 | _pts[2];\n            var dts = [];\n            _next2 = buffer.readUint8();\n            dts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            ret.dts = dts[0] << 30 | dts[1] << 15 | dts[2];\n            N1 -= 10;\n          }\n          if (ret.escrFlag === 1) {\n            var escr = [];\n            var ex = [];\n            _next2 = buffer.readUint8();\n            escr.push(_next2 >>> 3 & 0x07);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            ex.push(_next2 & 0x03);\n            _next2 = buffer.readUint8();\n            ex.push(_next2 >>> 1);\n            ret.escr = (escr[0] << 30 | escr[1] << 28 | escr[2] << 15 | escr[3] << 13 | escr[4]) * 300 + (ex[0] << 7 | ex[1]);\n            N1 -= 6;\n          }\n          if (ret.esRateFlag === 1) {\n            _next2 = buffer.readUint24();\n            ret.esRate = _next2 >>> 1 & 0x3fffff;\n            N1 -= 3;\n          }\n          if (ret.dsmFlag === 1) {\n            throw new Error('not support DSM_trick_mode');\n          }\n          if (ret.additionalFlag === 1) {\n            _next2 = buffer.readUint8();\n            ret.additionalCopyInfo = _next2 & 0x7f;\n            N1 -= 1;\n          }\n          if (ret.crcFlag === 1) {\n            ret.pesCRC = buffer.readUint16();\n            N1 -= 2;\n          }\n          if (ret.extensionFlag === 1) {\n            throw new Error('not support extension');\n          }\n          if (N1 > 0) {\n            buffer.skip(N1);\n          }\n          ret.ES = TsDemuxer.ES(buffer, ret.type);\n        } else {\n          throw new Error('format is not supported');\n        }\n      }\n      return ret;\n    }\n  }, {\n    key: 'ES',\n    value: function ES(buffer, type) {\n      var next = void 0;\n      var ret = {};\n      if (type === 'video') {\n        next = buffer.readUint32();\n        if (next !== 1) {\n          buffer.back(4);\n          next = buffer.readUint24();\n          if (next !== 1) {\n            throw new Error('h264 nal header parse failed');\n          }\n        }\n        buffer.skip(2); // 09 F0\n        // TODO readnalu\n        ret.buffer = buffer;\n      } else if (type === 'audio') {\n        next = buffer.readUint16();\n        // adts的同步字节，12位\n        if (next >>> 4 !== 0xfff) {\n          throw new Error('aac ES parse Error');\n        }\n        var fq = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n        ret.id = (next >>> 3 & 0x01) === 0 ? 'MPEG-4' : 'MPEG-2';\n        ret.layer = next >>> 1 & 0x03;\n        ret.absent = next & 0x01;\n        next = buffer.readUint16();\n        ret.audioObjectType = (next >>> 14 & 0x03) + 1;\n        ret.profile = ret.audioObjectType - 1;\n        ret.frequencyIndex = next >>> 10 & 0x0f;\n        ret.frequence = fq[ret.frequencyIndex];\n        ret.channel = next >>> 6 & 0x07;\n        ret.frameLength = (next & 0x03) << 11 | buffer.readUint16() >>> 5;\n        TsDemuxer.getAudioConfig(ret);\n        buffer.skip(1);\n        ret.buffer = buffer;\n      } else {\n        throw new Error('ES ' + type + ' is not supported');\n      }\n\n      return ret;\n    }\n  }, {\n    key: 'TSDT',\n    value: function TSDT(stream, ts, frags) {\n      // TODO\n      ts.payload = {};\n    }\n  }, {\n    key: 'CAT',\n    value: function CAT(stream, ts, frags) {\n      var ret = {};\n      ret.tableID = stream.readUint8();\n      var next = stream.readUint16();\n      ret.sectionIndicator = next >>> 7;\n      ret.sectionLength = next & 0x0fff;\n      stream.skip(2);\n      next = stream.readUint8();\n      ret.version = next >>> 3;\n      ret.currentNextIndicator = next & 0x01;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (this.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({});\n      }\n      ret.crc32 = stream.readUint32();\n      ts.payload = ret;\n    }\n  }, {\n    key: 'getAudioConfig',\n    value: function getAudioConfig(ret) {\n      var userAgent = navigator.userAgent.toLowerCase();\n      var config = void 0;\n      var extensionSampleIndex = void 0;\n      if (/firefox/i.test(userAgent)) {\n        if (ret.frequencyIndex >= 6) {\n          ret.audioObjectType = 5;\n          config = new Array(4);\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          ret.audioObjectType = 2;\n          config = new Array(2);\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        ret.audioObjectType = 2;\n        config = new Array(2);\n        extensionSampleIndex = ret.frequencyIndex;\n      } else {\n        ret.audioObjectType = 5;\n        config = new Array(4);\n        if (ret.frequencyIndex >= 6) {\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          if (ret.channel === 1) {\n            ret.audioObjectType = 2;\n            config = new Array(2);\n          }\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      }\n\n      config[0] = ret.audioObjectType << 3;\n      config[0] |= (ret.frequencyIndex & 0x0e) >> 1;\n      config[1] = (ret.frequencyIndex & 0x01) << 7;\n      config[1] |= ret.channel << 3;\n      if (ret.audioObjectType === 5) {\n        config[1] |= (extensionSampleIndex & 0x0e) >> 1;\n        config[2] = (extensionSampleIndex & 0x01) << 7;\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.audioConfig = config;\n    }\n  }]);\n  return TsDemuxer;\n}();\n\nexport default TsDemuxer;","var Playlist = function () {\n  function Playlist(configs) {\n    babelHelpers.classCallCheck(this, Playlist);\n\n    this._baseURL = '';\n    this._list = {};\n    this._ts = {};\n    this.version = 0;\n    this.sequence = -1;\n    this.targetduration = 0;\n    this.duration = 0;\n    this.fragLength = 0;\n    this._lastget = undefined;\n    this._audoclear = configs.autoclear || false;\n  }\n\n  babelHelpers.createClass(Playlist, [{\n    key: 'push',\n    value: function push(ts, duration, discontinue) {\n      if (!this._ts[ts]) {\n        this._ts[ts] = { duration: duration,\n          downloaded: false,\n          downloading: false,\n          start: this.duration,\n          discontinue: discontinue ? true : false\n        };\n        this._list[this.duration] = ts;\n        this.duration += duration;\n        this.fragLength += 1;\n      }\n    }\n  }, {\n    key: 'deleteFrag',\n    value: function deleteFrag(url) {\n      if (this._ts[url]) {\n        if (this._ts[url].start > this._lastget.time) {\n          this._lastget = {\n            duration: this._ts[url].duration,\n            time: this._ts[url].start,\n            downloaded: false,\n            downloading: false,\n            url: url\n          };\n        }\n        delete this._list[this._ts[url].start];\n        delete this._ts[url];\n        this.fragLength -= 1;\n      }\n    }\n  }, {\n    key: 'pushM3U8',\n    value: function pushM3U8(data, deletepre) {\n      // 常规信息替换\n      if (!data) {\n        throw new Error('No m3u8 data received.');\n        return;\n      }\n      this.version = data.version;\n      this.targetduration = data.targetduration;\n      if (data.encrypt && !this.encrypt) {\n        this.encrypt = data.encrypt;\n      }\n      // 新分片信息\n      if (data.sequence > this.sequence) {\n        this.sequence = data.sequence;\n        var newfraglist = [];\n        for (var i = 0; i < data.frags.length; i++) {\n          var frag = data.frags[i];\n          if (!this._ts[frag.url]) {\n            newfraglist.push(frag.url);\n            this.push(frag.url, frag.duration, frag.discontinue);\n          }\n        }\n\n        if (newfraglist.length < 1) {\n          throw new Error('Can not read ts file list.');\n        }\n\n        if (deletepre) {\n          var tslist = this.getTsList();\n          for (var _i = 0; _i < tslist.length; _i++) {\n            if (newfraglist.indexOf(tslist[_i]) < 0) {\n              this.deleteFrag(tslist[_i]);\n            }\n          }\n        }\n      } else {\n        throw new Error('Old m3u8 file received, ' + data.sequence);\n      }\n    }\n  }, {\n    key: 'getTsList',\n    value: function getTsList() {\n      return Object.keys(this._ts);\n    }\n  }, {\n    key: 'downloaded',\n    value: function downloaded(tsname, isloaded) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloaded = isloaded;\n      }\n    }\n  }, {\n    key: 'downloading',\n    value: function downloading(tsname, loading) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloading = loading;\n      }\n    }\n  }, {\n    key: 'getTsByName',\n    value: function getTsByName(name) {\n      return this._ts[name];\n    }\n  }, {\n    key: 'getTs',\n    value: function getTs(time) {\n      var timelist = Object.keys(this._list);\n      var ts = void 0;\n\n      if (time === undefined) {\n        if (this._lastget) {\n          time = this._lastget.time + this._lastget.duration;\n        } else {\n          time = 0;\n        }\n      }\n\n      if (timelist.length < 1 || time >= this.duration) {\n        return undefined;\n      }\n      timelist.sort(function (a, b) {\n        return parseFloat(a) - parseFloat(b);\n      });\n      for (var i = 0; i < timelist.length; i++) {\n        if (time >= parseInt(timelist[i])) {\n          var url = this._list[timelist[i]];\n          var downloaded = this._ts[url].downloaded;\n          var downloading = this._ts[url].downloading;\n          ts = { url: url, downloaded: downloaded, downloading: downloading, time: parseInt(timelist[i]), duration: parseInt(this._ts[url].duration) };\n          if (this.autoclear) {\n            delete this._ts[this._lastget.url];\n            delete this._list[this._lastget.time];\n          }\n          this._lastget = ts;\n        } else {\n          break;\n        }\n      }\n      return ts;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n    }\n  }, {\n    key: 'clearDownloaded',\n    value: function clearDownloaded() {\n      for (var i = 0, l = Object.keys(this._ts).length; i < l; i++) {\n        var ts = this._ts[Object.keys(this._ts)[i]];\n        ts.downloaded = false;\n        ts.downloading = false;\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n      this.fragLength = 0;\n      this._lastget = undefined;\n      this._audoclear = false;\n    }\n  }, {\n    key: 'list',\n    get: function get() {\n      return this._list;\n    }\n  }, {\n    key: 'baseURL',\n    set: function set(baseURL) {\n      if (this.baseURL !== baseURL) {\n        this.clear();\n        this._baseURL = baseURL;\n      }\n    },\n    get: function get() {\n      return this._baseURL;\n    }\n  }]);\n  return Playlist;\n}();\n\nexport default Playlist;","import { isLe, UTF8 } from 'xgplayer-utils';\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta信息解析\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    babelHelpers.classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  babelHelpers.createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * 解析meta中的变量\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n  return AMFParser;\n}();\n\nexport default AMFParser;","import { EVENTS, AudioTrackMeta, VideoTrackMeta } from 'xgplayer-utils';\nimport { SpsParser } from 'xgplayer-codec';\nimport { VideoTrack, AudioTrack } from 'xgplayer-buffer';\n\nimport AMFParser from './amf-parser';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    babelHelpers.classCallCheck(this, FlvDemuxer);\n\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n  }\n\n  babelHelpers.createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this));\n    }\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'doParseFlv',\n    value: function doParseFlv() {\n      if (!this._firstFragmentLoaded) {\n        if (this.loaderBuffer.length < 13) {\n          return;\n        }\n        var header = this.loaderBuffer.shift(13);\n        this.parseFlvHeader(header);\n        this.doParseFlv(); // 递归调用，继续解析flv流\n      } else {\n        if (this.loaderBuffer.length < 11) {\n          return;\n        }\n        var chunk = void 0;\n\n        var loopMax = 10000; // 防止死循环产生\n        do {\n          // console.log('mark4')\n          chunk = this._parseFlvTag();\n        } while (chunk && loopMax-- > 0);\n\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'));\n        this.doParseFlv();\n      } else {\n        this._firstFragmentLoaded = true;\n        // const playType = FlvDemuxer.getPlayType(header[4])\n\n        this.initVideoTrack();\n        this.initAudioTrack();\n      }\n      this.doParseFlv();\n    }\n\n    /**\n     * init default video track configs\n     */\n\n  }, {\n    key: 'initVideoTrack',\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8、9、18\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag() {\n      if (this.loaderBuffer.length < 11) {\n        return null;\n      }\n      var chunk = this._parseFlvTagHeader();\n      if (chunk) {\n        this._processChunk(chunk);\n      }\n      return chunk;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader() {\n      var offset = 0;\n      var chunk = {};\n\n      var tagType = this.loaderBuffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      chunk.filtered = (tagType & 32) >>> 5;\n      chunk.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      chunk.datasize = this.loaderBuffer.toInt(offset, 3);\n      offset += 3;\n\n      if (chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18 || this.loaderBuffer.toInt(8, 3) !== 0) {\n        if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n          this.loaderBuffer.shift(1);\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false);\n        return null;\n      }\n\n      if (this.loaderBuffer.length < chunk.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      this.loaderBuffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = this.loaderBuffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      chunk.dts = timestamp;\n\n      // streamId\n      this.loaderBuffer.shift(3);\n      return chunk;\n    }\n  }, {\n    key: '_processChunk',\n    value: function _processChunk(chunk) {\n      switch (chunk.tagType) {\n        case 18:\n          this._parseScriptData(chunk);\n          break;\n        case 8:\n          this._parseAACData(chunk);\n          break;\n        case 9:\n          this._parseHevcData(chunk);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          this.loaderBuffer.shift(3);\n          break;\n        default:\n          this.loaderBuffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(chunk) {\n      var audioTrack = this.tracks.audioTrack;\n      var videoTrack = this.tracks.videoTrack;\n\n      var data = this.loaderBuffer.shift(chunk.datasize);\n\n      var info = new AMFParser().resolve(data, data.length);\n\n      var onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined;\n\n      // fill mediaInfo\n      this._context.mediaInfo.duration = onMetaData.duration;\n      this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n\n      var validate = this._datasizeValidator(chunk.datasize);\n      if (validate) {\n        this.emit(DEMUX_EVENTS.MEDIA_INFO);\n        this._hasScript = true;\n      }\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 6) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n  }, {\n    key: '_parseAACData',\n    value: function _parseAACData(chunk) {\n      var track = this.tracks.audioTrack;\n      if (!track) {\n        return;\n      }\n\n      var meta = track.meta;\n\n      if (!meta) {\n        track.meta = new AudioTrackMeta();\n        meta = track.meta;\n      }\n\n      var info = this.loaderBuffer.shift(1)[0];\n\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      track.format = format;\n\n      if (format !== 10) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid audio format: ' + format));\n      }\n\n      if (format === 10 && !this._hasAudioSequence) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      delete chunk.tagType;\n      var validate = this._datasizeValidator(chunk.datasize);\n\n      if (chunk.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(chunk.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this._context.mediaInfo.duration * meta.timescale;\n        meta.config = aacHeader.config;\n\n        var audioMedia = this._context.mediaInfo.audio;\n\n        // fill audio media info\n        audioMedia.codec = aacHeader.codec;\n        audioMedia.channelCount = aacHeader.channelCount;\n        audioMedia.sampleRate = audioSampleRate;\n        audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex;\n\n        if (!this._hasAudioSequence) {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n        } else {\n          this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n          // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        }\n        this._hasAudioSequence = true;\n\n        this._metaChange = true;\n      } else {\n        if (this._metaChange) {\n          chunk.options = {\n            meta: track.meta\n          };\n          this._metaChange = false;\n        }\n\n        chunk.data = chunk.data.slice(1, chunk.data.length);\n        track.samples.push(chunk);\n      }\n      if (!validate) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false);\n        // this.logger.warn(this.TAG, error.message)\n      }\n    }\n\n    /**\n     * parse hevc/avc video data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseHevcData',\n    value: function _parseHevcData(chunk) {\n      // header\n      var info = this.loaderBuffer.shift(1)[0];\n      chunk.frameType = (info & 0xf0) >>> 4;\n      chunk.isKeyframe = chunk.frameType === 1;\n      // let tempCodecID = this.tracks.videoTrack.codecID\n      var codecID = info & 0x0f;\n      this.tracks.videoTrack.codecID = codecID;\n\n      // hevc和avc的header解析方式一样\n      chunk.avcPacketType = this.loaderBuffer.shift(1)[0];\n      chunk.cts = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 12) {\n        var data = this.loaderBuffer.shift(chunk.datasize - 5);\n        chunk.data = data;\n\n        if (Number.parseInt(chunk.avcPacketType) !== 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          }\n          var nalu = {};\n          var r = 0;\n          nalu.cts = chunk.cts;\n          nalu.dts = chunk.dts;\n          while (chunk.data.length > r) {\n            var sizes = chunk.data.slice(Number.parseInt(r), 4 + r);\n            nalu.size = sizes[3];\n            nalu.size += sizes[2] * 256;\n            nalu.size += sizes[1] * 256 * 256;\n            nalu.size += sizes[0] * 256 * 256 * 256;\n            r += 4;\n            nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r);\n            r += nalu.size;\n            this.tracks.videoTrack.samples.push(nalu);\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          } else {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        }\n      } else if (codecID === 7) {\n        var _data = this.loaderBuffer.shift(chunk.datasize - 5);\n        if (_data[4] === 0 && _data[5] === 0 && _data[6] === 0 && _data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + _data[i];\n          }\n          avcclength -= 4;\n          _data = _data.slice(4, _data.length);\n          _data[3] = avcclength % 256;\n          avcclength = (avcclength - _data[3]) / 256;\n          _data[2] = avcclength % 256;\n          avcclength = (avcclength - _data[2]) / 256;\n          _data[1] = avcclength % 256;\n          _data[0] = (avcclength - _data[1]) / 256;\n        }\n\n        chunk.data = _data;\n        // If it is AVC sequece Header.\n        if (chunk.avcPacketType === 0) {\n          this._avcSequenceHeaderParser(chunk.data);\n          var validate = this._datasizeValidator(chunk.datasize);\n          if (validate) {\n            if (!this._hasVideoSequence) {\n              this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n            } else {\n              this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n              // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n            }\n            this._hasVideoSequence = true;\n          }\n          this._metaChange = true;\n        } else {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n            return;\n          }\n          if (this._metaChange) {\n            chunk.options = {\n              meta: Object.assign({}, this.tracks.videoTrack.meta)\n            };\n            this._metaChange = false;\n          }\n          this.tracks.videoTrack.samples.push(chunk);\n          // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n        }\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('video codeid is ' + codecID), false);\n        chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n        }\n        this.tracks.videoTrack.samples.push(chunk);\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n      delete chunk.tagType;\n    }\n\n    /**\n     * parse avc metadata\n     * @param data\n     * @private\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var track = this.tracks.videoTrack;\n\n      if (!track) {\n        return;\n      }\n\n      var offset = 0;\n\n      if (!track.meta) {\n        track.meta = new VideoTrackMeta();\n      }\n      var meta = track.meta;\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        this.tracks.videoTrack.meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i = 0; _i < numOfPps; _i++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        this.tracks.videoTrack.meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      // fill video media info\n      var videoMedia = this._context.mediaInfo.video;\n\n      videoMedia.codec = meta.codec;\n      videoMedia.profile = meta.profile;\n      videoMedia.level = meta.level;\n      videoMedia.chromaFormat = meta.chromaFormat;\n      videoMedia.frameRate = meta.frameRate;\n      videoMedia.parRatio = meta.parRatio;\n      videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth;\n      videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight;\n\n      meta.duration = this._context.mediaInfo.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      track.meta = meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize) {\n      var datasizeConfirm = this.loaderBuffer.toInt(0, 4);\n      this.loaderBuffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'isFlvFile',\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;","import _M3U8Parser from './hls/demuxer/m3u8parser';\nimport _TsDemuxer from './hls/demuxer/ts';\nimport _Playlist from './hls/playlist';\nimport _FlvDemuxer from './flv/index';\n\nexport var M3U8Parser = _M3U8Parser;\nexport var TsDemuxer = _TsDemuxer;\nexport var Playlist = _Playlist;\nexport var FlvDemuxer = _FlvDemuxer;","import { EVENTS, Mse, Crypto} from 'xgplayer-utils';\nimport { XgBuffer, PreSource, Tracks } from 'xgplayer-buffer';\nimport { FetchLoader } from 'xgplayer-loader';\nimport { Compatibility } from 'xgplayer-codec';\nimport Mp4Remuxer from 'xgplayer-remux/src/mp4/index';\n\nimport {Playlist, M3U8Parser, TsDemuxer} from 'xgplayer-demux';\n\nconst LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nconst DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nconst HLS_EVENTS = EVENTS.HLS_EVENTS;\nconst CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\nconst HLS_ERROR = 'HLS_ERROR';\nclass HlsLiveController {\n  constructor (configs) {\n    this.configs = Object.assign({}, configs);\n    this.url = '';\n    this.baseurl = '';\n    this.sequence = 0;\n    this._playlist = null;\n    this.retrytimes = this.configs.retrytimes || 3;\n    this.preloadTime = this.configs.preloadTime;\n    this.container = this.configs.container;\n    this._m3u8lasttime = 0;\n    this._timmer = setInterval(this._checkStatus.bind(this), 50);\n    this._lastCheck = 0;\n    this._player = this.configs.player;\n    this.m3u8Text = null\n  }\n\n  init () {\n    // 初始化Buffer （M3U8/TS/Playlist);\n    this._context.registry('M3U8_BUFFER', XgBuffer);\n    this._context.registry('TS_BUFFER', XgBuffer);\n    this._context.registry('TRACKS', Tracks);\n\n    this._playlist = this._context.registry('PLAYLIST', Playlist)({autoclear: true});\n    this._context.registry('PRE_SOURCE_BUFFER', PreSource);\n\n    this._context.registry('COMPATIBILITY', Compatibility);\n\n    // 初始化M3U8Loader;\n    this._m3u8loader = this._context.registry('M3U8_LOADER', FetchLoader)({ buffer: 'M3U8_BUFFER', readtype: 1 });\n    this._tsloader = this._context.registry('TS_LOADER', FetchLoader)({ buffer: 'TS_BUFFER', readtype: 3 });\n\n    // 初始化TS Demuxer\n    this._context.registry('TS_DEMUXER', TsDemuxer)({ inputbuffer: 'TS_BUFFER' });\n\n    // 初始化MP4 Remuxer\n    this._context.registry('MP4_REMUXER', Mp4Remuxer);\n\n    // 初始化MSE\n    this.mse = this._context.registry('MSE', Mse)({container: this.container});\n    this.initEvents();\n  }\n\n  initEvents () {\n    this.on(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete.bind(this));\n\n    this.on(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers.bind(this.mse));\n\n    this.on(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend.bind(this.mse));\n\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed.bind(this));\n\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete.bind(this));\n\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._onLoadError.bind(this));\n\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._onDemuxError.bind(this));\n\n    this.on(REMUX_EVENTS.REMUX_ERROR, this._onRemuxError.bind(this));\n  }\n\n  _onError(type, mod, err, fatal) {\n    let error = {\n      errorType: type,\n      errorDetails: `[${mod}]: ${err.message}`,\n      errorFatal: fatal\n    }\n    this._player.emit(HLS_ERROR, error);\n  }\n\n  _onDemuxComplete () {\n    this.emit(REMUX_EVENTS.REMUX_MEDIA)\n  }\n  _onMetadataParsed (type) {\n    this.emit(REMUX_EVENTS.REMUX_METADATA, type)\n  }\n\n  _onLoadError (loader, error) {\n    if (!this._tsloader.loading && !this._m3u8loader.loading && this.retrytimes > 1) {\n      this.retrytimes--;\n      this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, false);\n    } else if (this.retrytimes <= 1) {\n      this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, true);\n      this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n      this.mse.endOfStream();\n    }\n  }\n\n  _onDemuxError (mod, error, fatal) {\n    if(fatal === undefined) {\n      fatal = true;\n    }\n    this._onError(LOADER_EVENTS.LOADER_ERROR, mod, error, fatal);\n  }\n\n  _onRemuxError (mod, error, fatal) {\n    if(fatal === undefined) {\n      fatal = true;\n    }\n    this._onError(REMUX_EVENTS.REMUX_ERROR, mod, error, fatal);\n  }\n\n  _onLoadComplete (buffer) {\n    if (buffer.TAG === 'M3U8_BUFFER') {\n      let mdata;\n      try {\n        this.m3u8Text = buffer.shift();\n        mdata = M3U8Parser.parse(this.m3u8Text, this.baseurl);\n      } catch (error) {\n        this._onError('M3U8_PARSER_ERROR', 'M3U8_PARSER', error, false);\n      }\n\n      if(!mdata) {\n        if (this.retrytimes > 0) {\n          this.retrytimes--;\n          this._preload();\n        } else {\n          this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n          this.mse.endOfStream();\n        }\n        return;\n      }\n\n      try {\n        this._playlist.pushM3U8(mdata, true);\n      } catch (error) {\n        this._onError('M3U8_PARSER_ERROR', 'PLAYLIST', error, false);\n      }\n\n      if (this._playlist.encrypt && this._playlist.encrypt.uri && !this._playlist.encrypt.key) {\n        this._context.registry('DECRYPT_BUFFER', XgBuffer)();\n        this._context.registry('KEY_BUFFER', XgBuffer)();\n        this._tsloader.buffer = 'DECRYPT_BUFFER';\n        this._keyLoader = this._context.registry('KEY_LOADER', FetchLoader)({buffer:'KEY_BUFFER',readtype: 3});\n        this.emitTo('KEY_LOADER', LOADER_EVENTS.LADER_START, this._playlist.encrypt.uri);\n      } else {\n        this._m3u8Loaded(mdata);\n      }\n    } else if (buffer.TAG === 'TS_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.downloaded(this._tsloader.url, true);\n      this.emit(DEMUX_EVENTS.DEMUX_START);\n    }  else if (buffer.TAG === 'DECRYPT_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.downloaded(this._tsloader.url, true);\n      this.emitTo('CRYPTO', CRYTO_EVENTS.START_DECRYPT);\n    } else if (buffer.TAG == 'KEY_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.encrypt.key = buffer.shift();\n      this._crypto = this._context.registry('CRYPTO', Crypto)({\n        key: this._playlist.encrypt.key,\n        iv: this._playlist.encrypt.ivb,\n        method: this._playlist.encrypt.method,\n        inputbuffer:'DECRYPT_BUFFER',\n        outputbuffer:'TS_BUFFER'\n      });\n      this._crypto.on(CRYTO_EVENTS.DECRYPTED, this._onDcripted.bind(this));\n    }\n  }\n\n  _onDcripted() {\n    this.emit(DEMUX_EVENTS.DEMUX_START);\n  }\n\n  _m3u8Loaded(mdata) {\n    if (!this.preloadTime) {\n      this.preloadTime = this._playlist.targetduration ? this._playlist.targetduration : 5;\n    }\n    if (this._playlist.fragLength > 0 && this._playlist.sequence < mdata.sequence) {\n      this.retrytimes = this.configs.retrytimes || 3;\n    } else {\n      if (this.retrytimes > 0) {\n        this.retrytimes--;\n        this._preload();\n      } else {\n        this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n        this.mse.endOfStream();\n      }\n    }\n  }\n  _checkStatus () {\n    if (this.retrytimes < 1 && (new Date().getTime() - this._lastCheck < 10000)) {\n      return;\n    }\n    this._lastCheck = new Date().getTime();\n    if (this.container.buffered.length < 1) {\n      this._preload()\n    } else {\n      // Check for load.\n      let currentTime = this.container.currentTime;\n      let bufferstart = this.container.buffered.start(this.container.buffered.length - 1);\n      if (this.container.readyState <= 2) {\n        if (currentTime < bufferstart) {\n          this.container.currentTime = bufferstart;\n          currentTime = bufferstart;\n        } else {\n          this._preload();\n        }\n      }\n      let bufferend = this.container.buffered.end(this.container.buffered.length - 1);\n      if (currentTime < bufferend - (this.preloadTime * 2)) {\n        this.container.currentTime = bufferend - (this.preloadTime * 2);\n      }\n      if (bufferend > this.preloadTime * 2) {\n        this.mse.remove(bufferend - (this.preloadTime * 2));\n      }\n      if (currentTime > bufferend - this.preloadTime) {\n        this._preload();\n      }\n    }\n  }\n\n  _preload () {\n    if (this._tsloader.loading || this._m3u8loader.loading) {\n      return;\n    }\n    let frag = this._playlist.getTs();\n\n    if (frag && !frag.downloaded && !frag.downloading) {\n      this._playlist.downloading(frag.url, true);\n      this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, frag.url)\n    } else {\n      let preloadTime = this.preloadTime ? this.preloadTime : 0;\n      let current = new Date().getTime();\n      if ((!frag || frag.downloaded) &&\n        (current - this._m3u8lasttime) / 1000 > preloadTime) {\n        this._m3u8lasttime = current\n        this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, this.url);\n      }\n    }\n  }\n\n  load (url) {\n    this.baseurl = M3U8Parser.parseURL(url);\n    this.url = url;\n    this._preload();\n  }\n\n  destroy () {\n    clearInterval(this._timmer);\n    this.off(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete);\n    this.off(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers);\n    this.off(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend);\n    // this.off(REMUX_EVENTS.REMUX_ERROR);\n    this.off(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed);\n    this.off(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete);\n\n    this.mse = null\n    this.m3u8Text = null\n  }\n}\nexport default HlsLiveController;\n","import 'xgplayer-polyfills/babel/external-helpers';\nimport Player from 'xgplayer'\nimport { Context, EVENTS } from 'xgplayer-utils';\nimport HlsLiveController from './hls-live';\nconst HlsAllowedEvents = EVENTS.HlsAllowedEvents;\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nexport default class HlsLivePlayer extends Player {\n  constructor (options) {\n    super(options)\n    this.hlsOps = {};\n    this.util = Player.util;\n    this.util.deepCopy(this.hlsOps, options);\n    this._context = new Context(HlsAllowedEvents);\n    this._hasStarted = false;\n  }\n\n  _initEvents () {\n    this.__core__.once(REMUX_EVENTS.INIT_SEGMENT, () => {\n      const mse = this._context.getInstance('MSE');\n      if (!this._hasStarted) {\n        const live = this.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live');\n        this.util.addClass(this.root, 'xgplayer-is-live');\n        this.controls.appendChild(live);\n      }\n      this._hasStarted = true;\n      super.start(mse.url);\n    });\n\n    this.once('canplay', () => {\n      this.video.play()\n    });\n  }\n\n  _initSrcChangeHandler () {\n    let _this = this;\n    Object.defineProperty(this, 'src', {\n      get () {\n        return _this.currentSrc\n      },\n      set (url) {\n        _this.config.url = url\n        if (!_this.paused) {\n          _this.pause()\n          _this.once('pause', () => {\n            _this.start(url)\n          })\n          _this.once('canplay', () => {\n            _this.play()\n          })\n        } else {\n          _this.start(url)\n        }\n        _this.once('canplay', () => {\n          _this.currentTime = 0\n        })\n      },\n      configurable: true\n    })\n  }\n\n  start (url = this.config.url) {\n    if (!url) {\n      return;\n    }\n    this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({player:this, container: this.video});\n    this._context.init();\n    this.url = url;\n    this.__core__.load(url);\n    this._initEvents();\n    this._initSrcChangeHandler();\n  }\n\n  play () {\n    if (this._hasStarted) {\n      this._context.destroy();\n      this._context = new Context(HlsAllowedEvents);\n      this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({container: this.video});\n      this._context.init();\n      this._initEvents();\n      this.__core__.load(this.url);\n    }\n    super.play();\n  }\n\n  destroy () {\n    this._context.destroy();\n    super.destroy();\n  }\n}\n"],"names":["EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","TypeError","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","emitWarning","e","console","warn","log","_onceWrap","g","removeListener","fired","arguments","listenerCount","evlistener","spliceOne","list","index","k","n","pop","arr","copy","Array","unwrapListeners","ret","global","_babelHelpers","babelHelpers","typeof","obj","classCallCheck","instance","Constructor","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","key","protoProps","staticProps","prototype","defineEnumerableProperties","descs","desc","defaults","keys","Object","getOwnPropertyNames","value","getOwnPropertyDescriptor","extends","assign","source","hasOwnProperty","get","object","property","receiver","Function","parent","getPrototypeOf","getter","inherits","subClass","superClass","create","setPrototypeOf","__proto__","instanceof","left","right","Symbol","hasInstance","interopRequireDefault","__esModule","interopRequireWildcard","newObj","default","newArrowCheck","innerThis","boundThis","objectDestructuringEmpty","objectWithoutProperties","indexOf","possibleConstructorReturn","ReferenceError","selfGlobal","set","setter","slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","iterator","next","done","err","isArray","slicedToArrayLoose","_step","_iterator","taggedTemplateLiteral","strings","raw","freeze","taggedTemplateLiteralLoose","temporalRef","val","undef","temporalUndefined","toArray","from","toConsumableArray","arr2","isObjectFilled","MediaInfo","mimeType","duration","hasVideo","video","hasAudio","audio","isBaseInfoReady","isVideoReady","isAudioReady","mediaInfo","usingDomains","domain","active","Domain","setMaxListeners","isNaN","getMaxListeners","er","doError","error","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","position","originalListener","removeAllListeners","eventNames","Reflect","ownKeys","Context","allowedEvents","_emitter","off","_instanceMap","_clsMap","_inited","_hooks","tag","_len","_key","a","b","c","d","newInstance","config","initInstance","cls","_this2","checkMessageName","_isMessageNameValid","bind","enhanced","_cls","_this","onceListeners","TAG","_context","messageName","callback","beforeList","_len2","_key2","concat","_len3","_key3","hasOwn","callbacks","_messageName","_callbacks","_callback","removeListeners","_len4","_key4","_this3","forEach","destroy","destroyInstances","LOADER_EVENTS","DEMUX_EVENTS","REMUX_EVENTS","MSE_EVENTS","HLS_EVENTS","CRYTO_EVENTS","ALLEVENTS","FlvAllowedEvents","HlsAllowedEvents","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","sniffer","r","os","isPc","isTablet","ua","navigator","userAgent","toLowerCase","reg","filter","test","isWindowsPhone","isSymbian","isAndroid","isFireFox","isPhone","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs","_ucs2","join","start","checkLength","array","MediaSegmentList","MediaSample","info","_default","getDefaultInf","toString","sample","entries","_ref","_ref2","v","MediaSegment","startDts","endDts","startPts","endPts","originStartDts","originEndDts","randomAccessPoints","firstSample","lastSample","isRAP","_type","_list","_lastAppendLocation","beginDts","last","mid","lbound","ubound","idx","originDts","Math","floor","_searchNearestSegmentBefore","segment","lastAppendIdx","insertIdx","splice","getLastSegmentBefore","segmentIdx","AudioTrackMeta","meta","VideoTrackMeta","Uint8Array","sps","pps","AudioTrackSample","getDefault","VideoTrackSample","MSE","configs","container","mediaSource","sourceBuffers","preloadTime","onSourceOpen","onTimeUpdate","onUpdateEnd","onWaiting","MediaSource","addEventListener","src","URL","createObjectURL","url","newCtx","addSourceBuffers","doAppend","readyState","sources","getInstance","tracks","track","add","audioTrack","videoTrack","dur","refSampleDuration","data","_k","mime","mimetype","sourceBuffer","addSourceBuffer","inited","appendBuffer","buffer","shift","_mediaSource","activeSourceBuffers","endOfStream","end","updating","remove","taskList","removeEventListener","task","Promise","resolve","doCleanBuffer","retryTime","clean","clearBuffer","all","removeBuffers","then","_buffer","removeSourceBuffer","revokeObjectURL","buffered","bEnd","Stream","dataview","loop","readByte","byteLength","size","sign","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","exports","ResultConstructor","totalLength","arrays","_iteratorNormalCompletion","_didIteratorError","_iteratorError","return","result","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_concat2","_concat","module","Buffer","item","Concat","padStart4Hex","hexNum","padStart","temp","num","parseInt","EVENTS","Crypto","inputBuffer","inputbuffer","outputBuffer","outputbuffer","iv","method","crypto","window","msCrypto","START_DECRYPT","decript","aeskey","decriptData","subtle","importKey","decrypt","DECRYPTED","_Context","_EVENTS","_sniffer","isLe","_isLe","_UTF8","_MediaSegmentList","_AudioTrackMeta","_VideoTrackMeta","_AudioTrackSample","_VideoTrackSample","Mse","_Mse","_Stream","_Buffer","_Crypto","Track","id","sequenceNumber","samples","droppedSamples","reset","AudioTrack","_Track","VideoTrack","_Track2","dropped","Tracks","XgBuffer","historyLen","_shiftBuffer","_ret","slice","_ret2","tmpoff","tmp","templength","clear","retInt","Source","RemuxBuffer","_Tracks","_AudioTrack","_VideoTrack","_XgBuffer","PreSource","FetchLoader","status","_reader","_canceled","_destroyed","readtype","_loaderTaskNo","LADER_START","load","opts","params","getParams","loading","fetch","response","ok","_onFetchResponse","LOADER_ERROR","statusText","catch","taskno","json","LOADER_COMPLETE","text","arrayBuffer","_onReader","body","getReader","reader","cancel","read","LOADER_DATALOADED","options","headers","Headers","configHeaders","append","optHeaders","cors","mode","withCredentials","credentials","Golomb","_bufferIndex","_totalBytes","_totalBits","_currentWord","_currentWordBitsLeft","bufferBytesLeft","bytesRead","min","word","subarray","bits","valu","_fillCurrentWord","readBits","zeroCount","_skipLeadingZero","leadingZeros","readUEG","SPSParser","srcLength","dst","dstIdx","rbsp","_ebsp2rbsp","gb","profileIdc","levelIdc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","par_width","par_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","par_w_table","par_h_table","num_units_in_tick","time_scale","parScale","crop_unit_x","crop_unit_y","codec_width","codec_height","present_width","ceil","getChromaFormatString","last_scale","next_scale","toFixed","chroma","spsConfig","codec_size","codecWidth","width","codecHeight","height","presentWidth","present_size","presentHeight","profile","level","bitDepth","chromaFormat","parRatio","par_ratio","frameRate","frame_rate","fpsDen","fpsNum","timescale","Nalunit","getAnnexbNals","getAvccNals","nals","getHeaderPositionAnnexB","pos","header","headerLength","skip","unit","analyseNal","ndr","idr","SpsParser","parseSPS","AAC","codec","channelCount","Compatibility","nextAudioDts","nextVideoDts","lastAudioSamplesLen","lastVideoSamplesLen","lastVideoDts","lastAudioDts","allAudioSamplesCount","allVideoSamplesCount","_firstAudioSample","_firstVideoSample","filledAudioSamples","filledVideoSamples","videoLastSample","audioLastSample","_videoLargeGap","_audioLargeGap","before","REMUX_MEDIA","doFix","_getFirstSample","getFirstSample","isFirstAudioSamples","isFirstVideoSamples","recordSamplesCount","fixRefSampleDuration","_Compatibility$detact","detactChangeStream","videoChanged","changed","videoChangedIdx","changedIdx","fixChangeStreamVideo","doFixVideo","_Compatibility$detact2","audioChanged","audioChangedIdx","fixChangeStreamAudio","doFixAudio","removeInvalidSamples","first","streamChangeStart","_videoTrack","videoSamples","dts","fixed","doFixLargeGap","detectLargeGap","videoFirstDts","gap","fillCount","clonedFirstSample","pts","cts","curLastSample","_audioTrack","audioSamples","samplesLen","silentFrame","getSilentFrame","_firstSample","videoFirstPts","_gap","silentSampleCount","_i2","silentSample","firstDts","absGap","abs","refSampleDurationFixed","silentFrameCount","_i3","computed","_silentSample","lastOriginDts","lastDts","lastSampleDuration","_i4","current","sortAudioSamples","changeIdx","_videoTrack2","prevDts","getStreamChangeStart","curDts","isContinue","DETECT_CHANGE_STREAM_DISCONTINUE","firstPartSamples","secondPartSamples","dtsBase","_audioTrack2","findFirstVideoSample","findFirstAudioSample","isVideo","allSamplesCount","filledSamplesCount","Number","durationAvg","Infinity","remuxer","_dtsBase","sort","sorted","isKeyframe","nextDts","cond1","cond2","discontinue","_Nalunit","_SpsParser","_Compatibility","Fmp4","writeUint32","content","write","version","flag","initBox","mvhd","trak","videoTrak","audioTrak","mvex","bytes","tkhd","mdia","avcc","sampleRate","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","dref","stsd","stts","stsc","stsz","stco","mp4a","avc1","samplerate","esds","configlen","hSpacing","vSpacing","btrt","pasp","trackID","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","time","sdtp","trun","sdtpLength","sampleCount","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","mdatBox","charCodeAt","Mp4Remuxer","curTime","_isDtsBaseInited","_videoSegmentList","_audioSegmentList","browser","_fillSilenceFrame","isFirstVideo","isFirstAudio","videoAllDuration","audioAllDuration","remux","REMUX_METADATA","onMetaDataReady","DETECT_CHANGE_STREAM","resetDtsBase","_dtsBaseInited","calcDtsBase","_remuxVideo","_remuxAudio","presourcebuffer","getSource","createSource","remuxInitSegment","INIT_SEGMENT","initSegment","ftyp","moov","audioBase","videoBase","mp4Samples","maxLoop","avcSample","mdatSample","sampleDuration","videoMeta","RANDOM_ACCESS_POINT","moofMdat","moof","mdat","writeToSource","MEDIA_SEGMENT","isFirstDtsInited","audioMeta","mp4Sample","_audioMeta","_player","M3U8Parser","baseurl","split","refs","ref","match","nextDiscontinue","refm","refd","targetduration","parseFloat","parseFrag","parseDecrypt","frags","freg","nextline","charAt","urls","encrypt","cmd","uri","ivb","im","substr","StreamType","TsDemuxer","demuxing","pat","pmt","_hasVideoMeta","_hasAudioMeta","DEMUX_START","demux","frag","peses","DEMUX_ERROR","tsStream","ts","pes","pid","ES","payload","stream","AudioOptions","VideoOptions","epeses","j","Merge","pushAudioSample","pushVideoSample","DEMUX_COMPLETE","_tracks","frequence","channel","audioObjectType","audioConfig","frequencyIndex","audioSampleRate","metaEqual","compaireMeta","METADATA_PARSED","getNalunits","sampleLength","nal","h","sarRatio","sar_ratio","getAvcc","_nal","al","bl","ignoreDuration","itema","itemb","compaireArray","buffers","readHeader","readPayload","packet","unknownPIDs","PES","PAT","CAT","TSDT","some","PMT","sts","Media","streamType","sync","readUint8","readUint16","priority","scrambling","adaptation","continuity","tabelID","zero","sectionLength","streamID","sectionNumber","lastSectionNumber","N","programNumber","program","tableID","order","lastOrder","PCR_PID","programLength","map","es","adaptationLength","access","PCR","OPCR","splicePoint","transportPrivate","adaptationField","_start","programClockBase","readUint32","programClockExtension","originProgramClockBase","originProgramClockExtension","spliceCountdown","transportPrivateData","_length","_next","piecewise","seamless","ltwValid","ltwOffset","readUint24","piecewiseRate","readInt8","spliceType","dtsNextAU1","marker1","dtsNextAU2","marker2","dtsNextAU3","lastStuffing","packetLength","_next2","ptsDTSFlag","escrFlag","esRateFlag","dsmFlag","additionalFlag","crcFlag","extensionFlag","pesHeaderLength","N1","_pts","escr","ex","esRate","additionalCopyInfo","pesCRC","back","fq","layer","absent","frameLength","getAudioConfig","sectionIndicator","currentNextIndicator","crc32","extensionSampleIndex","Playlist","_baseURL","_ts","fragLength","_lastget","_audoclear","autoclear","deletepre","newfraglist","tslist","getTsList","deleteFrag","tsname","isloaded","downloaded","downloading","timelist","l","baseURL","DATA_TYPES","AMFParser","readOffset","metaData","parseValue","bodySize","resetStatus","strLen","str","decode","dv","getFloat64","Date","parseString","isObjEnd","NUMBER","BOOLEAN","STRING","OBJECT","MIX_ARRAY","OBJECT_END","STRICT_ARRAY","DATE","LONE_STRING","dataView","objEndSize","amfObj","parseObject","isObjectEnd","_objEndSize","amfVar","arrLength","script","date","parseDate","longStr","parseLongString","FlvDemuxer","_firstFragmentLoaded","_trackNum","_hasScript","doParseFlv","loaderBuffer","chunk","loopMax","_parseFlvTag","parseFlvHeader","isFlvFile","initVideoTrack","initAudioTrack","_parseFlvTagHeader","_processChunk","tagType","toInt","filtered","datasize","timestamp","timestampExt","_parseScriptData","_parseAACData","_parseHevcData","onMetaData","hsaAudio","_datasizeValidator","MEDIA_INFO","hasSpecificConfig","audiosamplerate","audiochannels","sampleRateIndex","_meta","framerate","objectType","_switchAudioSampleRate","dependsOnCoreCoder","extensionFlagIndex","extensionSamplingIndex","samplingIndex","format","_hasAudioSequence","_switchAudioSamplingFrequency","frameLenth","audioSampleRateIndex","validate","aacHeader","_aacSequenceHeaderParser","audioMedia","AUDIO_METADATA_CHANGE","_metaChange","frameType","codecID","avcPacketType","nalu","sizes","_data","avcclength","_avcSequenceHeaderParser","_hasVideoSequence","VIDEO_METADATA_CHANGE","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","nalUnitLength","numOfSps","codecString","_j","numOfPps","_size","_j2","toVideoMeta","videoMedia","samplingFrequencyIndex","datasizeConfirm","streamFlag","_M3U8Parser","_TsDemuxer","_Playlist","HlsLiveController","_playlist","retrytimes","_m3u8lasttime","_timmer","setInterval","_checkStatus","_lastCheck","player","m3u8Text","registry","_m3u8loader","_tsloader","mse","initEvents","_onLoadComplete","_onMetadataParsed","_onDemuxComplete","_onLoadError","_onDemuxError","REMUX_ERROR","_onRemuxError","mod","fatal","message","loader","_onError","RETRY_TIME_EXCEEDED","mdata","parse","_preload","pushM3U8","_keyLoader","emitTo","_m3u8Loaded","_crypto","_onDcripted","getTime","currentTime","bufferstart","bufferend","getTs","parseURL","hlsOps","util","Player","deepCopy","_hasStarted","__core__","live","createDom","addClass","root","controls","appendChild","play","currentSrc","paused","pause","_initEvents","_initSrcChangeHandler"],"mappings":"6OAOA,SAASA,MAGT,QAASC,OACMC,KAAKC,KAAKC,MA6CzB,QAASC,GAAiBC,cACGC,KAAvBD,EAAKE,cACAP,EAAaQ,oBACfH,EAAKE,cAYd,QAASE,GAASC,EAASC,EAAMC,MAC3BD,EACFD,EAAQR,KAAKU,YAIR,GAFDC,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGf,KAAKU,GAGxB,QAASM,GAAQR,EAASC,EAAMC,EAAMO,MAChCR,EACFD,EAAQR,KAAKU,EAAMO,YAId,GAFDN,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGf,KAAKU,EAAMO,GAG9B,QAASC,GAAQV,EAASC,EAAMC,EAAMO,EAAME,MACtCV,EACFD,EAAQR,KAAKU,EAAMO,EAAME,YAIpB,GAFDR,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGf,KAAKU,EAAMO,EAAME,GAGpC,QAASC,GAAUZ,EAASC,EAAMC,EAAMO,EAAME,EAAME,MAC9CZ,EACFD,EAAQR,KAAKU,EAAMO,EAAME,EAAME,YAI1B,GAFDV,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGf,KAAKU,EAAMO,EAAME,EAAME,GAI1C,QAASC,GAASd,EAASC,EAAMC,EAAMa,MACjCd,EACFD,EAAQgB,MAAMd,EAAMa,YAIf,GAFDZ,GAAMH,EAAQI,OACdC,EAAYC,EAAWN,EAASG,GAC3BI,EAAI,EAAGA,EAAIJ,IAAOI,EACzBF,EAAUE,GAAGS,MAAMd,EAAMa,GAyE/B,QAASE,GAAaC,EAAQC,EAAMC,EAAUC,MACxCC,GACAC,EACAC,KAEoB,kBAAbJ,GACT,KAAM,IAAIK,WAAU,+CAEbP,EAAOQ,QACXH,GAMCA,EAAOI,gBACFC,KAAK,cAAeT,EACfC,EAASA,SAAWA,EAASA,SAAWA,KAI3CF,EAAOQ,WAEPH,EAAOJ,OAbTD,EAAOQ,QAAU,GAAIrC,KACvBwC,aAAe,GAenBL,MAKqB,kBAAbA,KAEED,EAAOJ,GAAQE,GAAWD,EAAUI,IACVA,EAAUJ,GAG3CC,IACOS,QAAQV,KAERW,KAAKX,IAKbI,EAASQ,WACRtC,EAAiBwB,KACZI,EAAI,GAAKE,EAASpB,OAASkB,EAAG,GAC5BU,QAAS,KACdC,GAAI,GAAIC,OAAM,+CACEV,EAASpB,OAAS,IAAMe,EAAO,uEAEjDgB,KAAO,gCACPC,QAAUlB,IACVC,KAAOA,IACPkB,MAAQb,EAASpB,SACP6B,WA5BLV,EAAOJ,GAAQC,IACxBF,EAAOW,mBAgCJX,GAET,QAASoB,GAAYC,GACK,kBAAjBC,SAAQC,KAAsBD,QAAQC,KAAKF,GAAKC,QAAQE,IAAIH,GAarE,QAASI,GAAUzB,EAAQC,EAAMC,WAEtBwB,OACAC,eAAe1B,EAAMyB,GACvBE,OACK,IACC9B,MAAME,EAAQ6B,eALvBD,IAAQ,WAQV1B,SAAWA,EACNwB,EA2JT,QAASI,GAAc7B,MACjBI,GAAS9B,KAAKiC,WAEdH,EAAQ,IACN0B,GAAa1B,EAAOJ,MAEE,kBAAf8B,SACF,EACF,IAAIA,QACFA,GAAW7C,aAIf,GAQT,QAAS8C,GAAUC,EAAMC,OAClB,GAAI7C,GAAI6C,EAAOC,EAAI9C,EAAI,EAAG+C,EAAIH,EAAK/C,OAAQiD,EAAIC,EAAG/C,GAAK,EAAG8C,GAAK,EAClEF,EAAK5C,GAAK4C,EAAKE,KACZE,MAGP,QAASjD,GAAWkD,EAAKjD,UACnBkD,GAAO,GAAIC,OAAMnD,GACdA,KACLkD,EAAKlD,GAAKiD,EAAIjD,SACTkD,GAGT,QAASE,GAAgBH,OAElB,GADDI,GAAM,GAAIF,OAAMF,EAAIpD,QACfG,EAAI,EAAGA,EAAIqD,EAAIxD,SAAUG,IAC5BA,GAAKiD,EAAIjD,GAAGa,UAAYoC,EAAIjD,SAE3BqD,g9CCzdT,SAAWC,MACLC,GAAgBD,EAAOE,kBACbC,OAAS,SAAUC,mBACjBA,gBAAAA,MAGFC,eAAiB,SAAUC,EAAUC,QAC3CD,YAAoBC,SAClB,IAAI3C,WAAU,wCAIV4C,YAAc,mBACjBC,GAAiBpD,EAAQqD,OAC3B,GAAIhE,GAAI,EAAGA,EAAIgE,EAAMnE,OAAQG,IAAK,IACjCiE,GAAaD,EAAMhE,KACZkE,WAAaD,EAAWC,aAAc,IACtCC,cAAe,EACtB,SAAWF,KAAYA,EAAWG,UAAW,UAC1CC,eAAe1D,EAAQsD,EAAWK,IAAKL,UAI3C,UAAUJ,EAAaU,EAAYC,SACpCD,IAAYR,EAAiBF,EAAYY,UAAWF,GACpDC,GAAaT,EAAiBF,EAAaW,GACxCX,QAIGa,2BAA6B,SAAUhB,EAAKiB,OACnD,GAAIL,KAAOK,GAAO,IACjBC,GAAOD,EAAML,KACZH,aAAeS,EAAKV,YAAa,EAClC,SAAWU,KAAMA,EAAKR,UAAW,UAC9BC,eAAeX,EAAKY,EAAKM,SAG3BlB,MAGKmB,SAAW,SAAUnB,EAAKmB,OAGjC,GAFDC,GAAOC,OAAOC,oBAAoBH,GAE7B7E,EAAI,EAAGA,EAAI8E,EAAKjF,OAAQG,IAAK,IAChCsE,GAAMQ,EAAK9E,GACXiF,EAAQF,OAAOG,yBAAyBL,EAAUP,EAElDW,IAASA,EAAMd,kBAA6B9E,KAAbqE,EAAIY,WAC9BD,eAAeX,EAAKY,EAAKW,SAI7BvB,MAGKW,eAAiB,SAAUX,EAAKY,EAAKW,SAC7CX,KAAOZ,UACFW,eAAeX,EAAKY,SAClBW,cACK,gBACE,YACJ,MAGRX,GAAOW,EAGNvB,KAGKyB,QAAUJ,OAAOK,QAAU,SAAUzE,OAC5C,GAAIX,GAAI,EAAGA,EAAIwC,UAAU3C,OAAQG,IAAK,IACrCqF,GAAS7C,UAAUxC,OAElB,GAAIsE,KAAOe,GACVN,OAAON,UAAUa,eAAerG,KAAKoG,EAAQf,OACxCA,GAAOe,EAAOf,UAKpB3D,MAGK4E,IAAM,QAASA,GAAIC,EAAQC,EAAUC,GAClC,OAAXF,IAAiBA,EAASG,SAASlB,cACnCG,GAAOG,OAAOG,yBAAyBM,EAAQC,UAEtCpG,KAATuF,EAAoB,IAClBgB,GAASb,OAAOc,eAAeL,SAEpB,QAAXI,SAGKL,EAAIK,EAAQH,EAAUC,GAE1B,GAAI,SAAWd,SACbA,GAAKK,SAERa,GAASlB,EAAKW,WAEHlG,KAAXyG,QAIGA,GAAO7G,KAAKyG,MAITK,SAAW,SAAUC,EAAUC,MACjB,kBAAfA,IAA4C,OAAfA,OAChC,IAAI/E,WAAU,qEAAoE+E,gBAAAA,OAGjFxB,UAAYM,OAAOmB,OAAOD,GAAcA,EAAWxB,8BAEjDuB,cACK,YACF,gBACI,KAGdC,IAAYlB,OAAOoB,eAAiBpB,OAAOoB,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,MAG/FI,WAAa,SAAUC,EAAMC,SAC5B,OAATA,GAAmC,mBAAXC,SAA0BD,EAAMC,OAAOC,aAC1DF,EAAMC,OAAOC,aAAaH,GAE1BA,YAAgBC,MAIbG,sBAAwB,SAAUhD,SACvCA,IAAOA,EAAIiD,WAAajD,WACpBA,MAICkD,uBAAyB,SAAUlD,MAC3CA,GAAOA,EAAIiD,iBACNjD,MAEHmD,SAEO,MAAPnD,MACG,GAAIY,KAAOZ,GACVqB,OAAON,UAAUa,eAAerG,KAAKyE,EAAKY,KAAMuC,EAAOvC,GAAOZ,EAAIY,aAInEwC,QAAUpD,EACVmD,KAIGE,cAAgB,SAAUC,EAAWC,MAC7CD,IAAcC,OACV,IAAI/F,WAAU,2CAIVgG,yBAA2B,SAAUxD,MACtC,MAAPA,EAAa,KAAM,IAAIxC,WAAU,mCAGzBiG,wBAA0B,SAAUzD,EAAKoB,MACjDnE,UAEC,GAAIX,KAAK0D,GACRoB,EAAKsC,QAAQpH,IAAM,GAClB+E,OAAON,UAAUa,eAAerG,KAAKyE,EAAK1D,OACxCA,GAAK0D,EAAI1D,UAGXW,MAGK0G,0BAA4B,SAAU1H,EAAMV,OACnDU,OACG,IAAI2H,gBAAe,oEAGpBrI,GAAyB,qBAATA,gBAAAA,KAAqC,kBAATA,GAA8BU,EAAPV,KAG9DsI,eAA+B,KAAXjE,EAAyB3D,KAAO2D,IAEpDkE,IAAM,QAASA,GAAIhC,EAAQC,EAAUR,EAAOS,MACpDd,GAAOG,OAAOG,yBAAyBM,EAAQC,UAEtCpG,KAATuF,EAAoB,IAClBgB,GAASb,OAAOc,eAAeL,EAEpB,QAAXI,KACEA,EAAQH,EAAUR,EAAOS,OAE1B,IAAI,SAAWd,IAAQA,EAAKR,WAC5Ba,MAAQA,MACR,IACDwC,GAAS7C,EAAK4C,QAEHnI,KAAXoI,KACKxI,KAAKyG,EAAUT,SAInBA,MAGKyC,cAAgB,mBACnBC,GAAc1E,EAAKjD,MACtB4H,MACAC,GAAK,EACLC,GAAK,EACLC,MAAK1I,WAGF,GAAiC2I,GAA7BC,EAAKhF,EAAIuD,OAAO0B,cAAmBL,GAAMG,EAAKC,EAAGE,QAAQC,UAC3D5G,KAAKwG,EAAG/C,QAETjF,GAAK4H,EAAK/H,SAAWG,GAH8C6H,GAAK,IAK9E,MAAOQ,MACF,IACAA,eAGER,GAAMI,EAAA,QAAcA,EAAA,oBAErBH,EAAI,KAAMC,UAIXH,SAGF,UAAU3E,EAAKjD,MAChBmD,MAAMmF,QAAQrF,SACTA,EACF,IAAIuD,OAAO0B,WAAYnD,QAAO9B,SAC5B0E,GAAc1E,EAAKjD,QAEpB,IAAIkB,WAAU,8DAKZqH,mBAAqB,SAAUtF,EAAKjD,MAC5CmD,MAAMmF,QAAQrF,SACTA,EACF,IAAIuD,OAAO0B,WAAYnD,QAAO9B,GAAM,KAGpC,GAAwCuF,GAFzCZ,KAEKa,EAAYxF,EAAIuD,OAAO0B,cAAsBM,EAAQC,EAAUN,QAAQC,SACzE5G,KAAKgH,EAAMvD,QAEZjF,GAAK4H,EAAK/H,SAAWG,WAGpB4H,QAED,IAAI1G,WAAU,2DAIVwH,sBAAwB,SAAUC,EAASC,SAChD7D,QAAO8D,OAAO9D,OAAOhB,iBAAiB4E,cAElC5D,OAAO8D,OAAOD,UAKbE,2BAA6B,SAAUH,EAASC,YACpDA,IAAMA,EACPD,KAGKI,YAAc,SAAUC,EAAKpH,EAAMqH,MAC3CD,IAAQC,OACJ,IAAI3B,gBAAe1F,EAAO,8CAEzBoH,MAIGE,uBAEAC,QAAU,SAAUlG,SACzBE,OAAMmF,QAAQrF,GAAOA,EAAME,MAAMiG,KAAKnG,MAGjCoG,kBAAoB,SAAUpG,MACtCE,MAAMmF,QAAQrF,GAAM,KACjB,GAAIjD,GAAI,EAAGsJ,EAAOnG,MAAMF,EAAIpD,QAASG,EAAIiD,EAAIpD,OAAQG,MAAUA,GAAKiD,EAAIjD,EAE7E,OAAOsJ,SAEAnG,OAAMiG,KAAKnG,KAGH,mBAAXK,QAAyB3D,KAAO2D,OC/S1C,IAAIiG,GAAiB,SAAwB7F,OACtC,GAAIY,KAAOZ,MACVA,EAAI4B,eAAehB,IACJ,OAAbZ,EAAIY,UACC,SAIN,GAGLkF,EAAY,mBACLA,kBACM7F,eAAezE,KAAMsK,QAE7BC,SAAW,UACXC,SAAW,UAEXC,SAAW,UACXC,aACI,WACA,YACC,aACC,WACF,uBAEE,MACF,WACI,aACA,kBAEG,qBAEL,SACC,SAIPC,SAAW,UAEXC,aACI,gBACK,qBACK,kBACH,0BAILhG,YAAY0F,QAClB,mBACE,iBACEA,GAAUO,gBAAgB7K,OAASsK,EAAUQ,aAAa9K,OAASsK,EAAUS,aAAa/K,eAG9F,wBACE,SAAyBgL,SACvBX,GAAeW,UAGnB,qBACE,SAAsBA,UACtBA,EAAUP,UAIRJ,EAAeW,EAAUN,cAG7B,qBACE,SAAsBM,UACtBA,EAAUL,UAIRN,EAAeW,EAAUN,WAG7BJ,IFrET1K,GAAc2F,UAAYM,OAAOmB,OAAO,MAUxCnH,EAAaA,aAAeA,EAE5BA,EAAaoL,cAAe,EAE5BpL,EAAa0F,UAAU2F,WAAS/K,GAChCN,EAAa0F,UAAUtD,YAAU9B,GACjCN,EAAa0F,UAAUnF,kBAAgBD,GAIvCN,EAAaQ,oBAAsB,GAEnCR,EAAaC,KAAO,gBACboL,OAAS,KACVrL,EAAaoL,mBA9BfC,IAgCWC,aAhCXD,IAgC8CE,OAK3CpL,KAAKiC,SAAWjC,KAAKiC,UAAY4D,OAAOc,eAAe3G,MAAMiC,eAC3DA,QAAU,GAAIrC,QACdwC,aAAe,QAGjBhC,cAAgBJ,KAAKI,mBAAiBD,IAK7CN,EAAa0F,UAAU8F,gBAAkB,SAAyBxH,MAC/C,gBAANA,IAAkBA,EAAI,GAAKyH,MAAMzH,GAC1C,KAAM,IAAI7B,WAAU,sDACjB5B,cAAgByD,EACd7D,MASTH,EAAa0F,UAAUgG,gBAAkB,iBAChCtL,GAAiBD,OA4D1BH,EAAa0F,UAAUpD,KAAO,SAAcT,MACtC8J,GAAIjL,EAASG,EAAKY,EAAMR,EAAGgB,EAAQoJ,EAEnCO,EAAoB,UAAT/J,OAEN1B,KAAKiC,QAEZwJ,EAAWA,GAA2B,MAAhB3J,EAAO4J,UAC1B,KAAKD,EACR,OAAO,OAEAzL,KAAKkL,OAGVO,EAAS,MACNnI,UAAU,IACX4H,EAOG,CAAA,GAAIM,YAAc/I,YACjB+I,MAGFrC,GAAM,GAAI1G,OAAM,yCAA2C+I,EAAK,aAChEG,QAAUH,EACRrC,QAZDqC,KACHA,EAAK,GAAI/I,OAAM,0CACdmJ,cAAgB5L,OAChBkL,OAASA,IACTW,cAAe,IACX1J,KAAK,QAASqJ,IAShB,SAGC1J,EAAOJ,IAGf,OAAO,KAELlB,GAA0B,kBAAZD,YACZ+C,UAAU3C,YAGT,KACMJ,EAASC,EAAMR,gBAErB,KACKO,EAASC,EAAMR,KAAMsD,UAAU,cAEpC,KACK/C,EAASC,EAAMR,KAAMsD,UAAU,GAAIA,UAAU,cAElD,KACO/C,EAASC,EAAMR,KAAMsD,UAAU,GAAIA,UAAU,GAAIA,UAAU,wBAI9D,GAAIW,OAAMvD,EAAM,GAClBI,EAAI,EAAGA,EAAIJ,EAAKI,IACnBQ,EAAKR,EAAI,GAAKwC,UAAUxC,KACjBP,EAASC,EAAMR,KAAMsB,UAM3B,GAqETzB,EAAa0F,UAAUuG,YAAc,SAAqBpK,EAAMC,SACvDH,GAAaxB,KAAM0B,EAAMC,GAAU,IAG5C9B,EAAa0F,UAAUwG,GAAKlM,EAAa0F,UAAUuG,YAEnDjM,EAAa0F,UAAUyG,gBACnB,SAAyBtK,EAAMC,SACtBH,GAAaxB,KAAM0B,EAAMC,GAAU,IAgBhD9B,EAAa0F,UAAU0G,KAAO,SAAcvK,EAAMC,MACxB,kBAAbA,GACT,KAAM,IAAIK,WAAU,sDACjB+J,GAAGrK,EAAMwB,EAAUlD,KAAM0B,EAAMC,IAC7B3B,MAGTH,EAAa0F,UAAU2G,oBACnB,SAA6BxK,EAAMC,MACT,kBAAbA,GACT,KAAM,IAAIK,WAAU,sDACjBgK,gBAAgBtK,EAAMwB,EAAUlD,KAAM0B,EAAMC,IAC1C3B,MAIbH,EAAa0F,UAAUnC,eACnB,SAAwB1B,EAAMC,MACxB+B,GAAM5B,EAAQqK,EAAUrL,EAAGsL,KAEP,kBAAbzK,GACT,KAAM,IAAIK,WAAU,iDAEbhC,KAAKiC,SAEZ,MAAOjC,aAEF8B,EAAOJ,IAEZ,MAAO1B,SAEL0D,IAAS/B,GAAa+B,EAAK/B,UAAY+B,EAAK/B,WAAaA,EAC/B,KAAtB3B,KAAKoC,aACTpC,KAAKiC,QAAU,GAAIrC,UAEZkC,GAAOJ,GACVI,EAAOsB,gBACTpD,KAAKmC,KAAK,iBAAkBT,EAAMgC,EAAK/B,UAAYA,QAElD,IAAoB,kBAAT+B,GAAqB,QACzB,EAEP5C,EAAI4C,EAAK/C,OAAQG,KAAM,MACtB4C,EAAK5C,KAAOa,GACX+B,EAAK5C,GAAGa,UAAY+B,EAAK5C,GAAGa,WAAaA,EAAW,GACpC+B,EAAK5C,GAAGa,WAChBb,WAKXqL,EAAW,EACb,MAAOnM,SAEW,IAAhB0D,EAAK/C,OAAc,MAChB,OAAKR,GACkB,KAAtBH,KAAKoC,yBACJH,QAAU,GAAIrC,GACZI,WAEA8B,GAAOJ,UAGNgC,EAAMyI,EAGdrK,GAAOsB,gBACTpD,KAAKmC,KAAK,iBAAkBT,EAAM0K,GAAoBzK,SAGnD3B,OAGbH,EAAa0F,UAAU8G,mBACnB,SAA4B3K,MACtBd,GAAWkB,SAEN9B,KAAKiC,SAEZ,MAAOjC,UAGJ8B,EAAOsB,qBACe,KAArBE,UAAU3C,aACPsB,QAAU,GAAIrC,QACdwC,aAAe,GACXN,EAAOJ,KACY,KAAtB1B,KAAKoC,aACTpC,KAAKiC,QAAU,GAAIrC,SAEZkC,GAAOJ,IAEX1B,QAIgB,IAArBsD,UAAU3C,OAAc,KAErB,GAAWyE,GADZQ,EAAOC,OAAOD,KAAK9D,GACdhB,EAAI,EAAQA,EAAI8E,EAAKjF,SAAUG,EAE1B,sBADN8E,EAAK9E,UAENuL,mBAAmBjH,eAErBiH,mBAAmB,uBACnBpK,QAAU,GAAIrC,QACdwC,aAAe,EACbpC,QAKgB,qBAFb8B,EAAOJ,SAGZ0B,eAAe1B,EAAMd,OACrB,IAAIA,UAGFwC,eAAe1B,EAAMd,EAAUA,EAAUD,OAAS,UAChDC,EAAU,UAGdZ,OAGbH,EAAa0F,UAAU3E,UAAY,SAAmBc,MAChD8B,GAEA1B,EAAS9B,KAAKiC,cAEbH,OAGUA,EAAOJ,IAGW,kBAAf8B,IACPA,EAAW7B,UAAY6B,GAExBU,EAAgBV,OAM5B3D,EAAa0D,cAAgB,SAASZ,EAASjB,SACR,kBAA1BiB,GAAQY,cACVZ,EAAQY,cAAc7B,GAEtB6B,EAAcxD,KAAK4C,EAASjB,IAIvC7B,EAAa0F,UAAUhC,cAAgBA,EAiBvC1D,EAAa0F,UAAU+G,WAAa,iBAC3BtM,MAAKoC,aAAe,EAAImK,QAAQC,QAAQxM,KAAKiC,YGhctD,IAEIwK,GAAU,mBACHA,QACHC,GAAgBpJ,UAAU3C,OAAS,OAAsBR,KAAjBmD,UAAU,GAAmBA,UAAU,mBACtEmB,eAAezE,KAAMyM,QAE7BE,SAAW,GAAI9M,GACfG,KAAK2M,SAASC,WACZD,SAASC,IAAM5M,KAAK2M,SAASvJ,qBAE/ByJ,qBACAC,gBACAC,SAAU,OACV/B,UAAY,GAAIV,QAChBoC,cAAgBA,OAChBM,8BAWMpI,YAAY6H,QAClB,oBACE,SAAqBQ,MACtBvI,GAAW1E,KAAK6M,aAAaI,SAC7BvI,IAIK,YAWN,qBACE,SAAsBuI,OACtB,GAAIC,GAAO5J,UAAU3C,OAAQW,EAAO2C,MAAMiJ,EAAO,EAAIA,EAAO,EAAI,GAAIC,EAAO,EAAGA,EAAOD,EAAMC,MACzFA,EAAO,GAAK7J,UAAU6J,MAGzBC,GAAI9L,EAAK,GACT+L,EAAI/L,EAAK,GACTgM,EAAIhM,EAAK,GACTiM,EAAIjM,EAAK,MAETtB,KAAK8M,QAAQG,GAAM,IACjBO,GAAc,GAAIxN,MAAK8M,QAAQG,GAAKG,EAAGC,EAAGC,EAAGC,eAC5CV,aAAaI,GAAOO,EACrBA,EAAY1N,QACFA,OAEP0N,OAED,IAAI/K,OAAMwK,EAAM,uBAUrB,aACE,SAAcQ,OACfzN,KAAK+M,aAGJ,GAAIE,KAAOjN,MAAK8M,QAEf9M,KAAK8M,QAAQ1G,eAAe6G,KAASjN,KAAK6M,aAAaI,SACpDS,aAAaT,EAAKQ,QAGtBV,SAAU,UAUZ,iBACE,SAAkBE,EAAKU,MACxBC,GAAS5N,KAET2C,EAAU3C,KAAK2M,SACfkB,EAAmB7N,KAAK8N,oBAAoBC,KAAK/N,MACjDS,EAAOT,KACPgO,EAAW,SAAUC,WAGdD,GAASZ,EAAGC,EAAGC,gBACT7I,eAAezE,KAAMgO,MAE9BE,GAAQ5J,aAAa6D,0BAA0BnI,MAAOgO,EAAS9G,WAAarB,OAAOc,eAAeqH,IAAWjO,KAAKC,KAAMoN,EAAGC,EAAGC,aAE5H1M,eACAuN,mBACAC,IAAMnB,IACNoB,SAAW5N,EACVyN,sBAXIrH,SAASmH,EAAUC,gBAcnBrJ,YAAYoJ,QAClB,WACE,SAAYM,EAAaC,YACbD,GAEbtO,KAAKY,UAAU0N,QACZ1N,UAAU0N,GAAahM,KAAKiM,QAE5B3N,UAAU0N,IAAgBC,KAGzBxC,GAAQuC,EAjIL,SAiIsCrB,EAAKsB,GAC/C5L,EAAQoJ,GAAGuC,EAAaC,UAU5B,eACE,SAAgBD,EAAaC,KACjBD,GACb7N,EAAKuM,OAAOsB,KACTtB,OAAOsB,GAAahM,KAAKiM,KAEzBvB,OAAOsB,IAAgBC,UAI3B,aACE,SAAcD,EAAaC,YACfD,GAEbtO,KAAKmO,cAAcG,QAChBH,cAAcG,GAAahM,KAAKiM,QAEhCJ,cAAcG,IAAgBC,KAG7BtC,KAAUqC,EAhKP,SAgKwCrB,EAAKsB,GACjD5L,EAAQsJ,KAAKqC,EAAaC,UAG9B,aACE,SAAcD,KACFA,MAGbE,GAAa/N,EAAKuM,OAASvM,EAAKuM,OAAOsB,GAAe,QAEtDE,MACG,GAAI1N,GAAI,EAAGJ,EAAM8N,EAAW7N,OAAQG,EAAIJ,EAAKI,OACjC0N,EAAW1N,UAKzB,GAAI2N,GAAQnL,UAAU3C,OAAQW,EAAO2C,MAAMwK,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,MAC/FA,EAAQ,GAAKpL,UAAUoL,SAGvB/L,GAAQR,KAAKZ,MAAMoB,GAAU2L,GAAaK,OAAOrN,WAUrD,eACE,SAAgB2L,EAAKqB,KACTA,OAEZ,GAAIM,GAAQtL,UAAU3C,OAAQW,EAAO2C,MAAM2K,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,MAC/FA,EAAQ,GAAKvL,UAAUuL,SAGvBlM,GAAQR,KAAKZ,MAAMoB,GAAe2L,EAxM9B,SAwM+DrB,GAAK0B,OAAOrN,WAGnF,YACE,SAAagN,EAAaC,YACdD,GACV3L,EAAQiK,IAAI0B,EAAaC,UAG7B,wBACE,cACDO,GAASjJ,OAAON,UAAUa,eAAe2H,KAAK/N,KAAKY,eAElD,GAAI0N,KAAetO,MAAKY,aACvBkO,EAAOR,OAEJ,GADDS,GAAY/O,KAAKY,UAAU0N,OACtBxN,EAAI,EAAGA,EAAIiO,EAAUpO,OAAQG,IAAK,IACrCyN,GAAWQ,EAAUjO,KACjB8L,IAAI0B,EAAaC,KACjB3B,IAAS0B,EA3NZ,SA2N6CrB,EAAKsB,OAKxD,GAAIS,KAAgBhP,MAAKmO,iBACxBW,EAAOE,OAEJ,GADDC,GAAajP,KAAKmO,cAAca,OAC3BjG,EAAK,EAAGA,EAAKkG,EAAWtO,OAAQoI,IAAM,IACzCmG,GAAYD,EAAWlG,KACnB6D,IAAIoC,EAAcE,KAClBtC,IAASoC,EAtOZ,SAsO8C/B,EAAKiC,WAW3D,gBACE,mBAEAC,uBACAvO,mBAGEH,GAAKoM,aAAaI,GACrB3I,aAAa+B,IAAI2H,EAASzI,UAAU2B,WAAarB,OAAOc,eAAeqH,EAASzI,WAAY,UAAWvF,YAClGsE,cAAa+B,IAAI2H,EAASzI,UAAU2B,WAAarB,OAAOc,eAAeqH,EAASzI,WAAY,UAAWvF,MAAMD,KAAKC,UAIxHgO,GACPL,eACGb,QAAQG,GAAOe,EAMb,eACA,GAAIoB,GAAQ9L,UAAU3C,OAAQW,EAAO2C,MAAMmL,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,MAC3EA,GAAS/L,UAAU+L,SAGnBzB,GAAOF,aAAanM,MAAMqM,GAASX,GAAK0B,OAAOrN,YASrD,yBACE,cACDgO,GAAStP,YAEN4F,KAAK5F,KAAK6M,cAAc0C,QAAQ,SAAUtC,GAC3CqC,EAAOzC,aAAaI,GAAKuC,WACpB3C,aAAaI,GAAKuC,mBAU1B,gBACE,gBACA7C,SAAW,UACXD,sBACAI,QAAU,UACVuB,SAAW,UACXrB,OAAS,UACTyC,0BAUF,4BACE,SAA6BnB,OAC7BtO,KAAK0M,cAAcxE,QAAQoG,GAAe,OACvC,IAAI7L,OAAM,8BAAgC6L,OAI/C7B,KC/TLiD,eACW,iCACM,oCACF,+BACH,gBAGZC,eACW,6BACG,6BACH,8BACI,wCACM,8CACA,mCACX,cAGVC,kBACc,6BACH,4BACE,4BACF,2BACC,oCACQ,wDACY,uDACb,uBAGnBC,qBACiB,qBAGfC,uBACiB,uBAGnBC,iBACa,0BACJ,aAETC,EAAYnK,OAAOK,UAAWwJ,EAAeC,EAAcC,EAAcC,EAAYC,GAErFG,KACAC,IAEJ,KAAK,GAAI9K,KAAO4K,GACVA,EAAU5J,eAAehB,MACV9C,KAAK0N,EAAU5K,GAIpC,KAAK,GAAI+H,KAAQ6C,GACXA,EAAU5J,eAAe+G,MACV7K,KAAK0N,EAAU7C,qBAKvB6C,aACCF,eACEF,eACAD,aACFE,gBACGH,mBACGO,mBACAC,eACJH,GClEZI,EAAK,cACHC,GAAM,GAAIC,aAAY,aACtBC,UAASF,GAAKG,SAAS,EAAG,KAAK,GACD,MAA3B,GAAIC,YAAWJ,GAAK,MAGzBK,mBAEIC,GAAID,EAAQE,SACTD,GAAEE,KAAO,KAAOF,EAAEG,SAAW,SAAW,2BAG3CC,GAAKC,UAAUC,UAAUC,cACzBC,MACE,kCACI,2BACA,yBACD,wBACC,sCAEAvC,OAAO9I,OAAOD,KAAKsL,GAAKC,OAAO,SAAU/L,SAC1C8L,GAAI9L,GAAKgM,KAAKN,MACnB,gBAGAA,GAAKC,UAAUC,UACfK,EAAiB,oBAAoBD,KAAKN,GAC1CQ,EAAY,gBAAgBF,KAAKN,IAAOO,EACxCE,EAAY,cAAcH,KAAKN,GAC/BU,EAAY,cAAcJ,KAAKN,GAC/BD,EAAW,oBAAoBO,KAAKN,IAAOS,IAAc,aAAaH,KAAKN,IAAOU,GAAa,aAAaJ,KAAKN,GACjHW,EAAU,aAAaL,KAAKN,KAAQD,kBAG5BA,UACDY,YACEF,QAJDE,IAAYF,IAAcD,YAMzBA,iBACKD,YACLG,qBAKNrB,KC7CPA,EAAK,cACHC,GAAM,GAAIC,aAAY,aACtBC,UAASF,GAAKG,SAAS,EAAG,KAAK,GACD,MAA3B,GAAIC,YAAWJ,GAAK,MCHzBsB,EAAO,mBACAA,kBACMjN,eAAezE,KAAM0R,uBAGvB9M,YAAY8M,EAAM,WACxB,eACE,SAAgBC,UACjBC,MACAC,EAAQF,EACR7Q,EAAI,EACJH,EAASgR,EAAWhR,OAEjBG,EAAIH,MACLkR,EAAM/Q,GAAK,MACTwB,KAAKwP,OAAOC,aAAaF,EAAM/Q,OACjCA,OAEG,GAAI+Q,EAAM/Q,GAAK,SAEf,IAAI+Q,EAAM/Q,GAAK,QAChB4Q,EAAKM,mBAAmBH,EAAO/Q,EAAG,GAAI,IACpCmR,IAAmB,GAAXJ,EAAM/Q,KAAc,EAAmB,GAAf+Q,EAAM/Q,EAAI,MAC1CmR,GAAQ,IAAM,GACZ3P,KAAKwP,OAAOC,aAAoB,MAAPE,OACxB,iBAIJ,IAAIJ,EAAM/Q,GAAK,QAChB4Q,EAAKM,mBAAmBH,EAAO/Q,EAAG,GAAI,IACpCoR,IAAmB,GAAXL,EAAM/Q,KAAa,IAAqB,GAAf+Q,EAAM/Q,EAAI,KAAc,EAAmB,GAAf+Q,EAAM/Q,EAAI,MACvEoR,GAAQ,MAA6B,QAAZ,MAAPA,GAA2B,GAC3C5P,KAAKwP,OAAOC,aAAoB,MAAPG,OACxB,iBAIJ,IAAIL,EAAM/Q,GAAK,KAChB4Q,EAAKM,mBAAmBH,EAAO/Q,EAAG,GAAI,IACpCqR,IAAoB,EAAXN,EAAM/Q,KAAa,IAAqB,GAAf+Q,EAAM/Q,EAAI,KAAc,IAAqB,GAAf+Q,EAAM/Q,EAAI,KAAc,EAAmB,GAAf+Q,EAAM/Q,EAAI,MACtGqR,EAAQ,OAAWA,EAAQ,QAAU,IAC9B,QACL7P,KAAKwP,OAAOC,aAAaI,IAAU,GAAK,UACxC7P,KAAKwP,OAAOC,aAAqB,KAARI,EAAgB,WACxC,cAKP7P,KAAKwP,OAAOC,aAAa,UAC3BjR,QAGG8Q,GAAIQ,KAAK,WAGb,2BACE,SAA4BT,EAAYU,EAAOC,MAChDC,GAAQZ,KACRU,EAAQC,EAAcC,EAAM5R,OAAQ,MAC/B2R,QAC2B,MAAV,IAAjBC,IAAQF,WACJ,SAGJ,SAEA,MAINX,KCxELc,GCAc,mBACPC,GAAYC,MACfxE,GAAQlO,kBAECyE,eAAezE,KAAMyS,MAE9BE,GAAWF,EAAYG,oBAEtBF,GAAiD,oBAAzC7M,OAAON,UAAUsN,SAAS9S,KAAK2S,SACnCC,MAELG,GAASjN,OAAOK,UAAWyM,EAAUD,UAElCK,QAAQD,GAAQvD,QAAQ,SAAUyD,MACnCC,GAAQ3O,aAAakE,cAAcwK,EAAM,GACzCpP,EAAIqP,EAAM,GACVC,EAAID,EAAM,KAERrP,GAAKsP,iBAIFtO,YAAY6N,EAAa,WAC/B,sBACE,sBAEE,SACA,cACK,cACA,YACH,YACI,aC/BA,mBACNU,kBACQ1O,eAAezE,KAAMmT,QAE7BC,UAAY,OACZC,QAAU,OACVC,UAAY,OACZC,QAAU,OACVC,gBAAkB,OAClBC,cAAgB,OAChBC,2BACAC,YAAc,UACdC,WAAa,kBAGThP,YAAYuO,QAChB,eACE,SAAgBL,KACZe,OAAQ,OACVH,mBAAmBpR,KAAKwQ,UFnBlB,mBACVN,GAAiB9Q,gBACT+C,eAAezE,KAAMwS,QAE7BsB,MAAQpS,OACRqS,cACAC,qBAAuB,sBAGnBpP,YAAY4N,QAChB,gBACE,iBAC0B,KAAtBxS,KAAK+T,MAAMpT,cAGjB,cACE,gBACEoT,cACAC,qBAAuB,SAG3B,oCACE,SAAqCC,MACpCvQ,GAAO1D,KAAK+T,SACI,IAAhBrQ,EAAK/C,cACG,KAERuT,GAAOxQ,EAAK/C,OAAS,EACrBwT,EAAM,EACNC,EAAS,EACTC,EAASH,EAETI,EAAM,KAENL,EAAWvQ,EAAK,GAAG6Q,oBACZ,OAIJH,GAAUC,GAAQ,OACfD,EAASI,KAAKC,OAAOJ,EAASD,GAAU,MAClCF,GAAQD,EAAWvQ,EAAKyQ,GAAKP,WAAWW,WAAaN,EAAWvQ,EAAKyQ,EAAM,GAAGI,UAAW,GAC3FJ,QAECzQ,EAAKyQ,GAAKI,UAAYN,IACpBE,EAAM,IAENA,EAAM,QAGhBG,UAGN,mCACE,SAAoCL,SAChCjU,MAAK0U,4BAA4BT,GAAY,SAGnD,eACE,SAAgBU,MACfjR,GAAO1D,KAAK+T,MACZa,EAAgB5U,KAAKgU,oBACrBa,EAAY,GAEO,IAAnBD,GAAwBA,EAAgBlR,EAAK/C,QAAUgU,EAAQnB,gBAAkB9P,EAAKkR,GAAehB,WAAWW,YAAcK,IAAkBlR,EAAK/C,OAAS,GAAKiU,EAAgBlR,EAAK/C,OAAS,GAAKgU,EAAQnB,eAAiB9P,EAAKkR,EAAgB,GAAGpB,kBAC3OoB,EAAgB,EAExBlR,EAAK/C,OAAS,MACFX,KAAK0U,4BAA4BC,EAAQnB,gBAAkB,QAI1EQ,oBAAsBa,OACtBd,MAAMe,OAAOD,EAAW,EAAGF,UAG/B,6BACE,SAA8BV,MAC7BK,GAAMtU,KAAK0U,4BAA4BT,SACvCK,IAAO,EACAtU,KAAK+T,MAAMO,GAGX,YAIV,4BACE,SAA6BL,MAC5BU,GAAU3U,KAAK+U,qBAAqBd,SACxB,QAAZU,EACOA,EAAQf,WAER,YAIV,yBACE,SAA0BK,UACzBe,GAAahV,KAAK0U,4BAA4BT,GAC9CP,EAAqB1T,KAAK+T,MAAMiB,GAAYtB,mBACX,IAA9BA,EAAmB/S,QAAgBqU,EAAa,SAE9BhV,KAAK+T,MAAMiB,GAAYtB,yBAE5CA,GAAmB/S,OAAS,EACrB+S,EAAmBA,EAAmB/S,OAAS,GAE/C,YAIV,WACA,iBACMX,MAAK8T,aAGX,aACA,iBACM9T,MAAK+T,MAAMpT,WAGnB6R,MG1HAyC,EAAiB,mBACjBA,GAAeC,gBACTzQ,eAAezE,KAAMiV,MAE9BtC,eACU,kBACE,QACP,oBACE,GAAI,IAAK,IAAK,YACb,KACN,oBACe,mBACF,YACN,SACL,eAEJuC,GACKrP,OAAOK,UAAWyM,EAAUuC,GAE9BvC,sBAGI/N,YAAYqQ,QAClB,gBACE,gBACAnV,KAAO,SAGTmV,KAGEE,EAAiB,mBACjBA,GAAeD,gBACTzQ,eAAezE,KAAMmV,MAE9BxC,SACI,SACD,GAAIyC,YAAW,OACf,GAAIA,YAAW,gBACN,UACP,0BACM,eACD,cACF,oBAED,MACF,WACI,aACA,QAEP,QACG,oBACQ,iBACD,aACL,yBACU,oBAET,QACD,aAEE,SACL,eAGJF,GACKrP,OAAOK,UAAWyM,EAAUuC,GAE9BvC,sBAGI/N,YAAYuQ,QAClB,gBACE,gBACArV,KAAO,UACPuV,IAAM,UACNC,IAAM,SAGRH,KC9EEI,EAAmB,mBACnBA,GAAiB7C,gBACXjO,eAAezE,KAAMuV,MAE9B5C,GAAW4C,EAAiBC,mBAC3B9C,GAGQ7M,OAAOK,UAAWyM,EAAUD,GAFhCC,sBAOE/N,YAAY2Q,EAAkB,WACpC,mBACE,sBAEE,SACA,UACC,GAAIH,iBAITG,KAGEE,EAAmB,mBACnBA,GAAiB/C,gBACXjO,eAAezE,KAAMyV,MAE9B9C,GAAW8C,EAAiBD,mBAE3B9C,GAGQ7M,OAAOK,UAAWyM,EAAUD,GAFhCC,sBAOE/N,YAAY6Q,EAAkB,WACpC,mBACE,sBAEE,SACA,iBACO,YACD,UACL,GAAIL,iBAITK,KCpDLC,EAAM,mBACCA,GAAIC,EAAShK,gBACPlH,eAAezE,KAAM0V,GAE9B/J,SACG0C,SAAW1C,OACXxJ,KAAOwJ,EAAQgB,SAASxK,KAAK4L,KAAKpC,EAAQgB,gBAG5CgJ,QAAU9P,OAAOK,UAAWyP,QAC5BC,UAAY5V,KAAK2V,QAAQC,eACzBC,YAAc,UACdC,sBACAC,YAAc/V,KAAK2V,QAAQI,aAAe,OAC1CC,aAAehW,KAAKgW,aAAajI,KAAK/N,WACtCiW,aAAejW,KAAKiW,aAAalI,KAAK/N,WACtCkW,YAAclW,KAAKkW,YAAYnI,KAAK/N,WACpCmW,UAAYnW,KAAKmW,UAAUpI,KAAK/N,0BAG1B4E,YAAY8Q,QAClB,aACE,gBAEAG,YAAc,GAAIpV,MAAK2V,iBACvBP,YAAYQ,iBAAiB,aAAcrW,KAAKgW,mBAChDJ,UAAUU,IAAMC,IAAIC,gBAAgBxW,KAAK6V,kBACzCY,IAAMzW,KAAK4V,UAAUU,SACrBV,UAAUS,iBAAiB,aAAcrW,KAAKiW,mBAC9CL,UAAUS,iBAAiB,UAAWrW,KAAKmW,kBAG7C,qBACE,SAAsBO,QACtBrI,SAAWqI,SAGb,qBACE,gBACAvU,KAAK,cAAenC,KAAK4V,kBAG3B,kBACE,gBACAzT,KAAK,UAAWnC,KAAK4V,kBAGvB,qBACE,gBACAe,0BAGF,oBACE,gBACAxU,KAAK,0BACLyU,kBAGF,yBACE,cAC+B,SAAhC5W,KAAK6V,YAAYgB,eAGjBC,GAAU9W,KAAKqO,SAAS0I,YAAY,qBACpCC,EAAShX,KAAKqO,SAAS0I,YAAY,UACnCE,MAAQ,KAEFH,EAAQA,YAEb,GADDI,IAAM,EACDpW,EAAI,EAAG8C,EAAIiC,OAAOD,KAAKkR,GAASnW,OAAQG,EAAI8C,EAAG9C,IAAK,IACvDY,GAAOmE,OAAOD,KAAKkR,GAAShW,MACnB,UAATY,IACMsV,EAAOG,WACG,UAATzV,MACDsV,EAAOI,YAGbH,EAAO,IACLI,GAAe,UAAT3V,EAAmB,GAAK,EAC9BuV,GAAM/B,MAAQ+B,EAAM/B,KAAKoC,oBAAmBD,EAAMJ,EAAM/B,KAAKoC,mBAC7DR,EAAQpV,GAAM6V,KAAK5W,QAAUX,KAAK+V,YAAcsB,OAC5C,OAKRH,EAAK,IACHrR,OAAOD,KAAK5F,KAAK8V,eAAenV,OAAS,aAGxC,GAAIoI,GAAK,EAAGyO,EAAK3R,OAAOD,KAAKkR,GAASnW,OAAQoI,EAAKyO,EAAIzO,IAAM,IAC5D+K,GAAQjO,OAAOD,KAAKkR,GAAS/N,GAC7B5C,EAAS2Q,EAAQhD,GACjB2D,EAAiB,UAAV3D,EAAoB,oBAAsB3N,EAAOuR,SAAW,oBAAsBvR,EAAOuR,SAChGC,EAAe3X,KAAK6V,YAAY+B,gBAAgBH,QAC/C3B,cAAchC,GAAS6D,IACftB,iBAAiB,YAAarW,KAAKkW,kBAC3CU,qBAKN,iBACE,cACDE,GAAU9W,KAAKqO,SAAS0I,YAAY,wBACpCD,MACG,GAAIhW,GAAI,EAAGA,EAAI+E,OAAOD,KAAK5F,KAAK8V,eAAenV,OAAQG,IAAK,IAC3DY,GAAOmE,OAAOD,KAAK5F,KAAK8V,eAAehV,GACvC6W,EAAe3X,KAAK8V,cAAcpU,GAClCyE,EAAS2Q,EAAQA,QAAQpV,MACzByE,IAAWA,EAAO0R,aAGLC,aAAa3R,EAAOrG,KAAKiY,OAAOA,UACtCF,QAAS,EAChB,MAAO/U,QAGJ,IAAIqD,EAAQ,IACboR,GAAOpR,EAAOoR,KAAKS,WACnBT,QAEaO,aAAaP,EAAKQ,OAAOA,QACtC,MAAOjV,KACAyU,KAAKlV,QAAQkV,aAQ3B,oBACE,cACDU,GAAejY,KAAK6V,YACpBgB,EAAaoB,EAAapB,WAC1BqB,EAAsBD,EAAaC,uBAEpB,SAAfrB,GAAwD,IAA/BqB,EAAoBvX,gBAExCkV,YAAYsC,cACjB,MAAOrV,YAMR,eACE,SAAgBsV,OAGhB,GAFD/F,GAAQ/O,UAAU3C,OAAS,OAAsBR,KAAjBmD,UAAU,GAAmBA,UAAU,GAAK,EAEvExC,EAAI,EAAGA,EAAI+E,OAAOD,KAAK5F,KAAK8V,eAAenV,OAAQG,IAAK,IAC3DiX,GAAS/X,KAAK8V,cAAcjQ,OAAOD,KAAK5F,KAAK8V,eAAehV,GAC3DiX,GAAOM,YAGHC,OAAOjG,EAAO+F,WAKtB,sBACE,eAgDA,GA/CDlK,GAAQlO,KAERuY,KA6CKzX,EAAI,EAAGA,EAAI+E,OAAOD,KAAK5F,KAAK8V,eAAenV,OAAQG,KA3ChD,SAAeA,MACrBiX,GAAS7J,EAAM4H,cAAcjQ,OAAOD,KAAKsI,EAAM4H,eAAehV,MAC3D0X,oBAAoB,YAAatK,EAAMgI,gBAE1CuC,OAAO,KACPV,EAAOM,SACF,GAAIK,SAAQ,SAAUC,MACvBC,GAAgB,QAASA,QACvBC,GAAY,EAEZC,EAAQ,QAASA,KACdf,EAAOM,SAKDQ,EAAY,cACVC,EAAO,iBALdC,YAAYhB,KACT1B,iBAAiB,YAAa,8BAW9ByC,EAAO,OACXN,oBAAoB,YAAaI,MAEnCvC,iBAAiB,YAAauC,KAGhC,GAAIF,SAAQ,SAAUC,KACvBI,YAAYhB,KACT1B,iBAAiB,YAAa,qBAQhC/T,KAAKmW,IAIR3X,SAGD4X,SAAQM,IAAIT,UAGhB,gBACE,cACD3K,GAAS5N,WAENA,MAAKiZ,gBAAgBC,KAAK,eAC1B,GAAIpY,GAAI,EAAGA,EAAI+E,OAAOD,KAAKgI,EAAOkI,eAAenV,OAAQG,IAAK,IAC7DqY,GAAUvL,EAAOkI,cAAcjQ,OAAOD,KAAKgI,EAAOkI,eAAehV,MAC9D+U,YAAYuD,mBAAmBD,SAC/BvL,GAAOkI,cAAcjQ,OAAOD,KAAKgI,EAAOkI,eAAehV,MAGzD8U,UAAU4C,oBAAoB,aAAc5K,EAAOqI,gBACnDL,UAAU4C,oBAAoB,UAAW5K,EAAOuI,aAChDN,YAAY2C,oBAAoB,aAAc5K,EAAOoI,gBAErDmC,qBACA5B,IAAI8C,gBAAgBzL,EAAO6I,OAE3BA,IAAM,OACNd,aACAC,UAAY,OACZC,YAAc,OACdC,mBACAC,YAAc,aAIpB,oBACE,SAAqBgC,OAGrB,GAFDuB,GAAWvB,EAAOuB,SAClBC,EAAO,GACFzY,EAAI,EAAGJ,EAAM4Y,EAAS3Y,OAAQG,EAAIJ,EAAKI,MACvCwY,EAASlB,IAAItX,SAGbwX,OAAO,EAAGiB,GACjB,MAAOzW,SAKN4S,KClQL8D,EAAS,mBACFA,GAAOzB,mBACDtT,eAAezE,KAAMwZ,KAE9BzB,YAAkB1H,mBAKd,IAAI5N,OAAM,wBAJXsV,OAASA,OACT0B,SAAW,GAAInJ,UAASyH,QACxB0B,SAAStN,SAAW,sBAMhBvH,YAAY4U,QAClB,aACE,SAAc5W,QACduJ,UAAYvJ,SAGd,aACE,SAAcA,OAGd,GAFD8W,GAAOlF,KAAKC,MAAM7R,EAAQ,GAC1BsR,EAAOtR,EAAQ,EACV9B,EAAI,EAAGA,EAAI4Y,EAAM5Y,MACjB6Y,SAAS3Z,KAAKyZ,SAAU,EAE7BvF,GAAO,KACFyF,SAAS3Z,KAAKyZ,SAAUvF,UAY9B,kBACE,iBACEsF,GAAOG,SAAS3Z,KAAKyZ,SAAU,UAGnC,mBACE,iBACED,GAAOG,SAAS3Z,KAAKyZ,SAAU,UAGnC,mBACE,iBACED,GAAOG,SAAS3Z,KAAKyZ,SAAU,UAGnC,mBACE,iBACED,GAAOG,SAAS3Z,KAAKyZ,SAAU,UAGnC,mBACE,iBACED,GAAOG,SAAS3Z,KAAKyZ,SAAU,UAGnC,iBACE,iBACED,GAAOG,SAAS3Z,KAAKyZ,SAAU,GAAG,UAGtC,kBACE,iBACED,GAAOG,SAAS3Z,KAAKyZ,SAAU,GAAG,UAGtC,kBACE,iBACED,GAAOG,SAAS3Z,KAAKyZ,SAAU,GAAG,UAGtC,oBACE,SAAqB1T,SACnB,IAAIqP,aAAYrP,IAAU,GAAK,IAAMA,IAAU,GAAK,IAAMA,IAAU,EAAI,IAAc,IAARA,WAGlF,aACA,iBACI/F,MAAK+X,OAAO6B,kBAGhB,eACA,SAAa7T,QACX0T,SAAStN,SAAWpG,OAEtB,iBACI/F,MAAKyZ,SAAStN,kBAGlB,iBACE,SAAkB4L,EAAQ8B,EAAMC,MACjCC,OAAM,UACFF,OACD,KACCC,EACI/B,EAAOiC,QAAQjC,EAAO5L,UAEtB4L,EAAOkC,SAASlC,EAAO5L,oBAG5B,KACC2N,EACI/B,EAAOmC,SAASnC,EAAO5L,UAEvB4L,EAAOoC,UAAUpC,EAAO5L,oBAG7B,MACC2N,OACI,IAAIrX,OAAM,kCAEVsV,EAAOkC,SAASlC,EAAO5L,WAAa,MACnC4L,EAAOkC,SAASlC,EAAO5L,SAAW,IAAM,KACxC4L,EAAOkC,SAASlC,EAAO5L,SAAW,aAGxC,KACC2N,EACI/B,EAAOqC,SAASrC,EAAO5L,UAEvB4L,EAAOsC,UAAUtC,EAAO5L,oBAG7B,MACC2N,OACI,IAAIrX,OAAM,kCAEVsV,EAAOsC,UAAUtC,EAAO5L,WAAa,MACpC4L,EAAOsC,UAAUtC,EAAO5L,SAAW,mBAItC,YAEHA,UAAY0N,EACZE,MAGJP,uBChJT3T,OAAOV,eAAemV,EAAS,qBACtB,IAGTA,UAAkB,SAAUC,OAGrB,GAFDC,GAAc,EAETtN,EAAO5J,UAAU3C,OAAQ8Z,EAASxW,MAAMiJ,EAAO,EAAIA,EAAO,EAAI,GAAIC,EAAO,EAAGA,EAAOD,EAAMC,MACzFA,EAAO,GAAK7J,UAAU6J,MAG3BuN,IAA4B,EAC5BC,GAAoB,EACpBC,MAAiBza,WAGd,GAA2CmJ,GAAvCC,EAAYkR,EAAOnT,OAAO0B,cAAsB0R,GAA6BpR,EAAQC,EAAUN,QAAQC,MAAOwR,GAA4B,KACvIpR,EAAMvD,MAEGpF,OAErB,MAAOwI,MACa,IACHA,eAGVuR,GAA6BnR,EAAUsR,UAChCA,oBAGRF,OACIC,OAKRE,GAAS,GAAIP,GAAkBC,GAC/BO,EAAS,EACTC,GAA6B,EAC7BC,GAAqB,EACrBC,MAAkB/a,WAGf,GAA4Cgb,GAAxCC,EAAaX,EAAOnT,OAAO0B,cAAuBgS,GAA8BG,EAASC,EAAWnS,QAAQC,MAAO8R,GAA6B,EAAM,IACzJtS,GAAOyS,EAAOpV,QAEXuC,IAAII,EAAMqS,MACPrS,EAAK/H,QAEjB,MAAOwI,MACc,IACHA,eAGX6R,GAA8BI,EAAWP,UACjCA,oBAGTI,OACIC,UAKLJ,iCC9DT,GAAIO,GAEJ,SAAgC7W,SAAcA,IAAOA,EAAIiD,WAAajD,GAAQoD,QAASpD,IAFjD8W,EAItCC,WAAiBF,EAASzT,WCNtB4T,EAAS,mBACFA,GAAOzD,gBACDtT,eAAezE,KAAMwb,QAE7BzD,OAASA,GAAU,GAAI3C,YAAW,uBAG5BxQ,YAAY4W,QAClB,cACE,eAGA,GAFDtN,GAAQlO,KAEHkN,EAAO5J,UAAU3C,OAAQoX,EAAS9T,MAAMiJ,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,MACtEA,GAAQ7J,UAAU6J,KAGpBoC,QAAQ,SAAUkM,KACjB1D,OAAS2D,EAAOtG,WAAYlH,EAAM6J,OAAQ0D,cAI/C,oBACE,SAAqB1V,SACnB,IAAIqP,aAAYrP,GAAS,GAAIA,GAAS,GAAK,IAAMA,GAAS,EAAI,IAAc,IAARA,WAGxE,kBACE,SAAmBhC,WAGf4X,GAAaC,SACPA,GAAO/I,SAAS,IACfgJ,SAAS,EAAG,QAJxBC,GAAO,YAOPvM,QAAQ,SAAUwM,MACZJ,EAAaI,KAEhBC,SAASF,EAAM,QAGnBN,KC1CLzL,EAAekM,EAAOlM,aAEtBmM,GAAS,mBACAA,GAAOzO,gBACChJ,eAAezE,KAAMkc,QAE7BC,YAAc1O,EAAO2O,iBACrBC,aAAe5O,EAAO6O,kBACtBlX,IAAMqI,EAAOrI,SACbmX,GAAK9O,EAAO8O,QACZC,OAAS/O,EAAO+O,YAEhBC,OAASC,OAAOD,QAAUC,OAAOC,6BAG7B/X,YAAYsX,QAChB,aACE,gBACEnQ,GAAGgE,EAAa6M,cAAe5c,KAAK6c,QAAQ9O,KAAK/N,cAGrD,gBACE,cACCkO,GAAQlO,IAEPA,MAAK8c,YAODC,cANO/c,KAAKyc,OAAOO,OAAOC,UAAU,MAAOjd,KAAKoF,IAAI2S,QAAUrV,KAAM,YAAa,GAAQ,UAAW,YACnGwW,KAAK,SAAU9T,KACX0X,OAAS1X,IACT2X,uBAOb,oBACE,cACCnP,GAAS5N,KAEToc,EAAcpc,KAAKqO,SAAS0I,YAAY/W,KAAKmc,aAC7CG,EAAetc,KAAKqO,SAAS0I,YAAY/W,KAAKqc,cAC9C9E,EAAO6E,EAAYpE,OACnBT,SACKkF,OAAOO,OAAOE,SAAUxa,KAAM,UAAW6Z,GAAIvc,KAAKuc,GAAGxE,QAAU/X,KAAK8c,OAAQvF,GAAM2B,KAAK,SAAUa,KACrFzX,KAAK,GAAI8S,YAAW2E,MAC1B5X,KAAK4N,EAAaoN,aAClBJ,YAAYxF,SAK5B2E,KCvBAzP,GAAU2Q,EACVnB,GAASoB,EAIT5M,GAAU6M,EACVC,GAAOC,EACP9L,GAAO+L,EAIPjL,GAAmBkL,EACnBzI,GAAiB0I,EACjBxI,GAAiByI,EACjBrI,GAAmBsI,EACnBpI,GAAmBqI,EACnBC,GAAMC,EACNxE,GAASyE,EACTzC,GAAS0C,EACThC,GAASiC,GCjDhBC,GAAQ,mBAIDA,kBACM3Z,eAAezE,KAAMoe,QAE7BC,IAAM,OACNC,eAAiB,OACjBC,gBACAC,uBACA7d,OAAS,sBAQHiE,YAAYwZ,QAClB,cACE,gBACAE,eAAiB,OACjBC,gBACA5d,OAAS,SAOX,gBACE,gBACA8d,aACAJ,IAAM,MAGRD,KAMEM,GAAa,SAAUC,WAMvBD,kBACMja,eAAezE,KAAM0e,MAE9BxQ,GAAQ5J,aAAa6D,0BAA0BnI,MAAO0e,EAAWxX,WAAarB,OAAOc,eAAe+X,IAAa3e,KAAKC,gBAEpHoO,IAAM,eACN1M,KAAO,QACNwM,sBAZIrH,SAAS6X,EAAYC,GAe3BD,GACPN,IAESQ,GAAa,SAAUC,WAMvBD,kBACMna,eAAezE,KAAM4e,MAE9BhR,GAAStJ,aAAa6D,0BAA0BnI,MAAO4e,EAAW1X,WAAarB,OAAOc,eAAeiY,IAAa7e,KAAKC,gBAEpHoO,IAAM,eACN1M,KAAO,UACPod,QAAU,EACVlR,sBAbI/G,SAAS+X,EAAYC,gBAoBrBja,YAAYga,QAClB,cACE,gBACAN,eAAiB,OACjBC,gBACA5d,OAAS,OACTme,QAAU,MAGZF,GACPR,IAESW,GAAS,mBACTA,kBACMta,eAAezE,KAAM+e,QAE7B5H,WAAa,UACbC,WAAa,yBAGPxS,YAAYma,QAClB,gBACE,gBACA5H,WAAa,UACbC,WAAa,SAGf2H,KC9GEC,GAAW,mBAOXA,GAASre,gBACH8D,eAAezE,KAAMgf,QAE7Bre,OAASA,GAAU,OACnBse,WAAate,GAAU,OACvB4R,cACAwI,OAAS,sBAUHnW,YAAYoa,QAClB,aACE,SAAczH,QACdhF,MAAMjQ,KAAKiV,QACX5W,QAAU4W,EAAKqC,gBACfqF,YAAc1H,EAAKqC,kBAUrB,cACE,SAAejZ,MAChBX,KAAKuS,MAAM5R,OAAS,QACf,IAAIyU,YAAW,UAGTjV,KAAXQ,QACKX,MAAKkf,kBAEVlf,KAAK+a,OAASpa,IAAWX,KAAKuS,MAAM,GAAG5R,OAAQ,IAC7Cwe,GAAOnf,KAAKuS,MAAM,GAAG6M,MAAMpf,KAAK+a,OAAQ/a,KAAK+a,OAASpa,eACrDoa,OAAS,OACTxI,MAAMyF,aACNrX,QAAUA,EACRwe,KAGLnf,KAAK+a,OAASpa,EAASX,KAAKuS,MAAM,GAAG5R,OAAQ,IAC3C0e,GAAQrf,KAAKuS,MAAM,GAAG6M,MAAMpf,KAAK+a,OAAQ/a,KAAK+a,OAASpa,eACtDoa,QAAUpa,OACVA,QAAUA,EACR0e,SAGLlb,GAAM,GAAIiR,YAAWzU,GACrB2e,EAAS,EACNtf,KAAKuS,MAAM5R,OAAS,GAAKA,EAAS,GAAG,IACtCX,KAAK+a,OAASpa,EAASX,KAAKuS,MAAM,GAAG5R,OAAQ,IAC3C4e,GAAMvf,KAAKuS,MAAM,GAAG6M,MAAMpf,KAAK+a,OAAQ/a,KAAK+a,OAASpa,KACrD2H,IAAIiX,EAAKD,QACRvE,QAAUpa,OACVA,QAAUA,IACN,WAIL6e,GAAaxf,KAAKuS,MAAM,GAAG5R,OAASX,KAAK+a,SACzCzS,IAAItI,KAAKuS,MAAM,GAAG6M,MAAMpf,KAAK+a,OAAQ/a,KAAKuS,MAAM,GAAG5R,QAAS2e,QAC3D/M,MAAMyF,aACN+C,OAAS,KACJyE,OACL7e,QAAU6e,KACLA,QAGPrb,UAQJ,cACE,gBACAoO,cACA5R,OAAS,OACToa,OAAS,SAGX,gBACE,gBACA0E,aACAR,WAAa,SAQf,qBACE,uBACAte,QAAUX,KAAKuS,MAAM,GAAG5R,YACxBoa,OAAS,EACP/a,KAAKuS,MAAMyF,eAWf,cACE,SAAe3F,EAAO1R,UACvB+e,GAAS,EACT5e,EAAId,KAAK+a,OAAS1I,EACfvR,EAAId,KAAK+a,OAASpa,EAAS0R,GAC5BvR,EAAId,KAAKuS,MAAM,GAAG5R,SACF,IAAT+e,EAAe1f,KAAKuS,MAAM,GAAGzR,GAC7Bd,KAAKuS,MAAM,OACF,IAATmN,EAAe1f,KAAKuS,MAAM,GAAGzR,EAAId,KAAKuS,MAAM,GAAG5R,mBAKrD+e,OAGJV,KC5ILW,ID+IqB,mBACdC,kBACMnb,eAAezE,KAAM4f,QAE7BlV,cACAE,sBAGMhG,YAAYgb,QAClB,gBACE,gBACAlV,cACAE,gBC3JE,QAAS+U,kBACPlb,eAAezE,KAAM2f,QAE7BjI,SAAW,QACX5X,KAAO,UACPyX,UCAIwH,GAASc,GACTnB,GAAaoB,GACblB,GAAamB,GACbf,GAAWgB,GAEXC,GDFK,mBACLA,kBACMxb,eAAezE,KAAMigB,QAE7BnJ,+BAGMlS,YAAYqb,QAClB,kBACE,SAAmB9Z,SACjBnG,MAAK8W,QAAQ3Q,UAGjB,qBACE,SAAsBzD,eACtBoU,QAAQpU,GAAQ,GAAIid,IAClB3f,KAAK8W,QAAQpU,UAGjB,cACE,gBACAoU,kBAGF,gBACE,gBACAA,eAGFmJ,KEnCLvQ,GAAgBuM,GAAOvM,cCAhBwQ,GDMO,mBACPA,GAAYvK,gBACNlR,eAAezE,KAAMkgB,QAE7BvK,QAAU9P,OAAOK,UAAWyP,QAC5Bc,IAAM,UACN0J,OAAS,OACTzU,MAAQ,UACR0U,QAAU,UACVC,WAAY,OACZC,YAAa,OACbC,SAAWvgB,KAAK2V,QAAQ4K,cACxBxI,OAAS/X,KAAK2V,QAAQoC,QAAU,qBAChCyI,cAAgB,sBAGV5b,YAAYsb,QAClB,aACE,gBACAnU,GAAG2D,GAAc+Q,YAAazgB,KAAK0gB,KAAK3S,KAAK/N,cAG/C,aACE,SAAcyW,EAAKkK,MACpB/S,GAAS5N,UAERyW,IAAMA,OAEN4J,WAAY,KAGbO,GAAS5gB,KAAK6gB,UAAUF,eACvBG,SAAU,EACRC,MAAM/gB,KAAKyW,IAAKmK,GAAQ1H,KAAK,SAAU8H,MACxCA,EAASC,YACJd,OAASa,EAASb,eACjBxH,UAAUO,KAAK,aACdgI,iBAAiBF,KAGnBtI,QAAQC,QAAQqI,KAElBF,SAAU,IACV3e,KAAKuN,GAAcyR,aAAcvT,EAAOQ,IAAK,GAAI3L,OAAMue,EAASb,OAAS,KAAOa,EAASI,WAAa,QAC5GC,MAAM,SAAU3V,WACVoV,SAAU,IACV3e,KAAKuN,GAAcyR,aAAcvT,EAAOQ,IAAK1C,GAC9CA,WAIL,yBACE,SAA0BsV,MAC3B9S,GAAQlO,KACR+X,EAAS/X,KAAKqO,SAAS0I,YAAY/W,KAAK+X,QAExCuJ,SADCd,kBAEe,IAAhBQ,EAASC,UACHjhB,KAAKugB,cA7DL,KA+DKgB,OAAOrI,KAAK,SAAU3B,KACvBuJ,SAAU,EACX5S,EAAMmS,WAAcnS,EAAMoS,aACzBvI,KACKzV,KAAKiV,KACNpV,KAAKuN,GAAc8R,gBAAiBzJ,MAEpC5V,KAAKuN,GAAc8R,gBAAiBjK,gBAvE5C,KA6EKkK,OAAOvI,KAAK,SAAU3B,KACvBuJ,SAAU,EACX5S,EAAMmS,WAAcnS,EAAMoS,aACzBvI,KACKzV,KAAKiV,KACNpV,KAAKuN,GAAc8R,gBAAiBzJ,MAEpC5V,KAAKuN,GAAc8R,gBAAiBjK,gBAlF1C,KAwFGmK,cAAcxI,KAAK,SAAU3B,KAC9BuJ,SAAU,EACX5S,EAAMmS,WAAcnS,EAAMoS,aACzBvI,KACKzV,KAAK,GAAI8S,YAAWmC,MACrBpV,KAAKuN,GAAc8R,gBAAiBzJ,MAEpC5V,KAAKuN,GAAc8R,gBAAiBjK,gBAlG1C,iBAyGCvX,MAAK2hB,UAAUX,EAASY,KAAKC,YAAaP,WAKpD,kBACE,SAAmBQ,EAAQR,MAC5BhS,GAAStP,KAET+X,EAAS/X,KAAKqO,SAAS0I,YAAY/W,KAAK+X,YACvCA,GAAU/X,KAAKogB,SAAWpgB,KAAKsgB,oBAE3BF,QAAQ2B,SACb,MAAOjf,SAKNsd,QAAU0B,GACM,IAAjB9hB,KAAK8gB,cAMJV,SAAWpgB,KAAKogB,QAAQ4B,OAAO9I,KAAK,SAAUpP,OAC7CwF,EAAO+Q,YAAa/Q,EAAOgR,iBAU3BxW,GAAIZ,QACC4X,SAAU,IACVX,OAAS,eACRxH,UAAUO,KAAK,aACd/W,KAAKuN,GAAc8R,gBAAiBzJ,SAKxCzV,KAAKwH,EAAI/D,eACR4S,UAAUO,KAAK,aACd/W,KAAKuN,GAAcuS,kBAAmBlK,KAExCzI,EAAOqS,UAAUG,EAAQR,OAtB1BhS,EAAO8Q,cAEAA,QAAQ2B,SACf,MAAOjf,OAoBZue,MAAM,SAAU3V,WACVoV,SAAU,IACV3e,KAAKuN,GAAcyR,aAAc7R,EAAOlB,IAAK1C,GAC9CA,WAIL,kBACE,SAAmBiV,MACpBuB,GAAUrc,OAAOK,UAAWya,GAC5BwB,EAAU,GAAIC,SAEdxB,UACM,cACCuB,OACH,aACC,UAIP,IAAkD,WAA9C7d,aAAaC,OAAOvE,KAAK2V,QAAQwM,SAAuB,IACxDE,GAAgBriB,KAAK2V,QAAQwM,YAC5B,GAAI/c,KAAOid,GACVA,EAAcjc,eAAehB,MACvBkd,OAAOld,EAAKid,EAAcjd,OAKK,WAAzCd,aAAaC,OAAO2d,EAAQC,SAAuB,IACjDI,GAAaL,EAAQC,YACpB,GAAIhV,KAAQoV,GACXA,EAAWnc,eAAe+G,MACpBmV,OAAOnV,EAAMoV,EAAWpV,WAKjB,IAAjB+U,EAAQM,SACHC,KAAO,eAKZP,EAAQQ,oBACHC,YAAc,WAIhB/B,SAGJ,eACE,cACD5gB,KAAKogB,QAAS,UAETA,QAAQ2B,SACb,MAAOjf,SAGJsd,QAAU,UACVU,SAAU,OAEZT,WAAY,SAGd,gBACE,gBACAC,YAAa,OACbyB,kBAGF,WACA,iBACI,aAGJ7B,KE3OL0C,GAAS,mBACFA,GAAOjR,gBACDlN,eAAezE,KAAM4iB,QAE7BxU,IAAM,cACN+K,QAAUxH,OACVkR,aAAe,OACfC,YAAcnR,EAAWiI,gBACzBmJ,WAAqC,EAAxBpR,EAAWiI,gBACxBoJ,aAAe,OACfC,qBAAuB,sBAGjBre,YAAYge,QAClB,gBACE,gBACAzJ,QAAU,YAGZ,yBACE,cACD+J,GAAkBljB,KAAK8iB,YAAc9iB,KAAK6iB,aAK1CM,EAAY3O,KAAK4O,IAAI,EAAGF,GACxBG,EAAO,GAAIjO,YAAW,KACrB9M,IAAItI,KAAKmZ,QAAQmK,SAAStjB,KAAK6iB,aAAc7iB,KAAK6iB,aAAeM,SACjEH,aAAe,GAAI1S,UAAS+S,EAAKtL,QAAQsC,UAAU,QAEnDwI,cAAgBM,OAChBF,qBAAmC,EAAZE,SAGzB,iBACE,SAAkBtJ,MACnB0J,GAAO/O,KAAK4O,IAAIpjB,KAAKijB,qBAAsBpJ,GAC3C2J,EAAOxjB,KAAKgjB,eAAiB,GAAKO,KAClC1J,EAAO,QACH,IAAIpX,OAAM,uDAEbwgB,sBAAwBM,EACzBvjB,KAAKijB,qBAAuB,OACzBD,eAAiBO,EACbvjB,KAAK8iB,YAAc9iB,KAAK6iB,aAAe,QAC3CY,qBAGA5J,EAAO0J,EACVA,EAAO,GAAKvjB,KAAKijB,qBACZO,GAAQD,EAAOvjB,KAAK0jB,SAASH,GAE7BC,SAIN,iBACE,iBACuB,KAArBxjB,KAAK0jB,SAAS,UAGlB,iBACE,iBACE1jB,MAAK0jB,SAAS,UAGlB,yBACE,cACDC,OAAY,OACXA,EAAY,EAAGA,EAAY3jB,KAAKijB,qBAAsBU,OACF,IAAlD3jB,KAAKgjB,aAAe,aAAeW,eACjCX,eAAiBW,OACjBV,sBAAwBU,EACtBA,cAGNF,mBACEE,EAAY3jB,KAAK4jB,0BAGrB,gBACE,cAEDC,GAAe7jB,KAAK4jB,yBACjB5jB,MAAK0jB,SAASG,EAAe,GAAK,SAGtC,gBACE,cAED9d,GAAQ/F,KAAK8jB,gBACL,GAAR/d,EACKA,EAAQ,IAAM,GAEb,GAAKA,IAAU,OAItB6c,KC/FLmB,GAAY,mBACLA,kBACMtf,eAAezE,KAAM+jB,uBAGvBnf,YAAYmf,EAAW,WAC7B,mBACE,SAAoBpS,OAMpB,GALD2E,GAAM3E,EACNqS,EAAY1N,EAAIsD,WAChBqK,EAAM,GAAI7O,YAAW4O,GACrBE,EAAS,EAEJpjB,EAAI,EAAGA,EAAIkjB,EAAWljB,IACzBA,GAAK,GACQ,IAAXwV,EAAIxV,IAA8B,IAAfwV,EAAIxV,EAAI,IAA8B,IAAfwV,EAAIxV,EAAI,OAIpDojB,GAAU5N,EAAIxV,cAIb,IAAIsU,YAAW6O,EAAIlM,OAAQ,EAAGmM,UAGlC,iBACE,SAAkBvS,MACnBwS,GAAOJ,EAAUK,WAAWzS,GAC5B0S,EAAK,GAAIzB,IAAOuB,KAEjBxK,cACC2K,GAAaD,EAAG1K,aACjBA,cACC4K,GAAWF,EAAG1K,aACfmK,aAECU,GAAiBT,EAAUU,iBAAiBH,GAC5CI,EAAeX,EAAUY,eAAeJ,GACxCK,EAAoB,EACpBC,EAAgB,IAChBC,GAAuB,EAAG,IAAK,IAAK,KACpCC,EAAY,MAEG,MAAfT,GAAqC,MAAfA,GAAqC,MAAfA,GAAqC,MAAfA,GAAqC,KAAfA,GAAoC,KAAfA,GAAoC,KAAfA,GAAoC,MAAfA,GAAqC,MAAfA,GAAqC,MAAfA,GAAqC,MAAfA,KAEjM,OADND,EAAGP,cAElBJ,SAAS,GAEVkB,GAAqB,MACPE,EAAoBF,MAG1BP,EAAGP,UAAY,IACxBA,YACAJ,SAAS,GACRW,EAAGW,gBAEA,GADDC,GAA2C,IAAtBL,EAA0B,EAAI,GAC9C9jB,EAAI,EAAGA,EAAImkB,EAAoBnkB,IAClCujB,EAAGW,aACDlkB,EAAI,IACIokB,iBAAiBb,EAAI,MAErBa,iBAAiBb,EAAI,OAMtCP,aACCqB,GAAqBd,EAAGP,aACD,IAAvBqB,IACCrB,cACE,IAA2B,IAAvBqB,EAA0B,GAChCzB,SAAS,KACT0B,YACAA,cAEE,GADDC,GAAwChB,EAAGP,UACtC/a,EAAK,EAAGA,EAAKsc,EAAuCtc,MACxDqc,YAGJtB,YACAJ,SAAS,MAER4B,GAA0BjB,EAAGP,UAC7ByB,EAAiClB,EAAGP,UAEpC0B,EAAsBnB,EAAGX,SAAS,EACV,KAAxB8B,KACC9B,SAAS,KAEXA,SAAS,MAER+B,GAAyB,EACzBC,EAA0B,EAC1BC,EAAwB,EACxBC,EAA2B,CAELvB,GAAGW,eAEFX,EAAGP,YACFO,EAAGP,YACLO,EAAGP,YACAO,EAAGP,cAG5B+B,GAAY,EACZC,EAAa,EACbC,EAAM,EACNC,GAAY,EACZC,EAAU,EACVC,EAAU,KAEoB7B,EAAGW,WACJ,IAC3BX,EAAGW,WAAY,IAEbmB,GAAmB9B,EAAG1K,WACtByM,GAAe,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,GACzEC,GAAe,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAExEF,GAAmB,GAAKA,EAAmB,MACjCC,EAAYD,EAAmB,KAC9BE,EAAYF,EAAmB,IACd,MAArBA,MACG9B,EAAG1K,YAAc,EAAI0K,EAAG1K,aACvB0K,EAAG1K,YAAc,EAAI0K,EAAG1K,eAIrC0K,EAAGW,cACFA,WAEDX,EAAGW,eACFtB,SAAS,GACRW,EAAGW,cACFtB,SAAS,KAGZW,EAAGW,eACFlB,YACAA,WAEDO,EAAGW,WAAY,IACbsB,GAAoBjC,EAAGX,SAAS,IAChC6C,EAAalC,EAAGX,SAAS,MACjBW,EAAGW,gBAELuB,MACoB,EAApBD,OAKVE,GAAW,CACG,KAAdX,GAAkC,IAAfC,MACVD,EAAYC,MAGrBW,GAAc,EACdC,EAAc,CACQ,KAAtB9B,KACY,IACA,EAAIY,MAEiB,IAAtBZ,EAA0B,EAAI,KACR,IAAtBA,EAA0B,EAAI,IAEnB,EAAIY,OAG1BmB,GAA8C,IAA/BrB,EAA0B,GACzCsB,EAAmF,IAAtCrB,EAAiC,IAA9D,EAAIC,OAERC,EAAyBC,GAA2Be,MACnDd,EAAwBC,GAA4Bc,KAEjEG,GAAgBrS,KAAKsS,KAAKH,EAAcH,YAEzChX,YACE,qBAGagV,eACFE,YACHK,gBACIF,uBACOd,EAAUgD,sBAAsBlC,qBAG7CmB,MACFD,UACIG,UACAD,oBAIFJ,SACCC,qBAIDa,SACCC,uBAIDC,SACCD,WAKT,yBACE,SAA0BvC,EAAIzhB,OAI9B,GAHDokB,GAAa,EACbC,EAAa,EAERnmB,EAAI,EAAGA,EAAI8B,EAAO9B,IACN,IAAfmmB,OAEYD,EADA3C,EAAGe,UACwB,KAAO,OAEtB,IAAf6B,EAAmBD,EAAaC,SAI5C,yBACE,SAA0B3C,UACvBA,OACD,UACI,eACJ,UACI,WACJ,UACI,eACJ,WACI,WACJ,WACI,aACJ,WACI,cACJ,WACI,wBAEA,kBAIR,uBACE,SAAwBC,UACrBA,EAAW,IAAI2C,QAAQ,UAG5B,8BACE,SAA+BC,UAC5BA,OACD,WACI,YACJ,WACI,YACJ,WACI,sBAEA,kBAIR,oBACE,SAAqBC,MACtBlS,KACAkS,IAAaA,EAAUC,eACpBC,WAAaF,EAAUC,WAAWE,QAClCC,YAAcJ,EAAUC,WAAWI,SACnCC,aAAeN,EAAUO,aAAaJ,QACtCK,cAAgBR,EAAUO,aAAaF,UAGzCI,QAAUT,EAAU5C,iBACpBsD,MAAQV,EAAU1C,eAClBqD,SAAWX,EAAUrC,YACrBiD,aAAeZ,EAAUvC,gBAEzBoD,gBACIb,EAAUc,UAAUX,aACnBH,EAAUc,UAAUT,UAGzBU,UAAYf,EAAUgB,cAEvBC,GAASnT,EAAKiT,UAAUjC,QACxBoC,EAASpT,EAAKiT,UAAUlC,iBACvB3O,kBAAoB9C,KAAKC,MAAMS,EAAKqT,WAAaF,EAASC,IACxDpT,MAGJ6O,KC3SLyE,GAAU,mBACHA,kBACM/jB,eAAezE,KAAMwoB,uBAGvB5jB,YAAY4jB,EAAS,WAC3B,oBACE,SAAqBzQ,MACtBA,EAAOpX,OAASoX,EAAO5L,SAAW,cAIlCiE,GAAM2H,EAAO0B,SACbtN,EAAW4L,EAAO5L,eACS,KAA3BiE,EAAIgK,SAASjO,IAA8C,IAA3BiE,EAAI8J,SAAS/N,IAAiD,IAA9BiE,EAAI4J,QAAQ7N,EAAW,GAClFqc,EAAQC,cAAc1Q,GAEtByQ,EAAQE,YAAY3Q,UAI1B,sBACE,SAAuBA,UACxB4Q,MACAxc,EAAWqc,EAAQI,wBAAwB7Q,GAC3C1F,EAAQlG,EAAS0c,IACjBzQ,EAAM/F,EACHA,EAAQ0F,EAAOpX,OAAS,GAAG,IAC5BmoB,GAAS/Q,EAAOA,OAAOqH,MAAM/M,EAAOA,EAAQlG,EAAS4c,aACrD5c,GAAS0c,MAAQ9Q,EAAO5L,YACnB6c,KAAK7c,EAAS4c,mBAEZP,EAAQI,wBAAwB7Q,IAC5B8Q,OAEXI,IAASH,OAAQA,EAAQlH,KADlB,GAAIxM,YAAW2C,EAAOA,OAAOqH,MAAM/M,EAAQyW,EAAOlP,WAAYxB,OAEjE8Q,WAAWD,GACfA,EAAKvnB,MAAQ,GAAmB,IAAdunB,EAAKvnB,QACpBY,KAAK2mB,KAELD,KAAK5Q,EAAML,EAAO5L,YACjBiM,QAEHuQ,UAGJ,oBACE,SAAqB5Q,UACtB4Q,MACG5Q,EAAO5L,SAAW4L,EAAOpX,OAAS,GAAG,IACtCA,GAASoX,EAAO0B,SAASW,gBACzBrC,EAAOpX,OAASoX,EAAO5L,UAAYxL,YACjCmoB,GAAS/Q,EAAOA,OAAOqH,MAAMrH,EAAO5L,SAAU4L,EAAO5L,SAAW,KAC7D6c,KAAK,MACRpH,GAAO7J,EAAOA,OAAOqH,MAAMrH,EAAO5L,SAAU4L,EAAO5L,SAAWxL,KAC3DqoB,KAAKroB,MACRsoB,IAASH,OAAQA,EAAQlH,KAAMA,KAC3BsH,WAAWD,GACfA,EAAKvnB,MAAQ,GAAmB,IAAdunB,EAAKvnB,QACpBY,KAAK2mB,SAMTN,UAGJ,mBACE,SAAoBM,MACrBvnB,GAAsB,GAAfunB,EAAKrH,KAAK,YAChBlgB,KAAOA,EACJA,OACD,KAEEynB,KAAM,YAER,KAEEC,KAAM,YAER,aAGA,KAEE/T,IAAMgU,GAAUC,SAASL,EAAKrH,gBAEhC,KAEEtM,KAAM,UAUZ,gCACE,SAAiCyC,UAElC8Q,GAAM9Q,EAAO5L,SACb4c,EAAe,EACK,IAAjBA,GAAuC,IAAjBA,GAAsBF,EAAM9Q,EAAOpX,OAAS,GACjC,IAAlCoX,EAAO0B,SAASS,SAAS2O,GACe,IAAtC9Q,EAAO0B,SAASS,SAAS2O,EAAM,KAElB,EAC+B,IAArC9Q,EAAO0B,SAASO,QAAQ6O,EAAM,KACxB,gBASjBA,KAAQ9Q,EAAOpX,OAAS,IACY,IAAlCoX,EAAO0B,SAASS,SAAS2O,GACe,IAAtC9Q,EAAO0B,SAASS,SAAS2O,EAAM,OAElB,QAIqB,IAAlC9Q,EAAO0B,SAASS,SAAS2O,IAA+C,IAAjC9Q,EAAO0B,SAASO,QAAQ6O,KAElD,IAET9Q,EAAOpX,UAIVkoB,IAAKA,EAAKE,aAAcA,UAG9B,gBACE,SAAiB1T,EAAKC,MACvBnR,GAAM,GAAIiR,YAAWC,EAAIuE,WAAatE,EAAIsE,WAAa,MACvD,GAAK,IACL,GAAKvE,EAAI,KACT,GAAKA,EAAI,KACT,GAAKA,EAAI,KACT,GAAK,MACL,GAAK,OAEL0F,GAAS,WAETzS,IAAI,GAAI8M,aAAYC,EAAIuE,aAAe,EAAI,IAAuB,IAAjBvE,EAAIuE,aAAqBmB,MACpE,IACNzS,IAAI+M,EAAK0F,MACH1F,EAAIuE,aAEVmB,GAAU,QAGVzS,IAAI,GAAI8M,aAAYE,EAAIsE,aAAe,EAAI,IAAuB,IAAjBtE,EAAIsE,aAAqBmB,MACpE,IACNzS,IAAIgN,EAAKyF,GACN5W,MAGJqkB,KCvKLe,GAAM,mBACCA,kBACM9kB,eAAezE,KAAMupB,uBAGvB3kB,YAAY2kB,EAAK,WACvB,uBACE,SAAwBC,EAAOC,MACtB,cAAVD,EAAuB,IAEJ,IAAjBC,QACK,IAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,KAChD,IAAqB,IAAjBqU,QACF,IAAIrU,aAAY,GAAM,EAAM,GAAM,IAAM,EAAM,GAAM,EAAM,GAAM,KAClE,IAAqB,IAAjBqU,QACF,IAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,KAC1F,IAAqB,IAAjBqU,QACF,IAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,EAAM,IACxH,IAAqB,IAAjBqU,QACF,IAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,IAC1I,IAAqB,IAAjBqU,QACF,IAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,EAAM,IAAM,EAAM,GAAM,EAAM,UAE1K,IAEgB,IAAjBqU,QAEK,IAAIrU,aAAY,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IACvW,IAAqB,IAAjBqU,QAEF,IAAIrU,aAAY,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IACrW,IAAqB,IAAjBqU,QAEF,IAAIrU,aAAY,EAAK,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,EAAK,EAAK,IAAM,IAAM,GAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,WAGvW,UAGJmU,KCpCL3Z,GAAeqM,GAAOrM,aAGtB8Z,GAAgB,mBACTA,kBACMjlB,eAAezE,KAAM0pB,QAE7BC,aAAe,OACfC,aAAe,OAEfC,oBAAsB,OACtBC,oBAAsB,OAEtBC,iBAAe5pB,QACf6pB,iBAAe7pB,QAEf8pB,qBAAuB,OACvBC,qBAAuB,OAEvBC,kBAAoB,UACpBC,kBAAoB,UAEpBC,2BACAC,2BAEAC,gBAAkB,UAClBC,gBAAkB,UAElBC,eAAiB,OACjBC,eAAiB,sBAGX9lB,YAAY8kB,QAClB,aACE,gBACAiB,OAAO/a,GAAagb,YAAa5qB,KAAK6qB,MAAM9c,KAAK/N,cAGnD,cACE,gBACA2pB,aAAe,UACfC,aAAe,UAEfC,oBAAsB,OACtBC,oBAAsB,OAEtBC,iBAAe5pB,QACf6pB,iBAAe7pB,QAOfoqB,gBAAkB,UAClBC,gBAAkB,UAElBH,2BACAC,6BAGF,cACE,cACDQ,GAAkB9qB,KAAK+qB,iBACvBC,EAAsBF,EAAgBE,oBACtCC,EAAsBH,EAAgBG,yBAErCC,qBAEDlrB,KAAKoqB,wBACFe,qBAAqBnrB,KAAKoX,WAAWlC,KAAMlV,KAAKoX,WAAWmH,SAE9Dve,KAAKmqB,wBACFgB,qBAAqBnrB,KAAKmX,WAAWjC,KAAMlV,KAAKmX,WAAWoH,YAG9D6M,GAAwB1B,EAAc2B,mBAAmBrrB,KAAKoX,WAAWmH,SACzE+M,EAAeF,EAAsBG,QACrCC,EAAkBJ,EAAsBK,UAExCH,KAAiBN,OACdU,qBAAqBF,QAErBG,WAAWV,MAGdW,GAAyBlC,EAAc2B,mBAAmBrrB,KAAKmX,WAAWoH,SAC1EsN,EAAeD,EAAuBL,QACtCO,EAAkBF,EAAuBH,UAEzCI,QACGE,qBAAqBD,QAErBE,WAAWhB,QAGbiB,8BAGF,mBACE,SAAoBC,EAAOC,OAO3B,GANDC,GAAcpsB,KAAKoX,WACnBiV,EAAeD,EAAY7N,QAC3BrJ,EAAOkX,EAAYlX,KAIdpU,EAAI,EAAGJ,EAAM2rB,EAAa1rB,OAAQG,EAAIJ,EAAKI,IAAK,IACnDgS,GAASuZ,EAAavrB,KACnByT,UAAYzB,EAAOwZ,SAGxBpX,EAAKiT,YAAsC,IAAzBjT,EAAKiT,UAAUoE,QAIhCF,GAAiBA,EAAa1rB,QAAWX,KAAKoqB,sBAM/CzW,GAAc0Y,EAAa,MAGH,IAAxBrsB,KAAKyqB,kBACO+B,cAAcH,EAAcrsB,KAAKyqB,gBAG7C9W,EAAY2Y,MAAQtsB,KAAKoqB,kBAAkBkC,MAAQH,GAAqBnsB,KAAKuqB,iBAAmBb,EAAc+C,eAAezsB,KAAKuqB,gBAAgB+B,IAAK3Y,WAElJiW,aADHuC,GAGkBnsB,KAAKuqB,gBAAgB+B,SAGtC7B,eAAiBzqB,KAAK4pB,aAAejW,EAAY2Y,MACxCE,cAAcH,EAAcrsB,KAAKyqB,iBAI7CyB,GAASlsB,KAAKmqB,kBAAmB,IAC/BuC,GAAgB1sB,KAAKoqB,kBAAkB7V,UAEvCoY,EAAMD,GADU1sB,KAAKmqB,kBAAkB5V,WAAavU,KAAKmqB,kBAAkBmC,QAE3EK,EAAM,EAAIzX,EAAKoC,mBAAqBqV,EAAM,GAAKzX,EAAKoC,kBAAmB,KAGpE,GAFDsV,GAAYpY,KAAKC,MAAMkY,EAAMzX,EAAKoC,mBAE7BvO,EAAK,EAAGA,EAAK6jB,EAAW7jB,IAAM,IACjC8jB,GAAoBhnB,OAAOK,UAAWyN,KAExB2Y,IAAMI,GAAiB3jB,EAAK,GAAKmM,EAAKoC,oBACtCwV,IAAMD,EAAkBP,IAAMO,EAAkBE,MAErD1qB,QAAQwqB,QAEhBvC,mBAAmBhoB,UACjBuqB,EAAkBP,SACjBO,EAAkBtV,KAAKqC,kBAG5BwQ,kBAAoBpqB,KAAKsqB,mBAAmB,IAAMtqB,KAAKoqB,sBACnDuC,IAAO,EAAIzX,EAAKoC,yBACpBmT,gBAAkB,EAAIkC,IACbH,cAAcH,GAAe,EAAIM,OAI/CK,GAAgBX,EAAavoB,SAC7BuoB,EAAa1rB,WACF0rB,EAAa1rB,OAAS,GAAG6J,SAAWwiB,EAAcV,IAAMD,EAAaA,EAAa1rB,OAAS,GAAG2rB,KAGzGtsB,KAAKuqB,gBAAiB,IACpBA,GAAkBvqB,KAAKuqB,kBACX/f,SAAWmJ,EAAY2Y,IAAM/B,EAAgB+B,MAChDjqB,QAAQrC,KAAKuqB,sBAGvBA,gBAAkByC,OAElB5V,WAAWmH,QAAU8N,UAGvB,mBACE,SAAoBH,EAAOC,MAC5Bc,GAAcjtB,KAAKmX,WACnB+V,EAAeD,EAAY1O,QAC3BrJ,EAAO+X,EAAY/X,QAGlBgY,GAAiBA,EAAavsB,YAK9B,GAAIG,GAAI,EAAGJ,EAAMwsB,EAAavsB,OAAQG,EAAIJ,EAAKI,IAAK,IACnDgS,GAASoa,EAAapsB,KACnByT,UAAYzB,EAAOwZ,OAKxBa,GAAaD,EAAavsB,OAC1BysB,EAAc7D,GAAI8D,eAAenY,EAAKsU,MAAOtU,EAAKuU,cAElD9V,EAAc3T,KAAKmqB,kBAEnBmD,EAAeJ,EAAa,MAGJ,IAAxBltB,KAAK0qB,kBACO8B,cAAcU,EAAcltB,KAAK0qB,gBAG7C4C,EAAahB,MAAQtsB,KAAKmqB,kBAAkBmC,MAAQH,GAAqBzC,EAAc+C,eAAezsB,KAAK2pB,aAAc2D,MACvHnB,SACGxC,aAAewC,QAEjBzB,eAAiB1qB,KAAK2pB,aAAe2D,EAAahB,MACzCE,cAAcU,EAAcltB,KAAK0qB,iBAG7C1qB,KAAKoqB,mBAAqB8B,EAAO,IAC/BqB,GAAgBvtB,KAAKoqB,kBAAkB7V,WAAavU,KAAKoqB,kBAAkBkC,IAC3EkB,EAAO7Z,EAAY2Y,IAAMiB,KACzBC,EAAOtY,EAAKoC,mBAAqBkW,EAAO,GAAKtY,EAAKoC,kBAAmB,KAGlE,GAFDmW,GAAoBjZ,KAAKC,OAAOd,EAAY2Y,IAAMiB,GAAiBrY,EAAKoC,mBAEnEoW,EAAM,EAAGA,EAAMD,EAAmBC,IAAO,IAC5CC,SACIP,WACIA,EAAYxT,eACjBjG,EAAY2Y,KAAOoB,EAAM,GAAKxY,EAAKoC,2BAC9B,KAGCjV,QAAQsrB,QAEhBtD,mBAAmB/nB,UACjBqrB,EAAarB,SACZqB,EAAapW,KAAKqC,kBAGvBuQ,kBAAoBnqB,KAAKqqB,mBAAmB,IAAMrqB,KAAKmqB,sBACnDqD,IAAQ,EAAItY,EAAKoC,yBACrBoT,gBAAkB,EAAI8C,IACbhB,cAAcU,GAAe,EAAIM,OAI/Cb,OAAM,GACNiB,EAAWV,EAAa,GAAGZ,OAE3BtsB,KAAK2pB,aAAc,GAGfiE,EAAW5tB,KAAK2pB,gBAClBkE,GAASrZ,KAAKsZ,IAAInB,MAElBkB,EAAS3Y,EAAKoC,mBAAoC,IAAf6V,GAAiD,IAA7BntB,KAAK6pB,wBACzDkE,2BAAyB5tB,IAG5BwsB,EAAM,EAAIzX,EAAKoC,mBAAqBqV,EAAM,GAAKzX,EAAKoC,qBACnC,IAAf6V,GAAiD,IAA7BntB,KAAK6pB,sBAEtBkE,2BAAyD5tB,KAAhC+U,EAAK6Y,uBAAuC7Y,EAAK6Y,uBAAyBpB,EAAMzX,EAAKoC,kBAAoBqV,WAIlI,GAFDqB,GAAmBxZ,KAAKC,MAAMkY,EAAMzX,EAAKoC,mBAEpC2W,EAAM,EAAGA,EAAMD,EAAkBC,IAAO,IAC3CC,GAAWN,GAAYK,EAAM,GAAK/Y,EAAKoC,kBACvC6W,EAAgBtoB,OAAOK,UAAWgnB,EAAa,QAC5CgB,EAAWluB,KAAK2pB,aAAeuE,EAAWluB,KAAK2pB,oBAGjDU,mBAAmB/nB,UACjB6rB,EAAc7B,SACb6B,EAAc5W,KAAKqC,kBAEtBzC,WAAWoH,QAAQlc,QAAQ8rB,OAG3BN,IAAU3Y,EAAKoC,mBAAqBuW,EAAS,KAGzC,GAAGvB,IAAMtsB,KAAK2pB,eACd,GAAGmD,IAAM9sB,KAAK2pB,cAClBgD,EAAM,KACDH,cAAcU,GAAe,EAAIP,MAG/CyB,GAAgBlB,EAAaA,EAAavsB,OAAS,GAAG4T,UACtD8Z,EAAUnB,EAAaA,EAAavsB,OAAS,GAAG2rB,IAChDgC,EAAqBpB,EAAavsB,QAAU,EAAIytB,EAAgBlB,EAAaA,EAAavsB,OAAS,GAAG4T,UAAYW,EAAKoC,uBAEtHuS,oBAAsBsD,OACtBxD,aAAezU,EAAK6Y,uBAAyBM,EAAUnZ,EAAK6Y,uBAAyBM,EAAUC,OAC/FtE,aAAeqE,IAEPnB,EAAavsB,OAAS,GAAG6J,SAAW8jB,MAG5C,GAAIC,GAAM,EAAGrhB,EAAOggB,EAAavsB,OAAQ4tB,EAAMrhB,EAAMqhB,IAAO,IAC3DC,GAAUtB,EAAaqB,GACvBtlB,EAAOikB,EAAaqB,EAAM,OAEzBtlB,WAIDuB,GAAWvB,EAAKqjB,IAAMkC,EAAQlC,MACrBiC,GAAK/jB,SAAWA,OAyB1B2M,WAAWoH,QAAUmL,EAAc+E,iBAAiBvB,WAGtD,6BACE,SAA8BwB,MAC/BC,GAAe3uB,KAAKoX,WACpBmH,EAAUoQ,EAAapQ,QACvBrJ,EAAOyZ,EAAazZ,KAEpB0Z,EAAwB,IAAdF,EAAkB1uB,KAAKuqB,gBAAkBvqB,KAAKuqB,gBAAgB+B,IAAMtsB,KAAK6uB,qBAAqBtQ,EAAQ,IAAMA,EAAQmQ,EAAY,GAAGpC,IAC7IwC,EAASvQ,EAAQmQ,GAAWpC,OACf9X,KAAKsZ,IAAIc,EAAUE,IAAW,UAGxCvQ,GAAQmQ,GAAWxM,UAKdwM,GAAWxM,QAAQ6M,YAAa,IAJhCL,GAAWxM,qBACL,GAKTliB,KAAK2rB,YAAW,QAGpBxpB,KAAKyN,GAAaof,uCAClBvE,eAAiB,KAClBwE,GAAmB1Q,EAAQa,MAAM,EAAGsP,GACpCQ,EAAoB3Q,EAAQa,MAAMsP,GAClC/a,EAAc4K,EAAQ,GAEtB4N,MAAoB,EAEpBxY,GAAYuO,SAAWvO,EAAYuO,QAAQ7P,QACzBsB,EAAYuO,SAAWvO,EAAYuO,QAAQ7P,MAAQsB,EAAYuO,QAAQ7P,MAAQ,KAC1FrS,KAAKuqB,oBACMvqB,KAAKuqB,gBAAgB+B,IAAMtsB,KAAKmvB,QAAUja,EAAKoC,wBAGhEF,WAAWmH,QAAUA,EAAQa,MAAM,EAAGsP,QAEtC/C,YAAW,QAEXvU,WAAWmH,QAAUA,EAAQa,MAAMsP,QAEnC/C,YAAW,EAAOQ,QAElB/U,WAAWmH,QAAU0Q,EAAiBtgB,OAAOugB,UAG/C,6BACE,SAA8BR,MAC/BU,GAAepvB,KAAKmX,WACpBoH,EAAU6Q,EAAa7Q,QACvBrJ,EAAOka,EAAala,KAGpB0Z,EAAwB,IAAdF,EAAkB1uB,KAAK6uB,qBAAqBtQ,EAAQ,IAAMA,EAAQmQ,EAAY,GAAGpC,IAC3FwC,EAASvQ,EAAQmQ,GAAWpC,OACf9X,KAAKsZ,IAAIc,EAAUE,IAAW,UAGxCvQ,GAAQmQ,GAAWxM,UAKdwM,GAAWxM,QAAQ6M,YAAa,IAJhCL,GAAWxM,qBACL,GAKTliB,KAAKgsB,YAAW,QAEpB7pB,KAAKyN,GAAaof,uCAClBtE,eAAiB,KAElBuE,GAAmB1Q,EAAQa,MAAM,EAAGsP,GACpCQ,EAAoB3Q,EAAQa,MAAMsP,GAClC/a,EAAc4K,EAAQ,GAEtB4N,MAAoB,KACpBxY,EAAYuO,SAAWvO,EAAYuO,QAAQ7P,MACzBsB,EAAYuO,SAAWvO,EAAYuO,QAAQ7P,MAAQsB,EAAYuO,QAAQ7P,MAAQ,KAE/ErS,KAAKgqB,aAAehqB,KAAKmvB,QAAUja,EAAKoC,uBAGzDH,WAAWoH,QAAU0Q,OAErBjD,YAAW,QAEX7U,WAAWoH,QAAU2Q,OAErBlD,YAAW,EAAOG,QAElBhV,WAAWoH,QAAU0Q,EAAiBtgB,OAAOugB,UAG/C,uBACE,cAED7C,GAAersB,KAAKoX,WAAWmH,QAC/B2O,EAAeltB,KAAKmX,WAAWoH,QAG/B0M,GAAsB,EACtBD,GAAsB,SAErBhrB,KAAKoqB,mBAAqBiC,EAAa1rB,cACrCypB,kBAAoBV,EAAc2F,qBAAqBhD,QACvDJ,0BACiB,IAGnBjsB,KAAKmqB,mBAAqB+C,EAAavsB,cACrCwpB,kBAAoBT,EAAc4F,qBAAqBpC,QACvDjB,0BACiB,wBAIDhB,sBACAD,UASpB,6BACE,SAA8B9V,EAAMqJ,MACrCgR,GAAwB,UAAdra,EAAKxT,KACf8tB,EAAkBD,EAAUvvB,KAAKkqB,qBAAuBlqB,KAAKiqB,qBAC7D2D,EAAW2B,EAAUvvB,KAAKoqB,kBAAkBkC,IAAMtsB,KAAKmqB,kBAAkBmC,IACzEmD,EAAqBF,EAAUvvB,KAAKsqB,mBAAmB3pB,OAASX,KAAKqqB,mBAAmB1pB,WAEvFuU,EAAKoC,mBAAqBpC,EAAKoC,mBAAqB,GAAKoY,OAAOpkB,MAAM4J,EAAKoC,uBAC1EiH,EAAQ5d,QAAU,EAAG,IACnB0tB,GAAU9P,EAAQA,EAAQ5d,OAAS,GAAG2rB,MAErChV,kBAAoB9C,KAAKC,OAAO4Z,EAAUT,IAAa4B,EAAkBC,EAAqB,SAEhG,IAAIva,EAAKoC,mBACViH,EAAQ5d,QAAU,EAAG,IAGnBgvB,IAFWpR,EAAQA,EAAQ5d,OAAS,GAAG2rB,IAC3B/N,EAAQ,GAAG+N,MACiB/N,EAAQ5d,OAAS,EACzDgvB,GAAc,GAAKA,EAAc,QAC9BrY,kBAAoB9C,KAAKC,MAAMD,KAAKsZ,IAAI5Y,EAAKoC,kBAAoBqY,IAAgB,EAAIza,EAAKoC,kBAAoBqY,YAWtH,2BACE,cACDxY,GAAanX,KAAKmX,WAClBC,EAAapX,KAAKoX,gBAGjB6S,sBAAwB9S,EAAWoH,QAAQ5d,YAC3CupB,sBAAwB9S,EAAWmH,QAAQ5d,cAQ7C,6BACE,cACDypB,GAAoBpqB,KAAKoqB,kBACzBD,EAAoBnqB,KAAKmqB,iBAGzBA,UACGhT,WAAWoH,QAAUve,KAAKmX,WAAWoH,QAAQpN,OAAO,SAAU2B,EAAQnP,SACrEmP,KAAWqX,GAGRrX,EAAOwZ,IAAMnC,EAAkBmC,OAItClC,SACGhT,WAAWmH,QAAUve,KAAKoX,WAAWmH,QAAQpN,OAAO,SAAU2B,EAAQnP,SACrEmP,KAAWsX,GAGRtX,EAAOwZ,IAAMlC,EAAkBkC,cAKvC,6BACE,SAA8BxZ,SAC/BA,GAAOoP,SAAWpP,EAAOoP,QAAQ7P,MAC5BS,EAAOoP,QAAQ7P,MAAQrS,KAAKmvB,QAE9BS,EAAAA,SAGJ,aACA,iBACI5vB,MAAKqO,SAAS0I,YAAY,iBAG9B,iBACA,iBACC/W,MAAKgX,QAAUhX,KAAKgX,OAAOG,WACtBnX,KAAKgX,OAAOG,uCAQlB,iBACA,iBACCnX,MAAKgX,QAAUhX,KAAKgX,OAAOI,WACtBpX,KAAKgX,OAAOI,uCAQlB,cACA,cACCyY,GAAU7vB,KAAKqO,SAAS0I,YAAY,qBACpC8Y,GACKA,EAAQC,SAEV,WAGJ,yBACE,SAA0BvR,SACR,KAAnBA,EAAQ5d,OACH4d,EAGFA,EAAQwR,KAAK,SAAU3iB,EAAGC,SACxBD,GAAEkf,IAAMjf,EAAEif,aAUhB,6BACE,SAA8B/N,SAC9BA,IAA8B,IAAnBA,EAAQ5d,OAIjB+oB,EAAc+E,iBAAiBlQ,GAAS,GAHtC,YAMN,6BACE,SAA8BA,OAC9BA,EAAQ5d,aACJ,UAOJ,GAJDqvB,GAASzR,EAAQwR,KAAK,SAAU3iB,EAAGC,SAC9BD,GAAEkf,IAAMjf,EAAEif,MAGVxrB,EAAI,EAAGJ,EAAMsvB,EAAOrvB,OAAQG,EAAIJ,EAAKI,OACxCkvB,EAAOlvB,GAAGmvB,iBACLD,GAAOlvB,UAKf,uBACE,SAAwBovB,EAASvc,MACtB,OAAZuc,MAGApB,GAASnb,EAAY2Y,KAAO,EAC5B6D,EAAQD,EAAUpB,GAAU,KAAQA,EAASoB,GAAW,IACxDE,EAAQzc,EAAYuO,SAAWvO,EAAYuO,QAAQmO,kBAEhDF,IAASC,UAGb,sBACE,SAAuB7R,EAASoO,OAEhC,GAAI7rB,GAAI,EAAGJ,EAAM6d,EAAQ5d,OAAQG,EAAIJ,EAAKI,IAAK,IAC9CgS,GAASyL,EAAQzd,KACdwrB,KAAOK,EACV7Z,EAAOga,QACFA,KAAOH,WAUf,2BACE,SAA4BpO,OAG5B,GAFDgN,IAAU,EACVE,GAAc,EACT3qB,EAAI,EAAGJ,EAAM6d,EAAQ5d,OAAQG,EAAIJ,EAAKI,OACzCyd,EAAQzd,GAAGohB,SAAW3D,EAAQzd,GAAGohB,QAAQhN,KAAM,IACvC,IACGpU,uBAMNyqB,aACGE,OAIX/B,KC7pBElB,GAAU8H,GACVjH,GAAYkH,GACZ7G,GAAgB8G,GCHrBC,iFACS1qB,SACJyV,IAAOkV,YAAY3qB,mCAEZ8T,EAAMnX,UACdqV,GAAS,GAAIyD,uBADUmV,4DAEtBC,eAAMH,EAAK5W,KAAKA,GAAO4W,EAAK/uB,KAAKgB,WAAUiuB,IAC3C5Y,EAAOA,yCAEE8Y,EAASC,SAClB,IAAI1b,aACTyb,EACCC,GAAQ,GAAM,IACdA,GAAQ,EAAK,IACP,IAAPA,yCAIKL,GAAKM,QAAQ,GAAI,OAAQ,GAAI3b,aAClC,IAAM,IAAM,IAAM,MACb,EAAK,EAAM,MACV,IAAM,IAAM,OACZ,IAAM,GAAM,yCAGP1T,KAAAA,KAAMwT,IAAAA,KACf2E,EAAO,EACPmX,EAAOP,EAAKO,KAAK9b,EAAK1K,SAAU0K,EAAKqT,WACrC0I,WAES,UAATvvB,EACK+uB,EAAKS,UAAUhc,GAEfub,EAAKU,UAAUjc,MAGpBkc,GAAOX,EAAKW,KAAKlc,EAAK1K,SAAU0K,EAAKqT,WAAa,IAAMrT,EAAKmJ,WAChE2S,EAAMC,EAAMG,GAAM7hB,QAAQ,eACjBkM,EAAK7B,aAER6W,EAAKM,QAAQlX,EAAM,OAAQmX,EAAMC,EAAMG,gCAEnC5mB,MAAU+d,0DAAY,IAE7B8I,EAAQ,GAAIjc,aACd,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,MAKH,GAAM,IACpBmT,IAAc,GAAM,IACpBA,IAAc,EAAK,IACN,IAAbA,MAMa,GAAM,IACnB/d,IAAa,GAAM,IACnBA,IAAa,EAAK,IACN,IAAZA,EACD,EAAM,EAAM,EAAM,IAKZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,MACZ,IAAM,IAAM,YAEbimB,GAAKM,QAAQ,EAAIM,EAAM1wB,OAAQ,OAAQ,GAAIyU,YAAWic,sCAE7C9Z,MACZsC,GAAO,EAEPyX,EAAOb,EAAKa,SACV,WACM/Z,EAAK/M,mBACJ+M,EAAKgR,WAAa,UACtBhR,EAAKmQ,oBACJnQ,EAAKqQ,mBACP,UAEJ2J,EAAOd,EAAKc,WACR,kBACKha,EAAKgR,WAAa,aACnBhR,EAAK/M,cACT+M,EAAKia,cACDja,EAAK0Q,eACR1Q,EAAKmQ,oBACJnQ,EAAKqQ,uBAEd0J,EAAMC,GAAMhiB,QAAQ,eACXkM,EAAK7B,aAER6W,EAAKM,QAAQlX,EAAM,OAAQyX,EAAMC,qCAExBha,MACZsC,GAAO,EACPyX,EAAOb,EAAKa,SACV,WACM/Z,EAAK/M,mBACJ+M,EAAKgR,WAAa,UACtB,SACC,OACF,UAEJgJ,EAAOd,EAAKc,WACR,kBACKha,EAAKgR,WAAa,aACnBhR,EAAK/M,sBACD+M,EAAKkS,wBACPlS,EAAKka,kBACTla,EAAK9J,gBAEd6jB,EAAMC,GAAMhiB,QAAQ,eACXkM,EAAK7B,aAER6W,EAAKM,QAAQlX,EAAM,OAAQyX,EAAMC,gCAE7Bha,MACP8G,GAAK9G,EAAK8G,GACV7T,EAAW+M,EAAK/M,SAChB+c,EAAQhQ,EAAKgQ,MACbE,EAASlQ,EAAKkQ,OACdkJ,EAAU,GAAIvb,aAChB,EAAM,EAAM,EAAM,IAMZ,EAAM,EAAM,IACZ,EAAM,EAAM,MACV,GAAM,QACN,GAAM,IACbiJ,IAAO,EAAK,IACN,IAANA,EACD,EAAM,EAAM,EAAM,MACJ,GAAM,QACN,GAAM,IACnB7T,IAAa,EAAK,IACN,IAAZA,EACD,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,GAAM,EAAM,EAAM,MACP,EAAK,IACN,MACV,EAAM,EACLid,IAAW,EAAK,IACN,MACX,EAAM,UAEDgJ,GAAKM,QAAQ,EAAIJ,EAAQ/W,WAAY,OAAQ+W,gCAEzCpZ,MACPQ,GAAS,GAAIyD,IACbhR,EAAW+M,EAAK/M,SAChBknB,EAAYna,EAAKma,mBACdd,MAAMH,EAAK5W,KAAK,IAAK4W,EAAK/uB,KAAK,WAE/BkvB,MAAMH,EAAK5W,KAAK,IAAK4W,EAAK/uB,KAAK,WAC/BkvB,MAAM,GAAIxb,aACf,EAAM,EAAM,EAAM,KACL,GAAM,IAAO5K,GAAY,GAAM,IAAOA,GAAY,EAAK,IAAiB,IAAXA,EACzEknB,GAAa,GAAM,IAAOA,GAAa,GAAM,IAAOA,GAAa,EAAK,IAAkB,IAAZA,EAC7E,EAAM,EAAM,EAAM,KAEb3Z,EAAOA,oCAEHR,MACPsC,GAAO,EACP8X,EAAOlB,EAAKkB,KAAKpa,EAAKgR,UAAWhR,EAAK/M,UACtConB,EAAOnB,EAAKmB,KAAKra,EAAK7V,MACtBmwB,EAAOpB,EAAKoB,KAAKta,UACpBoa,EAAMC,EAAMC,GAAMtiB,QAAQ,eACjBkM,EAAK7B,aAER6W,EAAKM,QAAQlX,EAAM,OAAQ8X,EAAMC,EAAMC,qCAEnCtJ,0DAAY,IAAM/d,eACzBmmB,EAAU,GAAIvb,aAChB,EAAM,EAAM,EAAM,IACZ,EAAM,EAAM,MACH,GAAM,QACN,GAAM,IACpBmT,IAAc,EAAK,IACN,IAAbA,EACA/d,IAAa,GAAM,QACN,GAAM,IACnBA,IAAa,EAAK,IACN,IAAZA,EACD,GAAM,MACA,UAEDimB,GAAKM,QAAQ,GAAKJ,EAAQ/W,WAAY,OAAQ6W,EAAKqB,UAAU,EAAG,GAAInB,gCAEhEjvB,MACPqE,IAAS,IACL,EAAM,IACN,EAAM,EAAM,MACZ,IAAM,IAAM,MACZ,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,KACZ,IAAM,IAAM,IAClB,IAAM,GAAM,GAAM,IAClB,IAAM,IAAM,IAAM,IAAM,SAEb,UAATrE,MACIoT,gBAAO,EAAG,WAAO,IAAM,IAAM,IAAM,SACnCA,gBAAO,GAAI,YAAQ,GAAM,IAAM,IAAM,IACzC,IAAM,GAAM,GAAM,IAClB,IAAM,IAAM,IAAM,IAAM,MAErB2b,EAAKM,QAAQ,EAAIhrB,EAAMpF,OAAQ,OAAQ,GAAIyU,YAAWrP,iCAElDwR,MACPsC,GAAO,EACPkY,EAAqB,UAAdxa,EAAK7V,KAAmB+uB,EAAKsB,OAAStB,EAAKuB,OAClDC,EAAOxB,EAAKwB,OACZC,EAAOzB,EAAKyB,KAAK3a,UACpBwa,EAAME,EAAMC,GAAM3iB,QAAQ,eACjBkM,EAAK7B,aAER6W,EAAKM,QAAQlX,EAAM,OAAQkY,EAAME,EAAMC,wCAGvCzB,GAAKM,QAAQ,GAAI,OAAQ,GAAI3b,aAClC,IACM,EAAM,IACN,IACA,EACN,EAAM,EACN,EAAM,0CAIDqb,GAAKM,QAAQ,GAAI,OAAQ,GAAI3b,aAClC,IACM,EAAM,IACN,IACA,uCAIJ2C,GAAS,GAAIyD,IACb2W,GAAQ,IACJ,EAAM,IACN,EAAM,EAAM,IACZ,EAAM,EAAM,OACZ,IAAM,IAAM,OAEZ,EAAM,YAEPvB,MAAMH,EAAK5W,KAAK,IAAK4W,EAAK/uB,KAAK,QAAS+uB,EAAK5W,KAAK,IAAK4W,EAAK/uB,KAAK,QAAS,GAAI0T,YAAW+c,IACzFpa,EAAOA,oCAEHR,MACPsC,GAAO,EACPuY,EAAO3B,EAAK2B,KAAK7a,GACjB8a,EAAO5B,EAAK4B,OACZC,EAAO7B,EAAK6B,OACZC,EAAO9B,EAAK8B,OACZC,EAAO/B,EAAK+B,cACfJ,EAAMC,EAAMC,EAAMC,EAAMC,GAAMjjB,QAAQ,eAC7BkM,EAAK7B,aAER6W,EAAKM,QAAQlX,EAAM,OAAQuY,EAAMC,EAAMC,EAAMC,EAAMC,gCAE/Cjb,MACPoZ,mBACc,UAAdpZ,EAAK7V,KAOG+uB,EAAKgC,KAAKlb,GAEVkZ,EAAKiC,KAAKnb,GAEfkZ,EAAKM,QAAQ,GAAKJ,EAAQ/W,WAAY,OAAQ6W,EAAKqB,UAAU,EAAG,GAAI,GAAI1c,aAAY,EAAM,EAAM,EAAM,IAAQub,gCAE1GpZ,MACPoZ,GAAU,GAAIvb,aAChB,EAAM,EAAM,IACN,EAAM,IACN,IACA,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,IACZmC,EAAKkS,eACL,KACA,EAAM,EAAM,IACZkJ,YAAc,EAAK,IACP,IAAlBpb,EAAKob,aACC,IAEJC,EAAOnC,EAAKmC,KAAKrb,EAAK9J,cACnBgjB,GAAKM,QAAQ,EAAIJ,EAAQ/W,WAAagZ,EAAKhZ,WAAY,OAAQ+W,EAASiC,qCAEpEnlB,2DAAU,GAAI,IAAK,EAAG,GAC3BolB,EAAYplB,EAAO9M,OACrBoX,EAAS,GAAIyD,IACbmV,EAAU,GAAIvb,aAChB,IACM,EAAM,OAGLyd,IACD,SAICA,UAGD,EAAM,IACN,EAAM,EAAM,IACZ,EAAM,EAAM,KAGlBlkB,QAAQkkB,IAAYlkB,OAAOlB,GAAQkB,QAAQ,EAAM,EAAM,cAClDiiB,MAAMH,EAAK5W,KAAK,EAAI8W,EAAQ/W,YAAa6W,EAAK/uB,KAAK,QAASivB,GAC5D5Y,EAAOA,oCAEHR,MACPQ,GAAS,GAAIyD,IAIb+L,EAAQhQ,EAAKgQ,MACbE,EAASlQ,EAAKkQ,OACdqL,EAAWvb,EAAK0Q,SAASR,OACzBsL,EAAWxb,EAAK0Q,SAASV,MAYzBiK,EAAOja,EAAKia,KACZkB,EAAO,GAAItd,aACb,EAAM,EAAM,IACN,EAAM,IACN,IACA,IACA,IACA,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,KACR,EAAK,IACP,IAARmS,KACW,EAAK,IACP,IAATE,IACM,GAAM,EAAM,IACZ,GAAM,EAAM,IACZ,EAAM,EAAM,IACZ,KAEN,IAAM,GAAM,IAAM,QACZ,IAAM,IAAM,IAClB,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,IAAM,GAClB,IAAM,IAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,EAAM,EAClB,EAAM,EAAM,IACN,MACA,KACJuL,EAAO,GAAI5d,aACb,EAAM,GAAM,IAAM,MACZ,GAAM,IAAM,MACZ,GAAM,IAAM,MAEhB6d,EAAO,GAAI7d,aACZ0d,GAAY,MACA,GAAM,IAClBA,GAAY,EAAK,IACP,IAAXA,EACCC,GAAY,MACA,GAAM,IAClBA,GAAY,EAAK,IACP,IAAXA,aAGKnC,MACLH,EAAK5W,KAhEI,GAgEQ6Y,EAAK9Y,WAAa4X,EAAK5X,WAAaoZ,EAAKpZ,YAAa6W,EAAK/uB,KAAK,QAASgxB,EAC1FjC,EAAK5W,KAAK,EAAI2X,EAAK5X,YAAa6W,EAAK/uB,KAAK,QAAS8vB,EACnDf,EAAK5W,KAAK,IAAK4W,EAAK/uB,KAAK,QAASsxB,EAClCvC,EAAK5W,KAAK,IAAK4W,EAAK/uB,KAAK,QAASuxB,GAE7Blb,EAAOA,yCAGV4Y,GAAU,GAAIvb,aAChB,IACM,EAAM,IACN,EAAM,EAAM,UAEbqb,GAAKM,QAAQ,GAAI,OAAQJ,qCAG5BA,GAAU,GAAIvb,aAChB,IACM,EAAM,IACN,EAAM,EAAM,UAEbqb,GAAKM,QAAQ,GAAI,OAAQJ,qCAG5BA,GAAU,GAAIvb,aAChB,IACM,EAAM,IACN,EAAM,EAAM,UAEbqb,GAAKM,QAAQ,GAAI,OAAQJ,qCAG5BA,GAAU,GAAIvb,aAChB,IACM,EAAM,IACN,EAAM,EAAM,IACZ,EAAM,EAAM,UAEbqb,GAAKM,QAAQ,GAAI,OAAQJ,gCAErBnmB,MAA4B0oB,gBACnCnb,EAAS,GAAIyD,IACb2X,EAAO3X,GAAOkV,YAAYlmB,YACvBomB,MAAMH,EAAK5W,KAAK,IAAK4W,EAAK/uB,KAAK,QAAS+uB,EAAK5W,KAAK,IAAK4W,EAAK/uB,KAAK,QAAS+uB,EAAKqB,UAAU,EAAG,GAAIqB,EAAM1C,EAAK2C,KAAKF,IAChHnb,EAAOA,oCAEHsG,MACPsS,GAAU,GAAIvb,aAChB,IACM,EAAM,KACL,GACNiJ,GAAM,GAAM,IACZA,GAAM,EAAK,IACN,IAALA,IACK,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,IACZ,EAAM,EAAM,UAEboS,GAAKM,QAAQ,EAAIJ,EAAQ/W,WAAY,OAAQ+W,gCAEzCpZ,MACPsC,GAAO,EACPwZ,EAAO5C,EAAK4C,OACZC,EAAO7C,EAAK6C,KAAK/b,UACpB8b,EAAMC,GAAM/jB,QAAQ,eACXkM,EAAK7B,aAER6W,EAAKM,QAAQlX,EAAM,OAAQwZ,EAAMC,qCAGpC3C,GAAUnV,GAAOkV,YAAYD,EAAK8C,mBACjCA,UAAY,EACV9C,EAAKM,QAAQ,GAAI,OAAQN,EAAKqB,UAAU,EAAG,GAAInB,gCAE3CpZ,MACPsC,GAAO,EACP2Z,EAAO/C,EAAK+C,KAAKjc,EAAK8G,IACtBoV,EAAOhD,EAAKgD,KAAKlc,EAAKmc,MACtBC,EAAOlD,EAAKkD,KAAKpc,GACjBqc,EAAOnD,EAAKmD,KAAKrc,EAAMoc,EAAK/Z,mBAE/B4Z,EAAMC,EAAMG,EAAMD,GAAMpkB,QAAQ,eACvBkM,EAAK7B,aAER6W,EAAKM,QAAQlX,EAAM,OAAQ2Z,EAAMC,EAAMG,EAAMD,gCAEzCtV,MACPsS,GAAUnV,GAAOkV,YAAYrS,SAC1BoS,GAAKM,QAAQ,GAAI,OAAQN,EAAKqB,UAAU,EAAG,GAAInB,gCAE3C+C,SAGJjD,GAAKM,QAAQ,GAAI,OAAQN,EAAKqB,UAAU,EAAG,GAAItW,GAAOkV,YAAYgD,iCAE9Dnc,EAAMsc,MAGb9b,GAAS,GAAIyD,IACbsY,EAActY,GAAOkV,YAAYnZ,EAAKgH,QAAQ5d,QAW9Coa,EAASS,GAAOkV,YAAY,GAAwC,GAAKnZ,EAAKgH,QAAQ5d,OAASkzB,YAC5FjD,MAAMH,EAAK5W,KAAK,GAAK,GAAKtC,EAAKgH,QAAQ5d,QAAS8vB,EAAK/uB,KAAK,QAAS,GAAI0T,aAAY,EAAM,EAAM,GAAM,IAAQ0e,EAAa/Y,KAY5HwD,QAAQhP,QAAQ,SAACkM,MACdsY,GAAQtY,EAAKsY,QAGZnD,MAAM,GAAIxb,aACdqG,EAAKjR,WAAa,GAAM,MACnBA,WAAa,GAAM,IACxBiR,EAAKjR,WAAa,EAAK,IACN,IAAjBiR,EAAKjR,SACLiR,EAAK5B,OAAS,GAAM,MACfA,OAAS,GAAM,IACpB4B,EAAK5B,OAAS,EAAK,IACN,IAAb4B,EAAK5B,KACLka,EAAMC,WAAa,EAAKD,EAAME,YACxBC,cAAgB,EAAMH,EAAMI,eAAiB,EAAKJ,EAAMK,UAC/D,EAAM,IACArH,MAAQ,GAAM,MACdA,MAAQ,GAAM,IACnBtR,EAAKsR,MAAQ,EAAK,IACN,IAAZtR,EAAKsR,SAKHhV,EAAOA,oCAEHR,MACPQ,GAAS,GAAIyD,aACVoV,MAAMH,EAAK5W,KAAK,GAAKtC,EAAKgH,QAAQ5d,QAAS8vB,EAAK/uB,KAAK,QAAS+uB,EAAKqB,UAAU,EAAG,MAClFvT,QAAQhP,QAAQ,eACbwkB,GAAQtY,EAAKsY,MACbhY,EAAOgY,EAAMC,WAAa,IACvBC,WAAa,IACbC,cAAgB,IAChBC,gBAEFvD,MAAM,GAAIxb,aAAY2G,OAExBhE,EAAOA,oCAEHR,MACPQ,GAAS,GAAIyD,IACb3B,EAAO,IACN0E,QAAQhP,QAAQ,eACXkM,EAAK5B,SAER+W,MAAMH,EAAK5W,KAAKA,GAAO4W,EAAK/uB,KAAK,YACpC2yB,GAAU,GAAIjf,YAAWyE,GACzBkB,EAAS,WACLzS,IAAIyP,EAAOA,OAAQgD,MACjB,IACLwD,QAAQhP,QAAQ,cACdwI,OAAOxI,QAAQ,SAAC0Z,KACX3gB,IAAI2gB,EAAMlO,MACRkO,EAAKrP,eAIZya,UAGX5D,IAAK/uB,KAAO,SAACgB,SACJ,IAAI0S,aAAY1S,EAAK4xB,WAAW,GAAI5xB,EAAK4xB,WAAW,GAAI5xB,EAAK4xB,WAAW,GAAI5xB,EAAK4xB,WAAW,MAErG7D,GAAK8C,SAAW,CC9lBhB,IAAM3jB,IAAeqM,GAAOrM,aAEP2kB,8BACNC,0DAAU,iBAChB1E,SAAqB,IAAV0E,OACXC,kBAAmB,OACnBC,kBAAoB,GAAIliB,IAAiB,cACzCmiB,kBAAoB,GAAIniB,IAAiB,YACvCoiB,GAAWnkB,GAAXmkB,aACFC,kBAAgC,OAAZD,OAEpBE,cAAe,OACfC,cAAe,OAEfC,iBAAmB,OACnBC,iBAAmB,gDAInBlpB,GAAG6D,GAAagb,YAAa5qB,KAAKk1B,MAAMnnB,KAAK/N,YAC7C+L,GAAG6D,GAAaulB,eAAgBn1B,KAAKo1B,gBAAgBrnB,KAAK/N,YAC1D+L,GAAG6D,GAAaylB,qBAAsBr1B,KAAKs1B,aAAavnB,KAAK/N,8CAI7D8vB,UAAY,OACZyF,gBAAiB,OACjBb,kBAAkBjV,aAClBkV,kBAAkBlV,aAClBiV,kBAAoB,UACpBC,kBAAoB,2CAIU30B,KAAKqO,SAAS0I,YAAY,UAArDI,IAAAA,WAAYC,IAAAA,YACnBpX,KAAKy0B,kBAAoBz0B,KAAKw1B,YAAYre,EAAYC,QAElDqe,YAAYre,QACZse,YAAYve,+CAKZ2Y,SAAW,OACXyF,gBAAiB,sCAIjBb,kBAAkBjV,aAClBkV,kBAAkBlV,gDAGR/d,MACXuV,YAES,UAATvV,EACqB1B,KAAKqO,SAAS0I,YAAY,UAAzCI,WAGenX,KAAKqO,SAAS0I,YAAY,UAAzCK,cAINue,GAAkB31B,KAAKqO,SAAS0I,YAAY,qBAC5C5Q,EAASwvB,EAAgBC,UAAUl0B,EAClCyE,OACMwvB,EAAgBE,aAAan0B,MAGjCgW,SAAWT,EAAM/B,KAAKsU,QACtB1pB,KAAOE,KAAK81B,iBAAiBp0B,EAAMuV,EAAM/B,WAI3C/S,KAAKyN,GAAammB,aAAcr0B,4CAGrBA,EAAMwT,MAClB8gB,GAAc,GAAIxa,IAClBya,EAAOxF,GAAKwF,OACZC,EAAOzF,GAAKyF,MAAOx0B,OAAMwT,KAAMA,aAEvB0b,MAAMqF,EAAMC,GACjBF,sCAGI7e,EAAYC,OAClBD,GAAcC,EAAWmH,QAAQ5d,aAC7ByW,GAAWmH,QAAQ,GAAG+N,OAG1BnV,EAAWoH,QAAQ5d,QAAWyW,EAAWmH,QAAQ5d,WAIlDw1B,GAAYvG,EAAAA,EACZwG,EAAYxG,EAAAA,CAEZzY,GAAWoH,SAAWpH,EAAWoH,QAAQ5d,WAC/BwW,EAAWoH,QAAQ,GAAG+N,KAEhClV,EAAWmH,SAAWnH,EAAWmH,QAAQ5d,WAC/ByW,EAAWmH,QAAQ,GAAG+N,UAG/BwD,SAAWtb,KAAK4O,IAAI+S,EAAWC,GAAap2B,KAAK8vB,cACjD2E,kBAAmB,uCAGbrd,MACLH,GAAQG,SAETA,EAAWmH,SAAYnH,EAAWmH,QAAQ5d,eAI1C4d,GAAWtH,EAAXsH,QACDqP,GAAY,EAEZoI,EAAc,KACZK,KACAhC,eAIFiC,EAAU,IACP/X,EAAQ5d,QAAU21B,KAAY,GAAG,IAEhCC,GAAYhY,EAAQvG,QAElBiY,EAAwBsG,EAAxBtG,WAAY/N,EAAYqU,EAAZrU,YACfliB,KAAK80B,cAAgB5S,GAAWA,EAAQhN,KAAM,GACnClV,KAAK81B,iBAAiB,QAAS5T,EAAQhN,QAC7CA,KAAO,OACP7S,QAAQk0B,GACXrU,EAAQ6M,iBACNuG,wBAKLhJ,GAAMiK,EAAUjK,IAAMtsB,KAAK8vB,UAEb,IAAdlC,MACStB,MAGTS,UACAD,aACkB3sB,KAAlBo2B,EAAUzJ,WACNyJ,EAAUzJ,IAAM9sB,KAAK8vB,UACfxD,OAEQnsB,KAAlBo2B,EAAUxJ,QACNwJ,EAAUxJ,IAAMT,IAChBiK,EAAUxJ,QAGdyJ,mBAEI,GAGJC,EAAiB,IACjBF,EAAU/rB,SACK+rB,EAAU/rB,SAClB+T,EAAQ5d,QAAU,EACX4d,EAAQ,GAAG+N,IAAMtsB,KAAK8vB,SACXxD,EAEvB+J,EAAW11B,QAAU,EACN01B,EAAWA,EAAW11B,OAAS,GAAG6J,SAElCxK,KAAK02B,UAAUpf,uBAG/B0d,kBAAoByB,EAErBA,GAAkB,MACZlY,QAAQjc,KAAKk0B,KACVze,OAAOzV,KAAKi0B,EAAUhf,QACtBsC,MAAQ0c,EAAUhf,KAAKqC,aAEvBtX,6BAIHi0B,EAAUhf,UACVgf,EAAUhf,KAAKqC,iCAEX6c,mBAEG,YACAxG,EAAa,EAAI,eACdA,EAAa,EAAI,gBAChB,YACJA,EAAa,EAAI,aAEnB3D,OACL,WAIN2D,QACG9tB,KAAKyN,GAAa+mB,oBAAqB7J,MAI5C8J,GAAW,GAAIpb,OACf6a,EAAW11B,OAAQ,IACfk2B,GAAOpG,GAAKoG,SACZ5f,EAAM/B,KAAKmJ,QACTuP,UACGyI,IAELS,EAAOrG,GAAKqG,KAAKzC,KACdzD,MAAMiG,EAAMC,QAEhBC,cAAc,QAASH,MAG1BZ,SACGe,cAAc,QAASf,GAExBzX,EAAQ5d,iBAEJ4d,QAAUA,EACTve,KAAKy1B,YAAYxe,QAIvB6d,cAAe,OACf3yB,KAAKyN,GAAaonB,cAAe,WAEhCzY,aACA5d,OAAS,uCAGJsW,MACJsH,IAAYtH,OAAZsH,QACHqP,GAAY,EACZyI,KAEAL,EAAc,KACZ3B,kBAGD9V,GAAYA,EAAQ5d,eAIrB21B,GAAU,IACVW,GAAmB,EAChB1Y,EAAQ5d,QAAU21B,KAAY,GAAG,IAElCxjB,GAASyL,EAAQvG,QACbT,EAAkBzE,EAAlByE,KAAM2K,EAAYpP,EAAZoP,YACTliB,KAAK+0B,cAAgB7S,GAAWA,EAAQhN,KAAM,GACnClV,KAAK81B,iBAAiB,QAAS5T,EAAQhN,QAC7CA,KAAO,OACP7S,QAAQyQ,GACXoP,EAAQ6M,iBACNuG,wBAKLhJ,GAAMxZ,EAAOwZ,IAAMtsB,KAAK8vB,SACtBvb,EAAY+X,CACb2K,OACQ3K,KACQ,MAGjBmK,GAAiB,IACjB3jB,EAAOtI,SACQsI,EAAOtI,SACfxK,KAAKk3B,UAAUnJ,uBACP/tB,KAAKk3B,UAAUnJ,uBACvBxP,EAAQ5d,QAAU,EACX4d,EAAQ,GAAG+N,IAAMtsB,KAAK8vB,SACXxD,EAEvB+J,EAAW11B,QAAU,EACN01B,EAAWA,EAAW11B,OAAS,GAAG6J,SAElCxK,KAAKk3B,UAAU5f,uBAK/B2d,kBAAoBwB,KACnBU,cAEC7K,MACA,OACC/U,EAAKqC,oBACD9G,EAAOtI,SAAWsI,EAAOtI,SAAWisB,mBAEjC,YACA,eACG,gBACC,YACJ,eAED,mBAEN,SAGJD,kBAEI,EAGJC,IAAkB,MACT1e,OAAOzV,KAAKiV,KACZsC,MAAQtC,EAAKqC,aAEhB2E,QAAQjc,KAAKk0B,KACVl0B,KAAK60B,OAIdP,GAAW,GAAIpb,OAEjB6a,EAAW11B,OAAQ,IACfk2B,GAAOpG,GAAKoG,SACZ5f,EAAM/B,KAAKmJ,QACTuP,UACGyI,IAELS,EAAOrG,GAAKqG,KAAKzC,KACdzD,MAAMiG,EAAMC,QAEhBC,cAAc,QAASH,MAG1BZ,SACGe,cAAc,QAASf,GACxBzX,EAAQ5d,iBAEJ4d,QAAUA,EACTve,KAAK01B,YAAYze,QAIvB8d,cAAe,OACf5yB,KAAKyN,GAAaonB,cAAe,QAASJ,KAEzCrY,aACA5d,OAAS,yCAGFe,EAAMqW,MACf4d,GAAkB31B,KAAKqO,SAAS0I,YAAY,qBAC5C5Q,EAASwvB,EAAgBC,UAAUl0B,EAClCyE,OACMwvB,EAAgBE,aAAan0B,MAGjC6V,KAAKjV,KAAKyV,2CAGFuU,EAAK9hB,MACdye,GAAOsL,EAAWlH,eAAertB,KAAKo3B,WAAW3N,+BAGhD6C,MACA,yBAGCrD,EAAKrP,qBACA0S,OACL,gDA6BH+K,QAAU,6CAxBRr3B,MAAKqO,SAAS0I,YAAY,UAAUK,WAAWlC,6CAG/ClV,MAAKqO,SAAS0I,YAAY,UAAUI,WAAWjC,8CAGjCuU,SACA,KAAjBA,EACK,GAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,MAC3B,IAAjBqU,EACF,GAAIrU,aAAY,GAAM,EAAM,GAAM,IAAM,EAAM,GAAM,EAAM,GAAM,MAC7C,IAAjBqU,EACF,GAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,MACrE,IAAjBqU,EACF,GAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,EAAM,KACnG,IAAjBqU,EACF,GAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,KACrH,IAAjBqU,EACF,GAAIrU,aAAY,EAAM,IAAM,EAAM,IAAM,GAAM,IAAM,EAAM,GAAM,GAAM,EAAM,IAAM,EAAM,IAAM,GAAM,EAAM,IAAM,EAAM,GAAM,IAAM,EAAM,EAAM,IAAM,EAAM,GAAM,EAAM,MAExK,cCpZPkiB,GAAa,mBACNA,kBACM7yB,eAAezE,KAAMs3B,uBAGvB1yB,YAAY0yB,EAAY,WAC9B,cACE,SAAe7V,MAChB8V,GAAUj0B,UAAU3C,OAAS,OAAsBR,KAAjBmD,UAAU,GAAmBA,UAAU,GAAK,GAE9Ea,YACQ,MAEPsd,GAASA,EAAK+V,UAGfC,GAAOhW,EAAK+V,MAAM,SAIlBE,KAHGD,EAAKtmB,OAAO,SAAUumB,SACpBA,MAEM1f,YACV0f,EAAIC,MAAM,gBACP,IAAIl1B,OAAM,sCAGZg1B,EAAKzf,eACP4f,IAAkB,EACfF,GAAK,IACNG,GAAOH,EAAIC,MAAM,qBACjBG,EAAOJ,EAAIC,MAAM,mBACjBG,GAAQD,GAAQA,EAAKl3B,OAAS,SACxBk3B,EAAK,QACN,kBACChH,QAAU7U,SAAS6b,EAAK,cAEzB,yBACCtE,SAAWvX,SAAS6b,EAAK,cAE1B,yBACCE,eAAiBC,WAAWH,EAAK,cAElC,WACQI,UAAUJ,EAAMJ,EAAMtzB,EAAKozB,EAASK,MAC7B,YAEf,cACQM,aAAaL,EAAK,GAAI1zB,MAKlC2zB,GAAQA,EAAKn3B,OAAS,SACjBm3B,EAAK,QACN,yBACe,IAMlBL,EAAKzf,cAEN7T,WAGJ,kBACE,SAAmB0zB,EAAMJ,EAAMtzB,EAAKozB,EAASlH,GAC7ClsB,EAAIg0B,UACHA,aAGFC,UACKj0B,EAAIqG,kBACqB,IAAtBwtB,WAAWH,EAAK,OAGxBrtB,UAAY4tB,EAAK5tB,YACjB6tB,GAAWZ,EAAKzf,SAChBqgB,EAASV,MAAM,eAAiBU,EAASV,MAAM,WACtCF,EAAKzf,SAEdqgB,EAAS13B,OAAS,GAA4B,MAAvB03B,EAASC,OAAO,IAAcf,EAAQI,MAAM,sBAC3DJ,EAAQI,MAAM,kBAAkB,IAExCU,EAASV,MAAM,eACZlhB,IAAM4hB,IAEN5hB,IAAM8gB,EAAUc,IAElBhI,YAAcA,IACf8H,MAAM71B,KAAK81B,UAGZ,iBACE,SAAkB3hB,MACnB8gB,GAAU,GACVgB,EAAO9hB,EAAIkhB,MAAM,qBACjBY,GAAQA,EAAK53B,OAAS,MACnB,GAAIG,GAAI,EAAGA,EAAIy3B,EAAK53B,OAAQG,IAC3By3B,EAAKz3B,GAAG62B,MAAM,WAAaY,EAAKz3B,GAAGH,OAAS42B,EAAQ52B,WAC5C43B,EAAKz3B,UAIdy2B,UAGJ,qBACE,SAAsBM,EAAM1zB,KAC7Bq0B,cACAf,GAAOI,EAAKL,MAAM,SACjB,GAAI12B,KAAK22B,GAAM,IACdgB,GAAMhB,EAAK32B,MACX23B,EAAId,MAAM,mBACRa,QAAQhc,OAASic,EAAId,MAAM,eAAe,IAE5Cc,EAAId,MAAM,kBACRa,QAAQE,IAAMD,EAAId,MAAM,cAAc,IAGxCc,EAAId,MAAM,aAAc,IACtBpb,GAAKkc,EAAId,MAAM,aAAa,GAC5Bh3B,EAAS6T,KAAKsS,KAAKvK,EAAG5b,OAAS,KAC/B63B,QAAQG,IAAM,GAAIvjB,YAAWzU,OAC5B,GAAIoI,GAAKpI,EAAS,EAAGoI,GAAM,EAAGA,IAAM,IACnC6vB,GAAK5c,SAASO,EAAGsc,OAAY,EAAL9vB,EAAQ,GAAI,MACpCyvB,QAAQG,IAAI5vB,GAAM6vB,IAEpBJ,QAAQjc,GAAKA,QAKlB+a,KCpIL3nB,GAAesM,GAAOtM,aACtBmpB,OACK,QAAS,aACT,QAAS,cACT,QAAS,iBACT,QAAS,WACT,QAAS,aACT,QAAS,cACT,QAAS,kBACT,QAAS,mBACT,QAAS,aACT,QAAS,UACT,QAAS,YACT,QAAS,YACT,QAAS,qBACT,QAAS,iBACT,QAAS,eACT,QAAS,eACT,QAAS,qBACT,QAAS,eAGdC,GAAY,mBACLA,GAAUpjB,gBACJlR,eAAezE,KAAM+4B,QAE7BpjB,QAAU9P,OAAOK,UAAWyP,QAC5BqjB,UAAW,OACXC,YACAC,YACAC,eAAgB,OAChBC,eAAgB,sBAGVx0B,YAAYm0B,QAClB,aACE,gBACAhtB,GAAG4D,GAAa0pB,YAAar5B,KAAKs5B,MAAMvrB,KAAK/N,cAG/C,cACE,SAAeu5B,OAChBv5B,KAAKg5B,iBAILjhB,GAAS/X,KAAKmc,YACdgc,GAAUc,OAASC,QACnBM,KAGGzhB,EAAOpX,QAAU,KAAK,KACvBoX,EAAOpX,QAAU,GAAwC,KAAnCoX,EAAOxF,MAAM,GAAGwF,EAAOgD,cAC1C5Y,KAAKwN,GAAa8pB,YAAaz5B,KAAKoO,IAAK,GAAI3L,OAAM,sBAAwBsV,EAAOxF,MAAM,GAAGwF,EAAOgD,QAAU,sBAAsB,GAElIhD,EAAOpX,QAAU,GAAwC,KAAnCoX,EAAOxF,MAAM,GAAGwF,EAAOgD,WAC3C/C,MAAM,QAEXD,EAAOpX,OAAS,SAGhByP,GAAM2H,EAAOC,MAAM,KAEnB0hB,EAAW,GAAIlgB,IAAOpJ,EAAI2H,QAC1B4hB,OACM3X,KAAK0X,EAAUC,EAAIxB,GACzBwB,EAAGC,KACAJ,EAAMG,EAAG7Q,OAAO+Q,SACbF,EAAG7Q,OAAO+Q,WAEZF,EAAG7Q,OAAO+Q,KAAKv3B,KAAKq3B,EAAGC,OAC1BA,IAAIE,GAAG/hB,QAAU4hB,EAAGC,IAAIE,GAAG/hB,SACrByhB,EAAMG,EAAG7Q,OAAO+Q,QACnBF,EAAG7Q,OAAO+Q,KAAKL,EAAMG,EAAG7Q,OAAO+Q,KAAKl5B,OAAS,GAAGm5B,GAAG/hB,OAAOzV,KAAKq3B,EAAGI,QAAQC,aAQ/E,GAJDC,GAAeV,EACfW,EAAeX,EAGVz4B,EAAI,EAAGA,EAAI+E,OAAOD,KAAK4zB,GAAO74B,OAAQG,QAExC,GADDq5B,GAASX,EAAM3zB,OAAOD,KAAK4zB,GAAO14B,IAC7Bs5B,EAAI,EAAGA,EAAID,EAAOx5B,OAAQy5B,MAC1BA,GAAG/b,GAAKxY,OAAOD,KAAK4zB,GAAO14B,KAC3Bs5B,GAAGN,GAAG/hB,OAASghB,EAAUsB,MAAMF,EAAOC,GAAGN,GAAG/hB,QAC5B,UAAnBoiB,EAAOC,GAAG14B,WACP44B,gBAAgBH,EAAOC,GAAIH,SAEJ,UAAnBE,EAAOC,GAAG14B,YACd64B,gBAAgBJ,EAAOC,GAAIF,QAMlCl6B,MAAKo5B,oBACFj3B,KAAKwN,GAAa6qB,eAAgB,SAErCx6B,KAAKm5B,oBACFh3B,KAAKwN,GAAa6qB,eAAgB,iBAItC,wBACE,SAAyBZ,EAAK1X,MAC/BjL,OAAQ,EACPjX,MAAKy6B,QAAQtjB,aAIRnX,KAAKy6B,QAAQtjB,iBAHhBsjB,QAAQtjB,WAAa,GAAIuH,MACtB1e,KAAKy6B,QAAQtjB,eAInBjC,GAAO,GAAID,qBACI2kB,EAAIE,GAAGY,qBACZd,EAAIE,GAAGY,uBACLd,EAAIE,GAAGa,cACd,WAAaf,EAAIE,GAAGc,uBACnBhB,EAAIE,GAAGe,eACX,kBACajB,EAAIE,GAAGgB,mBAErBxjB,kBAAoB9C,KAAKC,MAAM,KAAOS,EAAK6lB,gBAAkB7lB,EAAKqT,cAEnEyS,GAAYjC,EAAUkC,aAAahkB,EAAM/B,KAAMA,GAAM,EAEpDlV,MAAKo5B,eAAkB4B,MACpB9lB,KAAOA,OACRkkB,eAAgB,OAChBj3B,KAAKwN,GAAaurB,gBAAiB,aAGtC3jB,GAAO,GAAInC,YAAWwkB,EAAIE,GAAG/hB,OAAOA,OAAOqH,MAAMwa,EAAIE,GAAG/hB,OAAO5L,SAAUytB,EAAIE,GAAG/hB,OAAOpX,SACvF2rB,EAAMtQ,SAAS4d,EAAI9M,IAAM,IACzBA,EAAM9Q,SAAS4d,EAAI9M,IAAM,IACzBha,EAAS,GAAIyC,KAAmB+W,IAAKA,EAAKQ,IAAKA,EAAKvV,KAAMA,EAAM2K,QAASA,MACvE3D,QAAQjc,KAAKwQ,UAGhB,wBACE,SAAyB8mB,EAAK1X,MAC/ByG,GAAOH,GAAQ2S,YAAYvB,EAAIE,GAAG/hB,QAClCd,MAAQ,GACR/B,EAAO,GAAIC,GACVnV,MAAKy6B,QAAQrjB,aAIRpX,KAAKy6B,QAAQrjB,iBAHhBqjB,QAAQrjB,WAAa,GAAIwH,MACtB5e,KAAKy6B,QAAQrjB,gBAOlB,GAHDgkB,GAAe,EACf/lB,GAAM,EACNC,GAAM,EACDxU,EAAI,EAAGA,EAAI6nB,EAAKhoB,OAAQG,IAAK,IAChCu6B,GAAM1S,EAAK7nB,MACXu6B,EAAIhmB,IAAK,GACLgmB,IACAhmB,IAAMgmB,EAAIzZ,OACXoG,aAAe3S,EAAIA,IAAIwP,gBACvB2E,MAAQ,YACR,GAAI4Q,GAAI,EAAGA,EAAI,EAAGA,IAAK,IACtBkB,GAAIjmB,EAAIuM,KAAKwY,GAAGvnB,SAAS,GACzByoB,GAAE36B,OAAS,MACT,IAAM26B,KAEP9R,OAAS8R,IAEX9T,YAAcnS,EAAIA,IAAIgS,WAAWI,SACjCH,WAAajS,EAAIA,IAAIgS,WAAWE,QAChCY,UAAY9S,EAAIA,IAAI+S,aACpB/J,GAAK,IACLyJ,MAAQzS,EAAIA,IAAIqP,eAChBkD,cAAgBvS,EAAIA,IAAIsS,aAAaF,SACrCC,aAAerS,EAAIA,IAAIsS,aAAaJ,QACpCM,QAAUxS,EAAIA,IAAImP,iBAClBlN,kBAAoB9C,KAAKC,MAAMS,EAAKqT,WAAalT,EAAIA,IAAI+S,WAAWlC,QAAU7Q,EAAIA,IAAI+S,WAAWnC,YACjGsV,SAAWlmB,EAAIA,IAAImmB,UAAYnmB,EAAIA,IAAImmB,UAAYnmB,EAAIA,IAAI6S,cACvDmT,GAAI/lB,OACPA,IAAM+lB,EAAIzZ,OACVyZ,GACGA,EAAI35B,KAAO,OACJ,EAAI25B,EAAIzZ,KAAKhI,eAI7BvE,GAAOC,EAAK,GACTkc,KAAOhJ,GAAQiT,QAAQpmB,EAAIuM,KAAMtM,EAAIsM,SACtCoZ,GAAYjC,EAAUkC,aAAahkB,EAAM/B,KAAMA,GAAM,EACpDlV,MAAKm5B,eAAkB6B,IACtB9Y,IACMhN,KAAOrP,OAAOK,UAAWgP,WAGzBrP,OAAOK,UAAWgP,MAGtBA,KAAOA,OACRikB,eAAgB,OAChBh3B,KAAKwN,GAAaurB,gBAAiB,cAOvC,GAHD3jB,GAAO,GAAInC,YAAWgmB,GACtBrgB,EAAS,EACTkV,GAAa,EACRlnB,EAAK,EAAGA,EAAK4f,EAAKhoB,OAAQoI,IAAM,IACnC2yB,GAAO/S,EAAK5f,QACZ2yB,EAAKh6B,MAAQg6B,EAAKh6B,MAAQ,OAG1Bf,GAAS+6B,EAAK9Z,KAAKhI,UACnB8hB,GAAKtS,SACM,GAEVsS,EAAKpmB,KAAQomB,EAAKrmB,QAChB/M,IAAI,GAAI8M,aAAYzU,IAAW,GAAK,IAAMA,IAAW,GAAK,IAAMA,IAAW,EAAI,IAAe,IAATA,IAAiBoa,MACjG,IACLzS,IAAIozB,EAAK9Z,KAAM7G,MACVpa,OAGVmS,GAAS,GAAI2C,SACVuG,SAAS4d,EAAItN,IAAM,QACnBtQ,SAAS4d,EAAI9M,IAAM,SAClB8M,EAAI9M,IAAM8M,EAAItN,KAAO,aAChBsN,EAAItN,eACH2D,OACN1Y,UACG2K,MAEL3D,QAAQjc,KAAKwQ,UAGhB,gBACE,gBACAlG,IAAI+C,GAAa0pB,YAAar5B,KAAKs5B,YACnC3jB,gBACAqjB,UAAW,OACXC,YACAC,YACAC,eAAgB,OAChBC,eAAgB,SAGlB,kBACA,iBACIp5B,MAAKqO,SAAS0I,YAAY/W,KAAK2V,QAAQyG,oBAG3C,cACA,iBACIpc,MAAKqO,SAAS0I,YAAY,mBAG9B,sBACE,SAAuB3J,EAAGC,EAAG3L,MAC9Bi6B,GAAK,EACLC,EAAK,KACI,eAATl6B,KACG0L,EAAEwM,aACFvM,EAAEuM,YACW,UAATlY,MACJ0L,EAAEzM,SACF0M,EAAE1M,QAELg7B,IAAOC,SACF,MAGJ,GAAI96B,GAAI,EAAGA,EAAI66B,EAAI76B,OAClBsM,EAAEtM,KAAOuM,EAAEvM,UACN,SAGJ,SAGJ,qBACE,SAAsBsM,EAAGC,EAAGwuB,OAC5BzuB,IAAMC,SACF,MAGJ,GAAIvM,GAAI,EAAG8C,EAAIiC,OAAOD,KAAKwH,GAAGzM,OAAQG,EAAI8C,EAAG9C,IAAK,IACjDg7B,GAAQ1uB,EAAEvH,OAAOD,KAAKwH,GAAGtM,IACzBi7B,EAAQ1uB,EAAExH,OAAOD,KAAKwH,GAAGtM,OACqD,gBAA5D,KAAVg7B,EAAwB,YAAcx3B,aAAaC,OAAOu3B,QAChED,GAAwC,aAAtBh2B,OAAOD,KAAKwH,GAAGtM,IAA2C,sBAAtB+E,OAAOD,KAAKwH,GAAGtM,IAAoD,2BAAtB+E,OAAOD,KAAKwH,GAAGtM,IAAmCg7B,IAAUC,SAC1J,MAEJ,QAAyB57B,KAArB27B,EAAMliB,WAA0B,QAChBzZ,KAArB47B,EAAMniB,kBACD,MAEJmf,EAAUiD,cAAcF,EAAOC,EAAO,qBAClC,MAEJ,QAAqB57B,KAAjB27B,EAAMn7B,OAAsB,QAChBR,KAAjB47B,EAAMp7B,cACD,MAEJo4B,EAAUiD,cAAcF,EAAOC,EAAO,gBAClC,WAGJhD,EAAUkC,aAAaa,EAAOC,UAC1B,SAIN,SAGJ,cACE,SAAeE,OAIf,GAHD1kB,OAAO,GACP5W,EAAS,EACToa,EAAS,EACJja,EAAI,EAAGA,EAAIm7B,EAAQt7B,OAAQG,OACxBm7B,EAAQn7B,GAAGH,OAASs7B,EAAQn7B,GAAGqL,WAGpC,GAAIiJ,YAAWzU,OACjB,GAAI+sB,GAAM,EAAGA,EAAMuO,EAAQt7B,OAAQ+sB,IAAO,IACzC3V,GAASkkB,EAAQvO,KAChBplB,IAAI,GAAI8M,YAAW2C,EAAOA,OAAQA,EAAO5L,UAAW4O,MAC/ChD,EAAOpX,OAASoX,EAAO5L,eAE5B,IAAIqN,IAAOjC,EAAKQ,eAGpB,aACE,SAAciiB,EAAQL,EAAIxB,KACrB+D,WAAWlC,EAAQL,KACnBwC,YAAYnC,EAAQL,EAAIxB,GACT,UAArBwB,EAAG7Q,OAAOsT,QAA4C,IAAtBzC,EAAG7Q,OAAOiR,SAAkBJ,EAAG0C,gBAC9DzC,IAAMb,EAAUuD,IAAI3C,WAItB,oBACE,SAAqBK,EAAQL,EAAIxB,MAElC0B,GADSF,EAAG7Q,OACC+Q,WACTA,OACD,KACO0C,IAAIvC,EAAQL,EAAIxB,aAEvB,KACOqE,IAAIxC,EAAQL,EAAIxB,aAEvB,KACOsE,KAAKzC,EAAQL,EAAIxB,aAExB,uBAICA,EAAMc,IAAIyD,KAAK,SAAUjhB,SACpBA,GAAKoe,MAAQA,MAEV8C,IAAI3C,EAAQL,EAAIxB,OACrB,IACDyE,GAAMzE,EAAMe,IAAMf,EAAMe,IAAI/nB,OAAO,SAAUsK,SACxCA,GAAKoe,MAAQA,MAElB+C,GAAIj8B,OAAS,IACLk8B,MAAM7C,EAAQL,EAAIb,GAAW8D,EAAI,GAAGE,YAAY,MAEvDT,aAAc,WAMtB,mBACE,SAAoBrC,EAAQL,MAC7B7Q,QACGiU,KAAO/C,EAAOgD,eACjB/zB,GAAO+wB,EAAOiD,eACXvxB,MAAQzC,IAAS,KACjB8wB,QAAU9wB,IAAS,GAAK,IACxBi0B,SAAWj0B,IAAS,GAAK,IACzB4wB,IAAa,KAAP5wB,IAEN+wB,EAAOgD,cAEPG,WAAal0B,GAAQ,EAAI,IAQzBm0B,WAAan0B,GAAQ,EAAI,IACzBo0B,WAAoB,GAAPp0B,IACbmzB,OAAwB,IAAftT,EAAO+Q,IAAY,MAAQ,UACxC/Q,OAASA,SAGT,YACE,SAAakR,EAAQL,EAAIxB,MAC1Bh0B,MACA8E,EAAO+wB,EAAOgD,cACXhU,KAAK/f,KACL+wB,EAAOgD,cACVM,QAAUr0B,IACP+wB,EAAOiD,eACVvxB,MAAQzC,IAAS,IACjBs0B,KAAOt0B,IAAS,EAAI,IACpBu0B,cAAuB,KAAPv0B,IAChBw0B,SAAWzD,EAAOiD,eAClBzO,QAA+B,EAArBwL,EAAOgD,cACjBU,cAAgB1D,EAAOgD,cACvBW,kBAAoB3D,EAAOgD,gBAG1B,GAFDY,IAAKz5B,EAAIq5B,cAAgB,GAAK,EAC9B95B,KACK5C,EAAI,EAAGA,EAAI88B,EAAG98B,IAAK,IACtB+8B,GAAgB7D,EAAOiD,aACvBpD,EAA4B,KAAtBG,EAAOiD,eACZ36B,cACMu7B,MACJhE,OACmB,IAAlBgE,EAAsB,UAAY,WAGxCn6B,EAAK/C,OAAS,MACVs4B,IAAMd,EAAMc,IAAItqB,OAAOjL,MAE3BA,KAAOA,IACPo6B,QAAU9D,EAAOiD,eACjBpD,IAA4B,KAAtBG,EAAOiD,eACdlD,QAAU51B,SAIV,YACE,SAAa61B,EAAQL,EAAIxB,MAC1Bh0B,KACSw1B,GAAG7Q,OACTsT,OAAS,SACZnzB,GAAO+wB,EAAOgD,cACXhU,KAAK/f,KACL+wB,EAAOgD,cACVe,QAAU90B,IACP+wB,EAAOiD,eACVO,cAAuB,KAAPv0B,IAChB60B,QAAU9D,EAAOiD,eACjBzO,QAA+B,EAArBwL,EAAOgD,cACjBgB,MAAQhE,EAAOgD,cACfiB,UAAYjE,EAAOgD,cACnBkB,QAAgC,KAAtBlE,EAAOiD,eACjBkB,cAAsC,KAAtBnE,EAAOiD,iBAGtB,GAFDW,IAAKz5B,EAAIq5B,cAAgB,IAAM,EAC/B95B,KACK5C,EAAI,EAAGA,EAAI88B,EAAG98B,MAChBwB,iBACS03B,EAAOgD,gBACQ,KAAtBhD,EAAOiD,gBACc,KAAtBjD,EAAOiD,iBAGXv5B,KAAOA,EACN1D,KAAKk5B,WACHA,UAEDA,IAAMl5B,KAAKk5B,IAAIvqB,OAAOjL,EAAK06B,IAAI,SAAU3iB,cAEtCA,EAAKoe,OACNpe,EAAK4iB,cACG5iB,EAAKqhB,mBACR34B,EAAI25B,cAGd/D,QAAU51B,SAGV,cACE,SAAe61B,EAAQL,EAAIj4B,MAC5BonB,GAAS6Q,EAAG7Q,OACZiR,UACGr4B,KAAOA,EACY,IAAtBonB,EAAOsU,eACDkB,iBAAmBtE,EAAOgD,YAC9BjD,EAAQuE,iBAAmB,GAAG,IAC5Br1B,GAAO+wB,EAAOgD,cACV3M,YAAcpnB,IAAS,IACvBs1B,OAASt1B,IAAS,EAAI,IACtBi0B,SAAWj0B,IAAS,EAAI,IACxBu1B,IAAMv1B,IAAS,EAAI,IACnBw1B,KAAOx1B,IAAS,EAAI,IACpBy1B,YAAcz1B,IAAS,EAAI,IAC3B01B,iBAAmB11B,IAAS,EAAI,IAChC21B,gBAAyB,EAAP31B,KACtB41B,GAAS7E,EAAO7tB,YACA,IAAhB4tB,EAAQyE,QACFM,iBAAmB9E,EAAO+E,cAAgB,IAC3C/E,EAAOiD,eACN6B,kBAAoB71B,IAAS,KAC7B+1B,sBAA+B,IAAP/1B,GAEb,IAAjB8wB,EAAQ0E,SACFQ,uBAAyBjF,EAAO+E,cAAgB,IACjD/E,EAAOiD,eACNgC,wBAA0Bh2B,IAAS,KACnCi2B,4BAAqC,IAAPj2B,GAEZ,IAAxB8wB,EAAQ2E,gBACFS,gBAAkBnF,EAAOgD,aAEF,IAA7BjD,EAAQ4E,qBAGL,GAFDh+B,GAASq5B,EAAOgD,YAChBoC,KACKt+B,EAAI,EAAGA,EAAIH,EAAQG,MACLwB,KAAK03B,EAAOgD,gBAGL,IAA5BjD,EAAQ6E,gBAAuB,IAC7BS,GAAUrF,EAAOgD,YACjBsC,EAAQtF,EAAOgD,YACf3qB,EAAQ2nB,EAAO7tB,SAEfozB,EAAYD,IAAU,EAAI,EAC1BE,EAAWF,IAAU,EAAI,CACjB,KAHFA,IAAU,MAIVtF,EAAOiD,eACPwC,SAAWH,IAAU,KACrBI,UAAoB,MAARJ,GAEJ,IAAdC,MACMvF,EAAO2F,eACPC,cAAwB,QAARN,GAET,IAAbE,MACMxF,EAAO6F,aACPC,WAAaR,IAAU,IACvBS,WAAaT,IAAU,EAAI,IAC3BU,QAAkB,EAARV,IACVtF,EAAOiD,eACPgD,WAAaX,IAAU,IACvBY,QAAkB,EAARZ,IACVtF,EAAOiD,eACPkD,WAAab,KAEhBtW,KAAKqW,EAAU,GAAKrF,EAAO7tB,SAAWkG,OAE3C+tB,GAAerG,EAAQuE,iBAAmB,GAAKtE,EAAO7tB,SAAW0yB,KAC9D7V,KAAKoX,KAGRpG,OAAS,GAAIxgB,IAAOwgB,EAAOjiB,OAAOqH,MAAM4a,EAAO7tB,aACpD4tB,QAAUA,SAGV,YACE,SAAaJ,MACdx1B,MACA4T,EAAS4hB,EAAGI,QAAQC,UAGX,IADFjiB,EAAO4nB,eAEZ7F,QACAA,GAAG/hB,OAASA,MACX,IACD0lB,GAAW1lB,EAAOilB,WAClBS,IAAY,KAAQA,GAAY,QAC9B/7B,KAAO,SAET+7B,GAAY,KAAQA,GAAY,QAC9B/7B,KAAO,YAET2+B,GAAetoB,EAAOklB,kBACtBoD,aAAeA,EACF,UAAbl8B,EAAIzC,MAAiC,UAAbyC,EAAIzC,UA6FxB,IAAIe,OAAM,8BA5FZ69B,GAASvoB,EAAOilB,eAEN,IADFsD,IAAW,OAEf,IAAI79B,OAAM,iCAETsV,EAAOilB,cACZuD,WAAaD,IAAW,IACxBE,SAAWF,IAAW,EAAI,IAC1BG,WAAaH,IAAW,EAAI,IAC5BI,QAAUJ,IAAW,EAAI,IACzBK,eAAiBL,IAAW,EAAI,IAChCM,QAAUN,IAAW,EAAI,IACzBO,cAAyB,EAATP,IAChBQ,gBAAkB/oB,EAAOilB,eACzB+D,GAAK58B,EAAI28B,mBAEU,IAAnB38B,EAAIo8B,WAAkB,IACpBzT,QACK/U,EAAOilB,cACZ16B,KAAKg+B,IAAW,EAAI,KACfvoB,EAAOklB,eACZ36B,KAAKg+B,IAAW,KACXvoB,EAAOklB,eACZ36B,KAAKg+B,IAAW,KAChBxT,IAAMA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAAKA,EAAI,MACtC,EAEW,UAAb3oB,EAAIzC,SACF4qB,IAAMnoB,EAAI2oB,QAGK,IAAnB3oB,EAAIo8B,WAAkB,IACpBS,QACKjpB,EAAOilB,cACX16B,KAAKg+B,IAAW,EAAI,KAChBvoB,EAAOklB,eACX36B,KAAKg+B,IAAW,KACZvoB,EAAOklB,eACX36B,KAAKg+B,IAAW,KACjBxT,IAAMkU,EAAK,IAAM,GAAKA,EAAK,IAAM,GAAKA,EAAK,MAC3C1U,QACKvU,EAAOilB,cACZ16B,KAAKg+B,IAAW,EAAI,KACfvoB,EAAOklB,eACZ36B,KAAKg+B,IAAW,KACXvoB,EAAOklB,eACZ36B,KAAKg+B,IAAW,KAChBhU,IAAMA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAAKA,EAAI,MACtC,MAEa,IAAjBnoB,EAAIq8B,SAAgB,IAClBS,MACAC,OACKnpB,EAAOilB,cACX16B,KAAKg+B,IAAW,EAAI,KACpBh+B,KAAc,EAATg+B,KACDvoB,EAAOklB,eACX36B,KAAKg+B,IAAW,MAChBh+B,KAAc,EAATg+B,KACDvoB,EAAOklB,eACX36B,KAAKg+B,IAAW,MAClBh+B,KAAc,EAATg+B,KACCvoB,EAAOilB,cACb16B,KAAKg+B,IAAW,KACfW,KAAmF,KAA3EA,EAAK,IAAM,GAAKA,EAAK,IAAM,GAAKA,EAAK,IAAM,GAAKA,EAAK,IAAM,GAAKA,EAAK,KAAaC,EAAG,IAAM,EAAIA,EAAG,OACxG,KAEe,IAAnB/8B,EAAIs8B,eACG1oB,EAAO4nB,eACZwB,OAASb,IAAW,EAAI,WACtB,GAEY,IAAhBn8B,EAAIu8B,aACA,IAAIj+B,OAAM,iCAES,IAAvB0B,EAAIw8B,mBACG5oB,EAAOilB,cACZoE,mBAA8B,IAATd,KACnB,GAEY,IAAhBn8B,EAAIy8B,YACFS,OAAStpB,EAAOklB,gBACd,GAEkB,IAAtB94B,EAAI08B,mBACA,IAAIp+B,OAAM,wBAEds+B,GAAK,KACA/X,KAAK+X,KAEVjH,GAAKf,EAAUe,GAAG/hB,EAAQ5T,EAAIzC,YAK/ByC,UAGJ,WACE,SAAY4T,EAAQrW,MACrBuH,OAAO,GACP9E,QACS,UAATzC,EAAkB,IAEP,OADNqW,EAAOgnB,kBAELuC,KAAK,GAEC,OADNvpB,EAAO4nB,oBAEN,IAAIl9B,OAAM,kCAGbumB,KAAK,KAERjR,OAASA,MACR,CAAA,GAAa,UAATrW,OAqBH,IAAIe,OAAM,MAAQf,EAAO,2BApBxBqW,EAAOklB,gBAED,GAAM,UACX,IAAIx6B,OAAM,yBAEd8+B,IAAM,KAAO,MAAO,KAAO,KAAO,MAAO,KAAO,KAAO,MAAO,KAAO,KAAO,MAAO,IAAM,QACzFljB,GAA6B,IAAvBpV,IAAS,EAAI,GAAc,SAAW,WAC5Cu4B,MAAQv4B,IAAS,EAAI,IACrBw4B,OAAgB,EAAPx4B,IACN8O,EAAOklB,eACVrC,gBAAyC,GAAtB3xB,IAAS,GAAK,KACjC4e,QAAU1jB,EAAIy2B,gBAAkB,IAChCE,eAAiB7xB,IAAS,GAAK,KAC/ByxB,UAAY6G,EAAGp9B,EAAI22B,kBACnBH,QAAU1xB,IAAS,EAAI,IACvBy4B,aAAsB,EAAPz4B,IAAgB,GAAK8O,EAAOklB,eAAiB,IACtD0E,eAAex9B,KAClB6kB,KAAK,KACRjR,OAASA,QAKR5T,UAGJ,aACE,SAAc61B,EAAQL,EAAIxB,KAE5B4B,kBAGA,YACE,SAAaC,EAAQL,EAAIxB,MAC1Bh0B,QACA45B,QAAU/D,EAAOgD,eACjB/zB,GAAO+wB,EAAOiD,eACd2E,iBAAmB34B,IAAS,IAC5Bu0B,cAAuB,KAAPv0B,IACb+f,KAAK,KACLgR,EAAOgD,cACVnM,QAAU5nB,IAAS,IACnB44B,qBAA8B,EAAP54B,IACvBy0B,cAAgB1D,EAAOgD,cACvBW,kBAAoB3D,EAAOgD,WACtBh9B,MAAKw9B,gBAKVsE,MAAQ9H,EAAO+E,eAChBhF,QAAU51B,SAGV,uBACE,SAAwBA,MACzB6M,GAAYD,UAAUC,UAAUC,cAChCxD,MAAS,GACTs0B,MAAuB,EACvB,YAAW3wB,KAAKJ,GACd7M,EAAI22B,gBAAkB,KACpBF,gBAAkB,IACb,GAAI32B,OAAM,KACIE,EAAI22B,eAAiB,MAExCF,gBAAkB,IACb,GAAI32B,OAAM,KACIE,EAAI22B,iBAEc,IAAlC9pB,EAAU9I,QAAQ,cACvB0yB,gBAAkB,IACb,GAAI32B,OAAM,KACIE,EAAI22B,mBAEvBF,gBAAkB,IACb,GAAI32B,OAAM,GACfE,EAAI22B,gBAAkB,IACD32B,EAAI22B,eAAiB,GAExB,IAAhB32B,EAAIw2B,YACFC,gBAAkB,IACb,GAAI32B,OAAM,MAEEE,EAAI22B,mBAIxB,GAAK32B,EAAIy2B,iBAAmB,IAC5B,KAA4B,GAArBz2B,EAAI22B,iBAA0B,IACrC,IAA2B,EAArB32B,EAAI22B,iBAA0B,IACpC,IAAM32B,EAAIw2B,SAAW,EACA,IAAxBx2B,EAAIy2B,oBACC,KAA8B,GAAvBmH,IAAgC,IACvC,IAA6B,EAAvBA,IAAgC,IACtC,IAAM,IACN,GAAK,KAEVlH,YAAcptB,MAGfsrB,KC1xBLiJ,GAAW,mBACJA,GAASrsB,gBACHlR,eAAezE,KAAMgiC,QAE7BC,SAAW,QACXluB,cACAmuB,YACArR,QAAU,OACV0C,UAAY,OACZwE,eAAiB,OACjBvtB,SAAW,OACX23B,WAAa,OACbC,aAAWjiC,QACXkiC,WAAa1sB,EAAQ2sB,YAAa,sBAG5B19B,YAAYo9B,QAClB,aACE,SAAcrI,EAAInvB,EAAU6lB,GAC5BrwB,KAAKkiC,IAAIvI,UACPuI,IAAIvI,IAAQnvB,SAAUA,cACb,eACC,QACNxK,KAAKwK,uBACC6lB,QAEVtc,MAAM/T,KAAKwK,UAAYmvB,OACvBnvB,UAAYA,OACZ23B,YAAc,UAIlB,mBACE,SAAoB1rB,GACrBzW,KAAKkiC,IAAIzrB,KACPzW,KAAKkiC,IAAIzrB,GAAKpE,MAAQrS,KAAKoiC,SAAS1O,YACjC0O,mBACOpiC,KAAKkiC,IAAIzrB,GAAKjM,cAClBxK,KAAKkiC,IAAIzrB,GAAKpE,kBACR,eACC,MACRoE,UAGFzW,MAAK+T,MAAM/T,KAAKkiC,IAAIzrB,GAAKpE,aACzBrS,MAAKkiC,IAAIzrB,QACX0rB,YAAc,UAIlB,iBACE,SAAkB5qB,EAAMgrB,OAExBhrB,OACG,IAAI9U,OAAM,kCAGbouB,QAAUtZ,EAAKsZ,aACfkH,eAAiBxgB,EAAKwgB,eACvBxgB,EAAKihB,UAAYx4B,KAAKw4B,eACnBA,QAAUjhB,EAAKihB,WAGlBjhB,EAAKgc,SAAWvzB,KAAKuzB,eAwBjB,IAAI9wB,OAAM,2BAA6B8U,EAAKgc,eAvB7CA,SAAWhc,EAAKgc,aAEhB,GADDiP,MACK1hC,EAAI,EAAGA,EAAIyW,EAAK4gB,MAAMx3B,OAAQG,IAAK,IACtCy4B,GAAOhiB,EAAK4gB,MAAMr3B,EACjBd,MAAKkiC,IAAI3I,EAAK9iB,SACLnU,KAAKi3B,EAAK9iB,UACjBnU,KAAKi3B,EAAK9iB,IAAK8iB,EAAK/uB,SAAU+uB,EAAKlJ,iBAIxCmS,EAAY7hC,OAAS,OACjB,IAAI8B,OAAM,iCAGd8/B,MAEG,GADDE,GAASziC,KAAK0iC,YACT35B,EAAK,EAAGA,EAAK05B,EAAO9hC,OAAQoI,IAC/By5B,EAAYt6B,QAAQu6B,EAAO15B,IAAO,QAC/B45B,WAAWF,EAAO15B,WAS5B,kBACE,iBACElD,QAAOD,KAAK5F,KAAKkiC,YAGrB,mBACE,SAAoBU,EAAQC,MAC7BlJ,GAAK35B,KAAKkiC,IAAIU,EACdjJ,OACCmJ,WAAaD,UAIf,oBACE,SAAqBD,EAAQ9hB,MAC9B6Y,GAAK35B,KAAKkiC,IAAIU,EACdjJ,OACCoJ,YAAcjiB,UAIhB,oBACE,SAAqBpe,SACnB1C,MAAKkiC,IAAIx/B,UAGb,cACE,SAAegxB,MAChBsP,GAAWn9B,OAAOD,KAAK5F,KAAK+T,OAC5B4lB,MAAK,UAEIx5B,KAATuzB,MACE1zB,KAAKoiC,SACApiC,KAAKoiC,SAAS1O,KAAO1zB,KAAKoiC,SAAS53B,SAEnC,KAIPw4B,EAASriC,OAAS,GAAK+yB,GAAQ1zB,KAAKwK,aAG/BulB,KAAK,SAAU3iB,EAAGC,SAClB2qB,YAAW5qB,GAAK4qB,WAAW3qB,SAE/B,GAAIvM,GAAI,EAAGA,EAAIkiC,EAASriC,QACvB+yB,GAAQ1X,SAASgnB,EAASliC,IADKA,IAAK,IAElC2V,GAAMzW,KAAK+T,MAAMivB,EAASliC,OAGvB2V,IAAKA,EAAKqsB,WAFA9iC,KAAKkiC,IAAIzrB,GAAKqsB,WAEUC,YADvB/iC,KAAKkiC,IAAIzrB,GAAKssB,YACmCrP,KAAM1X,SAASgnB,EAASliC,IAAK0J,SAAUwR,SAAShc,KAAKkiC,IAAIzrB,GAAKjM,WAC7HxK,KAAKsiC,kBACAtiC,MAAKkiC,IAAIliC,KAAKoiC,SAAS3rB,WACvBzW,MAAK+T,MAAM/T,KAAKoiC,SAAS1O,YAE7B0O,SAAWzI,QAKbA,WAGJ,cACE,gBACAsI,SAAW,QACXluB,cACAmuB,YACArR,QAAU,OACV0C,UAAY,OACZwE,eAAiB,OACjBvtB,SAAW,SAGb,wBACE,eACA,GAAI1J,GAAI,EAAGmiC,EAAIp9B,OAAOD,KAAK5F,KAAKkiC,KAAKvhC,OAAQG,EAAImiC,EAAGniC,IAAK,IACxD64B,GAAK35B,KAAKkiC,IAAIr8B,OAAOD,KAAK5F,KAAKkiC,KAAKphC,MACrCgiC,YAAa,IACbC,aAAc,UAIhB,gBACE,gBACAd,SAAW,QACXluB,cACAmuB,YACArR,QAAU,OACV0C,UAAY,OACZwE,eAAiB,OACjBvtB,SAAW,OACX23B,WAAa,OACbC,aAAWjiC,QACXkiC,YAAa,SAGf,WACA,iBACIriC,MAAK+T,aAGT,cACA,SAAamvB,GACZljC,KAAKkjC,UAAYA,SACdzjB,aACAwiB,SAAWiB,QAGf,iBACIljC,MAAKiiC,aAGTD,KC1MLmB,WACM,UACC,SACD,SACA,YACG,aACC,eACE,QACR,eACO,IAMXC,GAAY,mBACLA,kBACM3+B,eAAezE,KAAMojC,QAE7BroB,OAAS,OACTsoB,WAAarjC,KAAK+a,2BAGZnW,YAAYw+B,QAClB,gBACE,SAAiBluB,EAAM2E,MACxBA,EAAO,OACH,IAAIpX,OAAM,mCAEd6gC,MACA5gC,EAAO1C,KAAKujC,WAAWruB,GACvBnP,EAAQ/F,KAAKujC,WAAWruB,EAAM2E,EAAOnX,EAAK8gC,mBACrC9gC,EAAK6U,MAAQxR,EAAMwR,UAEvBksB,cACEH,SAGJ,oBACE,gBACAvoB,OAAS,OACTsoB,WAAarjC,KAAK+a,cAGpB,oBACE,SAAqBhD,MAEtB2rB,GADK,GAAIpzB,UAASyH,EAAQ/X,KAAKqjC,YACnBlpB,UAAU,GAAIoD,IAC1BomB,EAAM,KACND,EAAS,EACLhyB,GAAKkyB,OAAO,GAAIxuB,YAAW2C,EAAQ/X,KAAKqjC,WAAa,EAAGK,IAExD,MAEJ7pB,GAAO6pB,EAAS,cACfL,YAAcxpB,QAEX8pB,WACID,EAAS,UAIlB,kBACE,SAAmB3rB,EAAQ8B,MAC5BgqB,GAAK,GAAIvzB,UAASyH,EAAQ/X,KAAKqjC,WAAYxpB,GAC3C8f,EAAKkK,EAAGC,WAAW,GAAIvmB,cAER,GADFsmB,EAAG3pB,SAAS,GAAIqD,IACT,SAEnB8lB,YAAc,SAEX,GAAIU,MAAKpK,YACL,WAIT,oBACE,SAAqB5hB,EAAQ8B,MAC9BnX,GAAO1C,KAAKgkC,YAAYjsB,EAAQ8B,GAChC9T,EAAQ/F,KAAKujC,WAAWxrB,EAAQ8B,EAAOnX,EAAK8gC,4BAGtC9gC,EAAK6U,WACJxR,EAAMwR,eAEL7U,EAAK8gC,SAAWz9B,EAAMy9B,kBACtBz9B,EAAMk+B,iBAIf,wBACE,SAAyBlsB,MAE1B2rB,GADK,GAAIpzB,UAASyH,EAAQ/X,KAAKqjC,YACnBhpB,UAAU,GAAIkD,IAC1BomB,EAAM,YACND,EAAS,EACLhyB,GAAKkyB,OAAO,GAAIxuB,YAAW2C,EAAQ/X,KAAKqjC,WAAa,EAAGK,IAExD,QAGHL,YAAcK,EAAS,QAEpBC,WACID,EAAS,UASlB,mBACE,SAAoBnsB,EAAMsC,MAC3B9B,GAAS,GAAI1H,eACbkH,YAAgBlH,aACTkH,EAEAA,EAAKQ,UAEZmsB,GAASf,GAAWe,OACpBC,EAAUhB,GAAWgB,QACrBC,EAASjB,GAAWiB,OACpBC,EAASlB,GAAWkB,OACpBC,EAAYnB,GAAWmB,UACvBC,EAAapB,GAAWoB,WACxBC,EAAerB,GAAWqB,aAC1BC,EAAOtB,GAAWsB,KAClBC,EAAcvB,GAAWuB,YAEzBC,EAAW,GAAIr0B,UAASyH,EAAQ/X,KAAKqjC,WAAYxpB,GACjDoqB,GAAW,EACXviC,EAAOijC,EAAS1qB,SAAS,GACzBc,EAAS,OACRsoB,YAAc,KACft9B,GAAQ,YAEJrE,OACDwiC,KAEOS,EAASb,WAAW,GAAIvmB,SAC3B8lB,YAAc,KACT,YAGTc,OAEaQ,EAAS1qB,SAAS,QAE3BopB,YAAc,KACT,YAGTe,MAEGT,GAAM3jC,KAAKgkC,YAAYjsB,KACnB4rB,EAAIpsB,QACFosB,EAAIH,mBAGba,WAGGO,GAAa,MACyB,SAAtCD,EAAStqB,UAAUR,EAAO,GAAI0D,QACnB,GAGRxC,EAASlB,EAAO,GAAG,IACpBgrB,GAAS7kC,KAAK8kC,YAAY/sB,EAAQ8B,EAAOkB,EAAS6pB,MAClDC,EAAOE,oBAGLF,EAAOttB,KAAK7U,MAAQmiC,EAAOttB,KAAKxR,SAC5B8+B,EAAOrB,SAEfzoB,GAAUlB,EAAO,GAEN,KADsC,SAAxC8qB,EAAStqB,UAAUU,EAAS,GAAIwC,YAEpC8lB,YAAc,KACT,aAKbiB,WAGS,OACLjB,YAAc,KACf2B,GAAc,MACyC,IAAhB,SAAtCL,EAAStqB,UAAUR,EAAO,GAAI0D,SACnB,GAGTxC,EAASlB,EAAO,GAAG,IACpBorB,GAASjlC,KAAK8kC,YAAY/sB,EAAQ8B,EAAOkB,EAASiqB,MAClDC,EAAOF,oBAGLE,EAAO1tB,KAAK7U,MAAQuiC,EAAO1tB,KAAKxR,SAC5Bk/B,EAAOzB,SAEfzoB,GAAUlB,EAAO,GAEJ,KADsC,SAAxC8qB,EAAStqB,UAAUU,EAAS,GAAIwC,UAEjC,OACL8lB,YAAc,aAMtBkB,KAEO,QACG,YAIVC,WAGGU,GAAYP,EAAStqB,UAAU,GAAIkD,OAC7B,OACL8lB,YAAc,MACd,GAAIviC,GAAI,EAAGA,EAAIokC,EAAWpkC,IAAK,IAC9BqkC,GAASnlC,KAAKujC,WAAWxrB,EAAQ8B,EAAOkB,KACtCzY,KAAK6iC,EAAO5tB,SACR4tB,EAAO3B,mBAKlBiB,MAEGW,GAAOplC,KAAKqlC,UAAUttB,EAAQ8B,EAAO,KACjCurB,EAAK7tB,QACH6tB,EAAK5B,mBAIdkB,MAEGY,GAAUtlC,KAAKulC,gBAAgBxtB,EAAQ8B,EAAO,KAC1CyrB,EAAQ/tB,QACN+tB,EAAQ9B,yBAMT3pB,cAKP9T,WACIgV,WACAkpB,OAITb,KCpQLzzB,GAAesM,GAAOtM,aCDf2nB,IDGM,mBACNkO,kBACM/gC,eAAezE,KAAMwlC,QAE7BC,sBAAuB,OACvBC,UAAY,OACZC,YAAa,eAGP/gC,YAAY4gC,QAClB,aACE,gBACAz5B,GAAG4D,GAAa0pB,YAAar5B,KAAK4lC,WAAW73B,KAAK/N,cAUpD,mBACE,cACAA,KAAKylC,qBAOH,IACDzlC,KAAK6lC,aAAallC,OAAS,aAG3BmlC,OAAQ,GAERC,EAAU,SAGJ/lC,KAAKgmC,qBACNF,GAASC,KAAY,QAEzB5jC,KAAKwN,GAAa6qB,oBAnBO,IAC1Bx6B,KAAK6lC,aAAallC,OAAS,aAG3BmoB,GAAS9oB,KAAK6lC,aAAa7tB,MAAM,SAChCiuB,eAAend,QACf8c,qBAiBJ,uBACE,SAAwB9c,GACxB0c,EAAWU,UAAUpd,SAInB2c,sBAAuB,OAGvBU,sBACAC,wBAPAjkC,KAAKwN,GAAa8pB,YAAa,GAAIh3B,OAAM,0BACzCmjC,mBAQFA,oBAQF,uBACE,gBACAF,eACDtuB,GAAa,GAAIwH,MACV1J,KAAO,GAAIC,MACXkJ,GAAKjH,EAAWlC,KAAKmJ,GAAKre,KAAK0lC,eAErC1uB,OAAOI,WAAaA,SAQtB,uBACE,gBACAsuB,eACDvuB,GAAa,GAAIuH,MACVxJ,KAAO,GAAID,MACXoJ,GAAKlH,EAAWjC,KAAKmJ,GAAKre,KAAK0lC,eAErC1uB,OAAOG,WAAaA,SActB,qBACE,cACDnX,KAAK6lC,aAAallC,OAAS,SACtB,SAELmlC,GAAQ9lC,KAAKqmC,2BACbP,SACGQ,cAAcR,GAEdA,SAQJ,2BACE,cACD/qB,GAAS,EACT+qB,KAEAS,EAAUvmC,KAAK6lC,aAAaW,MAAMzrB,EAAQ,SACpC,IAGJ0rB,UAAsB,GAAVF,KAAkB,IAC9BA,QAAoB,GAAVA,IAGVG,SAAW1mC,KAAK6lC,aAAaW,MAAMzrB,EAAQ,MACvC,EAEY,IAAlB+qB,EAAMS,SAAmC,IAAlBT,EAAMS,SAAmC,KAAlBT,EAAMS,SAAoC,KAAlBT,EAAMS,SAAoD,IAAlCvmC,KAAK6lC,aAAaW,MAAM,EAAG,SACvHxmC,MAAK6lC,cAAgB7lC,KAAK6lC,aAAallC,OAAS,QAC7CklC,aAAa7tB,MAAM,QAErB7V,KAAKwN,GAAa8pB,YAAaz5B,KAAKoO,IAAK,GAAI3L,OAAM,WAAaqjC,EAAMS,UAAU,GAC9E,QAGLvmC,KAAK6lC,aAAallC,OAASmlC,EAAMY,SAAW,SACvC,WAIJb,aAAa7tB,MAAM,MAGpB2uB,GAAY3mC,KAAK6lC,aAAaW,MAAM,EAAG,QACtCX,aAAa7tB,MAAM,MAGpB4uB,GAAe5mC,KAAK6lC,aAAa7tB,MAAM,GAAG,SAC1C4uB,GAAe,OACW,SAAfA,KAGTta,IAAMqa,OAGPd,aAAa7tB,MAAM,GACjB8tB,SAGJ,sBACE,SAAuBA,UACpBA,EAAMS,aACP,SACEM,iBAAiBf,aAEnB,QACEgB,cAAchB,aAEhB,QACEiB,eAAejB,aAEjB,SAEED,aAAa7tB,MAAM,sBAGnB6tB,aAAa7tB,MAAM,WAWzB,yBACE,SAA0B8tB,MAC3B3uB,GAAanX,KAAKgX,OAAOG,WACzBC,EAAapX,KAAKgX,OAAOI,WAEzBG,EAAOvX,KAAK6lC,aAAa7tB,MAAM8tB,EAAMY,UAErCh0B,GAAO,GAAI0wB,KAAYzqB,QAAQpB,EAAMA,EAAK5W,QAE1CqmC,EAAahnC,KAAKqO,SAAS24B,WAAat0B,EAAOA,EAAKs0B,eAAa7mC,WAGhEkO,SAASrD,UAAUR,SAAWw8B,EAAWx8B,cACzC6D,SAASrD,UAAUP,SAAWu8B,EAAWv8B,cACzC4D,SAASrD,UAAUi8B,SAAWD,EAAWr8B,SAE/B3K,KAAKknC,mBAAmBpB,EAAMY,iBAEtCvkC,KAAKwN,GAAaw3B,iBAClBxB,YAAa,GAIhBxuB,IAAeA,EAAWiwB,kBAAmB,IAC3ClyB,GAAOiC,EAAWjC,YAClB8xB,EAAWK,oBACR5V,WAAauV,EAAWK,iBAG3BL,EAAWM,kBACR7d,aAAeud,EAAWM,eAGzBN,EAAWK,qBACZ,SACEE,gBAAkB,YAEpB,SACEA,gBAAkB,YAEpB,SACEA,gBAAkB,OAIzBnwB,IAAeA,EAAWgwB,kBAAmB,IAC3CI,GAAQpwB,EAAWlC,QACa,gBAAzB8xB,GAAWS,UAAwB,IACxCnf,GAAS9T,KAAKC,MAA6B,IAAvBuyB,EAAWS,cAC/Bnf,EAAS,EAAG,IACVvC,GAAMuC,EAAS,GACdkf,GAAMrf,cACHA,gBAEFA,UAAUoE,OAAQ,IAClBpE,UAAUpC,IAAMA,IAChBoC,UAAUlC,QAAUqC,IACpBH,UAAUjC,QAAU,cAM7B,iCACE,SAAkC3O,MACnCpT,QACAijC,mBAAoB,IACpBM,WAAanwB,EAAK,KAAO,IACzBgwB,iBAA6B,EAAVhwB,EAAK,KAAW,EAAIA,EAAK,KAAO,IACnD8vB,gBAAkBrnC,KAAK2nC,uBAAuBxjC,EAAIojC,mBAClD9d,cAA0B,IAAVlS,EAAK,MAAc,IACnCmqB,aAAyB,EAAVnqB,EAAK,MAAY,IAChCqwB,oBAAgC,EAAVrwB,EAAK,MAAY,IACvCswB,mBAA+B,EAAVtwB,EAAK,KAE1BiS,MAAQ,WAAarlB,EAAIujC,cACzB12B,GAAY0L,OAAO3L,UAAUC,UAAUC,cACvC62B,MAAyB,GAEzBr6B,MAAS,GACTs6B,EAAgB5jC,EAAIojC,uBAEc,IAAlCv2B,EAAU9I,QAAQ,WAEhB/D,EAAIojC,iBAAmB,KACrBG,WAAa,IACR,GAAIzjC,OAAM,KACM8jC,EAAgB,MAGrCL,WAAa,IACR,GAAIzjC,OAAM,KACM8jC,IAEgB,IAAlC/2B,EAAU9I,QAAQ,cAEvBw/B,WAAa,IACR,GAAIzjC,OAAM,KACM8jC,MAIrBL,WAAa,IACQvjC,EAAIojC,kBACpB,GAAItjC,OAAM,GAEfE,EAAIojC,iBAAmB,IACApjC,EAAIojC,gBAAkB,EACjB,IAArBpjC,EAAIslB,iBAETie,WAAa,IACR,GAAIzjC,OAAM,KACME,EAAIojC,oBAI1B,GAAKpjC,EAAIujC,YAAc,IACvB,KAA6B,GAAtBvjC,EAAIojC,mBAA4B,IACvC,IAA4B,GAAtBpjC,EAAIojC,kBAA2B,IACrC,KAA0B,GAAnBpjC,EAAIslB,eAAwB,EACnB,IAAnBtlB,EAAIujC,eACC,KAAgC,GAAzBI,KAAmC,IAC1C,IAA+B,EAAzBA,IAAkC,IAExC,IAAM,IACN,GAAK,KAEVr6B,OAASA,EACNtJ,SAGJ,sBACE,SAAuB2hC,MACxB7uB,GAAQjX,KAAKgX,OAAOG,cACnBF,MAID/B,GAAO+B,EAAM/B,IAEZA,OACGA,KAAO,GAAID,MACVgC,EAAM/B,SAGXxC,GAAO1S,KAAK6lC,aAAa7tB,MAAM,GAAG,KAEhCT,KAAOvX,KAAK6lC,aAAa7tB,MAAM8tB,EAAMY,SAAW,MAElDsB,IAAiB,IAAPt1B,KAAgB,IAExBs1B,OAASA,EAEA,KAAXA,QACG7lC,KAAKwN,GAAa8pB,YAAa,GAAIh3B,OAAM,yBAA2BulC,IAG5D,KAAXA,GAAkBhoC,KAAKioC,sBACpBxW,WAAazxB,KAAKkoC,8BAA8Bx1B,KAChD60B,iBAA0B,GAAP70B,KAAe,IAClCy1B,YAAqB,EAAPz1B,KAAc,IAC5B+W,aAAsB,EAAP/W,IACf4E,kBAAoB9C,KAAKC,MAAM,KAAOS,EAAK6lB,gBAAkB7lB,EAAKqT,eAGrEwS,GAAkB7lB,EAAK6lB,gBACvBqN,EAAuBlzB,EAAKqyB,gBAC5BjwB,EAAoBpC,EAAKoC,wBAEtBwuB,GAAMS,WACT8B,GAAWroC,KAAKknC,mBAAmBpB,EAAMY,aAEvB,IAAlBZ,EAAMvuB,KAAK,GAAU,IAEnB+wB,GAAYtoC,KAAKuoC,yBAAyBzC,EAAMvuB,QAClC+wB,EAAUjB,iBAAmBnyB,EAAK6lB,kBAC7BuN,EAAUf,iBAAmBryB,EAAKqyB,kBACrC/yB,KAAKC,MAAM,KAAOsmB,EAAkB7lB,EAAKqT,aAExDkB,aAAe6e,EAAU7e,eACzBgI,WAAasJ,IACbwM,gBAAkBa,IAClB9wB,kBAAoBA,IACpB9M,SAAWxK,KAAKqO,SAASrD,UAAUR,SAAW0K,EAAKqT,YACnD9a,OAAS66B,EAAU76B,UAEpB+6B,GAAaxoC,KAAKqO,SAASrD,UAAUJ,QAG9B4e,MAAQ8e,EAAU9e,QAClBC,aAAe6e,EAAU7e,eACzBgI,WAAasJ,IACbwM,gBAAkBe,EAAUF,qBAElCpoC,KAAKioC,uBAGH9lC,KAAKwN,GAAa84B,4BAFlBtmC,KAAKwN,GAAaurB,gBAAiB,cAKrC+M,mBAAoB,OAEpBS,aAAc,MAEf1oC,MAAK0oC,gBACDxmB,cACEjL,EAAM/B,WAETwzB,aAAc,KAGfnxB,KAAOuuB,EAAMvuB,KAAK6H,MAAM,EAAG0mB,EAAMvuB,KAAK5W,UACtC4d,QAAQjc,KAAKwjC,EAEhBuC,SACElmC,KAAKwN,GAAa8pB,YAAaz5B,KAAKoO,IAAK,GAAI3L,OAAM,uBAAyBqjC,EAAMY,WAAW,WAYjG,uBACE,SAAwBZ,MAEzBpzB,GAAO1S,KAAK6lC,aAAa7tB,MAAM,GAAG,KAChC2wB,WAAoB,IAAPj2B,KAAiB,IAC9Bud,WAAiC,IAApB6V,EAAM6C,aAErBC,GAAiB,GAAPl2B,UACTsE,OAAOI,WAAWwxB,QAAUA,IAG3BC,cAAgB7oC,KAAK6lC,aAAa7tB,MAAM,GAAG,KAC3C+U,IAAM/sB,KAAK6lC,aAAaW,MAAM,EAAG,QAClCX,aAAa7tB,MAAM,GAGR,KAAZ4wB,EAAgB,IACdrxB,GAAOvX,KAAK6lC,aAAa7tB,MAAM8tB,EAAMY,SAAW,QAC9CnvB,KAAOA,EAEgC,IAAzCmY,OAAO1T,SAAS8pB,EAAM+C,eAAsB,CACzC7oC,KAAKknC,mBAAmBpB,EAAMY,gBAC5BvkC,KAAKwN,GAAa8pB,YAAaz5B,KAAKoO,IAAK,GAAI3L,OAAM,+BAAiCqjC,EAAMY,WAAW,MAExGoC,MACAp4B,EAAI,QACHqc,IAAM+Y,EAAM/Y,MACZT,IAAMwZ,EAAMxZ,IACVwZ,EAAMvuB,KAAK5W,OAAS+P,GAAG,IACxBq4B,GAAQjD,EAAMvuB,KAAK6H,MAAMsQ,OAAO1T,SAAStL,GAAI,EAAIA,KAChDmJ,KAAOkvB,EAAM,KACblvB,MAAmB,IAAXkvB,EAAM,KACdlvB,MAAmB,IAAXkvB,EAAM,GAAW,MACzBlvB,MAAmB,IAAXkvB,EAAM,GAAW,IAAM,OAC/B,IACAxxB,KAAOuuB,EAAMvuB,KAAK6H,MAAMsQ,OAAO1T,SAAStL,GAAIo4B,EAAKjvB,KAAOnJ,MACxDo4B,EAAKjvB,UACL7C,OAAOI,WAAWmH,QAAQjc,KAAKwmC,QAC/B3mC,KAAKwN,GAAaurB,gBAAiB,cAEQ,KAAzCxL,OAAO1T,SAAS8pB,EAAM+C,iBAC1B7oC,KAAKknC,mBAAmBpB,EAAMY,eAG5BvkC,KAAKwN,GAAaurB,gBAAiB,cAFnC/4B,KAAKwN,GAAa8pB,YAAaz5B,KAAKoO,IAAK,GAAI3L,OAAM,+BAAiCqjC,EAAMY,WAAW,QAKzG,IAAgB,IAAZkC,EAAe,IACpBI,GAAQhpC,KAAK6lC,aAAa7tB,MAAM8tB,EAAMY,SAAW,MACpC,IAAbsC,EAAM,IAAyB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,IAAyB,IAAbA,EAAM,GAAU,KAEnE,GADDC,GAAa,EACRnoC,EAAI,EAAGA,EAAI,EAAGA,MACK,IAAbmoC,EAAmBD,EAAMloC,MAE1B,KACNkoC,EAAM5pB,MAAM,EAAG4pB,EAAMroC,SACvB,GAAKsoC,EAAa,OACVA,EAAaD,EAAM,IAAM,MACjC,GAAKC,EAAa,OACVA,EAAaD,EAAM,IAAM,MACjC,GAAKC,EAAa,MAClB,IAAMA,EAAaD,EAAM,IAAM,SAGjCzxB,KAAOyxB,EAEe,IAAxBlD,EAAM+C,mBACHK,yBAAyBpD,EAAMvuB,MACrBvX,KAAKknC,mBAAmBpB,EAAMY,YAEtC1mC,KAAKmpC,uBAGHhnC,KAAKwN,GAAay5B,4BAFlBjnC,KAAKwN,GAAaurB,gBAAiB,cAKrCiO,mBAAoB,QAEtBT,aAAc,MACd,KACA1oC,KAAKknC,mBAAmBpB,EAAMY,2BAC5BvkC,KAAKwN,GAAa8pB,YAAaz5B,KAAKoO,IAAK,GAAI3L,OAAM,+BAAiCqjC,EAAMY,WAAW,EAGxG1mC,MAAK0oC,gBACDxmB,cACErc,OAAOK,UAAWlG,KAAKgX,OAAOI,WAAWlC,YAE5CwzB,aAAc,QAEhB1xB,OAAOI,WAAWmH,QAAQjc,KAAKwjC,cAIjC3jC,KAAKwN,GAAa8pB,YAAaz5B,KAAKoO,IAAK,GAAI3L,OAAM,mBAAqBmmC,IAAU,KACjFrxB,KAAOvX,KAAK6lC,aAAa7tB,MAAM8tB,EAAMY,SAAW,GACjD1mC,KAAKknC,mBAAmBpB,EAAMY,gBAC5BvkC,KAAKwN,GAAa8pB,YAAaz5B,KAAKoO,IAAK,GAAI3L,OAAM,+BAAiCqjC,EAAMY,WAAW,QAEvG1vB,OAAOI,WAAWmH,QAAQjc,KAAKwjC,QAC/B3jC,KAAKwN,GAAa6qB,sBAElBsL,GAAMS,eAUV,iCACE,SAAkChvB,MACnCN,GAAQjX,KAAKgX,OAAOI,cAEnBH,MAID8D,GAAS,CAER9D,GAAM/B,SACHA,KAAO,GAAIC,QAEfD,GAAO+B,EAAM/B,OAEZm0B,qBAAuB9xB,EAAK,KAC5B+xB,qBAAuB/xB,EAAK,KAC5BgyB,qBAAuBhyB,EAAK,KAC5BiyB,mBAAqBjyB,EAAK,GAAK,KAC/BkyB,cAAmC,GAAR,EAAVlyB,EAAK,OAEvBmyB,GAAqB,GAAVnyB,EAAK,KACX,MAIJ,GAHD9J,MAGK3M,EAAI,EAAGA,EAAI4oC,EAAU5oC,IAAK,IAC7B+Y,GAAsB,IAAftC,EAAKwD,GAAgBxD,EAAKwD,EAAS,MACpC,MAGL,GADD1F,GAAM,GAAID,YAAWyE,GAChBugB,EAAI,EAAGA,EAAIvgB,EAAMugB,MACpBA,GAAK7iB,EAAKwD,EAASqf,OAKpB,GADDuP,GAAc,QACTC,EAAK,EAAGA,EAAK,EAAGA,IAAM,IACzBtO,GAAIjmB,EAAIu0B,GAAI/2B,SAAS,GACrByoB,GAAE36B,OAAS,MACT,IAAM26B,MAEGA,IAGZ9R,MAAQmgB,KAEH9vB,OACL7C,OAAOI,WAAWlC,KAAKG,IAAMA,IACzBgU,GAAUC,SAASjU,MAG1Bw0B,GAAWtyB,EAAKwD,WAIf,GAAIhS,GAAK,EAAGA,EAAK8gC,EAAU9gC,IAAM,IAChC+gC,GAAuB,IAAfvyB,EAAKwD,GAAgBxD,EAAKwD,EAAS,MACrC,MAEL,GADDzF,GAAM,GAAIF,YAAW00B,GAChBC,EAAM,EAAGA,EAAMD,EAAOC,MACzBA,GAAOxyB,EAAKwD,EAASgvB,MAEjBD,OACL9yB,OAAOI,WAAWlC,KAAKI,IAAMA,SAG7BpP,OAAOgP,EAAMmU,GAAU2gB,YAAYv8B,OAGtCw8B,GAAajqC,KAAKqO,SAASrD,UAAUN,QAE9B8e,MAAQtU,EAAKsU,QACb3B,QAAU3S,EAAK2S,UACfC,MAAQ5S,EAAK4S,QACbE,aAAe9S,EAAK8S,eACpBG,UAAYjT,EAAKiT,YACjBF,SAAW/S,EAAK+S,WAChBV,MAAQ0iB,EAAW1iB,QAAUrS,EAAKwS,aAAeuiB,EAAW1iB,MAAQrS,EAAKwS,eACzED,OAASwiB,EAAWxiB,SAAWvS,EAAK0S,cAAgBqiB,EAAW1iB,MAAQrS,EAAK0S,gBAElFpd,SAAWxK,KAAKqO,SAASrD,UAAUR,SAAW0K,EAAKqT,YACnDiJ,KAAO,GAAIpc,YAAWmC,EAAK5W,UAC3B6wB,KAAKlpB,IAAIiP,KACRrC,KAAOA,UAWV,+BACE,SAAgCg1B,UACR,KAAO,MAAO,KAAO,KAAO,MAAO,KAAO,KAAO,MAAO,KAAO,KAAO,MAAO,IAAM,MACnFA,UAW1B,sCACE,SAAuCx3B,UAEf,KAAM,MAAO,MAAO,MAAO,OADnB,GAAPA,KAAe,UAa1C,4BACE,SAA6BA,UAER,EAAG,GADI,EAAPA,UAavB,2BACE,SAA4Bg0B,MAC7ByD,GAAkBnqC,KAAK6lC,aAAaW,MAAM,EAAG,eAC5CX,aAAa7tB,MAAM,GACjBmyB,IAAoBzD,EAAW,UAGnC,mBACA,cACC3uB,GAAS/X,KAAKqO,SAAS0I,YAAY,oBACnCgB,QACKA,QAEF5V,KAAKwN,GAAa8pB,YAAa,GAAIh3B,OAAM,+BAI7C,aACA,iBACIzC,MAAKqO,SAAS0I,YAAY,iBAG9B,aACA,iBACI/W,MAAKqO,SAAS0I,YAAY,mBAG9B,kBACE,SAAmBQ,WACH,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,KAAZA,EAAK,IAA2B,IAAZA,EAAK,WASvE,oBACE,SAAqB6yB,MACtBtvB,cACQ,YACA,UAGK,EAAbsvB,MACK3/B,UAAW,IAGH,EAAb2/B,MACKz/B,UAAW,GAGbmQ,SC1tBWuvB,IACbtR,GAAYuR,GACZtI,GAAWuI,GCChB76B,GAAgBuM,GAAOvM,cACvBE,GAAeqM,GAAOrM,aACtBD,GAAesM,GAAOtM,aACtBG,GAAamM,GAAOnM,WACpBC,GAAekM,GAAOlM,aAEtBy6B,yBACS70B,kBACNA,QAAU9P,OAAOK,UAAWyP,QAC5Bc,IAAM,QACN8gB,QAAU,QACVhE,SAAW,OACXkX,UAAY,UACZC,WAAa1qC,KAAK2V,QAAQ+0B,YAAc,OACxC30B,YAAc/V,KAAK2V,QAAQI,iBAC3BH,UAAY5V,KAAK2V,QAAQC,eACzB+0B,cAAgB,OAChBC,QAAUC,YAAY7qC,KAAK8qC,aAAa/8B,KAAK/N,MAAO,SACpD+qC,WAAa,OACb1T,QAAUr3B,KAAK2V,QAAQq1B,YACvBC,SAAW,mDAKX58B,SAAS68B,SAAS,cAAelsB,SACjC3Q,SAAS68B,SAAS,YAAalsB,SAC/B3Q,SAAS68B,SAAS,SAAUnsB,SAE5B0rB,UAAYzqC,KAAKqO,SAAS68B,SAAS,WAAYlJ,KAAWM,WAAW,SACrEj0B,SAAS68B,SAAS,oBAAqBjrB,SAEvC5R,SAAS68B,SAAS,gBAAiBxhB,SAGnCyhB,YAAcnrC,KAAKqO,SAAS68B,SAAS,cAAehrB,KAAenI,OAAQ,cAAewI,SAAU,SACpG6qB,UAAYprC,KAAKqO,SAAS68B,SAAS,YAAahrB,KAAenI,OAAQ,YAAawI,SAAU,SAG9FlS,SAAS68B,SAAS,aAAcnS,KAAa3c,YAAa,mBAG1D/N,SAAS68B,SAAS,cAAe3W,SAGjC8W,IAAMrrC,KAAKqO,SAAS68B,SAAS,MAAOntB,KAAMnI,UAAW5V,KAAK4V,iBAC1D01B,uDAIAv/B,GAAG2D,GAAc8R,gBAAiBxhB,KAAKurC,gBAAgBx9B,KAAK/N,YAE5D+L,GAAG6D,GAAammB,aAAc/1B,KAAKqrC,IAAI10B,iBAAiB5I,KAAK/N,KAAKqrC,WAElEt/B,GAAG6D,GAAaonB,cAAeh3B,KAAKqrC,IAAIz0B,SAAS7I,KAAK/N,KAAKqrC,WAE3Dt/B,GAAG4D,GAAaurB,gBAAiBl7B,KAAKwrC,kBAAkBz9B,KAAK/N,YAE7D+L,GAAG4D,GAAa6qB,eAAgBx6B,KAAKyrC,iBAAiB19B,KAAK/N,YAE3D+L,GAAG2D,GAAcyR,aAAcnhB,KAAK0rC,aAAa39B,KAAK/N,YAEtD+L,GAAG4D,GAAa8pB,YAAaz5B,KAAK2rC,cAAc59B,KAAK/N,YAErD+L,GAAG6D,GAAag8B,YAAa5rC,KAAK6rC,cAAc99B,KAAK/N,wCAGnD0B,EAAMoqC,EAAK3iC,EAAK4iC,MACnBrgC,cACShK,mBACOoqC,QAAS3iC,EAAI6iC,mBACnBD,QAET1U,QAAQl1B,KApEC,YAoEeuJ,mDAIxBvJ,KAAKyN,GAAagb,uDAENlpB,QACZS,KAAKyN,GAAaulB,eAAgBzzB,wCAG3BuqC,EAAQvgC,IACf1L,KAAKorC,UAAUtqB,UAAY9gB,KAAKmrC,YAAYrqB,SAAW9gB,KAAK0qC,WAAa,QACvEA,kBACAwB,SAASx8B,GAAcyR,aAAc8qB,EAAQvgC,GAAO,IAChD1L,KAAK0qC,YAAc,SACvBwB,SAASx8B,GAAcyR,aAAc8qB,EAAQvgC,GAAO,QACpDvJ,KAAK2N,GAAWq8B,0BAChBd,IAAIlzB,qDAIE2zB,EAAKpgC,EAAOqgC,OACZ5rC,KAAV4rC,OACO,QAELG,SAASx8B,GAAcyR,aAAc2qB,EAAKpgC,EAAOqgC,yCAGzCD,EAAKpgC,EAAOqgC,OACZ5rC,KAAV4rC,OACO,QAELG,SAASt8B,GAAag8B,YAAaE,EAAKpgC,EAAOqgC,2CAGrCh0B,MACI,gBAAfA,EAAO3J,IAAuB,IAC5Bg+B,mBAEGnB,SAAWlzB,EAAOC,UACfsf,GAAW+U,MAAMrsC,KAAKirC,SAAUjrC,KAAKu3B,SAC7C,MAAO7rB,QACFwgC,SAAS,oBAAqB,cAAexgC,GAAO,OAGvD0gC,cACEpsC,KAAK0qC,WAAa,QACfA,kBACA4B,kBAEAnqC,KAAK2N,GAAWq8B,0BAChBd,IAAIlzB,yBAMNsyB,UAAU8B,SAASH,GAAO,GAC/B,MAAO1gC,QACFwgC,SAAS,oBAAqB,WAAYxgC,GAAO,GAGpD1L,KAAKyqC,UAAUjS,SAAWx4B,KAAKyqC,UAAUjS,QAAQE,MAAQ14B,KAAKyqC,UAAUjS,QAAQpzB,UAC7EiJ,SAAS68B,SAAS,iBAAkBlsB,WACpC3Q,SAAS68B,SAAS,aAAclsB,WAChCosB,UAAUrzB,OAAS,sBACnBy0B,WAAaxsC,KAAKqO,SAAS68B,SAAS,aAAchrB,KAAcnI,OAAO,aAAawI,SAAU,SAC9FksB,OAAO,aAAc/8B,GAAc+Q,YAAazgB,KAAKyqC,UAAUjS,QAAQE,WAEvEgU,YAAYN,OAEK,cAAfr0B,EAAO3J,UACXs8B,WAAa1qC,KAAK2V,QAAQ+0B,YAAc,OACxCD,UAAU3H,WAAW9iC,KAAKorC,UAAU30B,KAAK,QACzCtU,KAAKwN,GAAa0pB,cACE,mBAAfthB,EAAO3J,UACZs8B,WAAa1qC,KAAK2V,QAAQ+0B,YAAc,OACxCD,UAAU3H,WAAW9iC,KAAKorC,UAAU30B,KAAK,QACzCg2B,OAAO,SAAU18B,GAAa6M,gBACZ,cAAd7E,EAAO3J,WACXs8B,WAAa1qC,KAAK2V,QAAQ+0B,YAAc,OACxCD,UAAUjS,QAAQpzB,IAAM2S,EAAOC,aAC/B20B,QAAU3sC,KAAKqO,SAAS68B,SAAS,SAAUhvB,SACzClc,KAAKyqC,UAAUjS,QAAQpzB,OACxBpF,KAAKyqC,UAAUjS,QAAQG,WACnB34B,KAAKyqC,UAAUjS,QAAQhc,mBACnB,8BACC,mBAEVmwB,QAAQ5gC,GAAGgE,GAAaoN,UAAWnd,KAAK4sC,YAAY7+B,KAAK/N,mDAK3DmC,KAAKwN,GAAa0pB,iDAGb+S,GACLpsC,KAAK+V,mBACHA,YAAc/V,KAAKyqC,UAAU1S,eAAiB/3B,KAAKyqC,UAAU1S,eAAiB,GAEjF/3B,KAAKyqC,UAAUtI,WAAa,GAAKniC,KAAKyqC,UAAUlX,SAAW6Y,EAAM7Y,cAC9DmX,WAAa1qC,KAAK2V,QAAQ+0B,YAAc,EAEzC1qC,KAAK0qC,WAAa,QACfA,kBACA4B,kBAEAnqC,KAAK2N,GAAWq8B,0BAChBd,IAAIlzB,2DAKTnY,KAAK0qC,WAAa,IAAM,GAAI3G,OAAO8I,UAAY7sC,KAAK+qC,WAAa,aAGhEA,YAAa,GAAIhH,OAAO8I,UACzB7sC,KAAK4V,UAAU0D,SAAS3Y,OAAS,OAC9B2rC,eACA,IAEDQ,GAAc9sC,KAAK4V,UAAUk3B,YAC7BC,EAAc/sC,KAAK4V,UAAU0D,SAASjH,MAAMrS,KAAK4V,UAAU0D,SAAS3Y,OAAS,EAC7EX,MAAK4V,UAAUiB,YAAc,IAC3Bi2B,EAAcC,QACXn3B,UAAUk3B,YAAcC,IACfA,QAETT,eAGLU,GAAYhtC,KAAK4V,UAAU0D,SAASlB,IAAIpY,KAAK4V,UAAU0D,SAAS3Y,OAAS,EACzEmsC,GAAcE,EAAgC,EAAnBhtC,KAAK+V,mBAC7BH,UAAUk3B,YAAcE,EAAgC,EAAnBhtC,KAAK+V,aAE7Ci3B,EAA+B,EAAnBhtC,KAAK+V,kBACds1B,IAAI/yB,OAAO00B,EAAgC,EAAnBhtC,KAAK+V,aAEhC+2B,EAAcE,EAAYhtC,KAAK+V,kBAC5Bu2B,mDAMLtsC,KAAKorC,UAAUtqB,UAAW9gB,KAAKmrC,YAAYrqB,YAG3CyY,GAAOv5B,KAAKyqC,UAAUwC,YAEtB1T,GAASA,EAAKuJ,YAAevJ,EAAKwJ,YAG/B,IACDhtB,GAAc/V,KAAK+V,YAAc/V,KAAK+V,YAAc,EACpDyY,GAAU,GAAIuV,OAAO8I,YACnBtT,GAAQA,EAAKuJ,cAChBtU,EAAUxuB,KAAK2qC,eAAiB,IAAO50B,SACnC40B,cAAgBnc,OAChBie,OAAO,cAAe/8B,GAAc+Q,YAAazgB,KAAKyW,gBARxDg0B,UAAU1H,YAAYxJ,EAAK9iB,KAAK,QAChCg2B,OAAO,YAAa/8B,GAAc+Q,YAAa8Y,EAAK9iB,mCAYvDA,QACC8gB,QAAUD,GAAW4V,SAASz2B,QAC9BA,IAAMA,OACN61B,2DAIStsC,KAAK4qC,cACdh+B,IAAI8C,GAAc8R,gBAAiBxhB,KAAKurC,sBACxC3+B,IAAIgD,GAAammB,aAAc/1B,KAAKqrC,IAAI10B,uBACxC/J,IAAIgD,GAAaonB,cAAeh3B,KAAKqrC,IAAIz0B,eAEzChK,IAAI+C,GAAaurB,gBAAiBl7B,KAAKwrC,wBACvC5+B,IAAI+C,GAAa6qB,eAAgBx6B,KAAKyrC,uBAEtCJ,IAAM,UACNJ,SAAW,cClQd/6B,GAAmB+L,GAAO/L,iBAC1BN,GAAeqM,GAAOrM,2CAGbsS,4EACLA,aACDirB,YACAC,KAAOC,EAAOD,OACdA,KAAKE,SAAS1/B,EAAKu/B,OAAQjrB,KAC3B7T,SAAW,GAAI5B,IAAQyD,MACvBq9B,aAAc,2EAIdC,SAASvhC,KAAK2D,GAAammB,aAAc,cACtCsV,GAAM/7B,EAAKjB,SAAS0I,YAAY,WACjCzH,EAAKi+B,YAAa,IACfE,GAAOn+B,EAAK89B,KAAKM,UAAU,UAAW,UAAY,mBACnDN,KAAKO,SAASr+B,EAAKs+B,KAAM,sBACzBC,SAASC,YAAYL,KAEvBF,aAAc,gFACPlC,EAAI50B,YAGbxK,KAAK,UAAW,aACdvB,MAAMqjC,4DAKT7/B,GAAQlO,YACLmF,eAAenF,KAAM,4BAEjBkO,GAAM8/B,yBAEVv3B,KACGhJ,OAAOgJ,IAAMA,EACdvI,EAAM+/B,SASH57B,MAAMoE,MARNy3B,UACAjiC,KAAK,QAAS,aACZoG,MAAMoE,OAERxK,KAAK,UAAW,aACd8hC,YAKJ9hC,KAAK,UAAW,aACd6gC,YAAc,mBAGV,uCAIXr2B,0DAAMzW,KAAKyN,OAAOgJ,GAClBA,UAGA+2B,SAAWxtC,KAAKqO,SAAS68B,SAAS,sBAAuBV,KAAoBQ,OAAOhrC,KAAM4V,UAAW5V,KAAK0K,aAC1G2D,SAASvO,YACT2W,IAAMA,OACN+2B,SAAS9sB,KAAKjK,QACd03B,mBACAC,wDAIDpuC,KAAKutC,mBACFl/B,SAASmB,eACTnB,SAAW,GAAI5B,IAAQyD,SACvBs9B,SAAWxtC,KAAKqO,SAAS68B,SAAS,sBAAuBV,KAAoB50B,UAAW5V,KAAK0K,aAC7F2D,SAASvO,YACTquC,mBACAX,SAAS9sB,KAAK1gB,KAAKyW,iIAMrBpI,SAASmB,wGA/EyB69B"}