{"version":3,"file":"index.min.js","sources":["../../xgplayer-utils/es/models/media-info.js","../../../node_modules/rollup-plugin-node-builtins/src/es6/events.js","../../xgplayer-utils/es/context.js","../../xgplayer-utils/es/env/utf8.js","../../xgplayer-utils/es/models/media-sample.js","../../xgplayer-utils/es/models/media-segment.js","../../xgplayer-utils/es/models/media-segment-list.js","../../xgplayer-utils/es/models/track-meta.js","../../xgplayer-utils/es/models/track-sample.js","../../xgplayer-utils/es/mse/index.js","../../xgplayer-utils/es/write/stream.js","../../xgplayer-utils/es/write/buffer.js","../../xgplayer-utils/es/crypto/index.js","../../xgplayer-buffer/es/track.js","../../xgplayer-buffer/es/buffer.js","../../xgplayer-buffer/es/presouce.js","../../xgplayer-loader/es/fetch-loader.js","../../xgplayer-codec/es/h264/nalunit/golomb.js","../../xgplayer-codec/es/h264/nalunit/sps.js","../../xgplayer-codec/es/h264/nalunit/index.js","../../xgplayer-codec/es/aac/aac-helper.js","../../xgplayer-codec/es/compatibility.js","../../xgplayer-demux/es/hls/demuxer/m3u8parser.js","../../xgplayer-demux/es/hls/demuxer/ts.js","../../xgplayer-demux/es/hls/playlist.js","../../xgplayer-demux/es/flv/amf-parser.js","../../xgplayer-demux/es/flv/index.js","../../xgplayer-utils/es/constants/events.js","../../xgplayer-utils/es/env/sniffer.js","../../xgplayer-utils/es/env/isle.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/concat.js","../../xgplayer-utils/node_modules/concat-typed-array/lib/index.js","../../xgplayer-utils/es/index.js","../../xgplayer-buffer/es/index.js","../../xgplayer-loader/es/index.js","../../xgplayer-codec/es/index.js","../../xgplayer-remux/src/mp4/fmp4.js","../../xgplayer-remux/src/mp4/index.js","../../xgplayer-demux/es/index.js","../src/hls-live.js","../src/index.js"],"sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isObjectFilled = function isObjectFilled(obj) {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      if (obj[key] === null) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nvar MediaInfo = function () {\n  function MediaInfo() {\n    _classCallCheck(this, MediaInfo);\n\n    this.mimeType = null;\n    this.duration = null;\n\n    this.hasVideo = null;\n    this.video = {\n      codec: null,\n      width: null,\n      height: null,\n      profile: null,\n      level: null,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      chromaFormat: null,\n      parRatio: {\n        width: 1,\n        height: 1\n      }\n    };\n\n    this.hasAudio = null;\n\n    this.audio = {\n      codec: null,\n      sampleRate: null,\n      sampleRateIndex: null,\n      channelCount: null\n    };\n  }\n\n  _createClass(MediaInfo, [{\n    key: \"isComplete\",\n    value: function isComplete() {\n      return MediaInfo.isBaseInfoReady(this) && MediaInfo.isVideoReady(this) && MediaInfo.isAudioReady(this);\n    }\n  }], [{\n    key: \"isBaseInfoReady\",\n    value: function isBaseInfoReady(mediaInfo) {\n      return isObjectFilled(mediaInfo);\n    }\n  }, {\n    key: \"isVideoReady\",\n    value: function isVideoReady(mediaInfo) {\n      if (!mediaInfo.hasVideo) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }, {\n    key: \"isAudioReady\",\n    value: function isAudioReady(mediaInfo) {\n      if (!mediaInfo.hasAudio) {\n        return true;\n      }\n\n      return isObjectFilled(mediaInfo.video);\n    }\n  }]);\n\n  return MediaInfo;\n}();\n\nexport default MediaInfo;","'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport MediaInfo from './models/media-info';\nimport { EventEmitter } from 'events';\n\nvar DIRECT_EMIT_FLAG = '__TO__';\n\nvar Context = function () {\n  function Context() {\n    var allowedEvents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, Context);\n\n    this._emitter = new EventEmitter();\n    if (!this._emitter.off) {\n      this._emitter.off = this._emitter.removeListener;\n    }\n    this._instanceMap = {}; // 所有的解码流程实例\n    this._clsMap = {}; // 构造函数的map\n    this._inited = false;\n    this.mediaInfo = new MediaInfo();\n    this.allowedEvents = allowedEvents;\n    this._hooks = {}; // 注册在事件前/后的钩子，例如 before('DEMUX_COMPLETE')\n  }\n\n  /**\n   * 从上下文中获取解码流程实例，如果没有实例，构造一个\n   * @param tag\n   * @param args\n   * @returns {*}\n   */\n\n\n  _createClass(Context, [{\n    key: 'getInstance',\n    value: function getInstance(tag) {\n      var instance = this._instanceMap[tag];\n      if (instance) {\n        return instance;\n      } else {\n        // throw new Error(`${tag}实例尚未初始化`)\n        return null;\n      }\n    }\n\n    /**\n     * 初始化具体实例\n     * @param tag\n     * @param args\n     */\n\n  }, {\n    key: 'initInstance',\n    value: function initInstance(tag) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var a = args[0],\n          b = args[1],\n          c = args[2],\n          d = args[3];\n\n      if (this._clsMap[tag]) {\n        var newInstance = new this._clsMap[tag](a, b, c, d);\n        this._instanceMap[tag] = newInstance;\n        if (newInstance.init) {\n          newInstance.init(); // TODO: lifecircle\n        }\n        return newInstance;\n      } else {\n        throw new Error(tag + '\\u672A\\u5728context\\u4E2D\\u6CE8\\u518C');\n      }\n    }\n\n    /**\n     * 避免大量的initInstance调用，初始化所有的组件\n     * @param config\n     */\n\n  }, {\n    key: 'init',\n    value: function init(config) {\n      if (this._inited) {\n        return;\n      }\n      for (var tag in this._clsMap) {\n        // if not inited, init an instance\n        if (this._clsMap.hasOwnProperty(tag) && !this._instanceMap[tag]) {\n          this.initInstance(tag, config);\n        }\n      }\n      this._inited = true;\n    }\n\n    /**\n     * 注册一个上下文流程，提供安全的事件发送机制\n     * @param tag\n     * @param cls\n     */\n\n  }, {\n    key: 'registry',\n    value: function registry(tag, cls) {\n      var _this2 = this;\n\n      var emitter = this._emitter;\n      var checkMessageName = this._isMessageNameValid.bind(this);\n      var self = this;\n      var enhanced = function (_cls) {\n        _inherits(enhanced, _cls);\n\n        function enhanced(a, b, c) {\n          _classCallCheck(this, enhanced);\n\n          var _this = _possibleConstructorReturn(this, (enhanced.__proto__ || Object.getPrototypeOf(enhanced)).call(this, a, b, c));\n\n          _this.listeners = {};\n          _this.onceListeners = {};\n          _this.TAG = tag;\n          _this._context = self;\n          return _this;\n        }\n\n        _createClass(enhanced, [{\n          key: 'on',\n          value: function on(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.listeners[messageName]) {\n              this.listeners[messageName].push(callback);\n            } else {\n              this.listeners[messageName] = [callback];\n            }\n\n            emitter.on('' + messageName + DIRECT_EMIT_FLAG + tag, callback); // 建立定向通信监听\n            return emitter.on(messageName, callback);\n          }\n\n          /**\n           * 在某个事件触发前执行\n           * @param messageName\n           * @param callback\n           */\n\n        }, {\n          key: 'before',\n          value: function before(messageName, callback) {\n            checkMessageName(messageName);\n            if (self._hooks[messageName]) {\n              self._hooks[messageName].push(callback);\n            } else {\n              self._hooks[messageName] = [callback];\n            }\n          }\n        }, {\n          key: 'once',\n          value: function once(messageName, callback) {\n            checkMessageName(messageName);\n\n            if (this.onceListeners[messageName]) {\n              this.onceListeners[messageName].push(callback);\n            } else {\n              this.onceListeners[messageName] = [callback];\n            }\n\n            emitter.once('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n            return emitter.once(messageName, callback);\n          }\n        }, {\n          key: 'emit',\n          value: function emit(messageName) {\n            checkMessageName(messageName);\n            // console.log('emit ', messageName);\n\n            var beforeList = self._hooks ? self._hooks[messageName] : null;\n\n            if (beforeList) {\n              for (var i = 0, len = beforeList.length; i < len; i++) {\n                var callback = beforeList[i];\n                callback();\n              }\n            }\n\n            for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              args[_key2 - 1] = arguments[_key2];\n            }\n\n            return emitter.emit.apply(emitter, [messageName].concat(args));\n          }\n\n          /**\n           * 定向发送给某个组件单例的消息\n           * @param messageName\n           * @param args\n           */\n\n        }, {\n          key: 'emitTo',\n          value: function emitTo(tag, messageName) {\n            checkMessageName(messageName);\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n              args[_key3 - 2] = arguments[_key3];\n            }\n\n            return emitter.emit.apply(emitter, ['' + messageName + DIRECT_EMIT_FLAG + tag].concat(args));\n          }\n        }, {\n          key: 'off',\n          value: function off(messageName, callback) {\n            checkMessageName(messageName);\n            return emitter.off(messageName, callback);\n          }\n        }, {\n          key: 'removeListeners',\n          value: function removeListeners() {\n            var hasOwn = Object.prototype.hasOwnProperty.bind(this.listeners);\n\n            for (var messageName in this.listeners) {\n              if (hasOwn(messageName)) {\n                var callbacks = this.listeners[messageName] || [];\n                for (var i = 0; i < callbacks.length; i++) {\n                  var callback = callbacks[i];\n                  emitter.off(messageName, callback);\n                  emitter.off('' + messageName + DIRECT_EMIT_FLAG + tag, callback);\n                }\n              }\n            }\n\n            for (var _messageName in this.onceListeners) {\n              if (hasOwn(_messageName)) {\n                var _callbacks = this.onceListeners[_messageName] || [];\n                for (var _i = 0; _i < _callbacks.length; _i++) {\n                  var _callback = _callbacks[_i];\n                  emitter.off(_messageName, _callback);\n                  emitter.off('' + _messageName + DIRECT_EMIT_FLAG + tag, _callback);\n                }\n              }\n            }\n          }\n\n          /**\n           * 在组件销毁时，默认将它注册的事件全部卸载，确保不会造成内存泄漏\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            // step1 unlisten events\n            this.removeListeners();\n            this.listeners = {};\n\n            // step2 release from context\n            delete self._instanceMap[tag];\n            if (_get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this)) {\n              return _get(enhanced.prototype.__proto__ || Object.getPrototypeOf(enhanced.prototype), 'destroy', this).call(this);\n            }\n          }\n        }]);\n\n        return enhanced;\n      }(cls);\n      this._clsMap[tag] = enhanced;\n\n      /**\n       * get instance immediately\n       * e.g const instance = context.registry(tag, Cls)(config)\n       * */\n      return function () {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        return _this2.initInstance.apply(_this2, [tag].concat(args));\n      };\n    }\n\n    /**\n     * 对存在的实例进行\n     */\n\n  }, {\n    key: 'destroyInstances',\n    value: function destroyInstances() {\n      var _this3 = this;\n\n      Object.keys(this._instanceMap).forEach(function (tag) {\n        if (_this3._instanceMap[tag].destroy) {\n          _this3._instanceMap[tag].destroy();\n        }\n      });\n    }\n\n    /**\n     * 编解码流程无需关注事件的解绑\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._emitter = null;\n      this.allowedEvents = [];\n      this._clsMap = null;\n      this._context = null;\n      this._hooks = null;\n      this.destroyInstances();\n    }\n\n    /**\n     * 对信道进行收拢\n     * @param messageName\n     * @private\n     */\n\n  }, {\n    key: '_isMessageNameValid',\n    value: function _isMessageNameValid(messageName) {\n      if (!this.allowedEvents.indexOf(messageName) < 0) {\n        throw new Error('unregistered message name: ' + messageName);\n      }\n    }\n  }]);\n\n  return Context;\n}();\n\nexport default Context;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UTF8 = function () {\n  function UTF8() {\n    _classCallCheck(this, UTF8);\n  }\n\n  _createClass(UTF8, null, [{\n    key: 'decode',\n    value: function decode(uint8array) {\n      var out = [];\n      var input = uint8array;\n      var i = 0;\n      var length = uint8array.length;\n\n      while (i < length) {\n        if (input[i] < 0x80) {\n          out.push(String.fromCharCode(input[i]));\n          ++i;\n          continue;\n        } else if (input[i] < 0xC0) {\n          // fallthrough\n        } else if (input[i] < 0xE0) {\n          if (UTF8._checkContinuation(input, i, 1)) {\n            var ucs4 = (input[i] & 0x1F) << 6 | input[i + 1] & 0x3F;\n            if (ucs4 >= 0x80) {\n              out.push(String.fromCharCode(ucs4 & 0xFFFF));\n              i += 2;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF0) {\n          if (UTF8._checkContinuation(input, i, 2)) {\n            var _ucs = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F;\n            if (_ucs >= 0x800 && (_ucs & 0xF800) !== 0xD800) {\n              out.push(String.fromCharCode(_ucs & 0xFFFF));\n              i += 3;\n              continue;\n            }\n          }\n        } else if (input[i] < 0xF8) {\n          if (UTF8._checkContinuation(input, i, 3)) {\n            var _ucs2 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 | (input[i + 2] & 0x3F) << 6 | input[i + 3] & 0x3F;\n            if (_ucs2 > 0x10000 && _ucs2 < 0x110000) {\n              _ucs2 -= 0x10000;\n              out.push(String.fromCharCode(_ucs2 >>> 10 | 0xD800));\n              out.push(String.fromCharCode(_ucs2 & 0x3FF | 0xDC00));\n              i += 4;\n              continue;\n            }\n          }\n        }\n        out.push(String.fromCharCode(0xFFFD));\n        ++i;\n      }\n\n      return out.join('');\n    }\n  }, {\n    key: '_checkContinuation',\n    value: function _checkContinuation(uint8array, start, checkLength) {\n      var array = uint8array;\n      if (start + checkLength < array.length) {\n        while (checkLength--) {\n          if ((array[++start] & 0xC0) !== 0x80) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }]);\n\n  return UTF8;\n}();\n\nexport default UTF8;","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MediaSample = function () {\n  function MediaSample(info) {\n    var _this = this;\n\n    _classCallCheck(this, MediaSample);\n\n    var _default = MediaSample.getDefaultInf();\n\n    if (!info || Object.prototype.toString.call(info) !== '[object Object]') {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    Object.entries(sample).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          k = _ref2[0],\n          v = _ref2[1];\n\n      _this[k] = v;\n    });\n  }\n\n  _createClass(MediaSample, null, [{\n    key: 'getDefaultInf',\n    value: function getDefaultInf() {\n      return {\n        dts: null,\n        pts: null,\n        duration: null,\n        position: null,\n        isRAP: false, // is Random access point\n        originDts: null\n      };\n    }\n  }]);\n\n  return MediaSample;\n}();\n\nexport default MediaSample;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MediaSegment = function () {\n    function MediaSegment() {\n        _classCallCheck(this, MediaSegment);\n\n        this.startDts = -1;\n        this.endDts = -1;\n        this.startPts = -1;\n        this.endPts = -1;\n        this.originStartDts = -1;\n        this.originEndDts = -1;\n        this.randomAccessPoints = [];\n        this.firstSample = null;\n        this.lastSample = null;\n    }\n\n    _createClass(MediaSegment, [{\n        key: \"addRAP\",\n        value: function addRAP(sample) {\n            sample.isRAP = true;\n            this.randomAccessPoints.push(sample);\n        }\n    }]);\n\n    return MediaSegment;\n}();\n\nexport default MediaSegment;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MediaSegmentList = function () {\n    function MediaSegmentList(type) {\n        _classCallCheck(this, MediaSegmentList);\n\n        this._type = type;\n        this._list = [];\n        this._lastAppendLocation = -1; // cached last insert location\n    }\n\n    _createClass(MediaSegmentList, [{\n        key: \"isEmpty\",\n        value: function isEmpty() {\n            return this._list.length === 0;\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            this._list = [];\n            this._lastAppendLocation = -1;\n        }\n    }, {\n        key: \"_searchNearestSegmentBefore\",\n        value: function _searchNearestSegmentBefore(beginDts) {\n            var list = this._list;\n            if (list.length === 0) {\n                return -2;\n            }\n            var last = list.length - 1;\n            var mid = 0;\n            var lbound = 0;\n            var ubound = last;\n\n            var idx = 0;\n\n            if (beginDts < list[0].originDts) {\n                idx = -1;\n                return idx;\n            }\n\n            while (lbound <= ubound) {\n                mid = lbound + Math.floor((ubound - lbound) / 2);\n                if (mid === last || beginDts > list[mid].lastSample.originDts && beginDts < list[mid + 1].originDts) {\n                    idx = mid;\n                    break;\n                } else if (list[mid].originDts < beginDts) {\n                    lbound = mid + 1;\n                } else {\n                    ubound = mid - 1;\n                }\n            }\n            return idx;\n        }\n    }, {\n        key: \"_searchNearestSegmentAfter\",\n        value: function _searchNearestSegmentAfter(beginDts) {\n            return this._searchNearestSegmentBefore(beginDts) + 1;\n        }\n    }, {\n        key: \"append\",\n        value: function append(segment) {\n            var list = this._list;\n            var lastAppendIdx = this._lastAppendLocation;\n            var insertIdx = 0;\n\n            if (lastAppendIdx !== -1 && lastAppendIdx < list.length && segment.originStartDts >= list[lastAppendIdx].lastSample.originDts && (lastAppendIdx === list.length - 1 || lastAppendIdx < list.length - 1 && segment.originStartDts < list[lastAppendIdx + 1].originStartDts)) {\n                insertIdx = lastAppendIdx + 1; // use cached location idx\n            } else {\n                if (list.length > 0) {\n                    insertIdx = this._searchNearestSegmentBefore(segment.originStartDts) + 1;\n                }\n            }\n\n            this._lastAppendLocation = insertIdx;\n            this._list.splice(insertIdx, 0, segment);\n        }\n    }, {\n        key: \"getLastSegmentBefore\",\n        value: function getLastSegmentBefore(beginDts) {\n            var idx = this._searchNearestSegmentBefore(beginDts);\n            if (idx >= 0) {\n                return this._list[idx];\n            } else {\n                // -1\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastSampleBefore\",\n        value: function getLastSampleBefore(beginDts) {\n            var segment = this.getLastSegmentBefore(beginDts);\n            if (segment !== null) {\n                return segment.lastSample;\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"getLastRAPBefore\",\n        value: function getLastRAPBefore(beginDts) {\n            var segmentIdx = this._searchNearestSegmentBefore(beginDts);\n            var randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            while (randomAccessPoints.length === 0 && segmentIdx > 0) {\n                segmentIdx--;\n                randomAccessPoints = this._list[segmentIdx].randomAccessPoints;\n            }\n            if (randomAccessPoints.length > 0) {\n                return randomAccessPoints[randomAccessPoints.length - 1];\n            } else {\n                return null;\n            }\n        }\n    }, {\n        key: \"type\",\n        get: function get() {\n            return this._type;\n        }\n    }, {\n        key: \"length\",\n        get: function get() {\n            return this._list.length;\n        }\n    }]);\n\n    return MediaSegmentList;\n}();\n\nexport default MediaSegmentList;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var AudioTrackMeta = function () {\n  function AudioTrackMeta(meta) {\n    _classCallCheck(this, AudioTrackMeta);\n\n    var _default = {\n      sampleRate: 48000,\n      channelCount: 2,\n      codec: 'mp4a.40.2',\n      config: [41, 401, 136, 0],\n      duration: 0,\n      id: 2,\n      refSampleDuration: 21,\n      sampleRateIndex: 3,\n      timescale: 1000,\n      type: 'audio'\n    };\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(AudioTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n    }\n  }]);\n\n  return AudioTrackMeta;\n}();\n\nexport var VideoTrackMeta = function () {\n  function VideoTrackMeta(meta) {\n    _classCallCheck(this, VideoTrackMeta);\n\n    var _default = {\n      avcc: null,\n      sps: new Uint8Array(0),\n      pps: new Uint8Array(0),\n      chromaFormat: 420,\n      codec: 'avc1.640020',\n      codecHeight: 720,\n      codecWidth: 1280,\n      duration: 0,\n      frameRate: {\n        fixed: true,\n        fps: 25,\n        fps_num: 25000,\n        fps_den: 1000\n      },\n      id: 1,\n      level: '3.2',\n      presentHeight: 720,\n      presentWidth: 1280,\n      profile: 'High',\n      refSampleDuration: 40,\n      parRatio: {\n        height: 1,\n        width: 1\n      },\n      timescale: 1000,\n      type: 'video'\n    };\n\n    if (meta) {\n      return Object.assign({}, _default, meta);\n    }\n    return _default;\n  }\n\n  _createClass(VideoTrackMeta, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.init = null;\n      this.sps = null;\n      this.pps = null;\n    }\n  }]);\n\n  return VideoTrackMeta;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var AudioTrackSample = function () {\n  function AudioTrackSample(info) {\n    _classCallCheck(this, AudioTrackSample);\n\n    var _default = AudioTrackSample.getDefault();\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  _createClass(AudioTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n\n  return AudioTrackSample;\n}();\n\nexport var VideoTrackSample = function () {\n  function VideoTrackSample(info) {\n    _classCallCheck(this, VideoTrackSample);\n\n    var _default = VideoTrackSample.getDefault();\n\n    if (!info) {\n      return _default;\n    }\n    var sample = Object.assign({}, _default, info);\n\n    return sample;\n  }\n\n  _createClass(VideoTrackSample, null, [{\n    key: \"getDefault\",\n    value: function getDefault() {\n      return {\n        dts: null,\n        pts: null,\n        isKeyframe: false, // is Random access point\n        originDts: null,\n        data: new Uint8Array()\n      };\n    }\n  }]);\n\n  return VideoTrackSample;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MSE = function () {\n  function MSE(configs, context) {\n    _classCallCheck(this, MSE);\n\n    if (context) {\n      this._context = context;\n      this.emit = context._emitter.emit.bind(context._emitter);\n    }\n\n    this.configs = Object.assign({}, configs);\n    this.container = this.configs.container;\n    this.mediaSource = null;\n    this.sourceBuffers = {};\n    this.preloadTime = this.configs.preloadTime || 1;\n    this.onSourceOpen = this.onSourceOpen.bind(this);\n    this.onTimeUpdate = this.onTimeUpdate.bind(this);\n    this.onUpdateEnd = this.onUpdateEnd.bind(this);\n    this.onWaiting = this.onWaiting.bind(this);\n  }\n\n  _createClass(MSE, [{\n    key: 'init',\n    value: function init() {\n      // eslint-disable-next-line no-undef\n      this.mediaSource = new self.MediaSource();\n      this.mediaSource.addEventListener('sourceopen', this.onSourceOpen);\n      this.container.src = URL.createObjectURL(this.mediaSource);\n      this.url = this.container.src;\n      this.container.addEventListener('timeupdate', this.onTimeUpdate);\n      this.container.addEventListener('waiting', this.onWaiting);\n    }\n  }, {\n    key: 'resetContext',\n    value: function resetContext(newCtx) {\n      this._context = newCtx;\n    }\n  }, {\n    key: 'onTimeUpdate',\n    value: function onTimeUpdate() {\n      this.emit('TIME_UPDATE', this.container);\n    }\n  }, {\n    key: 'onWaiting',\n    value: function onWaiting() {\n      this.emit('WAITING', this.container);\n    }\n  }, {\n    key: 'onSourceOpen',\n    value: function onSourceOpen() {\n      this.addSourceBuffers();\n    }\n  }, {\n    key: 'onUpdateEnd',\n    value: function onUpdateEnd() {\n      this.emit('SOURCE_UPDATE_END');\n      this.doAppend();\n    }\n  }, {\n    key: 'addSourceBuffers',\n    value: function addSourceBuffers() {\n      if (this.mediaSource.readyState !== 'open') {\n        return;\n      }\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      var tracks = this._context.getInstance('TRACKS');\n      var track = void 0;\n\n      sources = sources.sources;\n      var add = false;\n      for (var i = 0, k = Object.keys(sources).length; i < k; i++) {\n        var type = Object.keys(sources)[i];\n        if (type === 'audio') {\n          track = tracks.audioTrack;\n        } else if (type === 'video') {\n          track = tracks.videoTrack;\n          // return;\n        }\n        if (track) {\n          var dur = type === 'audio' ? 21 : 40;\n          if (track.meta && track.meta.refSampleDuration) dur = track.meta.refSampleDuration;\n          if (sources[type].data.length >= this.preloadTime / dur) {\n            add = true;\n          }\n        }\n      }\n\n      if (add) {\n        if (Object.keys(this.sourceBuffers).length > 0) {\n          return;\n        }\n        for (var _i = 0, _k = Object.keys(sources).length; _i < _k; _i++) {\n          var _type = Object.keys(sources)[_i];\n          var source = sources[_type];\n          var mime = _type === 'video' ? 'video/mp4;codecs=' + source.mimetype : 'audio/mp4;codecs=' + source.mimetype;\n          var sourceBuffer = this.mediaSource.addSourceBuffer(mime);\n          this.sourceBuffers[_type] = sourceBuffer;\n          sourceBuffer.addEventListener('updateend', this.onUpdateEnd);\n          this.doAppend();\n        }\n      }\n    }\n  }, {\n    key: 'doAppend',\n    value: function doAppend() {\n      var sources = this._context.getInstance('PRE_SOURCE_BUFFER');\n      if (sources) {\n        for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n          var type = Object.keys(this.sourceBuffers)[i];\n          var sourceBuffer = this.sourceBuffers[type];\n          var source = sources.sources[type];\n          if (source && !source.inited) {\n            // console.log('append initial segment')\n            try {\n              sourceBuffer.appendBuffer(source.init.buffer.buffer);\n              source.inited = true;\n            } catch (e) {\n              // DO NOTHING\n            }\n          } else if (source) {\n            var data = source.data.shift();\n            if (data) {\n              try {\n                sourceBuffer.appendBuffer(data.buffer.buffer);\n              } catch (e) {\n                source.data.unshift(data);\n              }\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      var _mediaSource = this.mediaSource,\n          readyState = _mediaSource.readyState,\n          activeSourceBuffers = _mediaSource.activeSourceBuffers;\n\n      if (readyState === 'open' && activeSourceBuffers.length === 0) {\n        try {\n          this.mediaSource.endOfStream();\n        } catch (e) {\n          // log\n        }\n      }\n    }\n  }, {\n    key: 'remove',\n    value: function remove(end) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        var buffer = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]];\n        if (!buffer.updating) {\n\n          // console.log('remove', start, end)\n          buffer.remove(start, end);\n        }\n      }\n    }\n  }, {\n    key: 'removeBuffers',\n    value: function removeBuffers() {\n      var _this = this;\n\n      var taskList = [];\n\n      var _loop = function _loop(i) {\n        var buffer = _this.sourceBuffers[Object.keys(_this.sourceBuffers)[i]];\n        buffer.removeEventListener('updateend', _this.onUpdateEnd);\n\n        var task = void 0;\n        if (buffer.updating) {\n          task = new Promise(function (resolve) {\n            var doCleanBuffer = function doCleanBuffer() {\n              var retryTime = 3;\n\n              var clean = function clean() {\n                if (!buffer.updating) {\n                  MSE.clearBuffer(buffer);\n                  buffer.addEventListener('updateend', function () {\n                    resolve();\n                  });\n                } else if (retryTime > 0) {\n                  setTimeout(clean, 200);\n                  retryTime--;\n                } else {\n                  resolve();\n                }\n              };\n\n              setTimeout(clean, 200);\n              buffer.removeEventListener('updateend', doCleanBuffer);\n            };\n            buffer.addEventListener('updateend', doCleanBuffer);\n          });\n        } else {\n          task = new Promise(function (resolve) {\n            MSE.clearBuffer(buffer);\n            buffer.addEventListener('updateend', function () {\n              resolve();\n            });\n          });\n\n          // task = Promise.resolve()\n        }\n\n        taskList.push(task);\n      };\n\n      for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) {\n        _loop(i);\n      }\n\n      return Promise.all(taskList);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      return this.removeBuffers().then(function () {\n        for (var i = 0; i < Object.keys(_this2.sourceBuffers).length; i++) {\n          var _buffer = _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n          _this2.mediaSource.removeSourceBuffer(_buffer);\n          delete _this2.sourceBuffers[Object.keys(_this2.sourceBuffers)[i]];\n        }\n\n        _this2.container.removeEventListener('timeupdate', _this2.onTimeUpdate);\n        _this2.container.removeEventListener('waiting', _this2.onWaiting);\n        _this2.mediaSource.removeEventListener('sourceopen', _this2.onSourceOpen);\n\n        _this2.endOfStream();\n        window.URL.revokeObjectURL(_this2.url);\n\n        _this2.url = null;\n        _this2.configs = {};\n        _this2.container = null;\n        _this2.mediaSource = null;\n        _this2.sourceBuffers = {};\n        _this2.preloadTime = 1;\n      });\n    }\n  }], [{\n    key: 'clearBuffer',\n    value: function clearBuffer(buffer) {\n      var buffered = buffer.buffered;\n      var bEnd = 0.1;\n      for (var i = 0, len = buffered.length; i < len; i++) {\n        bEnd = buffered.end(i);\n      }\n      try {\n        buffer.remove(0, bEnd);\n      } catch (e) {\n        // DO NOTHING\n      }\n    }\n  }]);\n\n  return MSE;\n}();\n\nexport default MSE;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Stream = function () {\n  function Stream(buffer) {\n    _classCallCheck(this, Stream);\n\n    if (buffer instanceof ArrayBuffer) {\n      this.buffer = buffer;\n      this.dataview = new DataView(buffer);\n      this.dataview.position = 0;\n    } else {\n      throw new Error('data is invalid');\n    }\n  }\n\n  _createClass(Stream, [{\n    key: 'back',\n    value: function back(count) {\n      this.position -= count;\n    }\n  }, {\n    key: 'skip',\n    value: function skip(count) {\n      var loop = Math.floor(count / 4);\n      var last = count % 4;\n      for (var i = 0; i < loop; i++) {\n        Stream.readByte(this.dataview, 4);\n      }\n      if (last > 0) {\n        Stream.readByte(this.dataview, last);\n      }\n    }\n\n    /**\n     * [readByte 从DataView中读取数据]\n     * @param  {DataView} buffer [DataView实例]\n     * @param  {Number} size   [读取字节数]\n     * @return {Number}        [整数]\n     */\n\n  }, {\n    key: 'readUint8',\n    value: function readUint8() {\n      return Stream.readByte(this.dataview, 1);\n    }\n  }, {\n    key: 'readUint16',\n    value: function readUint16() {\n      return Stream.readByte(this.dataview, 2);\n    }\n  }, {\n    key: 'readUint24',\n    value: function readUint24() {\n      return Stream.readByte(this.dataview, 3);\n    }\n  }, {\n    key: 'readUint32',\n    value: function readUint32() {\n      return Stream.readByte(this.dataview, 4);\n    }\n  }, {\n    key: 'readUint64',\n    value: function readUint64() {\n      return Stream.readByte(this.dataview, 8);\n    }\n  }, {\n    key: 'readInt8',\n    value: function readInt8() {\n      return Stream.readByte(this.dataview, 1, true);\n    }\n  }, {\n    key: 'readInt16',\n    value: function readInt16() {\n      return Stream.readByte(this.dataview, 2, true);\n    }\n  }, {\n    key: 'readInt32',\n    value: function readInt32() {\n      return Stream.readByte(this.dataview, 4, true);\n    }\n  }, {\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >>> 24 & 0xff, value >>> 16 & 0xff, value >>> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'length',\n    get: function get() {\n      return this.buffer.byteLength;\n    }\n  }, {\n    key: 'position',\n    set: function set(value) {\n      this.dataview.position = value;\n    },\n    get: function get() {\n      return this.dataview.position;\n    }\n  }], [{\n    key: 'readByte',\n    value: function readByte(buffer, size, sign) {\n      var res = void 0;\n      switch (size) {\n        case 1:\n          if (sign) {\n            res = buffer.getInt8(buffer.position);\n          } else {\n            res = buffer.getUint8(buffer.position);\n          }\n          break;\n        case 2:\n          if (sign) {\n            res = buffer.getInt16(buffer.position);\n          } else {\n            res = buffer.getUint16(buffer.position);\n          }\n          break;\n        case 3:\n          if (sign) {\n            throw new Error('not supported for readByte 3');\n          } else {\n            res = buffer.getUint8(buffer.position) << 16;\n            res |= buffer.getUint8(buffer.position + 1) << 8;\n            res |= buffer.getUint8(buffer.position + 2);\n          }\n          break;\n        case 4:\n          if (sign) {\n            res = buffer.getInt32(buffer.position);\n          } else {\n            res = buffer.getUint32(buffer.position);\n          }\n          break;\n        case 8:\n          if (sign) {\n            throw new Error('not supported for readBody 8');\n          } else {\n            res = buffer.getUint32(buffer.position) << 32;\n            res |= buffer.getUint32(buffer.position + 4);\n          }\n          break;\n        default:\n          res = '';\n      }\n      buffer.position += size;\n      return res;\n    }\n  }]);\n\n  return Stream;\n}();\n\nexport default Stream;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport Concat from 'concat-typed-array';\n\nvar Buffer = function () {\n  function Buffer(buffer) {\n    _classCallCheck(this, Buffer);\n\n    this.buffer = buffer || new Uint8Array(0);\n  }\n\n  _createClass(Buffer, [{\n    key: 'write',\n    value: function write() {\n      var _this = this;\n\n      for (var _len = arguments.length, buffer = Array(_len), _key = 0; _key < _len; _key++) {\n        buffer[_key] = arguments[_key];\n      }\n\n      buffer.forEach(function (item) {\n        _this.buffer = Concat(Uint8Array, _this.buffer, item);\n      });\n    }\n  }], [{\n    key: 'writeUint32',\n    value: function writeUint32(value) {\n      return new Uint8Array([value >> 24, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff]);\n    }\n  }, {\n    key: 'readAsInt',\n    value: function readAsInt(arr) {\n      var temp = '';\n\n      function padStart4Hex(hexNum) {\n        var hexStr = hexNum.toString(16);\n        return hexStr.padStart(2, '0');\n      }\n\n      arr.forEach(function (num) {\n        temp += padStart4Hex(num);\n      });\n      return parseInt(temp, 16);\n    }\n  }]);\n\n  return Buffer;\n}();\n\nexport default Buffer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport EVENTS from '../constants/events';\nvar CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\n\nvar Crypto = function () {\n    function Crypto(config) {\n        _classCallCheck(this, Crypto);\n\n        this.inputBuffer = config.inputbuffer;\n        this.outputBuffer = config.outputbuffer;\n        this.key = config.key;\n        this.iv = config.iv;\n        this.method = config.method;\n\n        this.crypto = window.crypto || window.msCrypto;\n    }\n\n    _createClass(Crypto, [{\n        key: 'init',\n        value: function init() {\n            this.on(CRYTO_EVENTS.START_DECRYPT, this.decript.bind(this));\n        }\n    }, {\n        key: 'decript',\n        value: function decript() {\n            var _this = this;\n\n            if (!this.aeskey) {\n                var sbkey = this.crypto.subtle.importKey('raw', this.key.buffer, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt']);\n                sbkey.then(function (key) {\n                    _this.aeskey = key;\n                    _this.decriptData();\n                });\n            } else {\n                this.decriptData();\n            }\n        }\n    }, {\n        key: 'decriptData',\n        value: function decriptData() {\n            var _this2 = this;\n\n            var inputbuffer = this._context.getInstance(this.inputBuffer);\n            var outputbuffer = this._context.getInstance(this.outputBuffer);\n            var data = inputbuffer.shift();\n            if (data) {\n                this.crypto.subtle.decrypt({ name: 'AES-CBC', iv: this.iv.buffer }, this.aeskey, data).then(function (res) {\n                    outputbuffer.push(new Uint8Array(res));\n                    _this2.emit(CRYTO_EVENTS.DECRYPTED);\n                    _this2.decriptData(data);\n                });\n            }\n        }\n    }]);\n\n    return Crypto;\n}();\n\nexport default Crypto;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Track = function () {\n  /**\n   * The constructor.\n   */\n  function Track() {\n    _classCallCheck(this, Track);\n\n    this.id = -1;\n    this.sequenceNumber = 0;\n    this.samples = [];\n    this.droppedSamples = [];\n    this.length = 0;\n  }\n\n  /**\n   * Reset the track.\n   */\n\n\n  _createClass(Track, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n    }\n    /**\n     * destroy the track.\n     */\n\n  }, {\n    key: 'distroy',\n    value: function distroy() {\n      this.reset();\n      this.id = -1;\n    }\n  }]);\n\n  return Track;\n}();\n\nexport default Track;\n\n\nexport var AudioTrack = function (_Track) {\n  _inherits(AudioTrack, _Track);\n\n  /**\n   * The constructor for audio track.\n   */\n  function AudioTrack() {\n    _classCallCheck(this, AudioTrack);\n\n    var _this = _possibleConstructorReturn(this, (AudioTrack.__proto__ || Object.getPrototypeOf(AudioTrack)).call(this));\n\n    _this.TAG = 'AudioTrack';\n    _this.type = 'audio';\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\nexport var VideoTrack = function (_Track2) {\n  _inherits(VideoTrack, _Track2);\n\n  /**\n   * The constructor for video track.\n   */\n  function VideoTrack() {\n    _classCallCheck(this, VideoTrack);\n\n    var _this2 = _possibleConstructorReturn(this, (VideoTrack.__proto__ || Object.getPrototypeOf(VideoTrack)).call(this));\n\n    _this2.TAG = 'VideoTrack';\n    _this2.type = 'video';\n    _this2.dropped = 0;\n    return _this2;\n  }\n  /**\n   * reset the video track.\n   */\n\n\n  _createClass(VideoTrack, [{\n    key: 'reset',\n    value: function reset() {\n      this.sequenceNumber = 0;\n      this.samples = [];\n      this.length = 0;\n      this.dropped = 0;\n    }\n  }]);\n\n  return VideoTrack;\n}(Track);\n\nexport var Tracks = function () {\n  function Tracks() {\n    _classCallCheck(this, Tracks);\n\n    this.audioTrack = null;\n    this.videoTrack = null;\n  }\n\n  _createClass(Tracks, [{\n    key: 'destroy',\n    value: function destroy() {\n      this.audioTrack = null;\n      this.videoTrack = null;\n    }\n  }]);\n\n  return Tracks;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexport var XgBuffer = function () {\n  /**\n   * A buffer to store loaded data.\n   *\n   * @class LoaderBuffer\n   * @param {number} length - Optional the buffer size\n   */\n  function XgBuffer(length) {\n    _classCallCheck(this, XgBuffer);\n\n    this.length = length || 0;\n    this.historyLen = length || 0;\n    this.array = [];\n    this.offset = 0;\n  }\n\n  /**\n   * The function to push data.\n   *\n   * @param {number} data - The data to push into the buffer\n   */\n\n\n  _createClass(XgBuffer, [{\n    key: \"push\",\n    value: function push(data) {\n      this.array.push(data);\n      this.length += data.byteLength;\n      this.historyLen += data.byteLength;\n    }\n\n    /**\n     * The function to shift data.\n     *\n     * @param {number} length - The size of shift.\n     */\n\n  }, {\n    key: \"shift\",\n    value: function shift(length) {\n      if (this.array.length < 1) {\n        return new Uint8Array(0);\n      }\n\n      if (length === undefined) {\n        return this._shiftBuffer();\n      }\n      if (this.offset + length === this.array[0].length) {\n        var _ret = this.array[0].slice(this.offset, this.offset + length);\n        this.offset = 0;\n        this.array.shift();\n        this.length -= length;\n        return _ret;\n      }\n\n      if (this.offset + length < this.array[0].length) {\n        var _ret2 = this.array[0].slice(this.offset, this.offset + length);\n        this.offset += length;\n        this.length -= length;\n        return _ret2;\n      }\n\n      var ret = new Uint8Array(length);\n      var tmpoff = 0;\n      while (this.array.length > 0 && length > 0) {\n        if (this.offset + length < this.array[0].length) {\n          var tmp = this.array[0].slice(this.offset, this.offset + length);\n          ret.set(tmp, tmpoff);\n          this.offset += length;\n          this.length -= length;\n          length = 0;\n          break;\n        } else {\n          // console.log('mark1')\n          var templength = this.array[0].length - this.offset;\n          ret.set(this.array[0].slice(this.offset, this.array[0].length), tmpoff);\n          this.array.shift();\n          this.offset = 0;\n          tmpoff += templength;\n          this.length -= templength;\n          length -= templength;\n        }\n      }\n      return ret;\n    }\n\n    /**\n     * Function to clear the buffer.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.length = 0;\n      this.offset = 0;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clear();\n      this.historyLen = 0;\n    }\n\n    /**\n     * Function to shift one unit8Array.\n     */\n\n  }, {\n    key: \"_shiftBuffer\",\n    value: function _shiftBuffer() {\n      this.length -= this.array[0].length;\n      this.offset = 0;\n      return this.array.shift();\n    }\n\n    /**\n     * Convert uint8 data to number.\n     *\n     * @param {number} start - the start postion.\n     * @param {number} length - the length of data.\n     */\n\n  }, {\n    key: \"toInt\",\n    value: function toInt(start, length) {\n      var retInt = 0;\n      var i = this.offset + start;\n      while (i < this.offset + length + start) {\n        if (i < this.array[0].length) {\n          retInt = retInt * 256 + this.array[0][i];\n        } else if (this.array[1]) {\n          retInt = retInt * 256 + this.array[1][i - this.array[0].length];\n        }\n\n        i++;\n      }\n      return retInt;\n    }\n  }]);\n\n  return XgBuffer;\n}();\n\nexport var RemuxBuffer = function () {\n  function RemuxBuffer() {\n    _classCallCheck(this, RemuxBuffer);\n\n    this.video = [];\n    this.audio = [];\n  }\n\n  _createClass(RemuxBuffer, [{\n    key: \"destroy\",\n    value: function destroy() {\n      this.video = [];\n      this.audio = [];\n    }\n  }]);\n\n  return RemuxBuffer;\n}();","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Source = function Source() {\n  _classCallCheck(this, Source);\n\n  this.mimetype = '';\n  this.init = null;\n  this.data = [];\n};\n\nvar PreSource = function () {\n  function PreSource() {\n    _classCallCheck(this, PreSource);\n\n    this.sources = {};\n  }\n\n  _createClass(PreSource, [{\n    key: 'getSource',\n    value: function getSource(source) {\n      return this.sources[source];\n    }\n  }, {\n    key: 'createSource',\n    value: function createSource(name) {\n      this.sources[name] = new Source();\n      return this.sources[name];\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.sources = {};\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.sources = {};\n    }\n  }]);\n\n  return PreSource;\n}();\n\nexport default PreSource;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS } from 'xgplayer-utils';\n\nvar LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nvar READ_STREAM = 0;\nvar READ_TEXT = 1;\nvar READ_JSON = 2;\nvar READ_BUFFER = 3;\n\nvar FetchLoader = function () {\n  function FetchLoader(configs) {\n    _classCallCheck(this, FetchLoader);\n\n    this.configs = Object.assign({}, configs);\n    this.url = null;\n    this.status = 0;\n    this.error = null;\n    this._reader = null;\n    this._canceled = false;\n    this._destroyed = false;\n    this.readtype = this.configs.readtype;\n    this.buffer = this.configs.buffer || 'LOADER_BUFFER';\n    this._loaderTaskNo = 0;\n  }\n\n  _createClass(FetchLoader, [{\n    key: 'init',\n    value: function init() {\n      this.on(LOADER_EVENTS.LADER_START, this.load.bind(this));\n    }\n  }, {\n    key: 'load',\n    value: function load(url, opts) {\n      var _this2 = this;\n\n      this.url = url;\n\n      this._canceled = false;\n\n      // TODO: Add Ranges\n      var params = this.getParams(opts);\n      this.loading = true;\n      return fetch(this.url, params).then(function (response) {\n        if (response.ok) {\n          _this2.status = response.status;\n          Promise.resolve().then(function () {\n            _this2._onFetchResponse(response);\n          });\n\n          return Promise.resolve(response);\n        }\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, new Error(response.status + ' (' + response.statusText + ')'));\n      }).catch(function (error) {\n        _this2.loading = false;\n        _this2.emit(LOADER_EVENTS.LOADER_ERROR, _this2.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: '_onFetchResponse',\n    value: function _onFetchResponse(response) {\n      var _this = this;\n      var buffer = this._context.getInstance(this.buffer);\n      this._loaderTaskNo++;\n      var taskno = this._loaderTaskNo;\n      if (response.ok === true) {\n        switch (this.readtype) {\n          case READ_JSON:\n            response.json().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_TEXT:\n            response.text().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(data);\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_BUFFER:\n            response.arrayBuffer().then(function (data) {\n              _this.loading = false;\n              if (!_this._canceled && !_this._destroyed) {\n                if (buffer) {\n                  buffer.push(new Uint8Array(data));\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n                } else {\n                  _this.emit(LOADER_EVENTS.LOADER_COMPLETE, data);\n                }\n              }\n            });\n            break;\n          case READ_STREAM:\n          default:\n            return this._onReader(response.body.getReader(), taskno);\n        }\n      }\n    }\n  }, {\n    key: '_onReader',\n    value: function _onReader(reader, taskno) {\n      var _this3 = this;\n\n      var buffer = this._context.getInstance(this.buffer);\n      if (!buffer && this._reader || this._destroyed) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // DO NOTHING\n        }\n      }\n\n      this._reader = reader;\n      if (this.loading === false) {\n        return;\n      }\n\n      // reader read function returns a Promise. get data when callback and has value.done when disconnected.\n      // read方法返回一个Promise. 回调中可以获取到数据。当value.done存在时，说明链接断开。\n      this._reader && this._reader.read().then(function (val) {\n        if (_this3._canceled || _this3._destroyed) {\n          if (_this3._reader) {\n            try {\n              _this3._reader.cancel();\n            } catch (e) {\n              // DO NOTHING\n            }\n          }\n          return;\n        }\n        if (val.done) {\n          _this3.loading = false;\n          _this3.status = 0;\n          Promise.resolve().then(function () {\n            _this3.emit(LOADER_EVENTS.LOADER_COMPLETE, buffer);\n          });\n          return;\n        }\n\n        buffer.push(val.value);\n        Promise.resolve().then(function () {\n          _this3.emit(LOADER_EVENTS.LOADER_DATALOADED, buffer);\n        });\n        return _this3._onReader(reader, taskno);\n      }).catch(function (error) {\n        _this3.loading = false;\n        _this3.emit(LOADER_EVENTS.LOADER_ERROR, _this3.TAG, error);\n        throw error;\n      });\n    }\n  }, {\n    key: 'getParams',\n    value: function getParams(opts) {\n      var options = Object.assign({}, opts);\n      var headers = new Headers();\n\n      var params = {\n        method: 'GET',\n        headers: headers,\n        mode: 'cors',\n        cache: 'default'\n\n        // add custmor headers\n        // 添加自定义头\n      };if (_typeof(this.configs.headers) === 'object') {\n        var configHeaders = this.configs.headers;\n        for (var key in configHeaders) {\n          if (configHeaders.hasOwnProperty(key)) {\n            headers.append(key, configHeaders[key]);\n          }\n        }\n      }\n\n      if (_typeof(options.headers) === 'object') {\n        var optHeaders = options.headers;\n        for (var _key in optHeaders) {\n          if (optHeaders.hasOwnProperty(_key)) {\n            headers.append(_key, optHeaders[_key]);\n          }\n        }\n      }\n\n      if (options.cors === false) {\n        params.mode = 'same-origin';\n      }\n\n      // withCredentials is disabled by default\n      // withCredentials 在默认情况下不被使用。\n      if (options.withCredentials) {\n        params.credentials = 'include';\n      }\n\n      // TODO: Add ranges;\n      return params;\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this._reader) {\n        try {\n          this._reader.cancel();\n        } catch (e) {\n          // 防止failed: 200错误被打印到控制台上\n        }\n        this._reader = null;\n        this.loading = false;\n      }\n      this._canceled = true;\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._destroyed = true;\n      this.cancel();\n    }\n  }], [{\n    key: 'type',\n    get: function get() {\n      return 'loader';\n    }\n  }]);\n\n  return FetchLoader;\n}();\n\nexport default FetchLoader;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Golomb = function () {\n  function Golomb(uint8array) {\n    _classCallCheck(this, Golomb);\n\n    this.TAG = 'Golomb';\n    this._buffer = uint8array;\n    this._bufferIndex = 0;\n    this._totalBytes = uint8array.byteLength;\n    this._totalBits = uint8array.byteLength * 8;\n    this._currentWord = 0;\n    this._currentWordBitsLeft = 0;\n  }\n\n  _createClass(Golomb, [{\n    key: 'destroy',\n    value: function destroy() {\n      this._buffer = null;\n    }\n  }, {\n    key: '_fillCurrentWord',\n    value: function _fillCurrentWord() {\n      var bufferBytesLeft = this._totalBytes - this._bufferIndex;\n      if (bufferBytesLeft <= 0) {\n        // TODO 异常处理\n      }\n\n      var bytesRead = Math.min(4, bufferBytesLeft);\n      var word = new Uint8Array(4);\n      word.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + bytesRead));\n      this._currentWord = new DataView(word.buffer).getUint32(0);\n\n      this._bufferIndex += bytesRead;\n      this._currentWordBitsLeft = bytesRead * 8;\n    }\n  }, {\n    key: 'readBits',\n    value: function readBits(size) {\n      var bits = Math.min(this._currentWordBitsLeft, size); // :uint\n      var valu = this._currentWord >>> 32 - bits;\n      if (size > 32) {\n        throw new Error('Cannot read more than 32 bits at a time');\n      }\n      this._currentWordBitsLeft -= bits;\n      if (this._currentWordBitsLeft > 0) {\n        this._currentWord <<= bits;\n      } else if (this._totalBytes - this._bufferIndex > 0) {\n        this._fillCurrentWord();\n      }\n\n      bits = size - bits;\n      if (bits > 0 && this._currentWordBitsLeft) {\n        return valu << bits | this.readBits(bits);\n      } else {\n        return valu;\n      }\n    }\n  }, {\n    key: 'readBool',\n    value: function readBool() {\n      return this.readBits(1) === 1;\n    }\n  }, {\n    key: 'readByte',\n    value: function readByte() {\n      return this.readBits(8);\n    }\n  }, {\n    key: '_skipLeadingZero',\n    value: function _skipLeadingZero() {\n      var zeroCount = void 0;\n      for (zeroCount = 0; zeroCount < this._currentWordBitsLeft; zeroCount++) {\n        if ((this._currentWord & 0x80000000 >>> zeroCount) !== 0) {\n          this._currentWord <<= zeroCount;\n          this._currentWordBitsLeft -= zeroCount;\n          return zeroCount;\n        }\n      }\n      this._fillCurrentWord();\n      return zeroCount + this._skipLeadingZero();\n    }\n  }, {\n    key: 'readUEG',\n    value: function readUEG() {\n      // unsigned exponential golomb\n      var leadingZeros = this._skipLeadingZero();\n      return this.readBits(leadingZeros + 1) - 1;\n    }\n  }, {\n    key: 'readSEG',\n    value: function readSEG() {\n      // signed exponential golomb\n      var value = this.readUEG();\n      if (value & 0x01) {\n        return value + 1 >>> 1;\n      } else {\n        return -1 * (value >>> 1);\n      }\n    }\n  }]);\n\n  return Golomb;\n}();\n\nexport default Golomb;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* eslint-disable camelcase  */\n/* eslint-disable one-var  */\nimport Golomb from './golomb';\n\nvar SPSParser = function () {\n  function SPSParser() {\n    _classCallCheck(this, SPSParser);\n  }\n\n  _createClass(SPSParser, null, [{\n    key: '_ebsp2rbsp',\n    value: function _ebsp2rbsp(uint8array) {\n      var src = uint8array;\n      var srcLength = src.byteLength;\n      var dst = new Uint8Array(srcLength);\n      var dstIdx = 0;\n\n      for (var i = 0; i < srcLength; i++) {\n        if (i >= 2) {\n          if (src[i] === 0x03 && src[i - 1] === 0x00 && src[i - 2] === 0x00) {\n            continue;\n          }\n        }\n        dst[dstIdx] = src[i];\n        dstIdx++;\n      }\n\n      return new Uint8Array(dst.buffer, 0, dstIdx);\n    }\n  }, {\n    key: 'parseSPS',\n    value: function parseSPS(uint8array) {\n      var rbsp = SPSParser._ebsp2rbsp(uint8array);\n      var gb = new Golomb(rbsp);\n\n      gb.readByte();\n      var profileIdc = gb.readByte();\n      gb.readByte();\n      var levelIdc = gb.readByte();\n      gb.readUEG();\n\n      var profile_string = SPSParser.getProfileString(profileIdc);\n      var level_string = SPSParser.getLevelString(levelIdc);\n      var chroma_format_idc = 1;\n      var chroma_format = 420;\n      var chroma_format_table = [0, 420, 422, 444];\n      var bit_depth = 8;\n\n      if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128 || profileIdc === 138 || profileIdc === 144) {\n        chroma_format_idc = gb.readUEG();\n        if (chroma_format_idc === 3) {\n          gb.readBits(1);\n        }\n        if (chroma_format_idc <= 3) {\n          chroma_format = chroma_format_table[chroma_format_idc];\n        }\n\n        bit_depth = gb.readUEG() + 8;\n        gb.readUEG();\n        gb.readBits(1);\n        if (gb.readBool()) {\n          var scaling_list_count = chroma_format_idc !== 3 ? 8 : 12;\n          for (var i = 0; i < scaling_list_count; i++) {\n            if (gb.readBool()) {\n              if (i < 6) {\n                SPSParser._skipScalingList(gb, 16);\n              } else {\n                SPSParser._skipScalingList(gb, 64);\n              }\n            }\n          }\n        }\n      }\n      gb.readUEG();\n      var pic_order_cnt_type = gb.readUEG();\n      if (pic_order_cnt_type === 0) {\n        gb.readUEG();\n      } else if (pic_order_cnt_type === 1) {\n        gb.readBits(1);\n        gb.readSEG();\n        gb.readSEG();\n        var num_ref_frames_in_pic_order_cnt_cycle = gb.readUEG();\n        for (var _i = 0; _i < num_ref_frames_in_pic_order_cnt_cycle; _i++) {\n          gb.readSEG();\n        }\n      }\n      gb.readUEG();\n      gb.readBits(1);\n\n      var pic_width_in_mbs_minus1 = gb.readUEG();\n      var pic_height_in_map_units_minus1 = gb.readUEG();\n\n      var frame_mbs_only_flag = gb.readBits(1);\n      if (frame_mbs_only_flag === 0) {\n        gb.readBits(1);\n      }\n      gb.readBits(1);\n\n      var frame_crop_left_offset = 0;\n      var frame_crop_right_offset = 0;\n      var frame_crop_top_offset = 0;\n      var frame_crop_bottom_offset = 0;\n\n      var frame_cropping_flag = gb.readBool();\n      if (frame_cropping_flag) {\n        frame_crop_left_offset = gb.readUEG();\n        frame_crop_right_offset = gb.readUEG();\n        frame_crop_top_offset = gb.readUEG();\n        frame_crop_bottom_offset = gb.readUEG();\n      }\n\n      var par_width = 1,\n          par_height = 1;\n      var fps = 0,\n          fps_fixed = true,\n          fps_num = 0,\n          fps_den = 0;\n\n      var vui_parameters_present_flag = gb.readBool();\n      if (vui_parameters_present_flag) {\n        if (gb.readBool()) {\n          // aspect_ratio_info_present_flag\n          var aspect_ratio_idc = gb.readByte();\n          var par_w_table = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2];\n          var par_h_table = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1];\n\n          if (aspect_ratio_idc > 0 && aspect_ratio_idc < 16) {\n            par_width = par_w_table[aspect_ratio_idc - 1];\n            par_height = par_h_table[aspect_ratio_idc - 1];\n          } else if (aspect_ratio_idc === 255) {\n            par_width = gb.readByte() << 8 | gb.readByte();\n            par_height = gb.readByte() << 8 | gb.readByte();\n          }\n        }\n\n        if (gb.readBool()) {\n          gb.readBool();\n        }\n        if (gb.readBool()) {\n          gb.readBits(4);\n          if (gb.readBool()) {\n            gb.readBits(24);\n          }\n        }\n        if (gb.readBool()) {\n          gb.readUEG();\n          gb.readUEG();\n        }\n        if (gb.readBool()) {\n          var num_units_in_tick = gb.readBits(32);\n          var time_scale = gb.readBits(32);\n          fps_fixed = gb.readBool();\n\n          fps_num = time_scale;\n          fps_den = num_units_in_tick * 2;\n          fps = fps_num / fps_den;\n        }\n      }\n\n      var parScale = 1;\n      if (par_width !== 1 || par_height !== 1) {\n        parScale = par_width / par_height;\n      }\n\n      var crop_unit_x = 0,\n          crop_unit_y = 0;\n      if (chroma_format_idc === 0) {\n        crop_unit_x = 1;\n        crop_unit_y = 2 - frame_mbs_only_flag;\n      } else {\n        var sub_wc = chroma_format_idc === 3 ? 1 : 2;\n        var sub_hc = chroma_format_idc === 1 ? 2 : 1;\n        crop_unit_x = sub_wc;\n        crop_unit_y = sub_hc * (2 - frame_mbs_only_flag);\n      }\n\n      var codec_width = (pic_width_in_mbs_minus1 + 1) * 16;\n      var codec_height = (2 - frame_mbs_only_flag) * ((pic_height_in_map_units_minus1 + 1) * 16);\n\n      codec_width -= (frame_crop_left_offset + frame_crop_right_offset) * crop_unit_x;\n      codec_height -= (frame_crop_top_offset + frame_crop_bottom_offset) * crop_unit_y;\n\n      var present_width = Math.ceil(codec_width * parScale);\n\n      gb.destroy();\n      gb = null;\n\n      return {\n        profile_string: profile_string,\n        level_string: level_string,\n        bit_depth: bit_depth,\n        chroma_format: chroma_format,\n        chroma_format_string: SPSParser.getChromaFormatString(chroma_format),\n\n        frame_rate: {\n          fixed: fps_fixed,\n          fps: fps,\n          fps_den: fps_den,\n          fps_num: fps_num\n        },\n\n        par_ratio: {\n          width: par_width,\n          height: par_height\n        },\n\n        codec_size: {\n          width: codec_width,\n          height: codec_height\n        },\n\n        present_size: {\n          width: present_width,\n          height: codec_height\n        }\n      };\n    }\n  }, {\n    key: '_skipScalingList',\n    value: function _skipScalingList(gb, count) {\n      var last_scale = 8,\n          next_scale = 8;\n      var delta_scale = 0;\n      for (var i = 0; i < count; i++) {\n        if (next_scale !== 0) {\n          delta_scale = gb.readSEG();\n          next_scale = (last_scale + delta_scale + 256) % 256;\n        }\n        last_scale = next_scale === 0 ? last_scale : next_scale;\n      }\n    }\n  }, {\n    key: 'getProfileString',\n    value: function getProfileString(profileIdc) {\n      switch (profileIdc) {\n        case 66:\n          return 'Baseline';\n        case 77:\n          return 'Main';\n        case 88:\n          return 'Extended';\n        case 100:\n          return 'High';\n        case 110:\n          return 'High10';\n        case 122:\n          return 'High422';\n        case 244:\n          return 'High444';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'getLevelString',\n    value: function getLevelString(levelIdc) {\n      return (levelIdc / 10).toFixed(1);\n    }\n  }, {\n    key: 'getChromaFormatString',\n    value: function getChromaFormatString(chroma) {\n      switch (chroma) {\n        case 420:\n          return '4:2:0';\n        case 422:\n          return '4:2:2';\n        case 444:\n          return '4:4:4';\n        default:\n          return 'Unknown';\n      }\n    }\n  }, {\n    key: 'toVideoMeta',\n    value: function toVideoMeta(spsConfig) {\n      var meta = {};\n      if (spsConfig && spsConfig.codec_size) {\n        meta.codecWidth = spsConfig.codec_size.width;\n        meta.codecHeight = spsConfig.codec_size.height;\n        meta.presentWidth = spsConfig.present_size.width;\n        meta.presentHeight = spsConfig.present_size.height;\n      }\n\n      meta.profile = spsConfig.profile_string;\n      meta.level = spsConfig.level_string;\n      meta.bitDepth = spsConfig.bit_depth;\n      meta.chromaFormat = spsConfig.chroma_format;\n\n      meta.parRatio = {\n        width: spsConfig.par_ratio.width,\n        height: spsConfig.par_ratio.height\n      };\n\n      meta.frameRate = spsConfig.frame_rate;\n\n      var fpsDen = meta.frameRate.fps_den;\n      var fpsNum = meta.frameRate.fps_num;\n      meta.refSampleDuration = Math.floor(meta.timescale * (fpsDen / fpsNum));\n      return meta;\n    }\n  }]);\n\n  return SPSParser;\n}();\n\nexport default SPSParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport SpsParser from './sps';\n\nvar Nalunit = function () {\n  function Nalunit() {\n    _classCallCheck(this, Nalunit);\n  }\n\n  _createClass(Nalunit, null, [{\n    key: 'getNalunits',\n    value: function getNalunits(buffer) {\n      if (buffer.length - buffer.position < 4) {\n        return [];\n      }\n\n      var buf = buffer.dataview;\n      var position = buffer.position;\n      if (buf.getInt32(position) === 1 || buf.getInt16(position) === 0 && buf.getInt8(position + 2) === 1) {\n        return Nalunit.getAnnexbNals(buffer);\n      } else {\n        return Nalunit.getAvccNals(buffer);\n      }\n    }\n  }, {\n    key: 'getAnnexbNals',\n    value: function getAnnexbNals(buffer) {\n      var nals = [];\n      var position = Nalunit.getHeaderPositionAnnexB(buffer);\n      var start = position.pos;\n      var end = start;\n      while (start < buffer.length - 4) {\n        var header = buffer.buffer.slice(start, start + position.headerLength);\n        if (position.pos === buffer.position) {\n          buffer.skip(position.headerLength);\n        }\n        position = Nalunit.getHeaderPositionAnnexB(buffer);\n        end = position.pos;\n        var body = new Uint8Array(buffer.buffer.slice(start + header.byteLength, end));\n        var unit = { header: header, body: body };\n        Nalunit.analyseNal(unit);\n        if (unit.type <= 9 && unit.type !== 0) {\n          nals.push(unit);\n        }\n        buffer.skip(end - buffer.position);\n        start = end;\n      }\n      return nals;\n    }\n  }, {\n    key: 'getAvccNals',\n    value: function getAvccNals(buffer) {\n      var nals = [];\n      while (buffer.position < buffer.length - 4) {\n        var length = buffer.dataview.getInt32();\n        if (buffer.length - buffer.position >= length) {\n          var header = buffer.buffer.slice(buffer.position, buffer.position + 4);\n          buffer.skip(4);\n          var body = buffer.buffer.slice(buffer.position, buffer.position + length);\n          buffer.skip(length);\n          var unit = { header: header, body: body };\n          Nalunit.analyseNal(unit);\n          if (unit.type <= 9 && unit.type !== 0) {\n            nals.push(unit);\n          }\n        } else {\n          break;\n        }\n      }\n      return nals;\n    }\n  }, {\n    key: 'analyseNal',\n    value: function analyseNal(unit) {\n      var type = unit.body[0] & 0x1f;\n      unit.type = type;\n      switch (type) {\n        case 1:\n          // NDR\n          unit.ndr = true;\n          break;\n        case 5:\n          // IDR\n          unit.idr = true;\n          break;\n        case 6:\n          // SEI\n          break;\n        case 7:\n          // SPS\n          unit.sps = SpsParser.parseSPS(unit.body);\n          break;\n        case 8:\n          // PPS\n          unit.pps = true;\n          break;\n        case 9:\n          // AUD\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'getHeaderPositionAnnexB',\n    value: function getHeaderPositionAnnexB(buffer) {\n      // seperate\n      var pos = buffer.position;\n      var headerLength = 0;\n      while (headerLength !== 3 && headerLength !== 4 && pos < buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          } else if (buffer.dataview.getInt8(pos + 2) === 1) {\n            headerLength = 3;\n          } else {\n            pos++;\n          }\n        } else {\n          pos++;\n        }\n      }\n\n      if (pos === buffer.length - 4) {\n        if (buffer.dataview.getInt16(pos) === 0) {\n          if (buffer.dataview.getInt16(pos + 2) === 1) {\n            // 0x000001\n            headerLength = 4;\n          }\n        } else {\n          pos++;\n          if (buffer.dataview.getInt16(pos) === 0 && buffer.dataview.getInt8(pos) === 1) {\n            // 0x0000001\n            headerLength = 3;\n          } else {\n            pos = buffer.length;\n          }\n        }\n      }\n      return { pos: pos, headerLength: headerLength };\n    }\n  }, {\n    key: 'getAvcc',\n    value: function getAvcc(sps, pps) {\n      var ret = new Uint8Array(sps.byteLength + pps.byteLength + 11);\n      ret[0] = 0x01;\n      ret[1] = sps[1];\n      ret[2] = sps[2];\n      ret[3] = sps[3];\n      ret[4] = 255;\n      ret[5] = 225;\n\n      var offset = 6;\n\n      ret.set(new Uint8Array([sps.byteLength >>> 8 & 0xff, sps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(sps, offset);\n      offset += sps.byteLength;\n\n      ret[offset] = 1;\n      offset++;\n\n      ret.set(new Uint8Array([pps.byteLength >>> 8 & 0xff, pps.byteLength & 0xff]), offset);\n      offset += 2;\n      ret.set(pps, offset);\n      return ret;\n    }\n  }]);\n\n  return Nalunit;\n}();\n\nexport default Nalunit;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AAC = function () {\n  function AAC() {\n    _classCallCheck(this, AAC);\n  }\n\n  _createClass(AAC, null, [{\n    key: 'getSilentFrame',\n    value: function getSilentFrame(codec, channelCount) {\n      if (codec === 'mp4a.40.2') {\n        // handle LC-AAC\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);\n        } else if (channelCount === 2) {\n          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);\n        } else if (channelCount === 3) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);\n        } else if (channelCount === 4) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);\n        } else if (channelCount === 5) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);\n        } else if (channelCount === 6) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);\n        }\n      } else {\n        // handle HE-AAC (mp4a.40.5 / mp4a.40.29)\n        if (channelCount === 1) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0:d=0.05\" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 2) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        } else if (channelCount === 3) {\n          // ffmpeg -y -f lavfi -i \"aevalsrc=0|0|0:d=0.05\" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 \"0x%x,\" \"\\n\"' -v output.aac\n          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);\n        }\n      }\n      return null;\n    }\n  }]);\n\n  return AAC;\n}();\n\nexport default AAC;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS } from 'xgplayer-utils';\nimport AAC from './aac/aac-helper';\n\nvar REMUX_EVENTS = EVENTS.REMUX_EVENTS,\n    LOADER_EVENTS = EVENTS.LOADER_EVENTS;\n\nvar Compatibility = function () {\n  function Compatibility() {\n    _classCallCheck(this, Compatibility);\n\n    this.nextAudioDts = 0; // 模拟下一段音频数据的dts\n    this.nextVideoDts = 0; // 模拟下一段视频数据的dts\n\n    this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n    this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n    this.lastVideoDts = undefined; // 上一段音频数据的长度\n    this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n    this.allAudioSamplesCount = 0; // 音频总数据量(原始帧)\n    this.allVideoSamplesCount = 0; // 视频总数据量(原始帧)\n\n    this._firstAudioSample = null;\n    this._firstVideoSample = null;\n\n    this.filledAudioSamples = []; // 补充音频帧（）\n    this.filledVideoSamples = []; // 补充视频帧（）\n\n    this.videoLastSample = null;\n    this.audioLastSample = null; // stash last sample for duration compat\n\n    this._videoLargeGap = 0;\n    this._audioLargeGap = 0;\n  }\n\n  _createClass(Compatibility, [{\n    key: 'init',\n    value: function init() {\n      this.before(REMUX_EVENTS.REMUX_MEDIA, this.doFix.bind(this));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.nextAudioDts = null; // 估算下一段音频数据的dts\n      this.nextVideoDts = null; // 估算下一段视频数据的dts\n\n      this.lastAudioSamplesLen = 0; // 上一段音频数据的长度\n      this.lastVideoSamplesLen = 0; // 上一段视频数据的长度\n\n      this.lastVideoDts = undefined; // 上一段音频数据的长度\n      this.lastAudioDts = undefined; // 上一段视频数据的长度\n\n      // this.allAudioSamplesCount = 0 // 音频总数据量(原始帧)\n      // this.allVideoSamplesCount = 0 // 视频总数据量(原始帧)\n\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      // this._firstAudioSample = null\n      // this._firstVideoSample = null\n      this.videoLastSample = null;\n      this.audioLastSample = null;\n\n      this.filledAudioSamples = []; // 补充音频帧（）\n      this.filledVideoSamples = []; // 补充视频帧（）\n    }\n  }, {\n    key: 'doFix',\n    value: function doFix() {\n      var _getFirstSample = this.getFirstSample(),\n          isFirstAudioSamples = _getFirstSample.isFirstAudioSamples,\n          isFirstVideoSamples = _getFirstSample.isFirstVideoSamples;\n\n      this.recordSamplesCount();\n\n      if (this._firstVideoSample) {\n        this.fixRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples);\n      }\n      if (this._firstAudioSample) {\n        this.fixRefSampleDuration(this.audioTrack.meta, this.audioTrack.samples);\n      }\n\n      var _Compatibility$detact = Compatibility.detactChangeStream(this.videoTrack.samples),\n          videoChanged = _Compatibility$detact.changed,\n          videoChangedIdx = _Compatibility$detact.changedIdx;\n\n      if (videoChanged && !isFirstAudioSamples) {\n        this.fixChangeStreamVideo(videoChangedIdx);\n      } else {\n        this.doFixVideo(isFirstVideoSamples);\n      }\n\n      var _Compatibility$detact2 = Compatibility.detactChangeStream(this.audioTrack.samples),\n          audioChanged = _Compatibility$detact2.changed,\n          audioChangedIdx = _Compatibility$detact2.changedIdx;\n\n      if (audioChanged) {\n        this.fixChangeStreamAudio(audioChangedIdx);\n      } else {\n        this.doFixAudio(isFirstAudioSamples);\n      }\n\n      this.removeInvalidSamples();\n    }\n  }, {\n    key: 'doFixVideo',\n    value: function doFixVideo(first, streamChangeStart) {\n      var _videoTrack = this.videoTrack,\n          videoSamples = _videoTrack.samples,\n          meta = _videoTrack.meta;\n\n      // console.log('next video', this.nextVideoDts)\n\n      for (var i = 0, len = videoSamples.length; i < len; i++) {\n        var sample = videoSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      if (meta.frameRate && meta.frameRate.fixed === false) {\n        return;\n      }\n\n      if (!videoSamples || !videoSamples.length || !this._firstVideoSample) {\n        return;\n      }\n\n      // console.log(`video lastSample, ${videoSamples[videoSamples.length - 1].dts}`)\n\n      var firstSample = videoSamples[0];\n\n      // step0.修复hls流出现巨大gap，需要强制重定位的问题\n      if (this._videoLargeGap !== 0) {\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      if (firstSample.dts !== this._firstVideoSample.dts && (streamChangeStart || this.videoLastSample && Compatibility.detectLargeGap(this.videoLastSample.dts, firstSample))) {\n        if (streamChangeStart) {\n          this.nextVideoDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        } else {\n          this.nextVideoDts = this.videoLastSample.dts;\n        }\n\n        this._videoLargeGap = this.nextVideoDts - firstSample.dts;\n        Compatibility.doFixLargeGap(videoSamples, this._videoLargeGap);\n      }\n\n      // step1. 修复与audio首帧差距太大的问题\n      if (first && this._firstAudioSample) {\n        var videoFirstDts = this._firstVideoSample.originDts;\n        var audioFirstDts = this._firstAudioSample.originDts || this._firstAudioSample.dts;\n        var gap = videoFirstDts - audioFirstDts;\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          var fillCount = Math.floor(gap / meta.refSampleDuration);\n\n          for (var _i = 0; _i < fillCount; _i++) {\n            var clonedFirstSample = Object.assign({}, firstSample); // 视频头部帧缺失需要复制第一帧\n            // 重新计算sample的dts和pts\n            clonedFirstSample.dts = videoFirstDts - (_i + 1) * meta.refSampleDuration;\n            clonedFirstSample.pts = clonedFirstSample.dts + clonedFirstSample.cts;\n\n            videoSamples.unshift(clonedFirstSample);\n\n            this.filledVideoSamples.push({\n              dts: clonedFirstSample.dts,\n              size: clonedFirstSample.data.byteLength\n            });\n          }\n          this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample;\n        } else if (gap < -2 * meta.refSampleDuration) {\n          this._videoLargeGap = -1 * gap;\n          Compatibility.doFixLargeGap(videoSamples, -1 * gap);\n        }\n      }\n\n      var curLastSample = videoSamples.pop();\n      if (videoSamples.length) {\n        videoSamples[videoSamples.length - 1].duration = curLastSample.dts - videoSamples[videoSamples.length - 1].dts;\n      }\n\n      if (this.videoLastSample) {\n        var videoLastSample = this.videoLastSample;\n        videoLastSample.duration = firstSample.dts - videoLastSample.dts;\n        videoSamples.unshift(this.videoLastSample);\n      }\n\n      this.videoLastSample = curLastSample;\n\n      this.videoTrack.samples = videoSamples;\n    }\n  }, {\n    key: 'doFixAudio',\n    value: function doFixAudio(first, streamChangeStart) {\n      var _audioTrack = this.audioTrack,\n          audioSamples = _audioTrack.samples,\n          meta = _audioTrack.meta;\n\n\n      if (!audioSamples || !audioSamples.length) {\n        return;\n      }\n\n      // console.log('next audio', this.nextAudioDts)\n      for (var i = 0, len = audioSamples.length; i < len; i++) {\n        var sample = audioSamples[i];\n        sample.originDts = sample.dts;\n      }\n\n      // console.log(`audio lastSample, ${audioSamples[audioSamples.length - 1].dts}`)\n\n      var samplesLen = audioSamples.length;\n      var silentFrame = AAC.getSilentFrame(meta.codec, meta.channelCount);\n\n      var firstSample = this._firstAudioSample;\n\n      var _firstSample = audioSamples[0];\n      // 对audioSamples按照dts做排序\n      // audioSamples = Compatibility.sortAudioSamples(audioSamples)\n      if (this._audioLargeGap !== 0) {\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n\n      if (_firstSample.dts !== this._firstAudioSample.dts && (streamChangeStart || Compatibility.detectLargeGap(this.nextAudioDts, _firstSample))) {\n        if (streamChangeStart) {\n          this.nextAudioDts = streamChangeStart; // FIX: Hls中途切codec，在如果直接seek到后面的点会导致largeGap计算失败\n        }\n        this._audioLargeGap = this.nextAudioDts - _firstSample.dts;\n        Compatibility.doFixLargeGap(audioSamples, this._audioLargeGap);\n      }\n      // step0. 首帧与video首帧间距大的问题\n      if (this._firstVideoSample && first) {\n        var videoFirstPts = this._firstVideoSample.originDts || this._firstVideoSample.dts;\n        var _gap = firstSample.dts - videoFirstPts;\n        if (_gap > meta.refSampleDuration && _gap < 10 * meta.refSampleDuration) {\n          var silentSampleCount = Math.floor((firstSample.dts - videoFirstPts) / meta.refSampleDuration);\n\n          for (var _i2 = 0; _i2 < silentSampleCount; _i2++) {\n            var silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: firstSample.dts - (_i2 + 1) * meta.refSampleDuration,\n              filtered: 0\n            };\n\n            audioSamples.unshift(silentSample);\n\n            this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            });\n          }\n          this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample;\n        } else if (_gap < -1 * meta.refSampleDuration) {\n          this._audioLargeGap = -1 * _gap;\n          Compatibility.doFixLargeGap(audioSamples, -1 * _gap);\n        }\n      }\n\n      var gap = void 0;\n      var firstDts = audioSamples[0].dts;\n\n      if (this.nextAudioDts) {\n        // step1. 处理samples段之间的丢帧情况\n        // 当发现duration差距大于1帧时进行补帧\n        gap = firstDts - this.nextAudioDts;\n        var absGap = Math.abs(gap);\n\n        if (absGap > meta.refSampleDuration && samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n          meta.refSampleDurationFixed = undefined;\n        }\n\n        if (gap > 2 * meta.refSampleDuration && gap < 10 * meta.refSampleDuration) {\n          if (samplesLen === 1 && this.lastAudioSamplesLen === 1) {\n            // 如果sample的length一直是1，而且一直不符合refSampleDuration，需要动态修改refSampleDuration\n            meta.refSampleDurationFixed = meta.refSampleDurationFixed !== undefined ? meta.refSampleDurationFixed + gap : meta.refSampleDuration + gap;\n          } else {\n            var silentFrameCount = Math.floor(gap / meta.refSampleDuration);\n\n            for (var _i3 = 0; _i3 < silentFrameCount; _i3++) {\n              var computed = firstDts - (_i3 + 1) * meta.refSampleDuration;\n              var _silentSample = Object.assign({}, audioSamples[0], {\n                dts: computed > this.nextAudioDts ? computed : this.nextAudioDts\n              });\n\n              this.filledAudioSamples.push({\n                dts: _silentSample.dts,\n                size: _silentSample.data.byteLength\n              });\n              this.audioTrack.samples.unshift(_silentSample);\n            }\n          }\n        } else if (absGap <= meta.refSampleDuration && absGap > 0) {\n          // 当差距比较小的时候将音频帧重定位\n          // console.log('重定位音频帧dts', audioSamples[0].dts, this.nextAudioDts)\n          audioSamples[0].dts = this.nextAudioDts;\n          audioSamples[0].pts = this.nextAudioDts;\n        } else if (gap < 0) {\n          Compatibility.doFixLargeGap(audioSamples, -1 * gap);\n        }\n      }\n      var lastOriginDts = audioSamples[audioSamples.length - 1].originDts;\n      var lastDts = audioSamples[audioSamples.length - 1].dts;\n      var lastSampleDuration = audioSamples.length >= 2 ? lastOriginDts - audioSamples[audioSamples.length - 2].originDts : meta.refSampleDuration;\n\n      this.lastAudioSamplesLen = samplesLen;\n      this.nextAudioDts = meta.refSampleDurationFixed ? lastDts + meta.refSampleDurationFixed : lastDts + lastSampleDuration;\n      this.lastAudioDts = lastDts;\n\n      audioSamples[audioSamples.length - 1].duration = lastSampleDuration;\n\n      // step3. 修复samples段内部的dts异常问题\n      for (var _i4 = 0, _len = audioSamples.length; _i4 < _len; _i4++) {\n        var current = audioSamples[_i4];\n        var next = audioSamples[_i4 + 1];\n\n        if (!next) {\n          break;\n        }\n\n        var duration = next.dts - current.dts;\n        audioSamples[_i4].duration = duration;\n        /*\n        if (duration > (2 * meta.refSampleDuration)) {\n          // 两帧之间间隔太大，需要补空白帧\n          /**\n          let silentFrameCount = Math.floor(duration / meta.refSampleDuration)\n          let frameIdx = 0\n           while (frameIdx < silentFrameCount) {\n            const silentSample = {\n              data: silentFrame,\n              datasize: silentFrame.byteLength,\n              dts: current.dts + (frameIdx + 1) * meta.refSampleDuration,\n              filtered: 0,\n              isSilent: true\n            }\n             audioSamples.splice(i, 0, silentSample)\n             this.filledAudioSamples.push({\n              dts: silentSample.dts,\n              size: silentSample.data.byteLength\n            })\n             frameIdx++\n            i++ // 不对静音帧做比较\n          }\n        } */\n      }\n      this.audioTrack.samples = Compatibility.sortAudioSamples(audioSamples);\n    }\n  }, {\n    key: 'fixChangeStreamVideo',\n    value: function fixChangeStreamVideo(changeIdx) {\n      var _videoTrack2 = this.videoTrack,\n          samples = _videoTrack2.samples,\n          meta = _videoTrack2.meta;\n\n      var prevDts = changeIdx === 0 ? this.videoLastSample ? this.videoLastSample.dts : this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixVideo(false);\n      }\n\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._videoLargeGap = 0;\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else if (this.videoLastSample) {\n        streamChangeStart = this.videoLastSample.dts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.videoTrack.samples = samples.slice(0, changeIdx);\n\n      this.doFixVideo(false);\n\n      this.videoTrack.samples = samples.slice(changeIdx);\n\n      this.doFixVideo(false, streamChangeStart);\n\n      this.videoTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'fixChangeStreamAudio',\n    value: function fixChangeStreamAudio(changeIdx) {\n      var _audioTrack2 = this.audioTrack,\n          samples = _audioTrack2.samples,\n          meta = _audioTrack2.meta;\n\n\n      var prevDts = changeIdx === 0 ? this.getStreamChangeStart(samples[0]) : samples[changeIdx - 1].dts;\n      var curDts = samples[changeIdx].dts;\n      var isContinue = Math.abs(prevDts - curDts) <= 2 * 1000;\n\n      if (isContinue) {\n        if (!samples[changeIdx].options) {\n          samples[changeIdx].options = {\n            isContinue: true\n          };\n        } else {\n          samples[changeIdx].options.isContinue = true;\n        }\n        return this.doFixAudio(false);\n      }\n      this.emit(REMUX_EVENTS.DETECT_CHANGE_STREAM_DISCONTINUE);\n      this._audioLargeGap = 0;\n\n      var firstPartSamples = samples.slice(0, changeIdx);\n      var secondPartSamples = samples.slice(changeIdx);\n      var firstSample = samples[0];\n\n      var streamChangeStart = void 0;\n      if (firstSample.options && firstSample.options.start) {\n        streamChangeStart = firstSample.options && firstSample.options.start ? firstSample.options.start : null;\n      } else {\n        streamChangeStart = this.lastAudioDts - this.dtsBase + meta.refSampleDuration;\n      }\n\n      this.audioTrack.samples = firstPartSamples;\n\n      this.doFixAudio(false);\n\n      this.audioTrack.samples = secondPartSamples;\n\n      this.doFixAudio(false, streamChangeStart);\n\n      this.audioTrack.samples = firstPartSamples.concat(secondPartSamples);\n    }\n  }, {\n    key: 'getFirstSample',\n    value: function getFirstSample() {\n      // 获取video和audio的首帧数据\n      var videoSamples = this.videoTrack.samples;\n      var audioSamples = this.audioTrack.samples;\n\n\n      var isFirstVideoSamples = false;\n      var isFirstAudioSamples = false;\n\n      if (!this._firstVideoSample && videoSamples.length) {\n        this._firstVideoSample = Compatibility.findFirstVideoSample(videoSamples);\n        this.removeInvalidSamples();\n        isFirstVideoSamples = true;\n      }\n\n      if (!this._firstAudioSample && audioSamples.length) {\n        this._firstAudioSample = Compatibility.findFirstAudioSample(audioSamples); // 寻找dts最小的帧作为首个音频帧\n        this.removeInvalidSamples();\n        isFirstAudioSamples = true;\n      }\n\n      return {\n        isFirstVideoSamples: isFirstVideoSamples,\n        isFirstAudioSamples: isFirstAudioSamples\n      };\n    }\n\n    /**\n     * 在没有refSampleDuration的问题流中，\n     */\n\n  }, {\n    key: 'fixRefSampleDuration',\n    value: function fixRefSampleDuration(meta, samples) {\n      var isVideo = meta.type === 'video';\n      var allSamplesCount = isVideo ? this.allVideoSamplesCount : this.allAudioSamplesCount;\n      var firstDts = isVideo ? this._firstVideoSample.dts : this._firstAudioSample.dts;\n      var filledSamplesCount = isVideo ? this.filledVideoSamples.length : this.filledAudioSamples.length;\n\n      if (!meta.refSampleDuration || meta.refSampleDuration <= 0 || Number.isNaN(meta.refSampleDuration)) {\n        if (samples.length >= 1) {\n          var lastDts = samples[samples.length - 1].dts;\n\n          meta.refSampleDuration = Math.floor((lastDts - firstDts) / (allSamplesCount + filledSamplesCount - 1)); // 将refSampleDuration重置为计算后的平均值\n        }\n      } else if (meta.refSampleDuration) {\n        if (samples.length >= 5) {\n          var _lastDts = samples[samples.length - 1].dts;\n          var _firstDts = samples[0].dts;\n          var durationAvg = (_lastDts - _firstDts) / (samples.length - 1);\n          if (durationAvg > 0 && durationAvg < 1000) {\n            meta.refSampleDuration = Math.floor(Math.abs(meta.refSampleDuration - durationAvg) <= 5 ? meta.refSampleDuration : durationAvg); // 将refSampleDuration重置为计算后的平均值\n          }\n        }\n      }\n    }\n\n    /**\n     * 记录截止目前一共播放了多少帧\n     */\n\n  }, {\n    key: 'recordSamplesCount',\n    value: function recordSamplesCount() {\n      var audioTrack = this.audioTrack,\n          videoTrack = this.videoTrack;\n\n\n      this.allAudioSamplesCount += audioTrack.samples.length;\n      this.allVideoSamplesCount += videoTrack.samples.length;\n    }\n\n    /**\n     * 去除不合法的帧（倒退、重复帧）\n     */\n\n  }, {\n    key: 'removeInvalidSamples',\n    value: function removeInvalidSamples() {\n      var firstAudioSample = this.audioTrack.samples[0];\n      var firstVideoSample = this.videoTrack.samples[0];\n      // const { _firstVideoSample, _firstAudioSample } = this\n\n      if (firstAudioSample) {\n        this.audioTrack.samples = this.audioTrack.samples.filter(function (sample, index) {\n          if (sample === firstAudioSample) {\n            return true;\n          }\n          return sample.dts > firstAudioSample.dts;\n        });\n      }\n\n      if (firstVideoSample) {\n        this.videoTrack.samples = this.videoTrack.samples.filter(function (sample, index) {\n          if (sample === firstVideoSample) {\n            return true;\n          }\n          return sample.dts > firstVideoSample.dts;\n        });\n      }\n    }\n  }, {\n    key: 'getStreamChangeStart',\n    value: function getStreamChangeStart(sample) {\n      if (sample.options && sample.options.start) {\n        return sample.options.start - this.dtsBase;\n      }\n      return Infinity;\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'audioTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.audioTrack) {\n        return this.tracks.audioTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'videoTrack',\n    get: function get() {\n      if (this.tracks && this.tracks.videoTrack) {\n        return this.tracks.videoTrack;\n      }\n      return {\n        samples: [],\n        meta: {}\n      };\n    }\n  }, {\n    key: 'dtsBase',\n    get: function get() {\n      var remuxer = this._context.getInstance('MP4_REMUXER');\n      if (remuxer) {\n        return remuxer._dtsBase;\n      }\n      return 0;\n    }\n  }], [{\n    key: 'sortAudioSamples',\n    value: function sortAudioSamples(samples) {\n      if (samples.length === 1) {\n        return samples;\n      }\n\n      return samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n    }\n\n    /**\n     * 寻找dts最小的sample\n     * @param samples\n     */\n\n  }, {\n    key: 'findFirstAudioSample',\n    value: function findFirstAudioSample(samples) {\n      if (!samples || samples.length === 0) {\n        return null;\n      }\n\n      return Compatibility.sortAudioSamples(samples)[0];\n    }\n  }, {\n    key: 'findFirstVideoSample',\n    value: function findFirstVideoSample(samples) {\n      if (!samples.length) {\n        return null;\n      }\n\n      var sorted = samples.sort(function (a, b) {\n        return a.dts - b.dts;\n      });\n\n      for (var i = 0, len = sorted.length; i < len; i++) {\n        if (sorted[i].isKeyframe) {\n          return sorted[i];\n        }\n      }\n    }\n  }, {\n    key: 'detectLargeGap',\n    value: function detectLargeGap(nextDts, firstSample) {\n      if (nextDts === null) {\n        return;\n      }\n      var curDts = firstSample.dts || 0;\n      var cond1 = nextDts - curDts >= 1000 || curDts - nextDts >= 1000; // fix hls流出现大量流dts间距问题\n      var cond2 = firstSample.options && firstSample.options.discontinue;\n\n      return cond1 || cond2;\n    }\n  }, {\n    key: 'doFixLargeGap',\n    value: function doFixLargeGap(samples, gap) {\n      // console.log('fix large gap ', gap)\n      for (var i = 0, len = samples.length; i < len; i++) {\n        var sample = samples[i];\n        sample.dts += gap;\n        if (sample.pts) {\n          sample.pts += gap;\n        }\n      }\n    }\n\n    /**\n     * 中途换流\n     */\n\n  }, {\n    key: 'detactChangeStream',\n    value: function detactChangeStream(samples) {\n      var changed = false;\n      var changedIdx = -1;\n      for (var i = 0, len = samples.length; i < len; i++) {\n        if (samples[i].options && samples[i].options.meta) {\n          changed = true;\n          changedIdx = i;\n          break;\n        }\n      }\n\n      return {\n        changed: changed,\n        changedIdx: changedIdx\n      };\n    }\n  }]);\n\n  return Compatibility;\n}();\n\nexport default Compatibility;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Reference: https://tools.ietf.org/html/rfc8216#section-4.3\n */\nvar M3U8Parser = function () {\n  function M3U8Parser() {\n    _classCallCheck(this, M3U8Parser);\n  }\n\n  _createClass(M3U8Parser, null, [{\n    key: 'parse',\n    value: function parse(text) {\n      var baseurl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n      var ret = {\n        duration: 0\n      };\n      if (!text || !text.split) {\n        return;\n      }\n      var refs = text.split(/\\r|\\n/);\n      refs = refs.filter(function (ref) {\n        return ref;\n      });\n      var ref = refs.shift();\n      if (!ref.match('#EXTM3U')) {\n        throw new Error('Invalid m3u8 file: not \"#EXTM3U\"');\n        return null;\n      }\n      ref = refs.shift();\n      var nextDiscontinue = false;\n      while (ref) {\n        var refm = ref.match(/#(.[A-Z|-]*):(.*)/);\n        var refd = ref.match(/#(.[A-Z|-]*)/);\n        if (refd && refm && refm.length > 2) {\n          switch (refm[1]) {\n            case 'EXT-X-VERSION':\n              ret.version = parseInt(refm[2]);\n              break;\n            case 'EXT-X-MEDIA-SEQUENCE':\n              ret.sequence = parseInt(refm[2]);\n              break;\n            case 'EXT-X-TARGETDURATION':\n              ret.targetduration = parseFloat(refm[2]);\n              break;\n            case 'EXTINF':\n              M3U8Parser.parseFrag(refm, refs, ret, baseurl, nextDiscontinue);\n              nextDiscontinue = false;\n              break;\n            case 'EXT-X-KEY':\n              M3U8Parser.parseDecrypt(refm[2], ret);\n              break;\n            default:\n              break;\n          }\n        }if (refd && refd.length > 1) {\n          switch (refd[1]) {\n            case 'EXT-X-DISCONTINUITY':\n              nextDiscontinue = true;\n              break;\n            default:\n              break;\n          }\n        }\n        ref = refs.shift();\n      }\n      return ret;\n    }\n  }, {\n    key: 'parseFrag',\n    value: function parseFrag(refm, refs, ret, baseurl, discontinue) {\n      if (!ret.frags) {\n        ret.frags = [];\n      }\n\n      var freg = {\n        start: ret.duration,\n        duration: parseFloat(refm[2]) * 1000\n      };\n\n      ret.duration += freg.duration;\n      var nextline = refs.shift();\n      if (nextline.match(/#(.*):(.*)/) || nextline.match(/^#/)) {\n        nextline = refs.shift();\n      }\n      if (nextline.length > 0 && nextline.charAt(0) === '/' && baseurl.match(/.*\\/\\/.*\\.\\w+/g)) {\n        baseurl = baseurl.match(/.*\\/\\/.*\\.\\w+/g)[0];\n      }\n      if (nextline.match(/.*:\\/\\/.*/)) {\n        freg.url = nextline;\n      } else {\n        freg.url = baseurl + nextline;\n      }\n      freg.discontinue = discontinue;\n      ret.frags.push(freg);\n    }\n  }, {\n    key: 'parseURL',\n    value: function parseURL(url) {\n      var baseurl = '';\n      var urls = url.match(/(.*\\/).*\\.m3u8/);\n      if (urls && urls.length > 0) {\n        for (var i = 0; i < urls.length; i++) {\n          if (urls[i].match(/.*\\/$/g) && urls[i].length > baseurl.length) {\n            baseurl = urls[i];\n          }\n        }\n      }\n      return baseurl;\n    }\n  }, {\n    key: 'parseDecrypt',\n    value: function parseDecrypt(refm, ret) {\n      ret.encrypt = {};\n      var refs = refm.split(',');\n      for (var i in refs) {\n        var cmd = refs[i];\n        if (cmd.match(/METHOD=(.*)/)) {\n          ret.encrypt.method = cmd.match(/METHOD=(.*)/)[1];\n        }\n        if (cmd.match(/URI=\"(.*)\"/)) {\n          ret.encrypt.uri = cmd.match(/URI=\"(.*)\"/)[1];\n        }\n\n        if (cmd.match(/IV=0x(.*)/)) {\n          var iv = cmd.match(/IV=0x(.*)/)[1];\n          var length = Math.ceil(iv.length / 2);\n          ret.encrypt.ivb = new Uint8Array(length);\n          for (var _i = length - 1; _i >= 0; _i--) {\n            var im = parseInt(iv.substr(_i * 2, 2), 16);\n            ret.encrypt.ivb[_i] = im;\n          }\n          ret.encrypt.iv = iv;\n        }\n      };\n    }\n  }]);\n\n  return M3U8Parser;\n}();\n\nexport default M3U8Parser;","var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { Nalunit } from 'xgplayer-codec';\nimport { AudioTrack, VideoTrack } from 'xgplayer-buffer';\nimport { AudioTrackMeta, VideoTrackMeta, AudioTrackSample, VideoTrackSample, EVENTS, Stream } from 'xgplayer-utils';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nvar StreamType = {\n  0x01: ['video', 'MPEG-1'],\n  0x02: ['video', 'MPEG-2'],\n  0x1b: ['video', 'AVC.H264'],\n  0xea: ['video', 'VC-1'],\n  0x03: ['audio', 'MPEG-1'],\n  0x04: ['audio', 'MPEG-2'],\n  0x0f: ['audio', 'MPEG-2.AAC'],\n  0x11: ['audio', 'MPEG-4.AAC'],\n  0x80: ['audio', 'LPCM'],\n  0x81: ['audio', 'AC3'],\n  0x06: ['audio', 'AC3'],\n  0x82: ['audio', 'DTS'],\n  0x83: ['audio', 'Dolby TrueHD'],\n  0x84: ['audio', 'AC3-Plus'],\n  0x85: ['audio', 'DTS-HD'],\n  0x86: ['audio', 'DTS-MA'],\n  0xa1: ['audio', 'AC3-Plus-SEC'],\n  0xa2: ['audio', 'DTS-HD-SEC']\n};\n\nvar TsDemuxer = function () {\n  function TsDemuxer(configs) {\n    _classCallCheck(this, TsDemuxer);\n\n    this.configs = Object.assign({}, configs);\n    this.demuxing = false;\n    this.pat = [];\n    this.pmt = [];\n    this._hasVideoMeta = false;\n    this._hasAudioMeta = false;\n  }\n\n  _createClass(TsDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.demux.bind(this));\n    }\n  }, {\n    key: 'demux',\n    value: function demux(frag) {\n      if (this.demuxing) {\n        return;\n      }\n\n      var buffer = this.inputBuffer;\n      var frags = { pat: [], pmt: [] };\n      var peses = {};\n\n      // Read TS segment\n      while (buffer.length >= 188) {\n        if (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('Untrust sync code: ' + buffer.array[0][buffer.offset] + ', try to recover;'), false);\n        }\n        while (buffer.length >= 1 && buffer.array[0][buffer.offset] !== 71) {\n          buffer.shift(1);\n        }\n        if (buffer.length < 188) {\n          continue;\n        }\n        var buf = buffer.shift(188);\n        // console.log(buf);\n        var tsStream = new Stream(buf.buffer);\n        var ts = {};\n        TsDemuxer.read(tsStream, ts, frags);\n        if (ts.pes) {\n          if (!peses[ts.header.pid]) {\n            peses[ts.header.pid] = [];\n          }\n          peses[ts.header.pid].push(ts.pes);\n          ts.pes.ES.buffer = [ts.pes.ES.buffer];\n        } else if (peses[ts.header.pid]) {\n          peses[ts.header.pid][peses[ts.header.pid].length - 1].ES.buffer.push(ts.payload.stream);\n        }\n      }\n\n      var AudioOptions = frag;\n      var VideoOptions = frag;\n\n      // Get Frames data\n      for (var i = 0; i < Object.keys(peses).length; i++) {\n        var epeses = peses[Object.keys(peses)[i]];\n        for (var j = 0; j < epeses.length; j++) {\n          epeses[j].id = Object.keys(peses)[i];\n          epeses[j].ES.buffer = TsDemuxer.Merge(epeses[j].ES.buffer);\n          if (epeses[j].type === 'audio') {\n            this.pushAudioSample(epeses[j], AudioOptions);\n            AudioOptions = {};\n          } else if (epeses[j].type === 'video') {\n            this.pushVideoSample(epeses[j], VideoOptions);\n            VideoOptions = {};\n          }\n        }\n      }\n\n      if (this._hasAudioMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'audio');\n      }\n      if (this._hasVideoMeta) {\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE, 'video');\n      }\n    }\n  }, {\n    key: 'pushAudioSample',\n    value: function pushAudioSample(pes, options) {\n      var track = void 0;\n      if (!this._tracks.audioTrack) {\n        this._tracks.audioTrack = new AudioTrack();\n        track = this._tracks.audioTrack;\n      } else {\n        track = this._tracks.audioTrack;\n      }\n      var meta = new AudioTrackMeta({\n        audioSampleRate: pes.ES.frequence,\n        sampleRate: pes.ES.frequence,\n        channelCount: pes.ES.channel,\n        codec: 'mp4a.40.' + pes.ES.audioObjectType,\n        config: pes.ES.audioConfig,\n        id: 2,\n        sampleRateIndex: pes.ES.frequencyIndex\n      });\n      meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n\n      var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n\n      if (!this._hasAudioMeta || !metaEqual) {\n        track.meta = meta;\n        this._hasAudioMeta = true;\n        this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n      }\n\n      var data = new Uint8Array(pes.ES.buffer.buffer.slice(pes.ES.buffer.position, pes.ES.buffer.length));\n      var dts = parseInt(pes.pts / 90);\n      var pts = parseInt(pes.pts / 90);\n      var sample = new AudioTrackSample({ dts: dts, pts: pts, data: data, options: options });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'pushVideoSample',\n    value: function pushVideoSample(pes, options) {\n      var nals = Nalunit.getNalunits(pes.ES.buffer);\n      var track = void 0;\n      var meta = new VideoTrackMeta();\n      if (!this._tracks.videoTrack) {\n        this._tracks.videoTrack = new VideoTrack();\n        track = this._tracks.videoTrack;\n      } else {\n        track = this._tracks.videoTrack;\n      }\n      var sampleLength = 0;\n      var sps = false;\n      var pps = false;\n      for (var i = 0; i < nals.length; i++) {\n        var nal = nals[i];\n        if (nal.sps) {\n          sps = nal;\n          track.sps = nal.body;\n          meta.chromaFormat = sps.sps.chroma_format;\n          meta.codec = 'avc1.';\n          for (var j = 1; j < 4; j++) {\n            var h = sps.body[j].toString(16);\n            if (h.length < 2) {\n              h = '0' + h;\n            }\n            meta.codec += h;\n          }\n          meta.codecHeight = sps.sps.codec_size.height;\n          meta.codecWidth = sps.sps.codec_size.width;\n          meta.frameRate = sps.sps.frame_rate;\n          meta.id = 1;\n          meta.level = sps.sps.level_string;\n          meta.presentHeight = sps.sps.present_size.height;\n          meta.presentWidth = sps.sps.present_size.width;\n          meta.profile = sps.sps.profile_string;\n          meta.refSampleDuration = Math.floor(meta.timescale * (sps.sps.frame_rate.fps_den / sps.sps.frame_rate.fps_num));\n          meta.sarRatio = sps.sps.sar_ratio ? sps.sps.sar_ratio : sps.sps.par_ratio;\n        } else if (nal.pps) {\n          track.pps = nal.body;\n          pps = nal;\n        } else if (nal.type < 9) {\n          sampleLength += 4 + nal.body.byteLength;\n        }\n      }\n\n      if (sps && pps) {\n        meta.avcc = Nalunit.getAvcc(sps.body, pps.body);\n        var metaEqual = TsDemuxer.compaireMeta(track.meta, meta, true);\n        if (!this._hasVideoMeta || !metaEqual) {\n          if (options) {\n            options.meta = Object.assign({}, meta);\n          } else {\n            options = {\n              meta: Object.assign({}, meta)\n            };\n          }\n          track.meta = meta;\n          this._hasVideoMeta = true;\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n        }\n      }\n\n      var data = new Uint8Array(sampleLength);\n      var offset = 0;\n      var isKeyframe = false;\n      for (var _i = 0; _i < nals.length; _i++) {\n        var _nal = nals[_i];\n        if (_nal.type && _nal.type >= 9) {\n          continue;\n        }\n        var length = _nal.body.byteLength;\n        if (_nal.idr) {\n          isKeyframe = true;\n        }\n        if (!_nal.pps && !_nal.sps) {\n          data.set(new Uint8Array([length >>> 24 & 0xff, length >>> 16 & 0xff, length >>> 8 & 0xff, length & 0xff]), offset);\n          offset += 4;\n          data.set(_nal.body, offset);\n          offset += length;\n        }\n      }\n      var sample = new VideoTrackSample({\n        dts: parseInt(pes.dts / 90),\n        pts: parseInt(pes.pts / 90),\n        cts: (pes.pts - pes.dts) / 90,\n        originDts: pes.dts,\n        isKeyframe: isKeyframe,\n        data: data,\n        options: options\n      });\n      track.samples.push(sample);\n    }\n  }, {\n    key: 'destory',\n    value: function destory() {\n      this.off(DEMUX_EVENTS.DEMUX_START, this.demux);\n      this.configs = {};\n      this.demuxing = false;\n      this.pat = [];\n      this.pmt = [];\n      this._hasVideoMeta = false;\n      this._hasAudioMeta = false;\n    }\n  }, {\n    key: 'inputBuffer',\n    get: function get() {\n      return this._context.getInstance(this.configs.inputbuffer);\n    }\n  }, {\n    key: '_tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }], [{\n    key: 'compaireArray',\n    value: function compaireArray(a, b, type) {\n      var al = 0;\n      var bl = 0;\n      if (type === 'Uint8Array') {\n        al = a.byteLength;\n        bl = b.byteLength;\n      } else if (type === 'Array') {\n        al = a.length;\n        bl = b.length;\n      }\n      if (al !== bl) {\n        return false;\n      }\n\n      for (var i = 0; i < al; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compaireMeta',\n    value: function compaireMeta(a, b, ignoreDuration) {\n      if (!a || !b) {\n        return false;\n      }\n\n      for (var i = 0, k = Object.keys(a).length; i < k; i++) {\n        var itema = a[Object.keys(a)[i]];\n        var itemb = b[Object.keys(a)[i]];\n        if ((typeof itema === 'undefined' ? 'undefined' : _typeof(itema)) !== 'object') {\n          if (ignoreDuration && Object.keys(a)[i] !== 'duration' && Object.keys(a)[i] !== 'refSampleDuration' && Object.keys(a)[i] !== 'refSampleDurationFixed' && itema !== itemb) {\n            return false;\n          }\n        } else if (itema.byteLength !== undefined) {\n          if (itemb.byteLength === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Uint8Array')) {\n            return false;\n          }\n        } else if (itema.length !== undefined) {\n          if (itemb.length === undefined) {\n            return false;\n          }\n          if (!TsDemuxer.compaireArray(itema, itemb, 'Array')) {\n            return false;\n          }\n        } else {\n          if (!TsDemuxer.compaireMeta(itema, itemb)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'Merge',\n    value: function Merge(buffers) {\n      var data = void 0;\n      var length = 0;\n      var offset = 0;\n      for (var i = 0; i < buffers.length; i++) {\n        length += buffers[i].length - buffers[i].position;\n      }\n\n      data = new Uint8Array(length);\n      for (var _i2 = 0; _i2 < buffers.length; _i2++) {\n        var buffer = buffers[_i2];\n        data.set(new Uint8Array(buffer.buffer, buffer.position), offset);\n        offset += buffer.length - buffer.position;\n      }\n      return new Stream(data.buffer);\n    }\n  }, {\n    key: 'read',\n    value: function read(stream, ts, frags) {\n      TsDemuxer.readHeader(stream, ts);\n      TsDemuxer.readPayload(stream, ts, frags);\n      if (ts.header.packet === 'MEDIA' && ts.header.payload === 1 && !ts.unknownPIDs) {\n        ts.pes = TsDemuxer.PES(ts);\n      }\n    }\n  }, {\n    key: 'readPayload',\n    value: function readPayload(stream, ts, frags) {\n      var header = ts.header;\n      var pid = header.pid;\n      switch (pid) {\n        case 0:\n          TsDemuxer.PAT(stream, ts, frags);\n          break;\n        case 1:\n          TsDemuxer.CAT(stream, ts, frags);\n          break;\n        case 2:\n          TsDemuxer.TSDT(stream, ts, frags);\n          break;\n        case 0x1fff:\n          break;\n        default:\n          // TODO: some的写法不太好，得改\n          if (frags.pat.some(function (item) {\n            return item.pid === pid;\n          })) {\n            TsDemuxer.PMT(stream, ts, frags);\n          } else {\n            var sts = frags.pmt ? frags.pmt.filter(function (item) {\n              return item.pid === pid;\n            }) : [];\n            if (sts.length > 0) {\n              TsDemuxer.Media(stream, ts, StreamType[sts[0].streamType][0]);\n            } else {\n              ts.unknownPIDs = true;\n            };\n          }\n      }\n    }\n  }, {\n    key: 'readHeader',\n    value: function readHeader(stream, ts) {\n      var header = {};\n      header.sync = stream.readUint8();\n      var next = stream.readUint16();\n      header.error = next >>> 15;\n      header.payload = next >>> 14 & 1;\n      header.priority = next >>> 13 & 1;\n      header.pid = next & 0x1fff;\n\n      next = stream.readUint8();\n\n      header.scrambling = next >> 6 & 0x3; // 是否加密，00表示不加密\n\n      /**\n       * 00 ISO/IEC未来使用保留\n       * 01 没有调整字段，仅含有184B有效净荷\n       * 02 没有有效净荷，仅含有183B调整字段\n       * 03 0~182B调整字段后为有效净荷\n       */\n      header.adaptation = next >> 4 & 0x3;\n      header.continuity = next & 15;\n      header.packet = header.pid === 0 ? 'PAT' : 'MEDIA';\n      ts.header = header;\n    }\n  }, {\n    key: 'PAT',\n    value: function PAT(stream, ts, frags) {\n      var ret = {};\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tabelID = next;\n      next = stream.readUint16();\n      ret.error = next >>> 7;\n      ret.zero = next >>> 6 & 1;\n      ret.sectionLength = next & 0xfff;\n      ret.streamID = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (ret.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        var programNumber = stream.readUint16();\n        var pid = stream.readUint16() & 0x1fff;\n        list.push({\n          program: programNumber,\n          pid: pid,\n          type: programNumber === 0 ? 'network' : 'mapPID'\n        });\n      }\n      if (list.length > 0) {\n        frags.pat = frags.pat.concat(list);\n      }\n      ret.list = list;\n      ret.program = stream.readUint16();\n      ret.pid = stream.readUint16() & 0x1fff;\n      ts.payload = ret;\n      // TODO CRC\n    }\n  }, {\n    key: 'PMT',\n    value: function PMT(stream, ts, frags) {\n      var ret = {};\n      var header = ts.header;\n      header.packet = 'PMT';\n      var next = stream.readUint8();\n      stream.skip(next);\n      next = stream.readUint8();\n      ret.tableID = next;\n      next = stream.readUint16();\n      ret.sectionLength = next & 0xfff;\n      ret.program = stream.readUint16();\n      ret.current = stream.readUint8() & 1;\n      ret.order = stream.readUint8();\n      ret.lastOrder = stream.readUint8();\n      ret.PCR_PID = stream.readUint16() & 0x1fff;\n      ret.programLength = stream.readUint16() & 0xfff;\n      var N = (ret.sectionLength - 13) / 5;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({\n          streamType: stream.readUint8(),\n          pid: stream.readUint16() & 0x1fff, // 0x07e5 视频，0x07e6\n          es: stream.readUint16() & 0xfff\n        });\n      }\n      ret.list = list;\n      if (!this.pmt) {\n        this.pmt = [];\n      }\n      frags.pmt = this.pmt.concat(list.map(function (item) {\n        return {\n          pid: item.pid,\n          es: item.es,\n          streamType: item.streamType,\n          program: ret.program\n        };\n      }));\n      ts.payload = ret;\n    }\n  }, {\n    key: 'Media',\n    value: function Media(stream, ts, type) {\n      var header = ts.header;\n      var payload = {};\n      header.type = type;\n      if (header.adaptation === 0x03) {\n        payload.adaptationLength = stream.readUint8();\n        if (payload.adaptationLength > 0) {\n          var next = stream.readUint8();\n          payload.discontinue = next >>> 7;\n          payload.access = next >>> 6 & 0x01;\n          payload.priority = next >>> 5 & 0x01;\n          payload.PCR = next >>> 4 & 0x01;\n          payload.OPCR = next >>> 3 & 0x01;\n          payload.splicePoint = next >>> 2 & 0x01;\n          payload.transportPrivate = next >>> 1 & 0x01;\n          payload.adaptationField = next & 0x01;\n          var _start = stream.position;\n          if (payload.PCR === 1) {\n            payload.programClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.programClockBase |= next >>> 15;\n            payload.programClockExtension = next & 0x1ff;\n          }\n          if (payload.OPCR === 1) {\n            payload.originProgramClockBase = stream.readUint32() << 1;\n            next = stream.readUint16();\n            payload.originProgramClockBase += next >>> 15;\n            payload.originProgramClockExtension = next & 0x1ff;\n          }\n          if (payload.splicePoint === 1) {\n            payload.spliceCountdown = stream.readUint8();\n          }\n          if (payload.transportPrivate === 1) {\n            var length = stream.readUint8();\n            var transportPrivateData = [];\n            for (var i = 0; i < length; i++) {\n              transportPrivateData.push(stream.readUint8());\n            }\n          }\n          if (payload.adaptationField === 1) {\n            var _length = stream.readUint8();\n            var _next = stream.readUint8();\n            var start = stream.position;\n            var ltw = _next >>> 7;\n            var piecewise = _next >>> 6 & 0x1;\n            var seamless = _next >>> 5 & 0x1;\n            if (ltw === 1) {\n              _next = stream.readUint16();\n              payload.ltwValid = _next >>> 15;\n              payload.ltwOffset = _next & 0xefff;\n            }\n            if (piecewise === 1) {\n              _next = stream.readUint24();\n              payload.piecewiseRate = _next & 0x3fffff;\n            }\n            if (seamless === 1) {\n              _next = stream.readInt8();\n              payload.spliceType = _next >>> 4;\n              payload.dtsNextAU1 = _next >>> 1 & 0x7;\n              payload.marker1 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU2 = _next >>> 1;\n              payload.marker2 = _next & 0x1;\n              _next = stream.readUint16();\n              payload.dtsNextAU3 = _next;\n            }\n            stream.skip(_length - 1 - (stream.position - start));\n          }\n          var lastStuffing = payload.adaptationLength - 1 - (stream.position - _start);\n          stream.skip(lastStuffing);\n        }\n      }\n      payload.stream = new Stream(stream.buffer.slice(stream.position));\n      ts.payload = payload;\n    }\n  }, {\n    key: 'PES',\n    value: function PES(ts) {\n      var ret = {};\n      var buffer = ts.payload.stream;\n\n      var next = buffer.readUint24();\n      if (next !== 1) {\n        ret.ES = {};\n        ret.ES.buffer = buffer;\n      } else {\n        var streamID = buffer.readUint8();\n        if (streamID >= 0xe0 && streamID <= 0xef) {\n          ret.type = 'video';\n        }\n        if (streamID >= 0xc0 && streamID <= 0xdf) {\n          ret.type = 'audio';\n        }\n        var packetLength = buffer.readUint16();\n        ret.packetLength = packetLength;\n        if (ret.type === 'video' || ret.type === 'audio') {\n          var _next2 = buffer.readUint8();\n          var first = _next2 >>> 6;\n          if (first !== 0x02) {\n            throw new Error('error when parse pes header');\n          }\n          _next2 = buffer.readUint8();\n          ret.ptsDTSFlag = _next2 >>> 6;\n          ret.escrFlag = _next2 >>> 5 & 0x01;\n          ret.esRateFlag = _next2 >>> 4 & 0x01;\n          ret.dsmFlag = _next2 >>> 3 & 0x01;\n          ret.additionalFlag = _next2 >>> 2 & 0x01;\n          ret.crcFlag = _next2 >>> 1 & 0x01;\n          ret.extensionFlag = _next2 & 0x01;\n          ret.pesHeaderLength = buffer.readUint8();\n          var N1 = ret.pesHeaderLength;\n\n          if (ret.ptsDTSFlag === 2) {\n            var pts = [];\n            _next2 = buffer.readUint8();\n            pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            pts.push(_next2 >>> 1);\n            ret.pts = pts[0] << 30 | pts[1] << 15 | pts[2];\n            N1 -= 5;\n            // 视频如果没有dts用pts\n            if (ret.type === 'video') {\n              ret.dts = ret.pts;\n            }\n          }\n          if (ret.ptsDTSFlag === 3) {\n            var _pts = [];\n            _next2 = buffer.readUint8();\n            _pts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            _pts.push(_next2 >>> 1);\n            ret.pts = _pts[0] << 30 | _pts[1] << 15 | _pts[2];\n            var dts = [];\n            _next2 = buffer.readUint8();\n            dts.push(_next2 >>> 1 & 0x07);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            _next2 = buffer.readUint16();\n            dts.push(_next2 >>> 1);\n            ret.dts = dts[0] << 30 | dts[1] << 15 | dts[2];\n            N1 -= 10;\n          }\n          if (ret.escrFlag === 1) {\n            var escr = [];\n            var ex = [];\n            _next2 = buffer.readUint8();\n            escr.push(_next2 >>> 3 & 0x07);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            escr.push(_next2 & 0x03);\n            _next2 = buffer.readUint16();\n            escr.push(_next2 >>> 13);\n            ex.push(_next2 & 0x03);\n            _next2 = buffer.readUint8();\n            ex.push(_next2 >>> 1);\n            ret.escr = (escr[0] << 30 | escr[1] << 28 | escr[2] << 15 | escr[3] << 13 | escr[4]) * 300 + (ex[0] << 7 | ex[1]);\n            N1 -= 6;\n          }\n          if (ret.esRateFlag === 1) {\n            _next2 = buffer.readUint24();\n            ret.esRate = _next2 >>> 1 & 0x3fffff;\n            N1 -= 3;\n          }\n          if (ret.dsmFlag === 1) {\n            throw new Error('not support DSM_trick_mode');\n          }\n          if (ret.additionalFlag === 1) {\n            _next2 = buffer.readUint8();\n            ret.additionalCopyInfo = _next2 & 0x7f;\n            N1 -= 1;\n          }\n          if (ret.crcFlag === 1) {\n            ret.pesCRC = buffer.readUint16();\n            N1 -= 2;\n          }\n          if (ret.extensionFlag === 1) {\n            throw new Error('not support extension');\n          }\n          if (N1 > 0) {\n            buffer.skip(N1);\n          }\n          ret.ES = TsDemuxer.ES(buffer, ret.type);\n        } else {\n          throw new Error('format is not supported');\n        }\n      }\n      return ret;\n    }\n  }, {\n    key: 'ES',\n    value: function ES(buffer, type) {\n      var next = void 0;\n      var ret = {};\n      if (type === 'video') {\n        next = buffer.readUint32();\n        if (next !== 1) {\n          buffer.back(4);\n          next = buffer.readUint24();\n          if (next !== 1) {\n            throw new Error('h264 nal header parse failed');\n          }\n        }\n        buffer.skip(2); // 09 F0\n        // TODO readnalu\n        ret.buffer = buffer;\n      } else if (type === 'audio') {\n        next = buffer.readUint16();\n        // adts的同步字节，12位\n        if (next >>> 4 !== 0xfff) {\n          throw new Error('aac ES parse Error');\n        }\n        var fq = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n        ret.id = (next >>> 3 & 0x01) === 0 ? 'MPEG-4' : 'MPEG-2';\n        ret.layer = next >>> 1 & 0x03;\n        ret.absent = next & 0x01;\n        next = buffer.readUint16();\n        ret.audioObjectType = (next >>> 14 & 0x03) + 1;\n        ret.profile = ret.audioObjectType - 1;\n        ret.frequencyIndex = next >>> 10 & 0x0f;\n        ret.frequence = fq[ret.frequencyIndex];\n        ret.channel = next >>> 6 & 0x07;\n        ret.frameLength = (next & 0x03) << 11 | buffer.readUint16() >>> 5;\n        TsDemuxer.getAudioConfig(ret);\n        buffer.skip(1);\n        ret.buffer = buffer;\n      } else {\n        throw new Error('ES ' + type + ' is not supported');\n      }\n\n      return ret;\n    }\n  }, {\n    key: 'TSDT',\n    value: function TSDT(stream, ts, frags) {\n      // TODO\n      ts.payload = {};\n    }\n  }, {\n    key: 'CAT',\n    value: function CAT(stream, ts, frags) {\n      var ret = {};\n      ret.tableID = stream.readUint8();\n      var next = stream.readUint16();\n      ret.sectionIndicator = next >>> 7;\n      ret.sectionLength = next & 0x0fff;\n      stream.skip(2);\n      next = stream.readUint8();\n      ret.version = next >>> 3;\n      ret.currentNextIndicator = next & 0x01;\n      ret.sectionNumber = stream.readUint8();\n      ret.lastSectionNumber = stream.readUint8();\n      var N = (this.sectionLength - 9) / 4;\n      var list = [];\n      for (var i = 0; i < N; i++) {\n        list.push({});\n      }\n      ret.crc32 = stream.readUint32();\n      ts.payload = ret;\n    }\n  }, {\n    key: 'getAudioConfig',\n    value: function getAudioConfig(ret) {\n      var userAgent = navigator.userAgent.toLowerCase();\n      var config = void 0;\n      var extensionSampleIndex = void 0;\n      if (/firefox/i.test(userAgent)) {\n        if (ret.frequencyIndex >= 6) {\n          ret.audioObjectType = 5;\n          config = new Array(4);\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          ret.audioObjectType = 2;\n          config = new Array(2);\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        ret.audioObjectType = 2;\n        config = new Array(2);\n        extensionSampleIndex = ret.frequencyIndex;\n      } else {\n        ret.audioObjectType = 5;\n        config = new Array(4);\n        if (ret.frequencyIndex >= 6) {\n          extensionSampleIndex = ret.frequencyIndex - 3;\n        } else {\n          if (ret.channel === 1) {\n            ret.audioObjectType = 2;\n            config = new Array(2);\n          }\n          extensionSampleIndex = ret.frequencyIndex;\n        }\n      }\n\n      config[0] = ret.audioObjectType << 3;\n      config[0] |= (ret.frequencyIndex & 0x0e) >> 1;\n      config[1] = (ret.frequencyIndex & 0x01) << 7;\n      config[1] |= ret.channel << 3;\n      if (ret.audioObjectType === 5) {\n        config[1] |= (extensionSampleIndex & 0x0e) >> 1;\n        config[2] = (extensionSampleIndex & 0x01) << 7;\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.audioConfig = config;\n    }\n  }]);\n\n  return TsDemuxer;\n}();\n\nexport default TsDemuxer;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Playlist = function () {\n  function Playlist(configs) {\n    _classCallCheck(this, Playlist);\n\n    this._baseURL = '';\n    this._list = {};\n    this._ts = {};\n    this.version = 0;\n    this.sequence = -1;\n    this.targetduration = 0;\n    this.duration = 0;\n    this.fragLength = 0;\n    this._lastget = undefined;\n    this._audoclear = configs.autoclear || false;\n  }\n\n  _createClass(Playlist, [{\n    key: 'push',\n    value: function push(ts, duration, discontinue) {\n      if (!this._ts[ts]) {\n        this._ts[ts] = { duration: duration,\n          downloaded: false,\n          downloading: false,\n          start: this.duration,\n          discontinue: discontinue ? true : false\n        };\n        this._list[this.duration] = ts;\n        this.duration += duration;\n        this.fragLength += 1;\n      }\n    }\n  }, {\n    key: 'deleteFrag',\n    value: function deleteFrag(url) {\n      if (this._ts[url]) {\n        if (this._ts[url].start > this._lastget.time) {\n          this._lastget = {\n            duration: this._ts[url].duration,\n            time: this._ts[url].start,\n            downloaded: false,\n            downloading: false,\n            url: url\n          };\n        }\n        delete this._list[this._ts[url].start];\n        delete this._ts[url];\n        this.fragLength -= 1;\n      }\n    }\n  }, {\n    key: 'pushM3U8',\n    value: function pushM3U8(data, deletepre) {\n      // 常规信息替换\n      if (!data) {\n        throw new Error('No m3u8 data received.');\n        return;\n      }\n      this.version = data.version;\n      this.targetduration = data.targetduration;\n      if (data.encrypt && !this.encrypt) {\n        this.encrypt = data.encrypt;\n      }\n      // 新分片信息\n      if (data.sequence > this.sequence) {\n        this.sequence = data.sequence;\n        var newfraglist = [];\n        for (var i = 0; i < data.frags.length; i++) {\n          var frag = data.frags[i];\n          if (!this._ts[frag.url]) {\n            newfraglist.push(frag.url);\n            this.push(frag.url, frag.duration, frag.discontinue);\n          }\n        }\n\n        if (newfraglist.length < 1) {\n          throw new Error('Can not read ts file list.');\n        }\n\n        if (deletepre) {\n          var tslist = this.getTsList();\n          for (var _i = 0; _i < tslist.length; _i++) {\n            if (newfraglist.indexOf(tslist[_i]) < 0) {\n              this.deleteFrag(tslist[_i]);\n            }\n          }\n        }\n      } else {\n        throw new Error('Old m3u8 file received, ' + data.sequence);\n      }\n    }\n  }, {\n    key: 'getTsList',\n    value: function getTsList() {\n      return Object.keys(this._ts);\n    }\n  }, {\n    key: 'downloaded',\n    value: function downloaded(tsname, isloaded) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloaded = isloaded;\n      }\n    }\n  }, {\n    key: 'downloading',\n    value: function downloading(tsname, loading) {\n      var ts = this._ts[tsname];\n      if (ts) {\n        ts.downloading = loading;\n      }\n    }\n  }, {\n    key: 'getTsByName',\n    value: function getTsByName(name) {\n      return this._ts[name];\n    }\n  }, {\n    key: 'getTs',\n    value: function getTs(time) {\n      var timelist = Object.keys(this._list);\n      var ts = void 0;\n\n      if (time === undefined) {\n        if (this._lastget) {\n          time = this._lastget.time + this._lastget.duration;\n        } else {\n          time = 0;\n        }\n      }\n\n      if (timelist.length < 1 || time >= this.duration) {\n        return undefined;\n      }\n      timelist.sort(function (a, b) {\n        return parseFloat(a) - parseFloat(b);\n      });\n      for (var i = 0; i < timelist.length; i++) {\n        if (time >= parseInt(timelist[i])) {\n          var url = this._list[timelist[i]];\n          var downloaded = this._ts[url].downloaded;\n          var downloading = this._ts[url].downloading;\n          ts = { url: url, downloaded: downloaded, downloading: downloading, time: parseInt(timelist[i]), duration: parseInt(this._ts[url].duration) };\n          if (this.autoclear) {\n            delete this._ts[this._lastget.url];\n            delete this._list[this._lastget.time];\n          }\n          this._lastget = ts;\n        } else {\n          break;\n        }\n      }\n      return ts;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n    }\n  }, {\n    key: 'clearDownloaded',\n    value: function clearDownloaded() {\n      for (var i = 0, l = Object.keys(this._ts).length; i < l; i++) {\n        var ts = this._ts[Object.keys(this._ts)[i]];\n        ts.downloaded = false;\n        ts.downloading = false;\n      }\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._baseURL = '';\n      this._list = {};\n      this._ts = {};\n      this.version = 0;\n      this.sequence = -1;\n      this.targetduration = 0;\n      this.duration = 0;\n      this.fragLength = 0;\n      this._lastget = undefined;\n      this._audoclear = false;\n    }\n  }, {\n    key: 'list',\n    get: function get() {\n      return this._list;\n    }\n  }, {\n    key: 'baseURL',\n    set: function set(baseURL) {\n      if (this.baseURL !== baseURL) {\n        this.clear();\n        this._baseURL = baseURL;\n      }\n    },\n    get: function get() {\n      return this._baseURL;\n    }\n  }]);\n\n  return Playlist;\n}();\n\nexport default Playlist;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { isLe, UTF8 } from 'xgplayer-utils';\n\nvar DATA_TYPES = {\n  NUMBER: 0,\n  BOOLEAN: 1,\n  STRING: 2,\n  OBJECT: 3,\n  MIX_ARRAY: 8,\n  OBJECT_END: 9,\n  STRICT_ARRAY: 10,\n  DATE: 11,\n  LONE_STRING: 12\n\n  /**\n   * meta信息解析\n   */\n};\nvar AMFParser = function () {\n  function AMFParser() {\n    _classCallCheck(this, AMFParser);\n\n    this.offset = 0;\n    this.readOffset = this.offset;\n  }\n\n  _createClass(AMFParser, [{\n    key: 'resolve',\n    value: function resolve(meta, size) {\n      if (size < 3) {\n        throw new Error('not enough data for metainfo');\n      }\n      var metaData = {};\n      var name = this.parseValue(meta);\n      var value = this.parseValue(meta, size - name.bodySize);\n      metaData[name.data] = value.data;\n\n      this.resetStatus();\n      return metaData;\n    }\n  }, {\n    key: 'resetStatus',\n    value: function resetStatus() {\n      this.offset = 0;\n      this.readOffset = this.offset;\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint16(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      var size = strLen + 2;\n      this.readOffset += size;\n      return {\n        data: str,\n        bodySize: strLen + 2\n      };\n    }\n  }, {\n    key: 'parseDate',\n    value: function parseDate(buffer, size) {\n      var dv = new DataView(buffer, this.readOffset, size);\n      var ts = dv.getFloat64(0, !isLe);\n      var timeOffset = dv.getInt16(8, !isLe);\n      ts += timeOffset * 60 * 1000;\n\n      this.readOffset += 10;\n      return {\n        data: new Date(ts),\n        bodySize: 10\n      };\n    }\n  }, {\n    key: 'parseObject',\n    value: function parseObject(buffer, size) {\n      var name = this.parseString(buffer, size);\n      var value = this.parseValue(buffer, size - name.bodySize);\n      return {\n        data: {\n          name: name.data,\n          value: value.data\n        },\n        bodySize: name.bodySize + value.bodySize,\n        isObjEnd: value.isObjEnd\n      };\n    }\n  }, {\n    key: 'parseLongString',\n    value: function parseLongString(buffer) {\n      var dv = new DataView(buffer, this.readOffset);\n      var strLen = dv.getUint32(0, !isLe);\n      var str = '';\n      if (strLen > 0) {\n        str = UTF8.decode(new Uint8Array(buffer, this.readOffset + 2, strLen));\n      } else {\n        str = '';\n      }\n      // const size = strLen + 4;\n      this.readOffset += strLen + 4;\n      return {\n        data: str,\n        bodySize: strLen + 4\n      };\n    }\n\n    /**\n     * 解析meta中的变量\n     */\n\n  }, {\n    key: 'parseValue',\n    value: function parseValue(data, size) {\n      var buffer = new ArrayBuffer();\n      if (data instanceof ArrayBuffer) {\n        buffer = data;\n      } else {\n        buffer = data.buffer;\n      }\n      var NUMBER = DATA_TYPES.NUMBER,\n          BOOLEAN = DATA_TYPES.BOOLEAN,\n          STRING = DATA_TYPES.STRING,\n          OBJECT = DATA_TYPES.OBJECT,\n          MIX_ARRAY = DATA_TYPES.MIX_ARRAY,\n          OBJECT_END = DATA_TYPES.OBJECT_END,\n          STRICT_ARRAY = DATA_TYPES.STRICT_ARRAY,\n          DATE = DATA_TYPES.DATE,\n          LONE_STRING = DATA_TYPES.LONE_STRING;\n\n      var dataView = new DataView(buffer, this.readOffset, size);\n      var isObjEnd = false;\n      var type = dataView.getUint8(0);\n      var offset = 1;\n      this.readOffset += 1;\n      var value = null;\n\n      switch (type) {\n        case NUMBER:\n          {\n            value = dataView.getFloat64(1, !isLe);\n            this.readOffset += 8;\n            offset += 8;\n            break;\n          }\n        case BOOLEAN:\n          {\n            var boolNum = dataView.getUint8(1);\n            value = !!boolNum;\n            this.readOffset += 1;\n            offset += 1;\n            break;\n          }\n        case STRING:\n          {\n            var str = this.parseString(buffer);\n            value = str.data;\n            offset += str.bodySize;\n            break;\n          }\n        case OBJECT:\n          {\n            value = {};\n            var objEndSize = 0;\n            if (dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) {\n              objEndSize = 3;\n            }\n            // this.readOffset += offset - 1;\n            while (offset < size - 4) {\n              var amfObj = this.parseObject(buffer, size - offset - objEndSize);\n              if (amfObj.isObjectEnd) {\n                break;\n              }\n              value[amfObj.data.name] = amfObj.data.value;\n              offset += amfObj.bodySize;\n            }\n            if (offset <= size - 3) {\n              var mark = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (mark === 9) {\n                this.readOffset += 3;\n                offset += 3;\n              }\n            }\n            break;\n          }\n        case MIX_ARRAY:\n          {\n            value = {};\n            offset += 4;\n            this.readOffset += 4;\n            var _objEndSize = 0;\n            if ((dataView.getUint32(size - 4, !isLe) & 0x00FFFFFF) === 9) {\n              _objEndSize = 3;\n            }\n\n            while (offset < size - 8) {\n              var amfVar = this.parseObject(buffer, size - offset - _objEndSize);\n              if (amfVar.isObjectEnd) {\n                break;\n              }\n              value[amfVar.data.name] = amfVar.data.value;\n              offset += amfVar.bodySize;\n            }\n            if (offset <= size - 3) {\n              var marker = dataView.getUint32(offset - 1, !isLe) & 0x00FFFFFF;\n              if (marker === 9) {\n                offset += 3;\n                this.readOffset += 3;\n              }\n            }\n            break;\n          }\n\n        case OBJECT_END:\n          {\n            value = null;\n            isObjEnd = true;\n            break;\n          }\n\n        case STRICT_ARRAY:\n          {\n            value = [];\n            var arrLength = dataView.getUint32(1, !isLe);\n            offset += 4;\n            this.readOffset += 4;\n            for (var i = 0; i < arrLength; i++) {\n              var script = this.parseValue(buffer, size - offset);\n              value.push(script.data);\n              offset += script.bodySize;\n            }\n            break;\n          }\n\n        case DATE:\n          {\n            var date = this.parseDate(buffer, size - 1);\n            value = date.data;\n            offset += date.bodySize;\n            break;\n          }\n\n        case LONE_STRING:\n          {\n            var longStr = this.parseLongString(buffer, size - 1);\n            value = longStr.data;\n            offset += longStr.bodySize;\n            break;\n          }\n\n        default:\n          {\n            offset = size;\n          }\n      }\n\n      return {\n        data: value,\n        bodySize: offset,\n        isObjEnd: isObjEnd\n      };\n    }\n  }]);\n\n  return AMFParser;\n}();\n\nexport default AMFParser;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { EVENTS, AudioTrackMeta, VideoTrackMeta } from 'xgplayer-utils';\nimport { SpsParser } from 'xgplayer-codec';\nimport { VideoTrack, AudioTrack } from 'xgplayer-buffer';\n\nimport AMFParser from './amf-parser';\n\nvar DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\n\nvar FlvDemuxer = function () {\n  function FlvDemuxer() {\n    _classCallCheck(this, FlvDemuxer);\n\n    this._firstFragmentLoaded = false;\n    this._trackNum = 0;\n    this._hasScript = false;\n  }\n\n  _createClass(FlvDemuxer, [{\n    key: 'init',\n    value: function init() {\n      this.on(DEMUX_EVENTS.DEMUX_START, this.doParseFlv.bind(this));\n    }\n\n    /**\n     * if the flv head is valid\n     * @param data\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'doParseFlv',\n    value: function doParseFlv() {\n      if (!this._firstFragmentLoaded) {\n        if (this.loaderBuffer.length < 13) {\n          return;\n        }\n        var header = this.loaderBuffer.shift(13);\n        this.parseFlvHeader(header);\n        this.doParseFlv(); // 递归调用，继续解析flv流\n      } else {\n        if (this.loaderBuffer.length < 11) {\n          return;\n        }\n        var chunk = void 0;\n\n        var loopMax = 10000; // 防止死循环产生\n        do {\n          // console.log('mark4')\n          chunk = this._parseFlvTag();\n        } while (chunk && loopMax-- > 0);\n\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n    }\n  }, {\n    key: 'parseFlvHeader',\n    value: function parseFlvHeader(header) {\n      if (!FlvDemuxer.isFlvFile(header)) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid flv file'));\n        this.doParseFlv();\n      } else {\n        this._firstFragmentLoaded = true;\n        // const playType = FlvDemuxer.getPlayType(header[4])\n\n        this.initVideoTrack();\n        this.initAudioTrack();\n      }\n      this.doParseFlv();\n    }\n\n    /**\n     * init default video track configs\n     */\n\n  }, {\n    key: 'initVideoTrack',\n    value: function initVideoTrack() {\n      this._trackNum++;\n      var videoTrack = new VideoTrack();\n      videoTrack.meta = new VideoTrackMeta();\n      videoTrack.id = videoTrack.meta.id = this._trackNum;\n\n      this.tracks.videoTrack = videoTrack;\n    }\n\n    /**\n     * init default audio track configs\n     */\n\n  }, {\n    key: 'initAudioTrack',\n    value: function initAudioTrack() {\n      this._trackNum++;\n      var audioTrack = new AudioTrack();\n      audioTrack.meta = new AudioTrackMeta();\n      audioTrack.id = audioTrack.meta.id = this._trackNum;\n\n      this.tracks.audioTrack = audioTrack;\n    }\n\n    /**\n     * Package the data as the following data structure\n     * {\n     *    data: Uint8Array. the Stream data.\n     *    info: The first byte info of the Tag.\n     *    tagType: 8、9、18\n     *    timeStamp: the timestemp\n     * }\n     */\n\n  }, {\n    key: '_parseFlvTag',\n    value: function _parseFlvTag() {\n      if (this.loaderBuffer.length < 11) {\n        return null;\n      }\n      var chunk = this._parseFlvTagHeader();\n      if (chunk) {\n        this._processChunk(chunk);\n      }\n      return chunk;\n    }\n\n    /**\n     * Parse the 11 byte tag Header\n     */\n\n  }, {\n    key: '_parseFlvTagHeader',\n    value: function _parseFlvTagHeader() {\n      var offset = 0;\n      var chunk = {};\n\n      var tagType = this.loaderBuffer.toInt(offset, 1);\n      offset += 1;\n\n      // 2 bit FMS reserved, 1 bit filtered, 5 bit tag type\n      chunk.filtered = (tagType & 32) >>> 5;\n      chunk.tagType = tagType & 31;\n\n      // 3 Byte datasize\n      chunk.datasize = this.loaderBuffer.toInt(offset, 3);\n      offset += 3;\n\n      if (chunk.tagType !== 8 && chunk.tagType !== 9 && chunk.tagType !== 11 && chunk.tagType !== 18 || this.loaderBuffer.toInt(8, 3) !== 0) {\n        if (this.loaderBuffer && this.loaderBuffer.length > 0) {\n          this.loaderBuffer.shift(1);\n        }\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('tagType ' + chunk.tagType), false);\n        return null;\n      }\n\n      if (this.loaderBuffer.length < chunk.datasize + 15) {\n        return null;\n      }\n\n      // read the data.\n      this.loaderBuffer.shift(4);\n\n      // 3 Byte timestamp\n      var timestamp = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 1 Byte timestampExt\n      var timestampExt = this.loaderBuffer.shift(1)[0];\n      if (timestampExt > 0) {\n        timestamp += timestampExt * 0x1000000;\n      }\n\n      chunk.dts = timestamp;\n\n      // streamId\n      this.loaderBuffer.shift(3);\n      return chunk;\n    }\n  }, {\n    key: '_processChunk',\n    value: function _processChunk(chunk) {\n      switch (chunk.tagType) {\n        case 18:\n          this._parseScriptData(chunk);\n          break;\n        case 8:\n          this._parseAACData(chunk);\n          break;\n        case 9:\n          this._parseHevcData(chunk);\n          break;\n        case 11:\n          // for some CDN that did not process the currect RTMP messages\n          this.loaderBuffer.shift(3);\n          break;\n        default:\n          this.loaderBuffer.shift(1);\n      }\n    }\n\n    /**\n     * parse flv script data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseScriptData',\n    value: function _parseScriptData(chunk) {\n      var audioTrack = this.tracks.audioTrack;\n      var videoTrack = this.tracks.videoTrack;\n\n      var data = this.loaderBuffer.shift(chunk.datasize);\n\n      var info = new AMFParser().resolve(data, data.length);\n\n      var onMetaData = this._context.onMetaData = info ? info.onMetaData : undefined;\n\n      // fill mediaInfo\n      this._context.mediaInfo.duration = onMetaData.duration;\n      this._context.mediaInfo.hasVideo = onMetaData.hasVideo;\n      this._context.mediaInfo.hsaAudio = onMetaData.hasAudio;\n\n      var validate = this._datasizeValidator(chunk.datasize);\n      if (validate) {\n        this.emit(DEMUX_EVENTS.MEDIA_INFO);\n        this._hasScript = true;\n      }\n\n      // Edit default meta.\n      if (audioTrack && !audioTrack.hasSpecificConfig) {\n        var meta = audioTrack.meta;\n        if (onMetaData.audiosamplerate) {\n          meta.sampleRate = onMetaData.audiosamplerate;\n        }\n\n        if (onMetaData.audiochannels) {\n          meta.channelCount = onMetaData.audiochannels;\n        }\n\n        switch (onMetaData.audiosamplerate) {\n          case 44100:\n            meta.sampleRateIndex = 4;\n            break;\n          case 22050:\n            meta.sampleRateIndex = 7;\n            break;\n          case 11025:\n            meta.sampleRateIndex = 10;\n            break;\n        }\n      }\n      if (videoTrack && !videoTrack.hasSpecificConfig) {\n        var _meta = videoTrack.meta;\n        if (typeof onMetaData.framerate === 'number') {\n          var fpsNum = Math.floor(onMetaData.framerate * 1000);\n          if (fpsNum > 0) {\n            var fps = fpsNum / 1000;\n            if (!_meta.frameRate) {\n              _meta.frameRate = {};\n            }\n            _meta.frameRate.fixed = true;\n            _meta.frameRate.fps = fps;\n            _meta.frameRate.fps_num = fpsNum;\n            _meta.frameRate.fps_den = 1000;\n          }\n        }\n      }\n    }\n  }, {\n    key: '_aacSequenceHeaderParser',\n    value: function _aacSequenceHeaderParser(data) {\n      var ret = {};\n      ret.hasSpecificConfig = true;\n      ret.objectType = data[1] >>> 3;\n      ret.sampleRateIndex = (data[1] & 7) << 1 | data[2] >>> 7;\n      ret.audiosamplerate = this._switchAudioSampleRate(ret.sampleRateIndex);\n      ret.channelCount = (data[2] & 120) >>> 3;\n      ret.frameLength = (data[2] & 4) >>> 2;\n      ret.dependsOnCoreCoder = (data[2] & 2) >>> 1;\n      ret.extensionFlagIndex = data[2] & 1;\n\n      ret.codec = 'mp4a.40.' + ret.objectType;\n      var userAgent = window.navigator.userAgent.toLowerCase();\n      var extensionSamplingIndex = void 0;\n\n      var config = void 0;\n      var samplingIndex = ret.sampleRateIndex;\n\n      if (userAgent.indexOf('firefox') !== -1) {\n        // firefox: use SBR (HE-AAC) if freq less than 24kHz\n        if (ret.sampleRateIndex >= 6) {\n          ret.objectType = 5;\n          config = new Array(4);\n          extensionSamplingIndex = samplingIndex - 3;\n        } else {\n          // use LC-AAC\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = samplingIndex;\n        }\n      } else if (userAgent.indexOf('android') !== -1) {\n        // android: always use LC-AAC\n        ret.objectType = 2;\n        config = new Array(2);\n        extensionSamplingIndex = samplingIndex;\n      } else {\n        // for other browsers, e.g. chrome...\n        // Always use HE-AAC to make it easier to switch aac codec profile\n        ret.objectType = 5;\n        extensionSamplingIndex = ret.sampleRateIndex;\n        config = new Array(4);\n\n        if (ret.sampleRateIndex >= 6) {\n          extensionSamplingIndex = ret.sampleRateIndex - 3;\n        } else if (ret.channelCount === 1) {\n          // Mono channel\n          ret.objectType = 2;\n          config = new Array(2);\n          extensionSamplingIndex = ret.sampleRateIndex;\n        }\n      }\n\n      config[0] = ret.objectType << 3;\n      config[0] |= (ret.sampleRateIndex & 0x0F) >>> 1;\n      config[1] = (ret.sampleRateIndex & 0x0F) << 7;\n      config[1] |= (ret.channelCount & 0x0F) << 3;\n      if (ret.objectType === 5) {\n        config[1] |= (extensionSamplingIndex & 0x0F) >>> 1;\n        config[2] = (extensionSamplingIndex & 0x01) << 7;\n        // extended audio object type: force to 2 (LC-AAC)\n        config[2] |= 2 << 2;\n        config[3] = 0;\n      }\n      ret.config = config;\n      return ret;\n    }\n  }, {\n    key: '_parseAACData',\n    value: function _parseAACData(chunk) {\n      var track = this.tracks.audioTrack;\n      if (!track) {\n        return;\n      }\n\n      var meta = track.meta;\n\n      if (!meta) {\n        track.meta = new AudioTrackMeta();\n        meta = track.meta;\n      }\n\n      var info = this.loaderBuffer.shift(1)[0];\n\n      chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n\n      var format = (info & 240) >>> 4;\n\n      track.format = format;\n\n      if (format !== 10) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('invalid audio format: ' + format));\n      }\n\n      if (format === 10 && !this._hasAudioSequence) {\n        meta.sampleRate = this._switchAudioSamplingFrequency(info);\n        meta.sampleRateIndex = (info & 12) >>> 2;\n        meta.frameLenth = (info & 2) >>> 1;\n        meta.channelCount = info & 1;\n        meta.refSampleDuration = Math.floor(1024 / meta.audioSampleRate * meta.timescale);\n      }\n\n      var audioSampleRate = meta.audioSampleRate;\n      var audioSampleRateIndex = meta.sampleRateIndex;\n      var refSampleDuration = meta.refSampleDuration;\n\n      delete chunk.tagType;\n      var validate = this._datasizeValidator(chunk.datasize);\n\n      if (chunk.data[0] === 0) {\n        // AAC Sequence Header\n        var aacHeader = this._aacSequenceHeaderParser(chunk.data);\n        audioSampleRate = aacHeader.audiosamplerate || meta.audioSampleRate;\n        audioSampleRateIndex = aacHeader.sampleRateIndex || meta.sampleRateIndex;\n        refSampleDuration = Math.floor(1024 / audioSampleRate * meta.timescale);\n\n        meta.channelCount = aacHeader.channelCount;\n        meta.sampleRate = audioSampleRate;\n        meta.sampleRateIndex = audioSampleRateIndex;\n        meta.refSampleDuration = refSampleDuration;\n        meta.duration = this._context.mediaInfo.duration * meta.timescale;\n        meta.config = aacHeader.config;\n\n        var audioMedia = this._context.mediaInfo.audio;\n\n        // fill audio media info\n        audioMedia.codec = aacHeader.codec;\n        audioMedia.channelCount = aacHeader.channelCount;\n        audioMedia.sampleRate = audioSampleRate;\n        audioMedia.sampleRateIndex = aacHeader.audioSampleRateIndex;\n\n        if (!this._hasAudioSequence) {\n          this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio');\n        } else {\n          this.emit(DEMUX_EVENTS.AUDIO_METADATA_CHANGE);\n          // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'audio')\n        }\n        this._hasAudioSequence = true;\n\n        this._metaChange = true;\n      } else {\n        if (this._metaChange) {\n          chunk.options = {\n            meta: track.meta\n          };\n          this._metaChange = false;\n        }\n\n        chunk.data = chunk.data.slice(1, chunk.data.length);\n        track.samples.push(chunk);\n      }\n      if (!validate) {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('TAG length error at ' + chunk.datasize), false);\n        // this.logger.warn(this.TAG, error.message)\n      }\n    }\n\n    /**\n     * parse hevc/avc video data\n     * @param chunk\n     * @private\n     */\n\n  }, {\n    key: '_parseHevcData',\n    value: function _parseHevcData(chunk) {\n      // header\n      var info = this.loaderBuffer.shift(1)[0];\n      chunk.frameType = (info & 0xf0) >>> 4;\n      chunk.isKeyframe = chunk.frameType === 1;\n      // let tempCodecID = this.tracks.videoTrack.codecID\n      var codecID = info & 0x0f;\n      this.tracks.videoTrack.codecID = codecID;\n\n      // hevc和avc的header解析方式一样\n      chunk.avcPacketType = this.loaderBuffer.shift(1)[0];\n      chunk.cts = this.loaderBuffer.toInt(0, 3);\n      this.loaderBuffer.shift(3);\n\n      // 12 for hevc, 7 for avc\n      if (codecID === 12) {\n        var data = this.loaderBuffer.shift(chunk.datasize - 5);\n        chunk.data = data;\n\n        if (Number.parseInt(chunk.avcPacketType) !== 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          }\n          var nalu = {};\n          var r = 0;\n          nalu.cts = chunk.cts;\n          nalu.dts = chunk.dts;\n          while (chunk.data.length > r) {\n            var sizes = chunk.data.slice(Number.parseInt(r), 4 + r);\n            nalu.size = sizes[3];\n            nalu.size += sizes[2] * 256;\n            nalu.size += sizes[1] * 256 * 256;\n            nalu.size += sizes[0] * 256 * 256 * 256;\n            r += 4;\n            nalu.data = chunk.data.slice(Number.parseInt(r), nalu.size + r);\n            r += nalu.size;\n            this.tracks.videoTrack.samples.push(nalu);\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        } else if (Number.parseInt(chunk.avcPacketType) === 0) {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n          } else {\n            this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n          }\n        }\n      } else if (codecID === 7) {\n        var _data = this.loaderBuffer.shift(chunk.datasize - 5);\n        if (_data[4] === 0 && _data[5] === 0 && _data[6] === 0 && _data[7] === 1) {\n          var avcclength = 0;\n          for (var i = 0; i < 4; i++) {\n            avcclength = avcclength * 256 + _data[i];\n          }\n          avcclength -= 4;\n          _data = _data.slice(4, _data.length);\n          _data[3] = avcclength % 256;\n          avcclength = (avcclength - _data[3]) / 256;\n          _data[2] = avcclength % 256;\n          avcclength = (avcclength - _data[2]) / 256;\n          _data[1] = avcclength % 256;\n          _data[0] = (avcclength - _data[1]) / 256;\n        }\n\n        chunk.data = _data;\n        // If it is AVC sequece Header.\n        if (chunk.avcPacketType === 0) {\n          this._avcSequenceHeaderParser(chunk.data);\n          var validate = this._datasizeValidator(chunk.datasize);\n          if (validate) {\n            if (!this._hasVideoSequence) {\n              this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video');\n            } else {\n              this.emit(DEMUX_EVENTS.VIDEO_METADATA_CHANGE);\n              // this.emit(DEMUX_EVENTS.METADATA_PARSED, 'video')\n            }\n            this._hasVideoSequence = true;\n          }\n          this._metaChange = true;\n        } else {\n          if (!this._datasizeValidator(chunk.datasize)) {\n            this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n            return;\n          }\n          if (this._metaChange) {\n            chunk.options = {\n              meta: Object.assign({}, this.tracks.videoTrack.meta)\n            };\n            this._metaChange = false;\n          }\n          this.tracks.videoTrack.samples.push(chunk);\n          // this.emit(DEMUX_EVENTS.DEMUX_COMPLETE)\n        }\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('video codeid is ' + codecID), false);\n        chunk.data = this.loaderBuffer.shift(chunk.datasize - 1);\n        if (!this._datasizeValidator(chunk.datasize)) {\n          this.emit(DEMUX_EVENTS.DEMUX_ERROR, this.TAG, new Error('invalid video tag datasize: ' + chunk.datasize), false);\n        }\n        this.tracks.videoTrack.samples.push(chunk);\n        this.emit(DEMUX_EVENTS.DEMUX_COMPLETE);\n      }\n      delete chunk.tagType;\n    }\n\n    /**\n     * parse avc metadata\n     * @param data\n     * @private\n     */\n\n  }, {\n    key: '_avcSequenceHeaderParser',\n    value: function _avcSequenceHeaderParser(data) {\n      var track = this.tracks.videoTrack;\n\n      if (!track) {\n        return;\n      }\n\n      var offset = 0;\n\n      if (!track.meta) {\n        track.meta = new VideoTrackMeta();\n      }\n      var meta = track.meta;\n\n      meta.configurationVersion = data[0];\n      meta.avcProfileIndication = data[1];\n      meta.profileCompatibility = data[2];\n      meta.avcLevelIndication = data[3] / 10;\n      meta.nalUnitLength = (data[4] & 0x03) + 1;\n\n      var numOfSps = data[5] & 0x1f;\n      offset = 6;\n      var config = {};\n\n      // parse SPS\n      for (var i = 0; i < numOfSps; i++) {\n        var size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n\n        var sps = new Uint8Array(size);\n        for (var j = 0; j < size; j++) {\n          sps[j] = data[offset + j];\n        }\n\n        // codec string\n        var codecString = 'avc1.';\n        for (var _j = 1; _j < 4; _j++) {\n          var h = sps[_j].toString(16);\n          if (h.length < 2) {\n            h = '0' + h;\n          }\n          codecString += h;\n        }\n\n        meta.codec = codecString;\n\n        offset += size;\n        this.tracks.videoTrack.meta.sps = sps;\n        config = SpsParser.parseSPS(sps);\n      }\n\n      var numOfPps = data[offset];\n\n      offset++;\n\n      for (var _i = 0; _i < numOfPps; _i++) {\n        var _size = data[offset] * 255 + data[offset + 1];\n        offset += 2;\n        var pps = new Uint8Array(_size);\n        for (var _j2 = 0; _j2 < _size; _j2++) {\n          pps[_j2] = data[offset + _j2];\n        }\n        offset += _size;\n        this.tracks.videoTrack.meta.pps = pps;\n      }\n\n      Object.assign(meta, SpsParser.toVideoMeta(config));\n\n      // fill video media info\n      var videoMedia = this._context.mediaInfo.video;\n\n      videoMedia.codec = meta.codec;\n      videoMedia.profile = meta.profile;\n      videoMedia.level = meta.level;\n      videoMedia.chromaFormat = meta.chromaFormat;\n      videoMedia.frameRate = meta.frameRate;\n      videoMedia.parRatio = meta.parRatio;\n      videoMedia.width = videoMedia.width === meta.presentWidth ? videoMedia.width : meta.presentWidth;\n      videoMedia.height = videoMedia.height === meta.presentHeight ? videoMedia.width : meta.presentHeight;\n\n      meta.duration = this._context.mediaInfo.duration * meta.timescale;\n      meta.avcc = new Uint8Array(data.length);\n      meta.avcc.set(data);\n      track.meta = meta;\n    }\n\n    /**\n     * choose audio sample rate\n     * @param samplingFrequencyIndex\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSampleRate',\n    value: function _switchAudioSampleRate(samplingFrequencyIndex) {\n      var samplingFrequencyList = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio sampling frequence\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioSamplingFrequency',\n    value: function _switchAudioSamplingFrequency(info) {\n      var samplingFrequencyIndex = (info & 12) >>> 2;\n      var samplingFrequencyList = [5500, 11025, 22050, 44100, 48000];\n      return samplingFrequencyList[samplingFrequencyIndex];\n    }\n\n    /**\n     * choose audio channel count\n     * @param info\n     * @returns {number}\n     * @private\n     */\n\n  }, {\n    key: '_switchAudioChannel',\n    value: function _switchAudioChannel(info) {\n      var sampleTrackNumIndex = info & 1;\n      var sampleTrackNumList = [1, 2];\n      return sampleTrackNumList[sampleTrackNumIndex];\n    }\n\n    /**\n     * check datasize is valid use 4 Byte after current tag\n     * @param datasize\n     * @returns {boolean}\n     * @private\n     */\n\n  }, {\n    key: '_datasizeValidator',\n    value: function _datasizeValidator(datasize) {\n      var datasizeConfirm = this.loaderBuffer.toInt(0, 4);\n      this.loaderBuffer.shift(4);\n      return datasizeConfirm === datasize + 11;\n    }\n  }, {\n    key: 'loaderBuffer',\n    get: function get() {\n      var buffer = this._context.getInstance('LOADER_BUFFER');\n      if (buffer) {\n        return buffer;\n      } else {\n        this.emit(DEMUX_EVENTS.DEMUX_ERROR, new Error('找不到 loaderBuffer 实例'));\n      }\n    }\n  }, {\n    key: 'tracks',\n    get: function get() {\n      return this._context.getInstance('TRACKS');\n    }\n  }, {\n    key: 'logger',\n    get: function get() {\n      return this._context.getInstance('LOGGER');\n    }\n  }], [{\n    key: 'isFlvFile',\n    value: function isFlvFile(data) {\n      return !(data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01);\n    }\n\n    /**\n     * If the stream has audio or video.\n     * @param {number} streamFlag - Data from the stream which is define whether the audio / video track is exist.\n     */\n\n  }, {\n    key: 'getPlayType',\n    value: function getPlayType(streamFlag) {\n      var result = {\n        hasVideo: false,\n        hasAudio: false\n      };\n\n      if (streamFlag & 0x01 > 0) {\n        result.hasVideo = true;\n      }\n\n      if (streamFlag & 0x04 > 0) {\n        result.hasAudio = true;\n      }\n\n      return result;\n    }\n  }]);\n\n  return FlvDemuxer;\n}();\n\nexport default FlvDemuxer;","var LOADER_EVENTS = {\n  LADER_START: 'LOADER_START',\n  LOADER_DATALOADED: 'LOADER_DATALOADED',\n  LOADER_COMPLETE: 'LOADER_COMPLETE',\n  LOADER_ERROR: 'LOADER_ERROR'\n};\n\nvar DEMUX_EVENTS = {\n  DEMUX_START: 'DEMUX_START',\n  DEMUX_COMPLETE: 'DEMUX_COMPLETE',\n  DEMUX_ERROR: 'DEMUX_ERROR',\n  METADATA_PARSED: 'METADATA_PARSED',\n  VIDEO_METADATA_CHANGE: 'VIDEO_METADATA_CHANGE',\n  AUDIO_METADATA_CHANGE: 'AUDIO_METADATA_CHANGE',\n  MEDIA_INFO: 'MEDIA_INFO'\n};\n\nvar REMUX_EVENTS = {\n  REMUX_METADATA: 'REMUX_METADATA',\n  REMUX_MEDIA: 'REMUX_MEDIA',\n  MEDIA_SEGMENT: 'MEDIA_SEGMENT',\n  REMUX_ERROR: 'REMUX_ERROR',\n  INIT_SEGMENT: 'INIT_SEGMENT',\n  DETECT_CHANGE_STREAM: 'DETECT_CHANGE_STREAM',\n  DETECT_CHANGE_STREAM_DISCONTINUE: 'DETECT_CHANGE_STREAM_DISCONTINUE',\n  RANDOM_ACCESS_POINT: 'RANDOM_ACCESS_POINT'\n};\n\nvar MSE_EVENTS = {\n  SOURCE_UPDATE_END: 'SOURCE_UPDATE_END'\n\n  // hls专有events\n};var HLS_EVENTS = {\n  RETRY_TIME_EXCEEDED: 'RETRY_TIME_EXCEEDED'\n};\n\nvar CRYTO_EVENTS = {\n  START_DECRYPT: 'START_DECRYPT',\n  DECRYPTED: 'DECRYPTED'\n};\nvar ALLEVENTS = Object.assign({}, LOADER_EVENTS, DEMUX_EVENTS, REMUX_EVENTS, MSE_EVENTS, HLS_EVENTS);\n\nvar FlvAllowedEvents = [];\nvar HlsAllowedEvents = [];\n\nfor (var key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(key)) {\n    FlvAllowedEvents.push(ALLEVENTS[key]);\n  }\n}\n\nfor (var _key in ALLEVENTS) {\n  if (ALLEVENTS.hasOwnProperty(_key)) {\n    HlsAllowedEvents.push(ALLEVENTS[_key]);\n  }\n}\n\nexport default {\n  ALLEVENTS: ALLEVENTS,\n  HLS_EVENTS: HLS_EVENTS,\n  REMUX_EVENTS: REMUX_EVENTS,\n  DEMUX_EVENTS: DEMUX_EVENTS,\n  MSE_EVENTS: MSE_EVENTS,\n  LOADER_EVENTS: LOADER_EVENTS,\n  FlvAllowedEvents: FlvAllowedEvents,\n  HlsAllowedEvents: HlsAllowedEvents,\n  CRYTO_EVENTS: CRYTO_EVENTS\n};","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nvar sniffer = {\n  get device() {\n    var r = sniffer.os;\n    return r.isPc ? 'pc' : r.isTablet ? 'tablet' : 'mobile';\n  },\n  get browser() {\n    var ua = navigator.userAgent.toLowerCase();\n    var reg = {\n      ie: /rv:([\\d.]+)\\) like gecko/,\n      firfox: /firefox\\/([\\d.]+)/,\n      chrome: /chrome\\/([\\d.]+)/,\n      opera: /opera.([\\d.]+)/,\n      safari: /version\\/([\\d.]+).*safari/\n    };\n    return [].concat(Object.keys(reg).filter(function (key) {\n      return reg[key].test(ua);\n    }))[0];\n  },\n  get os() {\n    var ua = navigator.userAgent;\n    var isWindowsPhone = /(?:Windows Phone)/.test(ua);\n    var isSymbian = /(?:SymbianOS)/.test(ua) || isWindowsPhone;\n    var isAndroid = /(?:Android)/.test(ua);\n    var isFireFox = /(?:Firefox)/.test(ua);\n    var isTablet = /(?:iPad|PlayBook)/.test(ua) || isAndroid && !/(?:Mobile)/.test(ua) || isFireFox && /(?:Tablet)/.test(ua);\n    var isPhone = /(?:iPhone)/.test(ua) && !isTablet;\n    var isPc = !isPhone && !isAndroid && !isSymbian;\n    return {\n      isTablet: isTablet,\n      isPhone: isPhone,\n      isAndroid: isAndroid,\n      isPc: isPc,\n      isSymbian: isSymbian,\n      isWindowsPhone: isWindowsPhone,\n      isFireFox: isFireFox\n    };\n  },\n\n  get isLe() {\n    return le;\n  }\n};\n\nexport default sniffer;","var le = function () {\n  var buf = new ArrayBuffer(2);\n  new DataView(buf).setInt16(0, 256, true); // little-endian write\n  return new Int16Array(buf)[0] === 256; // platform-spec read, if equal then LE\n}();\n\nexport default le;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (ResultConstructor) {\n  var totalLength = 0;\n\n  for (var _len = arguments.length, arrays = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    arrays[_key - 1] = arguments[_key];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = arrays[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var arr = _step.value;\n\n      totalLength += arr.length;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var result = new ResultConstructor(totalLength);\n  var offset = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = arrays[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var _arr = _step2.value;\n\n      result.set(_arr, offset);\n      offset += _arr.length;\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return result;\n};","'use strict';\n\nvar _concat = require('./concat');\n\nvar _concat2 = _interopRequireDefault(_concat);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = _concat2.default;","import _Context from './context';\n\n// Modules from constants\nimport _EVENTS from './constants/events';\nimport { CONTEXT_COMOMANDS } from './constants/worker-commands';\n\n// Modules from env\nimport _sniffer from './env/sniffer';\nimport _isLe from './env/isle';\nimport _UTF8 from './env/utf8';\n\n// Models\nimport _MediaInfo from './models/media-info';\nimport _MediaSample from './models/media-sample';\nimport _MediaSegment from './models/media-segment';\nimport _MediaSegmentList from './models/media-segment-list';\nimport { AudioTrackMeta as _AudioTrackMeta, VideoTrackMeta as _VideoTrackMeta } from './models/track-meta';\n\nimport { AudioTrackSample as _AudioTrackSample, VideoTrackSample as _VideoTrackSample } from './models/track-sample';\n\n// Modules from mse\nimport _Mse from './mse/index';\n\n// Modules from write\nimport _Stream from './write/stream';\nimport _Buffer from './write/buffer';\n\n// Crypto\nimport _Crypto from './crypto';\nimport _debounce from './func/debounce';\n\nexport var Context = _Context;\nexport var EVENTS = _EVENTS;\nexport var WORKER_COMMANDS = {\n  CONTEXT_COMOMANDS: CONTEXT_COMOMANDS\n};\nexport var sniffer = _sniffer;\nexport var isLe = _isLe;\nexport var UTF8 = _UTF8;\nexport var debounce = _debounce;\nexport var MediaInfo = _MediaInfo;\nexport var MediaSample = _MediaSample;\nexport var MediaSegment = _MediaSegment;\nexport var MediaSegmentList = _MediaSegmentList;\nexport var AudioTrackMeta = _AudioTrackMeta;\nexport var VideoTrackMeta = _VideoTrackMeta;\nexport var AudioTrackSample = _AudioTrackSample;\nexport var VideoTrackSample = _VideoTrackSample;\nexport var Mse = _Mse;\nexport var Stream = _Stream;\nexport var Buffer = _Buffer;\nexport var Crypto = _Crypto;","import _Track, { Tracks as _Tracks, AudioTrack as _AudioTrack, VideoTrack as _VideoTrack } from './track';\nimport { XgBuffer as _XgBuffer, RemuxBuffer as _RemuxBuffer } from './buffer';\nimport _PreSource from './presouce';\n\nexport var Track = _Track;\nexport var Tracks = _Tracks;\nexport var AudioTrack = _AudioTrack;\nexport var VideoTrack = _VideoTrack;\nexport var XgBuffer = _XgBuffer;\nexport var RemuxBuffer = _RemuxBuffer;\nexport var PreSource = _PreSource;","import _FetchLoader from './fetch-loader';\n\nexport var FetchLoader = _FetchLoader;","import _Nalunit from './h264/nalunit';\nimport _SpsParser from './h264/nalunit/sps';\nimport _Compatibility from './compatibility';\n\nexport var Nalunit = _Nalunit;\nexport var SpsParser = _SpsParser;\nexport var Compatibility = _Compatibility;","import { Buffer } from 'xgplayer-utils';\n\n// const UINT32_MAX = Math.pow(2, 32) - 1;\nclass Fmp4 {\n  static size (value) {\n    return Buffer.writeUint32(value)\n  }\n  static initBox (size, name, ...content) {\n    const buffer = new Buffer()\n    buffer.write(Fmp4.size(size), Fmp4.type(name), ...content)\n    return buffer.buffer\n  }\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n  static ftyp () {\n    return Fmp4.initBox(24, 'ftyp', new Uint8Array([\n      0x69, 0x73, 0x6F, 0x6D, // isom,\n      0x0, 0x0, 0x00, 0x01, // minor_version: 0x01\n      0x69, 0x73, 0x6F, 0x6D, // isom\n      0x61, 0x76, 0x63, 0x31 // avc1\n    ]))\n  }\n  static moov ({ type, meta }) {\n    let size = 8\n    let mvhd = Fmp4.mvhd(meta.duration, meta.timescale)\n    let trak\n\n    if (type === 'video') {\n      trak = Fmp4.videoTrak(meta)\n    } else {\n      trak = Fmp4.audioTrak(meta)\n    }\n\n    let mvex = Fmp4.mvex(meta.duration, meta.timescale || 1000, meta.id);\n    [mvhd, trak, mvex].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moov', mvhd, trak, mvex)\n  }\n  static mvhd (duration, timescale = 1000) {\n    // duration *= timescale;\n    let bytes = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // version(0) + flags     1位的box版本+3位flags   box版本，0或1，一般为0。（以下字节数均按version=0）\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间  （相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification_time   修改时间\n\n      /**\n             * timescale: 4 bytes文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n             */\n      (timescale >>> 24) & 0xFF,\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n\n      /**\n             * duration: 4 bytes该track的时间长度，用duration和time scale值可以计算track时长，比如audio track的time scale = 8000,\n             * duration = 560128，时长为70.016，video track的time scale = 600, duration = 42000，时长为70\n             */\n      (duration >>> 24) & 0xFF,\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x01, 0x00, 0x00, // Preferred rate: 1.0   推荐播放速率，高16位和低16位分别为小数点整数部分和小数部分，即[16.16] 格式，该值为1.0（0x00010000）表示正常前向播放\n      /**\n             * PreferredVolume(1.0, 2bytes) + reserved(2bytes)\n             * 与rate类似，[8.8] 格式，1.0（0x0100）表示最大音量\n             */\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, //  reserved: 4 + 4 bytes保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // 视频变换矩阵   线性代数\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      0x00, 0x00, 0x00, 0x00, // ----begin pre_defined 6 * 4 bytes----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre-defined 保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // ----end pre_defined 6 * 4 bytes----\n      0xFF, 0xFF, 0xFF, 0xFF // next_track_ID 下一个track使用的id号\n    ])\n    return Fmp4.initBox(8 + bytes.length, 'mvhd', new Uint8Array(bytes))\n  }\n  static videoTrak (data) {\n    let size = 8\n\n    let tkhd = Fmp4.tkhd({\n      id: 1,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: data.presentWidth,\n      height: data.presentHeight,\n      type: 'video'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'video',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      avcc: data.avcc,\n      parRatio: data.parRatio,\n      width: data.presentWidth,\n      height: data.presentHeight\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static audioTrak (data) {\n    let size = 8\n    let tkhd = Fmp4.tkhd({\n      id: 2,\n      duration: data.duration,\n      timescale: data.timescale || 1000,\n      width: 0,\n      height: 0,\n      type: 'audio'\n    })\n    let mdia = Fmp4.mdia({\n      type: 'audio',\n      timescale: data.timescale || 1000,\n      duration: data.duration,\n      channelCount: data.channelCount,\n      samplerate: data.sampleRate,\n      config: data.config\n    });\n    [tkhd, mdia].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'trak', tkhd, mdia)\n  }\n  static tkhd (data) {\n    let id = data.id\n    let duration = data.duration\n    let width = data.width\n    let height = data.height\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x07, // version(0) + flags 1位版本 box版本，0或1，一般为0。（以下字节数均按version=0）按位或操作结果值，预定义如下：\n      // 0x000001 track_enabled，否则该track不被播放；\n      // 0x000002 track_in_movie，表示该track在播放中被引用；\n      // 0x000004 track_in_preview，表示该track在预览时被引用。\n      // 一般该值为7，1+2+4 如果一个媒体所有track均未设置track_in_movie和track_in_preview，将被理解为所有track均设置了这两项；对于hint track，该值为0\n      // hint track 这个特殊的track并不包含媒体数据，而是包含了一些将其他数据track打包成流媒体的指示信息。\n      0x00, 0x00, 0x00, 0x00, // creation_time创建时间（相对于UTC时间1904-01-01零点的秒数）\n      0x00, 0x00, 0x00, 0x00, // modification time 修改时间\n      (id >>> 24) & 0xFF, // track_ID: 4 bytes id号，不能重复且不能为0\n      (id >>> 16) & 0xFF,\n      (id >>> 8) & 0xFF,\n      (id) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 4 bytes    保留位\n      (duration >>> 24) & 0xFF, // duration: 4 bytes track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x00, 0x00, 0x00, 0x00, // reserved: 2 * 4 bytes    保留位\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // layer(2bytes) + alternate_group(2bytes)  视频层，默认为0，值小的在上层.track分组信息，默认为0表示该track未与其他track有群组关系\n      0x00, 0x00, 0x00, 0x00, // volume(2bytes) + reserved(2bytes)    [8.8] 格式，如果为音频track，1.0（0x0100）表示最大音量；否则为0   +保留位\n      0x00, 0x01, 0x00, 0x00, // ----begin composition matrix----\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00, // 视频变换矩阵\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // ----end composition matrix----\n      (width >>> 8) & 0xFF, // //宽度\n      (width) & 0xFF,\n      0x00, 0x00,\n      (height >>> 8) & 0xFF, // 高度\n      (height) & 0xFF,\n      0x00, 0x00\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'tkhd', content)\n  }\n  static edts (data) {\n    let buffer = new Buffer()\n    let duration = data.duration\n    let mediaTime = data.mediaTime\n    buffer.write(Fmp4.size(36), Fmp4.type('edts'))\n    // elst\n    buffer.write(Fmp4.size(28), Fmp4.type('elst'))\n    buffer.write(new Uint8Array([\n      0x00, 0x00, 0x00, 0x01, // entry count\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      (mediaTime >> 24) & 0xff, (mediaTime >> 16) & 0xff, (mediaTime >> 8) & 0xff, mediaTime & 0xff,\n      0x00, 0x00, 0x00, 0x01 // media rate\n    ]))\n    return buffer.buffer\n  }\n  static mdia (data) {\n    let size = 8\n    let mdhd = Fmp4.mdhd(data.timescale, data.duration)\n    let hdlr = Fmp4.hdlr(data.type)\n    let minf = Fmp4.minf(data);\n    [mdhd, hdlr, minf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'mdia', mdhd, hdlr, minf)\n  }\n  static mdhd (timescale = 1000, duration) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, // creation_time    创建时间\n      0x00, 0x00, 0x00, 0x00, // modification_time修改时间\n      (timescale >>> 24) & 0xFF, // timescale: 4 bytes    文件媒体在1秒时间内的刻度值，可以理解为1秒长度\n      (timescale >>> 16) & 0xFF,\n      (timescale >>> 8) & 0xFF,\n      (timescale) & 0xFF,\n      (duration >>> 24) & 0xFF, // duration: 4 bytes  track的时间长度\n      (duration >>> 16) & 0xFF,\n      (duration >>> 8) & 0xFF,\n      (duration) & 0xFF,\n      0x55, 0xC4, // language: und (undetermined) 媒体语言码。最高位为0，后面15位为3个字符（见ISO 639-2/T标准中定义）\n      0x00, 0x00 // pre_defined = 0\n    ])\n    return Fmp4.initBox(12 + content.byteLength, 'mdhd', Fmp4.extension(0, 0), content)\n  }\n  static hdlr (type) {\n    let value = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65,\n      0x6f, 0x48, 0x61, 0x6e,\n      0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]\n    if (type === 'audio') {\n      value.splice(8, 4, ...[0x73, 0x6f, 0x75, 0x6e])\n      value.splice(24, 13, ...[0x53, 0x6f, 0x75, 0x6e,\n        0x64, 0x48, 0x61, 0x6e,\n        0x64, 0x6c, 0x65, 0x72, 0x00])\n    }\n    return Fmp4.initBox(8 + value.length, 'hdlr', new Uint8Array(value))\n  }\n  static minf (data) {\n    let size = 8\n    let vmhd = data.type === 'video' ? Fmp4.vmhd() : Fmp4.smhd()\n    let dinf = Fmp4.dinf()\n    let stbl = Fmp4.stbl(data);\n    [vmhd, dinf, stbl].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'minf', vmhd, dinf, stbl)\n  }\n  static vmhd () {\n    return Fmp4.initBox(20, 'vmhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00,\n      0x00, 0x00,\n      0x00, 0x00 // opcolor\n    ]))\n  }\n  static smhd () {\n    return Fmp4.initBox(16, 'smhd', new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance\n      0x00, 0x00 // reserved\n    ]))\n  }\n  static dinf () {\n    let buffer = new Buffer()\n    let dref = [0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n    ]\n    buffer.write(Fmp4.size(36), Fmp4.type('dinf'), Fmp4.size(28), Fmp4.type('dref'), new Uint8Array(dref))\n    return buffer.buffer\n  }\n  static stbl (data) {\n    let size = 8\n    let stsd = Fmp4.stsd(data)\n    let stts = Fmp4.stts()\n    let stsc = Fmp4.stsc()\n    let stsz = Fmp4.stsz()\n    let stco = Fmp4.stco();\n    [stsd, stts, stsc, stsz, stco].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'stbl', stsd, stts, stsc, stsz, stco)\n  }\n  static stsd (data) {\n    let content\n    if (data.type === 'audio') {\n      // if (!data.isAAC && data.codec === 'mp4') {\n      //     content = FMP4.mp3(data);\n      // } else {\n      //\n      // }\n      // 支持mp4a\n      content = Fmp4.mp4a(data)\n    } else {\n      content = Fmp4.avc1(data)\n    }\n    return Fmp4.initBox(16 + content.byteLength, 'stsd', Fmp4.extension(0, 0), new Uint8Array([0x00, 0x00, 0x00, 0x01]), content)\n  }\n  static mp4a (data) {\n    let content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, data.channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (data.samplerate >> 8) & 0xff,\n      data.samplerate & 0xff, //\n      0x00, 0x00\n    ])\n    let esds = Fmp4.esds(data.config)\n    return Fmp4.initBox(8 + content.byteLength + esds.byteLength, 'mp4a', content, esds)\n  }\n  static esds (config = [43, 146, 8, 0]) {\n    const configlen = config.length\n    let buffer = new Buffer()\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n\n      0x03, // descriptor_type\n      0x17 + configlen, // length\n      0x00, 0x01, // es_id\n      0x00, // stream_priority\n\n      0x04, // descriptor_type\n      0x0f + configlen, // length\n      0x40, // codec : mpeg4_audio\n      0x15, // stream_type\n      0x00, 0x00, 0x00, // buffer_size\n      0x00, 0x00, 0x00, 0x00, // maxBitrate\n      0x00, 0x00, 0x00, 0x00, // avgBitrate\n\n      0x05 // descriptor_type\n    ].concat([configlen]).concat(config).concat([0x06, 0x01, 0x02]))\n    buffer.write(Fmp4.size(8 + content.byteLength), Fmp4.type('esds'), content)\n    return buffer.buffer\n  }\n  static avc1 (data) {\n    let buffer = new Buffer()\n    let size = 40// 8(avc1)+8(avcc)+8(btrt)+16(pasp)\n    // let sps = data.sps\n    // let pps = data.pps\n    let width = data.width\n    let height = data.height\n    let hSpacing = data.parRatio.height\n    let vSpacing = data.parRatio.width\n    // let avccBuffer = new Buffer()\n    // avccBuffer.write(new Uint8Array([\n    //   0x01, // version\n    //   sps[1], // profile\n    //   sps[2], // profile compatible\n    //   sps[3], // level\n    //   0xfc | 3,\n    //   0xE0 | 1 // 目前只处理一个sps\n    // ].concat([sps.length >>> 8 & 0xff, sps.length & 0xff])))\n    // avccBuffer.write(sps, new Uint8Array([1, pps.length >>> 8 & 0xff, pps.length & 0xff]), pps)\n\n    let avcc = data.avcc\n    let avc1 = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1\n    let btrt = new Uint8Array([\n      0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n    ])\n    let pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n\n    buffer.write(\n      Fmp4.size(size + avc1.byteLength + avcc.byteLength + btrt.byteLength), Fmp4.type('avc1'), avc1,\n      Fmp4.size(8 + avcc.byteLength), Fmp4.type('avcC'), avcc,\n      Fmp4.size(20), Fmp4.type('btrt'), btrt,\n      Fmp4.size(16), Fmp4.type('pasp'), pasp\n    )\n    return buffer.buffer\n  }\n  static stts () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stts', content)\n  }\n  static stsc () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stsc', content)\n  }\n  static stco () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n    ])\n    return Fmp4.initBox(16, 'stco', content)\n  }\n  static stsz () {\n    let content = new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n    ])\n    return Fmp4.initBox(20, 'stsz', content)\n  }\n  static mvex (duration, timescale = 1000, trackID) {\n    let buffer = new Buffer()\n    let mehd = Buffer.writeUint32(duration)\n    buffer.write(Fmp4.size(56), Fmp4.type('mvex'), Fmp4.size(16), Fmp4.type('mehd'), Fmp4.extension(0, 0), mehd, Fmp4.trex(trackID))\n    return buffer.buffer\n  }\n  static trex (id) {\n    let content = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ])\n    return Fmp4.initBox(8 + content.byteLength, 'trex', content)\n  }\n  static moof (data) {\n    let size = 8\n    let mfhd = Fmp4.mfhd()\n    let traf = Fmp4.traf(data);\n    [mfhd, traf].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'moof', mfhd, traf)\n  }\n  static mfhd () {\n    let content = Buffer.writeUint32(Fmp4.sequence)\n    Fmp4.sequence += 1\n    return Fmp4.initBox(16, 'mfhd', Fmp4.extension(0, 0), content)\n  }\n  static traf (data) {\n    let size = 8\n    let tfhd = Fmp4.tfhd(data.id)\n    let tfdt = Fmp4.tfdt(data.time)\n    let sdtp = Fmp4.sdtp(data)\n    let trun = Fmp4.trun(data, sdtp.byteLength);\n\n    [tfhd, tfdt, trun, sdtp].forEach(item => {\n      size += item.byteLength\n    })\n    return Fmp4.initBox(size, 'traf', tfhd, tfdt, trun, sdtp)\n  }\n  static tfhd (id) {\n    let content = Buffer.writeUint32(id)\n    return Fmp4.initBox(16, 'tfhd', Fmp4.extension(0, 0), content)\n  }\n  static tfdt (time) {\n    // let upper = Math.floor(time / (UINT32_MAX + 1)),\n    //     lower = Math.floor(time % (UINT32_MAX + 1));\n    return Fmp4.initBox(16, 'tfdt', Fmp4.extension(0, 0), Buffer.writeUint32(time))\n  }\n  static trun (data, sdtpLength) {\n    // let id = data.id;\n    // let ceil = id === 1 ? 16 : 12;\n    let buffer = new Buffer()\n    let sampleCount = Buffer.writeUint32(data.samples.length)\n    // mdat-header 8\n    // moof-header 8\n    // mfhd 16\n    // traf-header 8\n    // thhd 16\n    // tfdt 20\n    // trun-header 12\n    // sampleCount 4\n    // data-offset 4\n    // samples.length\n    let offset = Buffer.writeUint32(8 + 8 + 16 + 8 + 16 + 16 + 12 + 4 + 4 + 16 * data.samples.length + sdtpLength)\n    buffer.write(Fmp4.size(20 + 16 * data.samples.length), Fmp4.type('trun'), new Uint8Array([0x00, 0x00, 0x0F, 0x01]), sampleCount, offset)\n\n    // let size = buffer.buffer.byteLength\n    // let writeOffset = 0\n    // data.samples.forEach(() => {\n    //   size += 16\n    // })\n    //\n    // let trunBox = new Uint8Array(size)\n\n    // trunBox.set(buffer.buffer, 0)\n\n    data.samples.forEach((item) => {\n      const flags = item.flags\n      // console.log(item.type, item.dts, item.duration)\n\n      buffer.write(new Uint8Array([\n        (item.duration >>> 24) & 0xFF, // sample_duration\n        (item.duration >>> 16) & 0xFF,\n        (item.duration >>> 8) & 0xFF,\n        (item.duration) & 0xFF,\n        (item.size >>> 24) & 0xFF, // sample_size\n        (item.size >>> 16) & 0xFF,\n        (item.size >>> 8) & 0xFF,\n        (item.size) & 0xFF,\n        (flags.isLeading << 2) | flags.dependsOn, // sample_flags\n        (flags.isDependedOn << 6) | (flags.hasRedundancy << 4) | flags.isNonSync,\n        0x00, 0x00, // sample_degradation_priority\n        (item.cts >>> 24) & 0xFF, // sample_composition_time_offset\n        (item.cts >>> 16) & 0xFF,\n        (item.cts >>> 8) & 0xFF,\n        (item.cts) & 0xFF\n      ]))\n      // writeOffset += 16\n      // buffer.write(Buffer.writeUint32(0));\n    })\n    return buffer.buffer\n  }\n  static sdtp (data) {\n    let buffer = new Buffer()\n    buffer.write(Fmp4.size(12 + data.samples.length), Fmp4.type('sdtp'), Fmp4.extension(0, 0))\n    data.samples.forEach(item => {\n      const flags = item.flags\n      const num = (flags.isLeading << 6) | // is_leading: 2 (bit)\n        (flags.dependsOn << 4) | // sample_depends_on\n        (flags.isDependedOn << 2) | // sample_is_depended_on\n        (flags.hasRedundancy)// sample_has_redundancy\n\n      buffer.write(new Uint8Array([num]))\n    })\n    return buffer.buffer\n  }\n  static mdat (data) {\n    let buffer = new Buffer()\n    let size = 8\n    data.samples.forEach(item => {\n      size += item.size\n    })\n    buffer.write(Fmp4.size(size), Fmp4.type('mdat'))\n    let mdatBox = new Uint8Array(size)\n    let offset = 0\n    mdatBox.set(buffer.buffer, offset)\n    offset += 8\n    data.samples.forEach(item => {\n      item.buffer.forEach((unit) => {\n        mdatBox.set(unit, offset)\n        offset += unit.byteLength\n        // buffer.write(unit.data);\n      })\n    })\n    return mdatBox\n  }\n}\nFmp4.type = (name) => {\n  return new Uint8Array([name.charCodeAt(0), name.charCodeAt(1), name.charCodeAt(2), name.charCodeAt(3)])\n}\nFmp4.sequence = 1\n\nexport default Fmp4\n","import {\n  EVENTS,\n  sniffer,\n  MediaSegmentList,\n  Buffer\n} from 'xgplayer-utils';\nimport Fmp4 from './fmp4'\n\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS\n\nexport default class Mp4Remuxer {\n  constructor (curTime = 0) {\n    this._dtsBase = curTime * 1000\n    this._isDtsBaseInited = false\n    this._videoSegmentList = new MediaSegmentList('video')\n    this._audioSegmentList = new MediaSegmentList('audio')\n    const {browser} = sniffer\n    this._fillSilenceFrame = browser === 'ie'\n\n    this.isFirstVideo = true\n    this.isFirstAudio = true\n\n    this.videoAllDuration = 0\n    this.audioAllDuration = 0\n  }\n\n  init () {\n    this.on(REMUX_EVENTS.REMUX_MEDIA, this.remux.bind(this))\n    this.on(REMUX_EVENTS.REMUX_METADATA, this.onMetaDataReady.bind(this))\n    this.on(REMUX_EVENTS.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this))\n  }\n\n  destroy () {\n    this._dtsBase = -1\n    this._dtsBaseInited = false\n    this._videoSegmentList.clear()\n    this._audioSegmentList.clear()\n    this._videoSegmentList = null\n    this._audioSegmentList = null\n  }\n\n  remux () {\n    const { audioTrack, videoTrack } = this._context.getInstance('TRACKS')\n    !this._isDtsBaseInited && this.calcDtsBase(audioTrack, videoTrack)\n\n    this._remuxVideo(videoTrack)\n    this._remuxAudio(audioTrack)\n  }\n\n  resetDtsBase () {\n    // for hls 中途切换 meta后seek\n    this._dtsBase = 0\n    this._dtsBaseInited = false\n  }\n\n  seek () {\n    this._videoSegmentList.clear()\n    this._audioSegmentList.clear()\n  }\n\n  onMetaDataReady (type) {\n    let track\n\n    if (type === 'audio') {\n      const { audioTrack } = this._context.getInstance('TRACKS')\n      track = audioTrack;\n    } else {\n      const { videoTrack } = this._context.getInstance('TRACKS')\n      track = videoTrack;\n    }\n\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.mimetype = track.meta.codec;\n    source.init = this.remuxInitSegment(type, track.meta);\n    // source.inited = false;\n\n    // this.resetDtsBase()\n    this.emit(REMUX_EVENTS.INIT_SEGMENT, type)\n  }\n\n  remuxInitSegment (type, meta) {\n    let initSegment = new Buffer()\n    let ftyp = Fmp4.ftyp()\n    let moov = Fmp4.moov({ type, meta: meta })\n\n    initSegment.write(ftyp, moov)\n    return initSegment;\n  }\n\n  calcDtsBase (audioTrack, videoTrack) {\n    if (!audioTrack && videoTrack.samples.length) {\n      return videoTrack.samples[0].dts\n    }\n\n    if (!audioTrack.samples.length && !videoTrack.samples.length) {\n      return;\n    }\n\n    let audioBase = Infinity\n    let videoBase = Infinity\n\n    if (audioTrack.samples && audioTrack.samples.length) {\n      audioBase = audioTrack.samples[0].dts\n    }\n    if (videoTrack.samples && videoTrack.samples.length) {\n      videoBase = videoTrack.samples[0].dts\n    }\n\n    this._dtsBase = Math.min(audioBase, videoBase) - this._dtsBase; // 兼容播放器切换清晰度\n    this._isDtsBaseInited = true\n  }\n\n  _remuxVideo (videoTrack) {\n    const track = videoTrack || {}\n\n    if (!videoTrack.samples || !videoTrack.samples.length) {\n      return\n    }\n\n    let {samples} = track\n    let firstDts = -1\n\n    let initSegment = null\n    const mp4Samples = []\n    const mdatBox = {\n      samples: []\n    }\n\n    let maxLoop = 10000\n    while (samples.length && maxLoop-- > 0) {\n      // console.log('mark2')\n      const avcSample = samples.shift()\n\n      const { isKeyframe, options } = avcSample\n      if (!this.isFirstVideo && options && options.meta) {\n        initSegment = this.remuxInitSegment('video', options.meta)\n        options.meta = null\n        samples.unshift(avcSample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = avcSample.dts - this._dtsBase\n\n      if (firstDts === -1) {\n        firstDts = dts\n      }\n\n      let cts\n      let pts\n      if (avcSample.pts !== undefined) {\n        pts = avcSample.pts - this._dtsBase\n        cts = pts - dts\n      }\n      if (avcSample.cts !== undefined) {\n        pts = avcSample.cts + dts\n        cts = avcSample.cts\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n\n      let sampleDuration = 0\n      if (avcSample.duration) {\n        sampleDuration = avcSample.duration;\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // lastest sample, use second last duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference duration\n          sampleDuration = this.videoMeta.refSampleDuration\n        }\n      }\n      this.videoAllDuration += sampleDuration\n      // console.log(`video dts ${dts}`, `pts ${pts}`, isKeyframe, `duration ${sampleDuration}`)\n      if (sampleDuration >= 0) {\n        mdatBox.samples.push(mdatSample)\n        mdatSample.buffer.push(avcSample.data)\n        mdatSample.size += avcSample.data.byteLength\n\n        mp4Samples.push({\n          dts,\n          cts,\n          pts,\n          data: avcSample.data,\n          size: avcSample.data.byteLength,\n          isKeyframe,\n          duration: sampleDuration,\n          flags: {\n            isLeading: 0,\n            dependsOn: isKeyframe ? 2 : 1,\n            isDependedOn: isKeyframe ? 1 : 0,\n            hasRedundancy: 0,\n            isNonSync: isKeyframe ? 0 : 1\n          },\n          originDts: dts,\n          type: 'video'\n        })\n      }\n\n      if (isKeyframe) {\n        this.emit(REMUX_EVENTS.RANDOM_ACCESS_POINT, pts)\n      }\n    }\n\n    let moofMdat = new Buffer()\n    if (mp4Samples.length) {\n      const moof = Fmp4.moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = Fmp4.mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('video', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('video', initSegment)\n\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxVideo(track)\n      }\n    }\n\n    this.isFirstVideo = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'video')\n\n    track.samples = []\n    track.length = 0\n  }\n\n  _remuxAudio (track) {\n    const {samples} = (track || {})\n    let firstDts = -1\n    let mp4Samples = []\n\n    let initSegment = null\n    const mdatBox = {\n      samples: []\n    }\n    if (!samples || !samples.length) {\n      return\n    }\n\n    let maxLoop = 10000\n    let isFirstDtsInited = false\n    while (samples.length && maxLoop-- > 0) {\n      // console.log('mark3')\n      let sample = samples.shift()\n      const { data, options } = sample\n      if (!this.isFirstAudio && options && options.meta) {\n        initSegment = this.remuxInitSegment('audio', options.meta)\n        options.meta = null;\n        samples.unshift(sample)\n        if (!options.isContinue) {\n          this.resetDtsBase()\n        }\n        break;\n      }\n\n      let dts = sample.dts - this._dtsBase\n      const originDts = dts\n      if (!isFirstDtsInited) {\n        firstDts = dts\n        isFirstDtsInited = true\n      }\n\n      let sampleDuration = 0\n      if (sample.duration) {\n        sampleDuration = sample.duration;\n      } else if (this.audioMeta.refSampleDurationFixed) {\n        sampleDuration = this.audioMeta.refSampleDurationFixed\n      } else if (samples.length >= 1) {\n        const nextDts = samples[0].dts - this._dtsBase;\n        sampleDuration = nextDts - dts\n      } else {\n        if (mp4Samples.length >= 1) { // use second last sample duration\n          sampleDuration = mp4Samples[mp4Samples.length - 1].duration\n        } else { // the only one sample, use reference sample duration\n          sampleDuration = this.audioMeta.refSampleDuration\n        }\n      }\n\n      // console.log(`audio dts ${dts}`, `pts ${dts}`, `duration ${sampleDuration}`)\n      this.audioAllDuration += sampleDuration\n      const mp4Sample = {\n        dts,\n        pts: dts,\n        cts: 0,\n        size: data.byteLength,\n        duration: sample.duration ? sample.duration : sampleDuration,\n        flags: {\n          isLeading: 0,\n          dependsOn: 2,\n          isDependedOn: 1,\n          hasRedundancy: 0,\n          isNonSync: 0\n        },\n        isKeyframe: true,\n        originDts,\n        type: 'audio'\n      }\n\n      let mdatSample = {\n        buffer: [],\n        size: 0\n      }\n\n      if (sampleDuration >= 0) {\n        mdatSample.buffer.push(data)\n        mdatSample.size += data.byteLength\n\n        mdatBox.samples.push(mdatSample)\n        mp4Samples.push(mp4Sample)\n      }\n    }\n\n    const moofMdat = new Buffer()\n\n    if (mp4Samples.length) {\n      const moof = Fmp4.moof({\n        id: track.meta.id,\n        time: firstDts,\n        samples: mp4Samples\n      })\n      const mdat = Fmp4.mdat(mdatBox)\n      moofMdat.write(moof, mdat)\n\n      this.writeToSource('audio', moofMdat)\n    }\n\n    if (initSegment) {\n      this.writeToSource('audio', initSegment)\n      if (samples.length) {\n        // second part of stream change\n        track.samples = samples;\n        return this._remuxAudio(track)\n      }\n    }\n\n    this.isFirstAudio = false\n    this.emit(REMUX_EVENTS.MEDIA_SEGMENT, 'audio', moofMdat)\n\n    track.samples = []\n    track.length = 0\n  }\n\n  writeToSource (type, buffer) {\n    let presourcebuffer = this._context.getInstance('PRE_SOURCE_BUFFER');\n    let source = presourcebuffer.getSource(type);\n    if (!source) {\n      source = presourcebuffer.createSource(type);\n    }\n\n    source.data.push(buffer)\n  }\n\n  initSilentAudio (dts, duration) {\n    const unit = Mp4Remuxer.getSilentFrame(this._audioMeta.channelCount)\n    return {\n      dts,\n      pts: dts,\n      cts: 0,\n      duration,\n      unit,\n      size: unit.byteLength,\n      originDts: dts,\n      type: 'video'\n    }\n  }\n\n  get videoMeta () {\n    return this._context.getInstance('TRACKS').videoTrack.meta\n  }\n  get audioMeta () {\n    return this._context.getInstance('TRACKS').audioTrack.meta\n  }\n\n  static getSilentFrame (channelCount) {\n    if (channelCount === 1) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n    } else if (channelCount === 2) {\n      return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80])\n    } else if (channelCount === 3) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e])\n    } else if (channelCount === 4) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38])\n    } else if (channelCount === 5) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38])\n    } else if (channelCount === 6) {\n      return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0])\n    }\n    return null\n  }\n\n  destroy () {\n    this._player = null;\n  }\n}\n","import _M3U8Parser from './hls/demuxer/m3u8parser';\nimport _TsDemuxer from './hls/demuxer/ts';\nimport _Playlist from './hls/playlist';\nimport _FlvDemuxer from './flv/index';\n\nexport var M3U8Parser = _M3U8Parser;\nexport var TsDemuxer = _TsDemuxer;\nexport var Playlist = _Playlist;\nexport var FlvDemuxer = _FlvDemuxer;","import { EVENTS, Mse, Crypto} from 'xgplayer-utils';\nimport { XgBuffer, PreSource, Tracks } from 'xgplayer-buffer';\nimport { FetchLoader } from 'xgplayer-loader';\nimport { Compatibility } from 'xgplayer-codec';\nimport Mp4Remuxer from 'xgplayer-remux/src/mp4/index';\n\nimport {Playlist, M3U8Parser, TsDemuxer} from 'xgplayer-demux';\n\nconst LOADER_EVENTS = EVENTS.LOADER_EVENTS;\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\nconst DEMUX_EVENTS = EVENTS.DEMUX_EVENTS;\nconst HLS_EVENTS = EVENTS.HLS_EVENTS;\nconst CRYTO_EVENTS = EVENTS.CRYTO_EVENTS;\nconst HLS_ERROR = 'HLS_ERROR';\nclass HlsLiveController {\n  constructor (configs) {\n    this.configs = Object.assign({}, configs);\n    this.url = '';\n    this.baseurl = '';\n    this.sequence = 0;\n    this._playlist = null;\n    this.retrytimes = this.configs.retrytimes || 3;\n    this.preloadTime = this.configs.preloadTime;\n    this.container = this.configs.container;\n    this._m3u8lasttime = 0;\n    this._timmer = setInterval(this._checkStatus.bind(this), 50);\n    this._lastCheck = 0;\n    this._player = this.configs.player;\n    this.m3u8Text = null\n  }\n\n  init () {\n    // 初始化Buffer （M3U8/TS/Playlist);\n    this._context.registry('M3U8_BUFFER', XgBuffer);\n    this._context.registry('TS_BUFFER', XgBuffer);\n    this._context.registry('TRACKS', Tracks);\n\n    this._playlist = this._context.registry('PLAYLIST', Playlist)({autoclear: true});\n    this._context.registry('PRE_SOURCE_BUFFER', PreSource);\n\n    this._context.registry('COMPATIBILITY', Compatibility);\n\n    // 初始化M3U8Loader;\n    this._m3u8loader = this._context.registry('M3U8_LOADER', FetchLoader)({ buffer: 'M3U8_BUFFER', readtype: 1 });\n    this._tsloader = this._context.registry('TS_LOADER', FetchLoader)({ buffer: 'TS_BUFFER', readtype: 3 });\n\n    // 初始化TS Demuxer\n    this._context.registry('TS_DEMUXER', TsDemuxer)({ inputbuffer: 'TS_BUFFER' });\n\n    // 初始化MP4 Remuxer\n    this._context.registry('MP4_REMUXER', Mp4Remuxer);\n\n    // 初始化MSE\n    this.mse = this._context.registry('MSE', Mse)({container: this.container});\n    this.initEvents();\n  }\n\n  initEvents () {\n    this.on(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete.bind(this));\n\n    this.on(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers.bind(this.mse));\n\n    this.on(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend.bind(this.mse));\n\n    this.on(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed.bind(this));\n\n    this.on(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete.bind(this));\n\n    this.on(LOADER_EVENTS.LOADER_ERROR, this._onLoadError.bind(this));\n\n    this.on(DEMUX_EVENTS.DEMUX_ERROR, this._onDemuxError.bind(this));\n\n    this.on(REMUX_EVENTS.REMUX_ERROR, this._onRemuxError.bind(this));\n  }\n\n  _onError(type, mod, err, fatal) {\n    let error = {\n      errorType: type,\n      errorDetails: `[${mod}]: ${err.message}`,\n      errorFatal: fatal\n    }\n    this._player.emit(HLS_ERROR, error);\n  }\n\n  _onDemuxComplete () {\n    this.emit(REMUX_EVENTS.REMUX_MEDIA)\n  }\n  _onMetadataParsed (type) {\n    this.emit(REMUX_EVENTS.REMUX_METADATA, type)\n  }\n\n  _onLoadError (loader, error) {\n    if (!this._tsloader.loading && !this._m3u8loader.loading && this.retrytimes > 1) {\n      this.retrytimes--;\n      this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, false);\n    } else if (this.retrytimes <= 1) {\n      this._onError(LOADER_EVENTS.LOADER_ERROR, loader, error, true);\n      this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n      this.mse.endOfStream();\n    }\n  }\n\n  _onDemuxError (mod, error, fatal) {\n    if(fatal === undefined) {\n      fatal = true;\n    }\n    this._onError(LOADER_EVENTS.LOADER_ERROR, mod, error, fatal);\n  }\n\n  _onRemuxError (mod, error, fatal) {\n    if(fatal === undefined) {\n      fatal = true;\n    }\n    this._onError(REMUX_EVENTS.REMUX_ERROR, mod, error, fatal);\n  }\n\n  _onLoadComplete (buffer) {\n    if (buffer.TAG === 'M3U8_BUFFER') {\n      let mdata;\n      try {\n        this.m3u8Text = buffer.shift();\n        mdata = M3U8Parser.parse(this.m3u8Text, this.baseurl);\n      } catch (error) {\n        this._onError('M3U8_PARSER_ERROR', 'M3U8_PARSER', error, false);\n      }\n\n      if(!mdata) {\n        if (this.retrytimes > 0) {\n          this.retrytimes--;\n          this._preload();\n        } else {\n          this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n          this.mse.endOfStream();\n        }\n        return;\n      }\n\n      try {\n        this._playlist.pushM3U8(mdata, true);\n      } catch (error) {\n        this._onError('M3U8_PARSER_ERROR', 'PLAYLIST', error, false);\n      }\n\n      if (this._playlist.encrypt && this._playlist.encrypt.uri && !this._playlist.encrypt.key) {\n        this._context.registry('DECRYPT_BUFFER', XgBuffer)();\n        this._context.registry('KEY_BUFFER', XgBuffer)();\n        this._tsloader.buffer = 'DECRYPT_BUFFER';\n        this._keyLoader = this._context.registry('KEY_LOADER', FetchLoader)({buffer:'KEY_BUFFER',readtype: 3});\n        this.emitTo('KEY_LOADER', LOADER_EVENTS.LADER_START, this._playlist.encrypt.uri);\n      } else {\n        this._m3u8Loaded(mdata);\n      }\n    } else if (buffer.TAG === 'TS_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.downloaded(this._tsloader.url, true);\n      this.emit(DEMUX_EVENTS.DEMUX_START);\n    }  else if (buffer.TAG === 'DECRYPT_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.downloaded(this._tsloader.url, true);\n      this.emitTo('CRYPTO', CRYTO_EVENTS.START_DECRYPT);\n    } else if (buffer.TAG == 'KEY_BUFFER') {\n      this.retrytimes = this.configs.retrytimes || 3;\n      this._playlist.encrypt.key = buffer.shift();\n      this._crypto = this._context.registry('CRYPTO', Crypto)({\n        key: this._playlist.encrypt.key,\n        iv: this._playlist.encrypt.ivb,\n        method: this._playlist.encrypt.method,\n        inputbuffer:'DECRYPT_BUFFER',\n        outputbuffer:'TS_BUFFER'\n      });\n      this._crypto.on(CRYTO_EVENTS.DECRYPTED, this._onDcripted.bind(this));\n    }\n  }\n\n  _onDcripted() {\n    this.emit(DEMUX_EVENTS.DEMUX_START);\n  }\n\n  _m3u8Loaded(mdata) {\n    if (!this.preloadTime) {\n      this.preloadTime = this._playlist.targetduration ? this._playlist.targetduration : 5;\n    }\n    if (this._playlist.fragLength > 0 && this._playlist.sequence < mdata.sequence) {\n      this.retrytimes = this.configs.retrytimes || 3;\n    } else {\n      if (this.retrytimes > 0) {\n        this.retrytimes--;\n        this._preload();\n      } else {\n        this.emit(HLS_EVENTS.RETRY_TIME_EXCEEDED);\n        this.mse.endOfStream();\n      }\n    }\n  }\n  _checkStatus () {\n    if (this.retrytimes < 1 && (new Date().getTime() - this._lastCheck < 10000)) {\n      return;\n    }\n    this._lastCheck = new Date().getTime();\n    if (this.container.buffered.length < 1) {\n      this._preload()\n    } else {\n      // Check for load.\n      let currentTime = this.container.currentTime;\n      let bufferstart = this.container.buffered.start(this.container.buffered.length - 1);\n      if (this.container.readyState <= 2) {\n        if (currentTime < bufferstart) {\n          this.container.currentTime = bufferstart;\n          currentTime = bufferstart;\n        } else {\n          this._preload();\n        }\n      }\n      let bufferend = this.container.buffered.end(this.container.buffered.length - 1);\n      if (currentTime < bufferend - (this.preloadTime * 2)) {\n        this.container.currentTime = bufferend - (this.preloadTime * 2);\n      }\n      if (bufferend > this.preloadTime * 2) {\n        this.mse.remove(bufferend - (this.preloadTime * 2));\n      }\n      if (currentTime > bufferend - this.preloadTime) {\n        this._preload();\n      }\n    }\n  }\n\n  _preload () {\n    if (this._tsloader.loading || this._m3u8loader.loading) {\n      return;\n    }\n    let frag = this._playlist.getTs();\n\n    if (frag && !frag.downloaded && !frag.downloading) {\n      this._playlist.downloading(frag.url, true);\n      this.emitTo('TS_LOADER', LOADER_EVENTS.LADER_START, frag.url)\n    } else {\n      let preloadTime = this.preloadTime ? this.preloadTime : 0;\n      let current = new Date().getTime();\n      if ((!frag || frag.downloaded) &&\n        (current - this._m3u8lasttime) / 1000 > preloadTime) {\n        this._m3u8lasttime = current\n        this.emitTo('M3U8_LOADER', LOADER_EVENTS.LADER_START, this.url);\n      }\n    }\n  }\n\n  load (url) {\n    this.baseurl = M3U8Parser.parseURL(url);\n    this.url = url;\n    this._preload();\n  }\n\n  destroy () {\n    clearInterval(this._timmer);\n    this.off(LOADER_EVENTS.LOADER_COMPLETE, this._onLoadComplete);\n    this.off(REMUX_EVENTS.INIT_SEGMENT, this.mse.addSourceBuffers);\n    this.off(REMUX_EVENTS.MEDIA_SEGMENT, this.mse.doAppend);\n    // this.off(REMUX_EVENTS.REMUX_ERROR);\n    this.off(DEMUX_EVENTS.METADATA_PARSED, this._onMetadataParsed);\n    this.off(DEMUX_EVENTS.DEMUX_COMPLETE, this._onDemuxComplete);\n\n    this.mse = null\n    this.m3u8Text = null\n  }\n}\nexport default HlsLiveController;\n","import Player from 'xgplayer'\nimport { Context, EVENTS } from 'xgplayer-utils';\nimport HlsLiveController from './hls-live';\nconst HlsAllowedEvents = EVENTS.HlsAllowedEvents;\nconst REMUX_EVENTS = EVENTS.REMUX_EVENTS;\n\nexport default class HlsLivePlayer extends Player {\n  constructor (options) {\n    super(options)\n    this.hlsOps = {};\n    this.util = Player.util;\n    this.util.deepCopy(this.hlsOps, options);\n    this._context = new Context(HlsAllowedEvents);\n    this._hasStarted = false;\n  }\n\n  _initEvents () {\n    this.__core__.once(REMUX_EVENTS.INIT_SEGMENT, () => {\n      const mse = this._context.getInstance('MSE');\n      if (!this._hasStarted) {\n        const live = this.util.createDom('xg-live', '正在直播', {}, 'xgplayer-live');\n        this.util.addClass(this.root, 'xgplayer-is-live');\n        this.controls.appendChild(live);\n      }\n      this._hasStarted = true;\n      super.start(mse.url);\n    });\n\n    // this.once('canplay', () => {\n    //   this.video.play()\n    // });\n  }\n\n  _initSrcChangeHandler () {\n    let _this = this;\n    Object.defineProperty(this, 'src', {\n      get () {\n        return _this.currentSrc\n      },\n      set (url) {\n        _this.config.url = url\n        if (!_this.paused) {\n          _this.pause()\n          _this.once('pause', () => {\n            _this.start(url)\n          })\n          _this.once('canplay', () => {\n            _this.play()\n          })\n        } else {\n          _this.start(url)\n        }\n        _this.once('canplay', () => {\n          _this.currentTime = 0\n        })\n      },\n      configurable: true\n    })\n  }\n\n  start (url = this.config.url) {\n    if (!url) {\n      return;\n    }\n    this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({player:this, container: this.video});\n    this._context.init();\n    this.url = url;\n    this.__core__.load(url);\n    this._initEvents();\n    this._initSrcChangeHandler();\n  }\n\n  play () {\n    if (this._hasStarted) {\n      this._context.destroy();\n      this._context = new Context(HlsAllowedEvents);\n      this.__core__ = this._context.registry('HLS_LIVE_CONTROLLER', HlsLiveController)({container: this.video});\n      this._context.init();\n      this._initEvents();\n      this.__core__.load(this.url);\n    }\n    super.play();\n  }\n\n  destroy () {\n    this._context.destroy();\n    super.destroy();\n  }\n}\n"],"names":["_classCallCheck","instance","Constructor","TypeError","EventHandlers","EventEmitter","init","call","this","$getMaxListeners","that","undefined","_maxListeners","defaultMaxListeners","emitNone","handler","isFn","self","len","length","listeners","arrayClone","i","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","args","apply","_addListener","target","type","listener","prepend","m","events","existing","_events","newListener","emit","_eventsCount","unshift","push","warned","w","Error","name","emitter","count","emitWarning","e","console","warn","log","_onceWrap","g","removeListener","fired","arguments","listenerCount","evlistener","spliceOne","list","index","k","n","pop","arr","copy","Array","unwrapListeners","ret","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","props","descriptor","defineProperty","key","protoProps","staticProps","isObjectFilled","obj","hasOwnProperty","MediaInfo","mimeType","duration","hasVideo","video","hasAudio","audio","isBaseInfoReady","isVideoReady","isAudioReady","mediaInfo","usingDomains","domain","active","Domain","getPrototypeOf","setMaxListeners","isNaN","getMaxListeners","er","doError","error","err","context","domainEmitter","domainThrown","addListener","on","prependListener","once","prependOnceListener","position","originalListener","removeAllListeners","keys","eventNames","Reflect","ownKeys","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter","Context","allowedEvents","_emitter","off","_instanceMap","_clsMap","_inited","_hooks","tag","_len","_key","a","b","c","d","newInstance","config","initInstance","cls","_this2","checkMessageName","_isMessageNameValid","bind","enhanced","_cls","_this","onceListeners","TAG","_context","messageName","callback","beforeList","_len2","_key2","concat","_len3","_key3","hasOwn","callbacks","_messageName","_callbacks","_i","_callback","removeListeners","_len4","_key4","_this3","forEach","destroy","destroyInstances","indexOf","LOADER_EVENTS","DEMUX_EVENTS","REMUX_EVENTS","MSE_EVENTS","HLS_EVENTS","CRYTO_EVENTS","ALLEVENTS","assign","FlvAllowedEvents","HlsAllowedEvents","le","buf","ArrayBuffer","DataView","setInt16","Int16Array","sniffer","r","os","isPc","isTablet","ua","navigator","userAgent","toLowerCase","reg","filter","test","isWindowsPhone","isSymbian","isAndroid","isFireFox","isPhone","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs","_ucs2","join","start","checkLength","array","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","Symbol","iterator","next","done","isArray","MediaSample","info","_default","getDefaultInf","toString","sample","entries","_ref","_ref2","v","MediaSegment","startDts","endDts","startPts","endPts","originStartDts","originEndDts","randomAccessPoints","firstSample","lastSample","isRAP","MediaSegmentList","_type","_list","_lastAppendLocation","beginDts","last","mid","lbound","ubound","idx","originDts","Math","floor","_searchNearestSegmentBefore","segment","lastAppendIdx","insertIdx","splice","getLastSegmentBefore","segmentIdx","AudioTrackMeta","meta","VideoTrackMeta","Uint8Array","sps","pps","AudioTrackSample","getDefault","VideoTrackSample","MSE","configs","container","mediaSource","sourceBuffers","preloadTime","onSourceOpen","onTimeUpdate","onUpdateEnd","onWaiting","MediaSource","addEventListener","src","URL","createObjectURL","url","newCtx","addSourceBuffers","doAppend","readyState","sources","getInstance","tracks","track","add","audioTrack","videoTrack","dur","refSampleDuration","data","_k","source","mime","mimetype","sourceBuffer","addSourceBuffer","inited","appendBuffer","buffer","shift","_mediaSource","activeSourceBuffers","endOfStream","end","updating","remove","taskList","removeEventListener","task","Promise","resolve","doCleanBuffer","retryTime","clean","clearBuffer","all","removeBuffers","then","_buffer","removeSourceBuffer","revokeObjectURL","buffered","bEnd","Stream","dataview","loop","readByte","byteLength","size","sign","res","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","exports","ResultConstructor","totalLength","arrays","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","result","offset","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","set","_concat2","__esModule","default","_concat","module","Buffer","item","Concat","padStart4Hex","hexNum","padStart","temp","num","parseInt","EVENTS","Crypto","inputBuffer","inputbuffer","outputBuffer","outputbuffer","iv","method","crypto","window","msCrypto","START_DECRYPT","decript","aeskey","decriptData","subtle","importKey","decrypt","DECRYPTED","_Context","_EVENTS","_sniffer","isLe","_isLe","_UTF8","_MediaSegmentList","_AudioTrackMeta","_VideoTrackMeta","_AudioTrackSample","_VideoTrackSample","Mse","_Mse","_Stream","_Buffer","_Crypto","Track","id","sequenceNumber","samples","droppedSamples","reset","AudioTrack","_Track","VideoTrack","_Track2","dropped","Tracks","XgBuffer","historyLen","_shiftBuffer","_ret","slice","_ret2","tmpoff","tmp","templength","clear","retInt","RemuxBuffer","Source","_Tracks","_AudioTrack","_VideoTrack","_XgBuffer","PreSource","_typeof","_typeof2","FetchLoader","status","_reader","_canceled","_destroyed","readtype","_loaderTaskNo","LADER_START","load","opts","params","getParams","loading","fetch","response","ok","_onFetchResponse","LOADER_ERROR","statusText","catch","taskno","json","LOADER_COMPLETE","text","arrayBuffer","_onReader","body","getReader","reader","cancel","read","val","LOADER_DATALOADED","options","headers","Headers","configHeaders","append","optHeaders","cors","mode","withCredentials","credentials","Golomb","_bufferIndex","_totalBytes","_totalBits","_currentWord","_currentWordBitsLeft","bufferBytesLeft","bytesRead","min","word","subarray","bits","valu","_fillCurrentWord","readBits","zeroCount","_skipLeadingZero","leadingZeros","readUEG","SPSParser","srcLength","dst","dstIdx","rbsp","_ebsp2rbsp","gb","profileIdc","levelIdc","profile_string","getProfileString","level_string","getLevelString","chroma_format_idc","chroma_format","chroma_format_table","bit_depth","readBool","scaling_list_count","_skipScalingList","pic_order_cnt_type","readSEG","num_ref_frames_in_pic_order_cnt_cycle","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","par_width","par_height","fps","fps_fixed","fps_num","fps_den","aspect_ratio_idc","par_w_table","par_h_table","num_units_in_tick","time_scale","parScale","crop_unit_x","crop_unit_y","codec_width","codec_height","present_width","ceil","getChromaFormatString","last_scale","next_scale","toFixed","chroma","spsConfig","codec_size","codecWidth","width","codecHeight","height","presentWidth","present_size","presentHeight","profile","level","bitDepth","chromaFormat","parRatio","par_ratio","frameRate","frame_rate","fpsDen","fpsNum","timescale","Nalunit","getAnnexbNals","getAvccNals","nals","getHeaderPositionAnnexB","pos","header","headerLength","skip","unit","analyseNal","ndr","idr","SpsParser","parseSPS","AAC","codec","channelCount","Compatibility","nextAudioDts","nextVideoDts","lastAudioSamplesLen","lastVideoSamplesLen","lastVideoDts","lastAudioDts","allAudioSamplesCount","allVideoSamplesCount","_firstAudioSample","_firstVideoSample","filledAudioSamples","filledVideoSamples","videoLastSample","audioLastSample","_videoLargeGap","_audioLargeGap","before","REMUX_MEDIA","doFix","_getFirstSample","getFirstSample","isFirstAudioSamples","isFirstVideoSamples","recordSamplesCount","fixRefSampleDuration","_Compatibility$detact","detactChangeStream","videoChanged","changed","videoChangedIdx","changedIdx","fixChangeStreamVideo","doFixVideo","_Compatibility$detact2","audioChanged","audioChangedIdx","fixChangeStreamAudio","doFixAudio","removeInvalidSamples","first","streamChangeStart","_videoTrack","videoSamples","dts","fixed","doFixLargeGap","detectLargeGap","videoFirstDts","gap","fillCount","clonedFirstSample","pts","cts","curLastSample","_audioTrack","audioSamples","samplesLen","silentFrame","getSilentFrame","_firstSample","videoFirstPts","_gap","silentSampleCount","_i2","silentSample","firstDts","absGap","abs","refSampleDurationFixed","silentFrameCount","_i3","computed","_silentSample","lastOriginDts","lastDts","lastSampleDuration","_i4","current","sortAudioSamples","changeIdx","_videoTrack2","prevDts","getStreamChangeStart","curDts","isContinue","DETECT_CHANGE_STREAM_DISCONTINUE","firstPartSamples","secondPartSamples","dtsBase","_audioTrack2","findFirstVideoSample","findFirstAudioSample","isVideo","allSamplesCount","filledSamplesCount","Number","durationAvg","firstAudioSample","firstVideoSample","Infinity","remuxer","_dtsBase","sort","sorted","isKeyframe","nextDts","cond1","cond2","discontinue","_Nalunit","_SpsParser","_Compatibility","Fmp4","writeUint32","content","write","version","flag","initBox","mvhd","trak","videoTrak","audioTrak","mvex","bytes","tkhd","mdia","avcc","sampleRate","mediaTime","mdhd","hdlr","minf","extension","vmhd","smhd","dinf","stbl","dref","stsd","stts","stsc","stsz","stco","mp4a","avc1","samplerate","esds","configlen","hSpacing","vSpacing","btrt","pasp","trackID","mehd","trex","mfhd","traf","sequence","tfhd","tfdt","time","sdtp","trun","sdtpLength","sampleCount","flags","isLeading","dependsOn","isDependedOn","hasRedundancy","isNonSync","mdatBox","charCodeAt","Mp4Remuxer","curTime","_isDtsBaseInited","_videoSegmentList","_audioSegmentList","browser","_fillSilenceFrame","isFirstVideo","isFirstAudio","videoAllDuration","audioAllDuration","remux","REMUX_METADATA","onMetaDataReady","DETECT_CHANGE_STREAM","resetDtsBase","_dtsBaseInited","calcDtsBase","_remuxVideo","_remuxAudio","presourcebuffer","getSource","createSource","remuxInitSegment","INIT_SEGMENT","initSegment","ftyp","moov","audioBase","videoBase","mp4Samples","maxLoop","avcSample","mdatSample","sampleDuration","videoMeta","RANDOM_ACCESS_POINT","moofMdat","moof","mdat","writeToSource","MEDIA_SEGMENT","isFirstDtsInited","audioMeta","mp4Sample","_audioMeta","_player","M3U8Parser","baseurl","split","refs","ref","match","nextDiscontinue","refm","refd","targetduration","parseFloat","parseFrag","parseDecrypt","frags","freg","nextline","charAt","urls","encrypt","cmd","uri","ivb","im","substr","StreamType","TsDemuxer","demuxing","pat","pmt","_hasVideoMeta","_hasAudioMeta","DEMUX_START","demux","frag","peses","DEMUX_ERROR","tsStream","ts","pes","pid","ES","payload","stream","AudioOptions","VideoOptions","epeses","j","Merge","pushAudioSample","pushVideoSample","DEMUX_COMPLETE","_tracks","frequence","channel","audioObjectType","audioConfig","frequencyIndex","audioSampleRate","metaEqual","compaireMeta","METADATA_PARSED","getNalunits","sampleLength","nal","h","sarRatio","sar_ratio","getAvcc","_nal","al","bl","ignoreDuration","itema","itemb","compaireArray","buffers","readHeader","readPayload","packet","unknownPIDs","PES","PAT","CAT","TSDT","some","PMT","sts","Media","streamType","sync","readUint8","readUint16","priority","scrambling","adaptation","continuity","tabelID","zero","sectionLength","streamID","sectionNumber","lastSectionNumber","N","programNumber","program","tableID","order","lastOrder","PCR_PID","programLength","map","es","adaptationLength","access","PCR","OPCR","splicePoint","transportPrivate","adaptationField","_start","programClockBase","readUint32","programClockExtension","originProgramClockBase","originProgramClockExtension","spliceCountdown","transportPrivateData","_length","_next","piecewise","seamless","ltwValid","ltwOffset","readUint24","piecewiseRate","readInt8","spliceType","dtsNextAU1","marker1","dtsNextAU2","marker2","dtsNextAU3","lastStuffing","packetLength","_next2","ptsDTSFlag","escrFlag","esRateFlag","dsmFlag","additionalFlag","crcFlag","extensionFlag","pesHeaderLength","N1","_pts","escr","ex","esRate","additionalCopyInfo","pesCRC","back","fq","layer","absent","frameLength","getAudioConfig","sectionIndicator","currentNextIndicator","crc32","extensionSampleIndex","Playlist","_baseURL","_ts","fragLength","_lastget","_audoclear","autoclear","deletepre","newfraglist","tslist","getTsList","deleteFrag","tsname","isloaded","downloaded","downloading","timelist","l","baseURL","DATA_TYPES","AMFParser","readOffset","metaData","parseValue","bodySize","resetStatus","strLen","str","decode","dv","getFloat64","Date","parseString","isObjEnd","NUMBER","BOOLEAN","STRING","OBJECT","MIX_ARRAY","OBJECT_END","STRICT_ARRAY","DATE","LONE_STRING","dataView","objEndSize","amfObj","parseObject","isObjectEnd","_objEndSize","amfVar","arrLength","script","date","parseDate","longStr","parseLongString","FlvDemuxer","_firstFragmentLoaded","_trackNum","_hasScript","doParseFlv","loaderBuffer","chunk","loopMax","_parseFlvTag","parseFlvHeader","isFlvFile","initVideoTrack","initAudioTrack","_parseFlvTagHeader","_processChunk","tagType","toInt","filtered","datasize","timestamp","timestampExt","_parseScriptData","_parseAACData","_parseHevcData","onMetaData","hsaAudio","_datasizeValidator","MEDIA_INFO","hasSpecificConfig","audiosamplerate","audiochannels","sampleRateIndex","_meta","framerate","objectType","_switchAudioSampleRate","dependsOnCoreCoder","extensionFlagIndex","extensionSamplingIndex","samplingIndex","format","_hasAudioSequence","_switchAudioSamplingFrequency","frameLenth","audioSampleRateIndex","validate","aacHeader","_aacSequenceHeaderParser","audioMedia","AUDIO_METADATA_CHANGE","_metaChange","frameType","codecID","avcPacketType","nalu","sizes","_data","avcclength","_avcSequenceHeaderParser","_hasVideoSequence","VIDEO_METADATA_CHANGE","configurationVersion","avcProfileIndication","profileCompatibility","avcLevelIndication","nalUnitLength","numOfSps","codecString","_j","numOfPps","_size","_j2","toVideoMeta","videoMedia","samplingFrequencyIndex","datasizeConfirm","streamFlag","_M3U8Parser","_TsDemuxer","_Playlist","HlsLiveController","_playlist","retrytimes","_m3u8lasttime","_timmer","setInterval","_checkStatus","_lastCheck","player","m3u8Text","registry","_m3u8loader","_tsloader","mse","initEvents","_onLoadComplete","_onMetadataParsed","_onDemuxComplete","_onLoadError","_onDemuxError","REMUX_ERROR","_onRemuxError","mod","fatal","message","loader","_onError","RETRY_TIME_EXCEEDED","mdata","parse","_preload","pushM3U8","_keyLoader","emitTo","_m3u8Loaded","_crypto","_onDcripted","getTime","currentTime","bufferstart","bufferend","getTs","parseURL","hlsOps","util","Player","deepCopy","_hasStarted","__core__","live","createDom","addClass","root","controls","appendChild","currentSrc","paused","pause","play","_initEvents","_initSrcChangeHandler"],"mappings":"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"}