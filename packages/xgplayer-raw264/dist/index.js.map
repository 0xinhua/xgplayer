{"version":3,"file":"index.js","sources":["../src/raw-264.js","../src/index.js"],"sourcesContent":["import { NalUnit, SpsParser, SEIParser, Golomb } from 'xgplayer-transmuxer-codec-avc'\nimport XgStream from 'xgplayer-transmuxer-buffer-stream'\nimport { VideoTrackMeta } from 'xgplayer-transmuxer-model-trackmeta';\nimport Events from 'xgplayer-transmuxer-constant-events'\n\nclass H264Demuxer {\n  constructor (options = {}) {\n    this._player = options.player;\n\n    this.videoMeta = new VideoTrackMeta()\n    this.videoTrack = {\n      samples: []\n    }\n    this.unusedUnits = [];\n    this.fps = options.fps || 30\n    this.currentSampleIdx = 0;\n    this.duration = 0;\n    this.sps = null;\n    this.pps = null;\n\n    this.dataLoadedTimer = null;\n  }\n\n  init () {\n    this.initEvents()\n  }\n\n  initEvents () {\n    this.on(Events.LOADER_EVENTS.LOADER_DATALOADED, this.handleDataLoaded.bind(this))\n    this.on(Events.LOADER_EVENTS.LOADER_COMPLETE, this.handleDataLoaded.bind(this))\n  }\n\n  load (url) {\n    this.emit(Events.LOADER_EVENTS.LADER_START, url);\n  }\n\n  handleDataLoaded () {\n    const buffer = this.buffer;\n\n    if (!buffer) {\n      return;\n    }\n    if (this.dataLoadedTimer) {\n      clearTimeout(this.dataLoadedTimer);\n      this.dataLoadedTimer = null;\n    }\n\n    const data = buffer.shift(buffer.length);\n    buffer.clear();\n    const stream = new XgStream(data.buffer);\n\n    const units = this.unusedUnits.concat(NalUnit.getNalunits(stream))\n\n    if (!this._player.config.isLive) {\n      if (units.length > 1) {\n        const lastUnit = units.pop();\n        const pushBackData = new Uint8Array(lastUnit.body.byteLength + 4)\n        pushBackData.set(new Uint8Array(lastUnit.header), 0);\n        pushBackData.set(lastUnit.body, 4);\n        buffer.push(pushBackData)\n\n        this.pushToMobileVideo(units);\n        if (this.buffer.length) {\n          this.dataLoadedTimer = setTimeout(() => {\n            this.handleDataLoaded();\n          }, 500)\n        }\n      } else if (units.length === 1){\n        buffer.push(new Uint8Array(data))\n        this.dataLoadedTimer = setTimeout(() => {\n          this.handleDataLoaded();\n        }, 500)\n      }\n    } else {\n      this.pushToMobileVideo(units);\n    }\n  }\n\n  pushToMobileVideo (units) {\n\n    const { samples, unused } = H264Demuxer.unitsToSamples(units);\n\n    this.unusedUnits = unused;\n\n    samples.forEach((sample) => {\n      const ts = Math.floor(1000 * this.currentSampleIdx++ / this.fps)\n      sample.dts = sample.pts = ts;\n      if (sample.sps) {\n        this.sps = true;\n        this.videoMeta.sps = sample.data.slice(4)\n        this.videoMeta.presentHeight = sample.sps.present_size.height;\n        this.videoMeta.presentWidth = sample.sps.present_size.width;\n      } else if (sample.pps) {\n        this.pps = true;\n        this.videoMeta.pps = sample.data.slice(4)\n      } else {\n        this.videoTrack.samples.push(sample);\n      }\n\n    })\n\n    if (this.sps && this.pps) {\n      this._player.video.setVideoMeta(this.videoMeta);\n      this.sps = null;\n      this.pps = null;\n    }\n    if (!this.intervalId && !this._player.config.isLive) {\n      this.intervalId = setInterval(() => {\n        this.handleDataLoaded()\n      }, 500)\n    } else {\n      this._player.video.onDemuxComplete(this.videoTrack);\n    }\n    this.duration = Math.round(Math.floor(this.currentSampleIdx / this.fps))\n    this._player.emit('durationchange')\n  }\n\n  destroy () {\n    this._player = null;\n    this.videoMeta = null\n    this.videoTrack = {\n      samples: []\n    }\n    this.fps = null\n    this.currentSampleIdx = null;\n    if (this.intervalId) {\n      window.clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  static unitsToSamples (units) {\n    let temp = [];\n    const samples = []\n    units.forEach((unit) => {\n      const golomb = new Golomb(new Uint8Array(unit.body));\n      golomb.readByte();\n      if (!golomb.readUEG() || unit.sps || unit.pps) { // first_mb_slice\n        if (temp.length) {\n          samples.push(H264Demuxer.combineUnits(temp))\n        }\n        temp = [unit];\n      } else {\n        temp.push(unit)\n      }\n    })\n\n    return {\n      samples,\n      unused: temp\n    }\n  }\n\n  static combineUnits (units) {\n    let sps, pps;\n    const dataSize = units.reduce((result, unit) => {\n      if (unit.sps) {\n        sps = unit.sps;\n      } else if (unit.pps) {\n        pps = unit.pps;\n      }\n      return result + unit.header.byteLength + unit.body.byteLength;\n    }, 0)\n\n    const data = new Uint8Array(dataSize);\n    let offset = 0;\n    let isKeyframe;\n    units.forEach((unit) => {\n      data.set(new Uint8Array(unit.header), offset);\n      offset += unit.header.byteLength;\n      data.set(unit.body, offset);\n      offset += unit.body.byteLength;\n      if (unit.idr) {\n        isKeyframe = true\n      }\n    })\n\n    return {\n      data,\n      sps,\n      pps,\n      isKeyframe\n    }\n  }\n\n  get buffer () {\n    return this._context.getInstance('LOADER_BUFFER')\n  }\n}\n\nexport default H264Demuxer;\n","import Player from 'xgplayer';\nimport Context from 'xgplayer-transmuxer-context';\nimport Core from './raw-264';\nimport Events from 'xgplayer-transmuxer-constant-events';\nimport LoaderBuffer from 'xgplayer-transmuxer-buffer-xgbuffer';\nimport FetchLoader from 'xgplayer-transmuxer-loader-fetch';\nimport 'xgplayer-mobilevideo';\n\nconst asmSupported = () => {\n  try {\n    (function MyAsmModule () {\n      'use asm';\n    })();\n    return true;\n  } catch (err) {\n    // will never show...\n    return false;\n  }\n};\n\nclass Raw264Player extends Player {\n  static isSupported () {\n    const wasmSupported = 'WebAssembly' in window;\n\n    const WebComponentSupported = 'customElements' in window && window.customElements.define;\n    let isComponentDefined;\n    if (WebComponentSupported) {\n      isComponentDefined = window.customElements.get('mobile-video');\n    }\n    return (wasmSupported || asmSupported) && isComponentDefined;\n  }\n\n  constructor (props) {\n    if (!props.mediaType) {\n      props.mediaType = 'mobile-video';\n      if (props.videoConfig) {\n        props.videoConfig.preloadtime = props.preloadTime || 5;\n      } else {\n        props.videoConfig = {\n          preloadtime: props.preloadTime || 5\n        };\n      }\n    }\n    super(props);\n    this.video.setAttribute('noaudio', true);\n    this.handleTimeupdate = this.handleTimeupdate.bind(this);\n    this.hasPlayed = false;\n    this.hasStart = false;\n  }\n\n  start () {\n    if (this.hasStart) {\n      return;\n    } else {\n      this.hasStart = true;\n    }\n    this.context = new Context(Events.HlsAllowedEvents);\n    this.context.registry('LOADER_BUFFER', LoaderBuffer);\n    this.core = this.context.registry('RAW_264_CONTROLLER', Core)({player: this, fps: this.config.fps});\n    this.context.registry('FETCH_LOADER', FetchLoader);\n    this.context.init();\n    if (!this.config.isLive) {\n      this.core.load(this.config.url);\n    }\n\n    super.start();\n    this.video.preloadTime = this.config.preloadTime;\n    this.video.addEventListener('timeupdate', this.handleTimeupdate, false);\n  }\n\n  replay () {\n    this.video._cleanBuffer();\n    this.currentTime = 0;\n    this.start();\n    this.play();\n  }\n\n  handleTimeupdate () {\n    if (!this.config.isLive && this.currentTime >= this.duration) {\n      this.video._cleanBuffer();\n      this.pause();\n      this.emit('ended');\n    } else if (this.config.isLive && this.buffered.end(0) - this.currentTime > 0.1) {\n      this.currentTime = this.buffered.end(0) - 0.1;\n    }\n  }\n\n  destroy (isDelDom) {\n    super.destroy(isDelDom);\n    this.core.destroy();\n    this.context.destroy();\n    this.core = null;\n    this.context = null;\n  }\n\n  pushBuffer (arr) {\n    if (!this.hasStart) {\n      return this.start();\n    }\n    if (this.buffer) {\n      this.buffer.push(arr);\n      this.core.handleDataLoaded();\n    }\n  }\n\n  get buffer () {\n    return this.context.getInstance('LOADER_BUFFER');\n  }\n\n  set currentTime (time) {\n    const oldTime = super.currentTime;\n    const buffered = this.getBufferedRange();\n    if (buffered[0] <= time && buffered[1] >= time) {\n      this.video.currentTime = time;\n    } else {\n      this.video.currentTime = oldTime;\n    }\n  }\n\n  get currentTime () {\n    return super.currentTime;\n  }\n\n  get duration () {\n    if (this.core && this.core.duration) {\n      return this.core.duration;\n    }\n    return this.video.duration;\n  }\n}\n\nexport default Raw264Player;\n"],"names":["H264Demuxer","options","_player","player","videoMeta","VideoTrackMeta","videoTrack","samples","unusedUnits","fps","currentSampleIdx","duration","sps","pps","dataLoadedTimer","initEvents","on","Events","LOADER_EVENTS","LOADER_DATALOADED","handleDataLoaded","bind","LOADER_COMPLETE","url","emit","LADER_START","buffer","clearTimeout","data","shift","length","clear","stream","XgStream","units","concat","NalUnit","getNalunits","config","isLive","lastUnit","pop","pushBackData","Uint8Array","body","byteLength","set","header","push","pushToMobileVideo","setTimeout","unitsToSamples","unused","forEach","sample","ts","Math","floor","dts","pts","slice","presentHeight","present_size","height","presentWidth","width","video","setVideoMeta","intervalId","setInterval","onDemuxComplete","round","window","clearInterval","_context","getInstance","temp","unit","golomb","Golomb","readByte","readUEG","combineUnits","dataSize","reduce","result","offset","isKeyframe","idr","asmSupported","MyAsmModule","err","Raw264Player","wasmSupported","WebComponentSupported","customElements","define","isComponentDefined","get","props","mediaType","videoConfig","preloadtime","preloadTime","setAttribute","handleTimeupdate","hasPlayed","hasStart","context","Context","HlsAllowedEvents","registry","LoaderBuffer","core","Core","FetchLoader","init","load","addEventListener","_cleanBuffer","currentTime","start","play","pause","buffered","end","isDelDom","destroy","arr","time","oldTime","getBufferedRange","Player"],"mappings":"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"}